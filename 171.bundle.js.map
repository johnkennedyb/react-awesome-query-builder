{"version":3,"file":"171.bundle.js","mappings":"gVAMQA,EAAWC,EAAAA,GAAXD,OACFE,EAAaC,SAA6C,QAArCC,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBC,MAAM,YAAI,IAAAD,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,WCD5DJ,EAAWC,EAAAA,GAAXD,OACFE,EAAaC,SAA6C,QAArCC,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBC,MAAM,YAAI,IAAAD,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,WCD5DJ,EAAWC,EAAAA,GAAXD,OACFE,EAAaC,SAA6C,QAArCC,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBC,MAAM,YAAI,IAAAD,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,0CCD5DI,EAAkBP,EAAAA,GAAMQ,UAAxBD,c,sICEAA,EAAkBP,EAAAA,GAAMQ,UAAxBD,c,grBCMR,IAAQE,GAA8BC,EAAAA,GAAAA,EAChCC,GAAa,GAMnB,kBAAgBC,GACd,IACEC,EAGED,EAHFC,kBAAmBC,EAGjBF,EAHiBE,SAAUC,EAG3BH,EAH2BG,iBACtBC,EAELJ,EAFFK,MAAsBC,EAEpBN,EAFoBM,YAAaC,EAEjCP,EAFiCO,SAAUC,EAE3CR,EAF2CQ,OAAQC,EAEnDT,EAFmDS,oBAAqBC,EAExEV,EAFwEU,UAC1EC,EACEX,EADFW,YAAaC,EACXZ,EADWY,oBASTC,EAA6B,CACjCC,WARsBC,EAAAA,EAAAA,cAAY,SAACC,GAKnC,OAJsBR,EAAOS,SAASC,kBAEnCC,KAAI,SAAAC,GAAC,MAAyB,iBAAbJ,EAAOI,GAAiBJ,EAAOI,GAAK,EAAE,IACvDC,KAAK,KAEV,GAAG,CAACb,KAIEc,GAAkBC,EAAAA,EAAAA,GAAoBd,GAAuBI,GAGnEW,EAiBI3B,GAA0BG,EAAO,CACnCyB,gBAAiB,IACjBvB,SAAAA,EACAwB,IAAK,MACLd,oBAAAA,IApBAe,EAAIH,EAAJG,KACAC,EAAMJ,EAANI,OACAC,EAAOL,EAAPK,QACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAAUR,EAAVQ,WACAC,EAAOT,EAAPS,QACAC,EAAgBV,EAAhBU,iBACAC,EAASX,EAATW,UACAC,EAAYZ,EAAZY,aACAC,EAAab,EAAba,cAEAC,GADiBd,EAAjBe,kBACiBf,EAAjBc,mBACAE,EAAiBhB,EAAjBgB,kBACAC,EAAcjB,EAAdiB,eACAC,EAAiBlB,EAAjBkB,kBASFC,EAAiDnC,EAAOS,SAAjD2B,EAAkBD,EAAlBC,mBACPC,GAD6CF,EAAlBG,mBACFxC,GAAe,CAAC,GAAlCyC,EAAKF,EAALE,MAAUC,GAAIC,EAAAA,EAAAA,GAAAJ,EAAAK,IACjBC,EAAmBH,EAAKI,OAAS,CAAC,EACnBD,EAAiBJ,MACpCI,EAAmBE,IAAKF,EAAkB,CAAC,UAC3C,IAAMG,EAA0BD,IAAKL,EAAM,CAAC,aAAc,mBAEpDO,GAAY,EACZC,EAAWT,GAASH,EACpBa,EAAQ,CACZV,MAAQ7C,OAAWwD,EAAYF,EAC/BA,SAAUA,GAENG,GAAepD,EAA0B,GAAf6B,EAG1BwB,GAAYD,IAAenD,EAAOS,SAAS4C,iBAI3CxD,GAF4B,MAAjBD,EAEQA,EAAiBF,EAAWH,GAAa,KAU5D+D,IAAQC,EAAAA,GAAAA,KAqCRC,GAAc,SAAHC,GAAyB,IAApBC,EAAcD,EAAdC,eACpB,IAAKA,EAAgB,OAAO,KAC5B,IAAIC,EAAQ,CACVC,MAAOF,GAET,GAA8B,iBAAnBA,GAAqD,MAAtBA,EAAe,GACvD,IACEC,EAAQE,KAAKC,MAAMJ,EACrB,CAAE,MAAOK,GACP,CAGJ,IAAIC,EAAaL,EAAMC,MAiBvB,OAhBII,GAAcL,EAAMM,UACtBD,EACEE,EAAAA,cAACC,GAAAA,EAAO,CAACC,MAAOT,EAAMM,QAASI,UAAU,cAAaH,EAAAA,cAAA,YAAOF,KAI/DE,EAAAA,cAAA,OAAKjB,MAAO,CACVqB,SAAU,SACVC,IAAK,OACLC,QAAS,WACTC,MAAOnB,GAAMoB,QAAQC,QAAQC,KAC7BC,gBAAiBvB,GAAMoB,QAAQI,WAAU,UAExCd,EAIP,EAEMe,GAAa,SAAHC,GAAmB,IAAdC,EAAQD,EAARC,SACnB,OAAOf,EAAAA,cAAAA,EAAAA,SAAA,KAAGe,EACZ,EAiEIC,GACFhB,EAAAA,cAACiB,EAAAA,GAAYC,EAAAA,EAAAA,GAAA,CACXzF,iBAAkBA,EAClB0F,qBAAsB3F,EACtBqD,UAAWA,EACXrD,SAAUA,EACVuD,MAAOA,EACPqC,SAAU7F,EACV8F,QAAS7D,EACTP,KAAMA,EACNC,OAAQA,EACRC,QAASA,EACTG,WAAYA,EACZD,cAAeA,EACfqC,MAAOT,GACP7B,SAAUA,EACVzB,MAAOA,GACP2F,SAAUzF,EACV0F,SAAU1F,EACV0B,QAASA,EACTiE,QA9JY,SAAClF,GAAM,OAAKA,SAAAA,EAAQmD,MAAQE,KAAKvD,UAAUE,EAAOmD,OAASnD,aAAM,EAANA,EAAQmF,UAAU,EA+JzF1D,eAAgBA,EAChBH,kBAAmBA,EACnB8D,YA5JgB,SAACC,GAAW,IAAAC,EAAAC,EAAAC,EAExBC,GAAwBvG,IAAayB,EACrC+E,EAA6D,QAAhDJ,EAA2B,QAA3BC,EAAG7D,aAAiB,EAAjBA,EAAmBkC,aAAK,IAAA2B,EAAAA,EAAIlG,cAAK,EAALA,GAAOsG,kBAAU,IAAAL,EAAAA,EAAI,GAEjEM,EAAcH,EAAuBC,EADxBxG,IAAayB,EACyC,GAAoC,QAAlC6E,EAAGxE,QAAAA,EAAc3B,cAAK,EAALA,GAAOsG,kBAAU,IAAAH,EAAAA,EAAI,GACjH,OACE9B,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,YACJT,EAAM,CACVU,WAAUC,GAAAA,GAAA,CACR,aAAcpD,IACXyC,EAAOU,YAAU,IACpB1G,MAAOuG,IAETK,WAAUD,GAAAA,GAAA,GACLX,EAAOY,YAAU,IACpBhB,SAAU1F,EACV2G,aACExC,EAAAA,cAACA,EAAAA,SAAc,KACZvC,EAAYuC,EAAAA,cAACyC,EAAAA,EAAgB,CAAClC,MAAM,UAAUmC,KAAM,KAAU,KAC9Df,EAAOY,WAAWC,gBAIzBlB,SAAUzF,EACVoD,YAAaA,GACb0D,QAAS3G,GAELyC,GAGV,EA6HImE,YAvFgB,SAACjB,GAOnB,OALE3B,EAAAA,cAAA,OAAK6C,IAAKlB,EAAOkB,KACf7C,EAAAA,cAACV,GAAW,CAACE,eAAgBmC,EAAOlC,QACpCO,EAAAA,cAACa,GAAU,KAAEc,EAAOZ,UAI1B,EAgFI+B,WA9Ee,SAACnH,EAAOoH,GAAW,OAAKpH,EAAMc,KAAI,SAACH,EAAQ0G,GAC5D,OAAOhD,EAAAA,cAACiD,EAAAA,GAAI/B,EAAAA,EAAAA,GAAA,CACV2B,IAAKvG,EAAOX,MACZ+D,MAAO3B,EAAezB,GACtBoG,KAAM,QACNN,QAAStE,EAAkBxB,GAAU,WAAa,UAC9CyG,EAAY,CAAEC,MAAAA,KAEtB,GAAE,EAuEEE,aAjEiB,SAAC5H,EAAOgB,GAC3B,IAAQ4D,EAAoE5D,EAApE4D,MAAOiD,EAA6D7G,EAA7D6G,YAAaxH,EAAgDW,EAAhDX,MAAOyH,EAAyC9G,EAAzC8G,SAAUrD,EAA+BzD,EAA/ByD,QAASN,EAAsBnD,EAAtBmD,MAChD4D,EADsE/G,EAAfmF,YAC7BhC,EAC1B6D,EAAa9H,GAAYE,GAAiB,IAAI6H,SAAS5H,GAASD,GAAiBC,EACjF6H,EAAY1F,EAAkBxB,GAAU,0BAAuB0C,EAE/DyE,EAAcN,KADJjH,GAAuBmH,EAAY,KAAiB,IACxBnD,EACxCwD,EACF1D,EAAAA,cAAA,QAAMwD,UAAWA,GACdC,GAQL,GALI1D,IACF2D,EACE1D,EAAAA,cAACC,GAAAA,EAAO,CAACC,MAAOH,EAASI,UAAU,cAAcuD,IAGjDN,EACF,OAAO,KACT,GAAI9G,EAAOqH,aACT,OAAO3D,EAAAA,cAAA,MAAS1E,EAAQmI,GACnB,GAAIjI,EAAU,CACnB,IAAMoI,EAAcN,EAClBtD,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAC6D,EAAAA,EAAY,KAAC7D,EAAAA,cAAC8D,EAAAA,EAAK,OAAmBJ,GAEzC1D,EAAAA,cAAC+D,EAAAA,EAAY,CAACC,OAAK,GAAEN,GAEvB,OACE1D,EAAAA,cAACiE,EAAAA,GAAQ/C,EAAAA,EAAAA,GAAA,GACH5F,EAAK,CACToH,KAAM,QACNwB,SAAUZ,IACVM,EAEN,CACE,OAAO5D,EAAAA,cAAA,MAAS1E,EAAQoI,EAE5B,EA6BIS,cA3KkB,SAAC5G,EAASoE,GAC9B,IAAMyC,EAAWxH,EAAgBW,EAASoE,GAE1C,OADiBhE,EAAcyG,EAEjC,EAwKIC,qBAvEyB,SAAC/H,EAAQX,GACpC,OAAOW,aAAM,EAANA,EAAQX,QAASA,CAC1B,EAsEI+G,KAAK,SACD9D,IAWR,OARI3C,IACF+E,GACEhB,EAAAA,cAACC,GAAAA,EAAO,CAACC,MAAQjD,EAAqB,KAAdhB,EAAoBkE,UAAU,aAAaa,KAIrEhB,EAAAA,cAACsE,EAAAA,EAAW,CAACzF,UAAWA,GAAYmC,GAGvC,E,otBC7QD,IAAMuD,GAA2B,CAC/B1B,IAAK,UACL2B,KAAM,QACN9E,MAAO,QACP+E,SAAU,YACV1E,QAAS,UACT2E,WAAY,cAGRC,GAAoB,SAApBA,EAAqBC,GAAK,IAAEC,EAAKC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,EAAC,OACzCF,EAAMnI,KAAI,SAAAuI,GACR,IAAOJ,EAAwFI,EAAxFJ,MAAOJ,EAAiFQ,EAAjFR,KAAM3B,EAA2EmC,EAA3EnC,IAAKnD,EAAsEsF,EAAtEtF,MAAO+E,EAA+DO,EAA/DP,SAAUnD,EAAqD0D,EAArD1D,SAAUoD,EAA2CM,EAA3CN,WAAYjF,EAA+BuF,EAA/BvF,MAAOwF,EAAwBD,EAAxBC,YAAalF,EAAWiF,EAAXjF,QAC9EmF,EAAS,KAAeC,OAAON,GACrC,OAAID,EACKD,EAAkBC,EAAOC,EAAM,GAE/B,CACL3E,MAAOR,EACPyD,YAAa8B,EAAcjF,EAAAA,cAAA,SAAIkF,EAAOxF,GAAawF,EAAOxF,EAC1D/D,MAAO6I,EACPlD,SAAAA,EACAG,WAAYoD,EAAQ,EAAIK,EAAOR,EAAa,KAC5CjF,MAAOoF,EAAQ,EAACvC,GAAAA,GAAA,GACX7C,GAAK,IACRC,MAAOwF,EAAOzF,EAAMC,QAClB,KACJK,QAASA,EACTqF,QAASvC,EACTwC,UAAWZ,EAGjB,IAAGa,KAAKC,IAAS,EAGbC,GAAe,SAAHrH,EAIfrC,GAAW,IAHZ8I,EAAKzG,EAALyG,MAAOa,EAAWtH,EAAXsH,YAAaC,EAAQvH,EAARuH,SAAUC,EAAYxH,EAAZwH,aAC9BC,EAAazH,EAAbyH,cAA6BC,GAAF1H,EAAZ2H,aAA8B3H,EAAhB0H,kBAAkBE,EAAiB5H,EAAjB4H,kBAC5CzH,GAAIC,EAAAA,EAAAA,GAAAJ,EAAAK,IAEHvC,EAAc4J,GAAoBE,EAClC9J,GAAe2J,IACjB3J,EAAc,MAChB,IAAM+J,EAAarB,GAAkBC,GAC/BjJ,EAAQ8J,EAKR1J,EAAsB,CAC1BK,WAAWC,EAAAA,EAAAA,cAAY,SAACC,GAMtB,OALsBR,EAAOS,SAAS0J,uBACnCxJ,KAAI,SAAAC,GAAC,OAAI6H,GAAyB7H,EAAE,IAEpCD,KAAI,SAAAC,GAAC,MAAyB,iBAAbJ,EAAOI,GAAiBJ,EAAOI,GAAK,EAAE,IACvDC,KAAK,KAEV,GAAG,CAACb,KAGN,OAAAwG,GAAAA,GAAA,GACKhE,GAAI,IACPrC,YAAAA,EACA+J,WAAAA,EACAE,SAnBe,SAACvK,EAAOwK,GACvB,GAAKxK,GAAUgK,EACf,OAAOD,EAAS/J,EAClB,EAiBEI,oBAAAA,EACAR,mBAAmB,EACnBC,UAAU,EACVC,kBAAmBkK,EACnBhK,MAAAA,EACAO,qBAAqB,GAEzB,E,gDCrEQkK,GAAa1L,EAAAA,GAAb0L,SAEFC,GAAa,CACjB,SAAYrG,EAAAA,cAACsG,GAAAA,EAAU,MACvB,aAAgBtG,EAAAA,cAACsG,GAAAA,EAAU,MAC3B,QAAWtG,EAAAA,cAACsG,GAAAA,EAAU,MACtB,aAAgBtG,EAAAA,cAACuG,GAAAA,EAAO,MACxB,gBAAmBvG,EAAAA,cAACuG,GAAAA,EAAO,MAC3B,QAAWvG,EAAAA,cAACuG,GAAAA,EAAO,MACnB,SAAYvG,EAAAA,cAACuG,GAAAA,EAAO,MACpB,KAAQvG,EAAAA,cAACwG,GAAAA,EAAU,OAGfC,GAAc,CAMlB,KAAQ,W,wBCrBJC,GAAgB,CACpB,cAAgB,EAChB,iBAAmB,EACnB,UAAY,EACZ,cAAgB,EAChB,SAAW,GAGPD,GAAc,CAClB,QAAW,UACX,SAAY,UACZ,SAAY,YACZ,aAAgB,YAChB,QAAW,aAGb,UAAeE,EAAAA,EAAAA,OAAK,SAACrL,GACnB,IAAOsL,EAA8CtL,EAA9CsL,KAAMlH,EAAwCpE,EAAxCoE,MAAOmH,EAAiCvL,EAAjCuL,QAAShL,EAAwBP,EAAxBO,SAAUiL,EAAcxL,EAAdwL,WAKjCC,EAAOD,aAAU,EAAVA,EAJK,CAChBF,KAAAA,EACA/K,SAAAA,IAIF,OAAK6D,GAASgH,GAAcE,GAGxB5G,EAAAA,cAACgH,GAAAA,EAAU,CACTtE,KAAK,QACLpB,SAAUzF,EACVgL,QAASA,EACTtG,MAAOkG,GAAYG,GACnB,aAAYlH,GACZqH,GAIF/G,EAAAA,cAACiH,GAAAA,EAAM,CACLvE,KAAK,QACLpB,SAAUzF,EACVgL,QAASA,EACTtG,MAAOkG,GAAYG,GACnBM,UAAWH,GACXrH,EAGR,I,gBC7CMyH,GAAOnH,EAAAA,MAAW,SAAA7B,GAGlB,IAFJiJ,EAAOjJ,EAAPiJ,QAASC,EAAElJ,EAAFkJ,GAAU3H,GAAFvB,EAAJmJ,KAAWnJ,EAALuB,OAAO6H,EAAOpJ,EAAPoJ,QAC1BC,EAAcrJ,EAAdqJ,eAAgB3L,EAAQsC,EAARtC,SAAUyF,EAAQnD,EAARmD,SAEpBuF,GAAUxK,EAAAA,EAAAA,cAAY,WAC1BmL,EAAeJ,EACjB,GAAG,CAACA,EAASI,IACPC,EAAUD,EAAeE,UAAY,UAAY,GACvD,OAAK7L,IAAYyF,GAAciG,EAI7BvH,EAAAA,cAACiH,GAAAA,EAAM,CACLpE,IAAKwE,EAAGI,EACRJ,GAAIA,EAAGI,EACPlH,MAAOgH,EAAU,UAAY,UAC7B5L,MAAOyL,EACPP,QAASA,EACTvF,SAAUzF,GAAYyF,GAErB5B,GAXI,IAcX,IAEMiI,GAAQ3H,EAAAA,MAAW,SAAA4B,GAEnB,IADJyF,EAAEzF,EAAFyF,GAAIO,EAAGhG,EAAHgG,IAAKC,EAAMjG,EAANiG,OAAQC,EAAkBlG,EAAlBkG,mBAAoBN,EAAc5F,EAAd4F,eAAgBlG,EAAQM,EAARN,SAAUzF,EAAQ+F,EAAR/F,SAAUC,EAAM8F,EAAN9F,OAAQiM,EAAOnG,EAAPmG,QAASC,EAAQpG,EAARoG,SAGpFC,EAAaC,OAAOC,KAAKL,GAAoB/C,OAC7CqD,EAAc9G,EAEd+G,EADkBvM,EAAOS,SAAxB+L,eAC2BL,EAAa,IAAMG,EAc/CG,GAAalM,EAAAA,EAAAA,cAAY,WAC7BwL,GAAQD,EACV,GAAG,CAACA,EAAKC,IAkBT,OACE7H,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACwI,GAAAA,EAAW,CACVC,kBAAgB,EAChBrG,QAAQ,YACRM,KAAK,QACLpB,SAAUzF,GAETkM,IAvBDlM,IAAa+L,EACR,KAEP5H,EAAAA,cAACiH,GAAAA,EAAM,CACLpE,IAAKwE,EACLA,GAAIA,EAAK,QACT9G,MAAOqH,EAAM,QAAU,UACvBf,QAAS0B,EACTjH,SAAUzF,GAETmM,GAAY,QAcZK,GAxCLH,OAAOC,KAAKL,GAAoBrL,KAAI,SAAA2K,GAClC,IAAAsB,EAAqCZ,EAAmBV,GAAhDC,EAAEqB,EAAFrB,GACFsB,EAAY,CAChBvB,QAAAA,EAASC,GAAAA,EAAIC,KAFCoB,EAAJpB,KAES5H,MAFEgJ,EAALhJ,MAEU6H,QAFImB,EAAPnB,QAGvBC,eAAAA,EAAgB3L,SAAAA,EAAUyF,SAAAA,GAE5B,OACEtB,EAAAA,cAACmH,IAAIjG,EAAAA,EAAAA,GAAA,CAAC2B,IAAKwE,GAAQsB,GAEvB,KAmCJ,IAEA,Y,4EC3EMC,GAAc5I,EAAAA,MAAW,SAAA7B,GAA8C,IAA3C0K,EAAQ1K,EAAR0K,SAAUC,EAAM3K,EAAN2K,OAAQC,EAAY5K,EAAZ4K,aAAcC,EAAI7K,EAAJ6K,KAC1D1F,EAAauF,GAAYC,IAAWD,GAAsB,SAAVC,EAChDjC,GAAUxK,EAAAA,EAAAA,cACd,SAAC4M,GAAC,OAAKF,EAAaE,EAAGH,EAAO,GAC9B,CAACC,EAAcD,IAEjB,OACE9I,EAAAA,cAACiE,EAAAA,EAAQ,CACPtI,MAAOmN,EACP5E,SAAUZ,EACVuD,QAASA,IAEPvD,GAActD,EAAAA,cAAC+D,EAAAA,EAAY,CAACC,OAAK,GAAEgF,EAAKtJ,OACzC4D,GAActD,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAC6D,EAAAA,EAAY,KAAC7D,EAAAA,cAAC8D,EAAAA,EAAK,OAAmBkF,EAAKtJ,OAGnE,IAwDA,SAtDqBM,EAAAA,MAAW,SAAA4B,GAA6D,IAA1DsH,EAAYtH,EAAZsH,aAAcL,EAAQjH,EAARiH,SAAU3I,EAAK0B,EAAL1B,MAAOiJ,EAAWvH,EAAXuH,YAChEC,GADqFxH,EAAR/F,SAC7CmE,EAAAA,SAAe,OAAKqJ,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA7CG,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,GAAapN,EAAAA,EAAAA,cAAY,SAACqN,GAC9BF,EAAYE,EAAMC,cACpB,GAAG,CAACH,IAEEI,GAAcvN,EAAAA,EAAAA,cAAY,WAC9BmN,EAAY,KACd,GAAG,CAACA,IAEEK,GAAkBxN,EAAAA,EAAAA,cAAY,SAACqN,GACnCH,EAAWK,IAAgBH,EAAWC,EACxC,GAAG,CAACE,EAAaH,EAAYF,IAEvBR,GAAe1M,EAAAA,EAAAA,cAAY,SAACyN,EAAIhB,GACpCK,EAAYL,GACZc,GACF,GAAG,CAACA,EAAaT,IAcXlM,EAAO8M,QAAQR,GAErB,OACEvJ,EAAAA,cAAA,WACEA,EAAAA,cAACgH,GAAAA,EAAU,CAACtE,KAAK,QAAQmE,QAASgD,GAChC7J,EAAAA,cAACgK,GAAAA,EAAmB,OAGtBhK,EAAAA,cAACiK,GAAAA,EAAI,CACHV,SAAUA,EACVtM,KAAMA,EACNE,QAASyM,GAET5J,EAAAA,cAACsE,EAAAA,EAAW,CAAC4F,UAAU,WAAWC,GAAI,CAAEC,EAAG,IACzCpK,EAAAA,cAACqK,GAAAA,EAAS,CAACH,UAAU,SAASC,GAAI,CAAEC,EAAG,EAAGE,GAAI,EAAGC,GAAI,IAAMrK,GA1B7C,SAACgJ,GAAY,OACjCA,EAAazM,KAAI,SAAAqF,GAAoB,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAlBgH,EAAMvJ,EAAA,GAAEyJ,EAAIzJ,EAAA,GAC7B,OAAOS,EAAAA,cAAC4I,GAAW,CACjB/F,IAAKiG,EACLD,SAAUA,EACVC,OAAQA,EACRC,aAAcA,EACdC,KAAMA,GAEV,GAAE,CAkBKwB,CAActB,KAKzB,I,UC1EMvO,GAAaC,SAA6C,QAArCC,GAACC,SAAmB,QAATC,GAAVD,EAAAA,eAAmB,IAAAC,IAAY,QAAZA,GAAnBA,GAAqBC,MAAM,YAAI,IAAAD,QAAA,EAA/BA,GAAkC,UAAE,IAAAF,GAAAA,GAAI,KAqEpE,UACE4P,cCzEF,SAAgBnP,GACd,IAAOK,EAAwFL,EAAxFK,MAAOuK,EAAiF5K,EAAjF4K,SAAkBrK,GAA+DP,EAAvEQ,OAAuER,EAA/DO,UAAUoD,EAAqD3D,EAArD2D,YAAarD,EAAwCN,EAAxCM,YAAa8O,EAA2BpP,EAA3BoP,UAE9DtN,GAFyF9B,EAAhBqP,cAE9DtO,EAAAA,EAAAA,cAAY,SAAC4M,GAC5B,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MACP,KAARiP,IACFA,OAAM5L,GAERkH,EAAS0E,EACX,GAAG,CAAC1E,KACE4E,EAAYnP,GAAS,GAE3B,OACEqE,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRzG,MAAOmP,EACP7L,YAAcpD,EAAyB,GAAdoD,EACzBsD,WAAY,CACVhB,SAAU1F,GAEZwG,WAAY,CACVqI,UAAWA,GAEbpJ,SAAUzF,EACVuB,SAAUA,EACVsF,KAAK,SACD9G,IAIX,ED2CCmP,kBE1EF,SAAgBzP,GACd,IAAOK,EAA8FL,EAA9FK,MAAOuK,EAAuF5K,EAAvF4K,SAAUpK,EAA6ER,EAA7EQ,OAAQD,EAAqEP,EAArEO,SAAUoD,EAA2D3D,EAA3D2D,YAAarD,EAA8CN,EAA9CM,YAAa8O,EAAiCpP,EAAjCoP,UAAWM,EAAsB1P,EAAtB0P,QAASnM,EAAavD,EAAbuD,UACjFoM,EAAkBnP,EAAOS,SAAzB0O,eASDH,EAAYnP,GAAS,GAE3B,OACEqE,EAAAA,cAACsE,EAAAA,EAAW,CAACzF,UAAWA,GACtBmB,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRvD,UAAWA,EACXmM,QAASA,GAAWC,EACpBC,WAAW,EACXvP,MAAOmP,EACP7L,YAAcpD,EAAyB,GAAdoD,EACzBsD,WAAY,CACVhB,SAAU1F,GAEZwG,WAAY,CACVqI,UAAWA,GAEbpJ,SAAUzF,EACVuB,SAzBW,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MACP,KAARiP,IACFA,OAAM5L,GACRkH,EAAS0E,EACX,EAqBMlI,KAAK,SACD9G,IAIX,EFwCCuP,cXtEF,SAAgB7P,GACd,IAAOK,EAAgFL,EAAhFK,MAAOuK,EAAyE5K,EAAzE4K,SAAUrK,EAA+DP,EAA/DO,SAAUD,EAAqDN,EAArDM,YAAawP,EAAwC9P,EAAxC8P,WAAYC,EAA4B/P,EAA5B+P,YAAapM,EAAe3D,EAAf2D,YAmBlEqM,EAAc3Q,GAAc,EAAI,CACpC4Q,OAAQH,EACRI,UAAW,CACTC,UAAW,CACT/I,KAAM,QACNN,QAAS,YAEXsJ,QAAS,CACPC,mBAAqB9P,EAAyB,GAAdoD,KAGlC,CACF2M,YAAaR,EACb1J,YAtBkB,SAACC,GAAM,OACzB3B,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRwB,KAAK,QACLN,QAAQ,YACJT,GACJ,EAkBFgK,mBAAqB9P,EAAyB,GAAdoD,GAG5B4M,EAASlQ,EAAShB,GAAc,EAAIF,EAAOkB,EAAO0P,GAAe1P,EAAS,KAEhF,OACEqE,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAAC8L,EAAAA,GAAU5K,EAAAA,EAAAA,GAAA,CACT6K,sBAxBwB,0CAyBxBxK,SAAU1F,EACVyF,SAAUzF,EACVF,MAAOkQ,EACPzO,SAvCe,SAACzB,GACpBuK,EALwB,SAACvK,GACzB,OAAOA,GAASA,EAAMqQ,UAAYrQ,EAAM4P,OAAOF,QAAerM,CAChE,CAGWiN,CAAkBtQ,GAC7B,GAsCU2P,EACA1P,IAIX,EWmBCsQ,kBVvEF,SAAgB5Q,GACd,IAAOK,EAAwGL,EAAxGK,MAAOuK,EAAiG5K,EAAjG4K,SAAUiG,EAAuF7Q,EAAvF6Q,WAAYtQ,EAA2EP,EAA3EO,SAAUoD,EAAiE3D,EAAjE2D,YAAamM,EAAoD9P,EAApD8P,WAAYgB,EAAwC9Q,EAAxC8Q,WAAYf,EAA4B/P,EAA5B+P,YAAazP,EAAeN,EAAfM,YAU1FyQ,EAAiBjB,EAAa,IAAMgB,EAWpCd,EAAc3Q,GAAc,EAAI,CACpC4Q,OAAQc,EACRb,UAAW,CACTC,UAAW,CACT/I,KAAM,QACNN,QAAS,YAEXsJ,QAAS,CACPC,mBAAqB9P,EAAyB,GAAdoD,KAGlC,CACF2M,YAAaS,EACb3K,YAtBkB,SAACC,GAAM,OACzB3B,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRwB,KAAK,QACLN,QAAQ,YACJT,GACJ,EAkBFgK,mBAAqB9P,EAAyB,GAAdoD,GAG5B4M,EAASlQ,EAAShB,GAAc,EAAIF,EAAOkB,EAAO0P,GAAe1P,EAAS,KAEhF,OACEqE,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACsM,EAAAA,GAAcpL,EAAAA,EAAAA,GAAA,CACb6K,sBAxBwB,0CAyBxBxK,SAAU1F,EACVyF,SAAUzF,EACV0Q,OAAQJ,EACRxQ,MAAOkQ,EACPzO,SA1Ce,SAACzB,GACpBuK,EALwB,SAACvK,GACzB,OAAOA,GAASA,EAAMqQ,UAAYrQ,EAAM4P,OAAOF,QAAerM,CAChE,CAGWiN,CAAkBtQ,GAC7B,GAyCU2P,EACA1P,IAIX,EUiBC4Q,cTxEF,SAAgBlR,GACd,IAAOK,EAA4FL,EAA5FK,MAAOuK,EAAqF5K,EAArF4K,SAAUiG,EAA2E7Q,EAA3E6Q,WAAYtQ,EAA+DP,EAA/DO,SAAUoD,EAAqD3D,EAArD2D,YAAamN,EAAwC9Q,EAAxC8Q,WAAYf,EAA4B/P,EAA5B+P,YAAazP,EAAeN,EAAfM,YAU9E6Q,GAA2C,GAA9BL,EAAWM,QAAQ,OAChCC,EAAYhR,EAAQlB,EAAOkB,EAAOyQ,GAAc,KAWhDd,EAAc3Q,GAAc,EAAI,CACpC4Q,OAAQa,EACRZ,UAAW,CACTC,UAAW,CACT/I,KAAM,QACNN,QAAS,YAEXsJ,QAAS,CACPC,mBAAqB9P,EAAyB,GAAdoD,KAGlC,CACF2M,YAAaQ,EACb1K,YAtBkB,SAACC,GAAM,OACzB3B,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRwB,KAAK,QACLN,QAAQ,YACJT,GACJ,EAkBFgK,mBAAqB9P,EAAyB,GAAdoD,GAGlC,OACEe,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAAC4M,EAAAA,GAAU1L,EAAAA,EAAAA,GAAA,CACT6K,sBAtBwB,0CAuBxBxK,SAAU1F,EACVyF,SAAUzF,EACV0Q,OAAQJ,EACRxQ,MAAOgR,EACPvP,SAzCe,SAACzB,GACpBuK,EALwB,SAACvK,GACzB,OAAOA,GAASA,EAAMqQ,UAAYrQ,EAAM4P,OAAOF,QAAerM,CAChE,CAGWiN,CAAkBtQ,GAC7B,EAwCMkR,MAAOJ,EAAa,CAAC,QAAS,UAAW,WAAa,CAAC,QAAS,YAC5DnB,EACA1P,IAIX,ESkBCkR,gBR1EF,SAAe3O,GAA0F,IAAxF6H,EAAU7H,EAAV6H,WAAYrK,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAA6BrK,GAAFsC,EAAjB5C,kBAA2B4C,EAARtC,UAAUoD,EAAWd,EAAXc,YAAarD,EAAWuC,EAAXvC,YAyBhFmR,EAAoB,MAATpR,EAEjB,OACEqE,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACgN,EAAAA,GAAM9L,EAAAA,EAAAA,GAAA,CACLkB,QAAQ,WACR6K,WAAS,EACTC,cAAY,EACZjO,YAAcpD,EAAyB,GAAdoD,EACzB7B,SA5BW,SAAA6L,QACQjK,IAAnBiK,EAAE4B,OAAOlP,OAEbuK,EAAS+C,EAAE4B,OAAOlP,MACpB,EAyBMA,MAAOoR,EAAWpR,EAAQ,GAC1B2F,SAAUzF,EACV0F,SAAU1F,EACVqG,YA1Bc,SAACxG,GACnB,OAAKG,GAA6B,MAAjBH,EAKO,SAACA,GAAa,OACtCT,EAAc+K,GAAY,SAAAlE,GAAA,IAAE5B,EAAK4B,EAAL5B,MAAY,OAAA4B,EAALnG,QACtBD,EAAgBwE,EAAQ,IAAI,IAEtCiN,QAAO,SAAAC,GAAC,OAAU,OAANA,CAAU,IACtBC,OAAO,CARHC,CAAkB5R,GADhBuD,CAEX,EAuBMyD,KAAK,SACD/D,IAAK/C,EAAa,CAAC,aAAc,WAtCzCX,EAAc+K,GAAY,SAAApE,GAAoB,IAAlB1B,EAAK0B,EAAL1B,MAAOvE,EAAKiG,EAALjG,MACjC,OAAOqE,EAAAA,cAACiE,EAAAA,EAAQ,CAACpB,IAAKlH,EAAOA,MAAOA,GAAQuE,EAC9C,KA0CH,EQ6BCqN,gBG/EF,SAAgBjS,GACd,IAAOK,EAA+EL,EAA/EK,MAAOuK,EAAwE5K,EAAxE4K,SAAkBrK,GAAsDP,EAA9DQ,OAA8DR,EAAtDO,UAAU2R,EAA4ClS,EAA5CkS,IAAKC,EAAuCnS,EAAvCmS,IAAKC,EAAkCpS,EAAlCoS,KAAMzO,EAA4B3D,EAA5B2D,YAAarD,EAAeN,EAAfM,YAWjE+R,EAAuB3O,MAATrD,EAAqB,GAAKA,EAExC4G,GAAaqL,EAAAA,EAAAA,UAAQ,iBAAO,CAChCrM,SAAU1F,EACX,GAAG,CACFA,IAGIwG,GAAauL,EAAAA,EAAAA,UAAQ,iBAAO,CAChCJ,IAAAA,EACAC,IAAAA,EACAC,KAAAA,EACD,GAAG,CACFF,EAAKC,EAAKC,IAGZ,OACE1N,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRwE,KAAK,SACLjL,MAAOgS,EACP1O,YAAcpD,EAAyB,GAAdoD,EACzBsD,WAAYA,EACZF,WAAYA,EACZf,SAAUzF,EACVuB,SAnCW,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MAEjBiP,EADU,KAARA,GAAsB,OAARA,OACV5L,EAEA6O,OAAOjD,GACf1E,EAAS0E,EACX,EA6BMlI,KAAK,SACD9G,IAIX,EHoCCkS,gBI/EF,SAAgBxS,GACd,IAAOQ,EAAsFR,EAAtFQ,OAAQmD,EAA8E3D,EAA9E2D,YAAarD,EAAiEN,EAAjEM,YAAaD,EAAoDL,EAApDK,MAAOuK,EAA6C5K,EAA7C4K,SAAUsH,EAAmClS,EAAnCkS,IAAKC,EAA8BnS,EAA9BmS,IAAKC,EAAyBpS,EAAzBoS,KAAMK,EAAmBzS,EAAnByS,MAAOlS,EAAYP,EAAZO,SAC1EmS,EAAsBlS,EAAOS,SAA7ByR,mBAEDC,GAAqB5R,EAAAA,EAAAA,cAAY,SAACyN,EAAIoE,GAC1ChI,EAASgI,EACX,GAAG,CAAChI,IAEEiI,GAAoB9R,EAAAA,EAAAA,cAAY,SAAC4M,GACrC,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MAEjBiP,EADU,KAARA,GAAsB,OAARA,OACV5L,EAEA6O,OAAOjD,GACf1E,EAAS0E,EACX,GAAG,CAAC1E,IAEEkI,GAAkB/R,EAAAA,EAAAA,cAAY,SAAC4M,GACnC,IAAI2B,EAAM3B,EAAE4B,OAAOlP,OAEjBiP,EADU,KAARA,GAAsB,OAARA,OACV5L,EAEA6O,OAAOjD,IAEL4C,EACRtH,EAASsH,GACA5C,EAAM6C,GACfvH,EAASuH,EAEb,GAAG,CAACvH,EAAUsH,EAAKC,IAGnBtP,EAA0BvC,GAAe,CAAC,EAAnCyC,EAAKF,EAALE,MAAUC,GAAIC,EAAAA,EAAAA,GAAAJ,EAAAK,GACfC,EAAmBH,EAAKI,OAAS,CAAC,EAClC2P,EAAoB/P,EAAKgQ,QAAUhQ,EAInChB,EAA8B,iBAAV3B,EAAqBA,EAAQ,GACjD4S,EAA+B,iBAAV5S,EAAqBA,EAAQ,KAGlD6S,GAAWZ,EAAAA,EAAAA,UAAQ,mBAAMG,GAAQ7F,OAAOC,KAAK4F,GAAOtR,KAAI,SAAA2Q,GAAC,MAAK,CAClEzR,MAAOkS,OAAOT,GACd1N,MAA2B,YAApB+O,EAAAA,EAAAA,GAAOV,EAAMX,UAAuC,IAAbW,EAAMX,GAAqBW,EAAMX,GAAKpN,EAAAA,cAAA,SAAI+N,EAAMX,IAC/F,GAAU,GAAE,CAACW,IAERxL,GAAaqL,EAAAA,EAAAA,UAAQ,iBAAO,CAChCrM,SAAU1F,EACX,GAAG,CACFA,IAGIwG,GAAauL,EAAAA,EAAAA,UAAQ,iBAAO,CAChCJ,IAAAA,EACAC,IAAAA,EACAC,KAAAA,EACD,GAAG,CACFF,EAAKC,EAAKC,IAGNgB,EACJ1O,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRwE,KAAK,SACLjL,MAAO2B,EACP2B,YAAaA,EACbsD,WAAYA,EACZF,WAAYA,EACZf,SAAUzF,EACVuB,SAAU+Q,EACVQ,OAAQP,EACR1L,KAAK,SACDjE,IAIFmQ,EACJ5O,EAAAA,cAAC6O,EAAAA,IAAM3N,EAAAA,EAAAA,GAAA,CACLvF,MAAO4S,EACPnR,SAAU6Q,EACV3M,SAAUzF,EACV2R,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNK,MAAOS,EACPM,kBAAkB,OAClBpM,KAAK,SACD2L,IAcFU,EAAsB,CAC1BC,WAAY,MACZC,YAAa,OACbC,aAAcV,GAAY,QAC1BnQ,MAAOA,GAAS2P,GAGlB,OACEhO,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAAA,OAAKjB,MAnBa,CACpBoQ,QAAS,cACTC,WAAY,SACZC,SAAU,SAiBNrP,EAAAA,cAAA,OAAKjB,MAdgB,CACzBiQ,WAAY,QAcLN,GAEH1O,EAAAA,cAAA,OAAKjB,MAAOgQ,GACTH,IAKV,EJzCCU,eKhFF,SAAgBhU,GACd,IAAOQ,EAAuGR,EAAvGQ,OAAQyT,EAA+FjU,EAA/FiU,aAAc3T,EAAiFN,EAAjFM,YAAaD,EAAoEL,EAApEK,MAAOuK,EAA6D5K,EAA7D4K,SAAUsH,EAAmDlS,EAAnDkS,IAAKC,EAA8CnS,EAA9CmS,IAAKC,EAAyCpS,EAAzCoS,KAAMK,EAAmCzS,EAAnCyS,MAAOlS,EAA4BP,EAA5BO,SAAU2T,EAAkBlU,EAAlBkU,eACrFxB,EAAsBlS,EAAOS,SAA7ByR,oBAEPyB,EAAAA,EAAAA,YAAU,WACR,IAAAtR,EAA6B7C,EAAMK,OAAS,MAACqD,OAAWA,GAAU4C,GAAA0H,EAAAA,EAAAA,GAAAnL,EAAA,GAAlDyD,EAAA,GAASA,EAAA,GACrBtG,EAAMK,KASZ,GAAG,IAEH,IA2BMyS,EAAkB,WAEjBzS,IACDA,EAAM,GAAK6R,EACbtH,EAAS,CAACsH,EAAK7R,EAAM,KACZA,EAAM,GAAK8R,GACpBvH,EAAS,CAACvK,EAAM,GAAI8R,IAExB,EAEA3L,EAA0BlG,GAAe,CAAC,EAAnCyC,EAAKyD,EAALzD,MAAUC,GAAIC,EAAAA,EAAAA,GAAAuD,EAAAtD,GACfC,EAAmBH,EAAKI,OAAS,CAAC,EAClC2P,EAAoB/P,EAAKgQ,QAAUhQ,EAGnCkQ,IAAWT,GAAQ7F,OAAOC,KAAK4F,GAAOtR,KAAI,SAAA2Q,GAAC,MAAK,CACpDzR,MAAOkS,OAAOT,GACd1N,MAA2B,YAApB+O,EAAAA,EAAAA,GAAOV,EAAMX,UAAuC,IAAbW,EAAMX,GAAqBW,EAAMX,GAAKpN,EAAAA,cAAA,SAAI+N,EAAMX,IAC/F,IAKGmB,EAAc5S,GAAK+T,EAAAA,EAAAA,GAAO/T,GAAS,MAACqD,OAAWA,GACnD2Q,GAAArG,EAAAA,EAAAA,GAA2BiF,EAAW,GAAjCqB,EAASD,EAAA,GAAEE,EAAOF,EAAA,GACN3Q,MAAb4Q,IACFA,EAAY,GACZrB,EAAY,GAAK,GAEJvP,MAAX6Q,IACFA,EAAU,GACVtB,EAAY,GAAK,GAInB,IAAMuB,EACJ9P,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRwE,KAAK,SACLjL,MAAOiU,EACP3Q,YAAasQ,EAAa,GAC1BhN,WAAY,CACVhB,SAAU1F,GAEZwG,WAAY,CACVmL,IAAKA,EACLC,IAAKA,EACLC,KAAMA,GAERpM,SAAUzF,EACVuB,SAzE0B,SAAC6L,GAE7B,IAAI2G,EAAY3G,EAAE4B,OAAOlP,MAEvBiU,EADgB,KAAdA,GAAiC,MAAbA,OACV5Q,EAEA6O,OAAO+B,GACrB,IAAIjU,EAAQL,EAAMK,OAAK+T,EAAAA,EAAAA,GAAOpU,EAAMK,OAAS,MAACqD,OAAWA,GACzDrD,EAAM,GAAKiU,EACX1J,EAASvK,EACX,EAgEIgT,OAAQP,EACR1L,KAAK,SACDjE,IAIFsR,EACJ/P,EAAAA,cAACmC,EAAAA,GAASjB,EAAAA,EAAAA,GAAA,CACRkB,QAAQ,WACRwE,KAAK,SACLjL,MAAOkU,EACP5Q,YAAasQ,EAAa,GAC1BhN,WAAY,CACVhB,SAAU1F,GAEZwG,WAAY,CACVmL,IAAKA,EACLC,IAAKA,EACLC,KAAMA,GAERpM,SAAUzF,EACVuB,SAnFwB,SAAC6L,GAC3B,IAAI4G,EAAU5G,EAAE4B,OAAOlP,MAErBkU,EADc,KAAZA,GAA6B,MAAXA,OACV7Q,EAEA6O,OAAOgC,GACnB,IAAIlU,EAAQL,EAAMK,OAAK+T,EAAAA,EAAAA,GAAOpU,EAAMK,OAAS,MAACqD,OAAWA,GACzDrD,EAAM,GAAKkU,EACX3J,EAASvK,EACX,EA2EIgT,OAAQP,EACR1L,KAAK,SACDjE,IAIFmQ,EACJ5O,EAAAA,cAAC6O,EAAAA,IAAM3N,EAAAA,EAAAA,GAAA,CACLvF,MAAO4S,EACPnR,SA7GuB,SAAC0M,EAAIkG,GAC9B9J,EAAS8J,EACX,EA4GI1O,SAAUzF,EACV2R,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNK,MAAOS,EACPM,kBAAkB,OAClBpM,KAAK,SACD2L,IASF4B,EAAqB,CACzBjB,WAAY,OAGRD,EAAsB,CAC1BC,WAAY,MACZC,YAAa,OACbC,aAAcV,GAAY,QAC1BnQ,MAAOA,GAAS2P,GAGlB,OACEhO,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAAA,OAAKjB,MAlBa,CACpBoQ,QAAS,cACTE,SAAU,SAiBNrP,EAAAA,cAAA,OAAKjB,MAAOkR,GACTH,GAEH9P,EAAAA,cAAA,OAAKwD,UAAW,eACdxD,EAAAA,cAAA,YAAQwP,EAAe,KAEzBxP,EAAAA,cAAA,OAAKjB,MAAOkR,GACTF,GAEH/P,EAAAA,cAAA,OAAKjB,MAAOgQ,GACTH,IAKV,EL3FCsB,iBMhFF,SAAgB5U,GACd,IAAQM,EAA8DN,EAA9DM,YAAaD,EAAiDL,EAAjDK,MAAOuK,EAA0C5K,EAA1C4K,SAAUiK,EAAgC7U,EAAhC6U,SAAUC,EAAsB9U,EAAtB8U,QAASvU,EAAaP,EAAbO,SAMzD,OACEmE,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACqQ,EAAAA,EAAU,CAACnG,UAAU,OACpBlK,EAAAA,cAACsQ,EAAAA,GAAI,CAACpG,UAAU,QAAQqG,WAAS,EAACnB,WAAW,SAASoB,QAAS,GAC7DxQ,EAAAA,cAACsQ,EAAAA,GAAI,CAACtL,MAAI,EAACkF,UAAU,QAAQkG,GAC7BpQ,EAAAA,cAACsQ,EAAAA,GAAI,CAACtL,MAAI,EAACkF,UAAU,QACnBlK,EAAAA,cAACyQ,EAAAA,GAAMvP,EAAAA,EAAAA,GAAA,CACLqG,UAAW5L,EACXyB,SAZK,WACf8I,GAAUvK,EACZ,EAWY2F,SAAUzF,GACND,KAGRoE,EAAAA,cAACsQ,EAAAA,GAAI,CAACtL,MAAI,EAACkF,UAAU,QAAQiG,KAKtC,ENwDCO,qBP7EF,SAAevS,GAA0F,IAChFwS,EADR3K,EAAU7H,EAAV6H,WAAYrK,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAA6BrK,GAAFsC,EAAjB5C,kBAA2B4C,EAARtC,UAAUoD,EAAWd,EAAXc,YAAarD,EAAWuC,EAAXvC,YAoBhFmR,EAAoB,MAATpR,GAAiBA,EAAMoJ,OAAS,EAQjD,OACE/E,EAAAA,cAACsE,EAAAA,EAAW,KACVtE,EAAAA,cAACgN,EAAAA,GAAM9L,EAAAA,EAAAA,GAAA,CAAC1F,UAAQ,EACd4G,QAAQ,WACR6K,WAAS,EACTC,cAAY,EACZxN,MAAQ7D,EAAyB,GAAdoD,EACnB7B,SAbW,SAAA6L,QACQjK,IAAnBiK,EAAE4B,OAAOlP,OAEbuK,EAAS+C,EAAE4B,OAAOlP,MACpB,EAUMA,MAAOoR,EAAWpR,EAAQ,GAC1B2F,SAAUzF,EACV0F,SAAU1F,EACVqG,YA5Bc,SAACyO,GACnB,IAAK9U,IAAa8U,EAAe5L,OAC/B,OAAO9F,EACT,IAAM2R,EAAiB3V,EAAc+K,GAAY,SAAAlE,GAAA,IAAE5B,EAAK4B,EAAL5B,MAAOvE,EAAKmG,EAALnG,MAAK,OAC7DgV,EAAejE,QAAQ/Q,IAAU,EAAIuE,EAAQ,IAAI,IAChDiN,QAAO,SAAAC,GAAC,OAAU,OAANA,CAAU,IACzB,OAAOwD,EAAejU,KAAK,KAC7B,EAsBM+F,KAAK,SACD/D,IAAK/C,EAAa,CAAC,aAAc,QAAS,qBAxC7B+U,EA0CF5D,EAAWpR,EAAQ,GAzCtCV,EAAc+K,GAAY,SAAApE,GAAoB,IAAlB1B,EAAK0B,EAAL1B,MAAOvE,EAAKiG,EAALjG,MACjC,OACEqE,EAAAA,cAACiE,EAAAA,EAAQ,CAACpB,IAAKlH,EAAOA,MAAOA,GAC3BqE,EAAAA,cAAC6Q,EAAAA,EAAQ,CAACtJ,QAASoJ,EAAejE,QAAQ/Q,IAAU,IACpDqE,EAAAA,cAAC+D,EAAAA,EAAY,CAACtD,QAASP,IAG7B,MAsCH,EO+BC4Q,sBAAAA,GAEAC,eOnFF,SAAe5S,GAGT,IAFJyG,EAAKzG,EAALyG,MAAOc,EAAQvH,EAARuH,SAAUD,EAAWtH,EAAXsH,YAAa5J,EAAQsC,EAARtC,SAAUoD,EAAWd,EAAXc,YAAajD,EAASmC,EAATnC,UACrD4J,EAAazH,EAAbyH,cAA6BC,GAAF1H,EAAZ2H,aAA8B3H,EAAhB0H,kBAAkBE,EAAiB5H,EAAjB4H,kBAE/CiL,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAA5H,EAAAA,EAAAA,GAAA0H,EAAA,GAAhC/T,EAAIiU,EAAA,GAAEC,EAAOD,EAAA,GAEdhU,GAASb,EAAAA,EAAAA,cAAY,WACzB8U,GAAQ,EACV,GAAG,CAACA,IAEEhU,GAAUd,EAAAA,EAAAA,cAAY,WAC1B8U,GAAQ,EACV,GAAG,CAACA,IAqCE/T,GAAWf,EAAAA,EAAAA,cAAY,SAAA4M,QACJjK,IAAnBiK,EAAE4B,OAAOlP,OAEb+J,EAASuD,EAAE4B,OAAOlP,MACpB,GAAG,CAAC+J,IAEExD,GAAc7F,EAAAA,EAAAA,cAAY,SAACX,GAC/B,OAAKG,GAAaH,EAEA,SAAZ0V,EAAaC,GACjB,OAAOA,EAAO5U,KAAI,SAAA6U,GAChB,OAAIA,EAAM1M,MACHwM,EAAUE,EAAM1M,OADC0M,EAAM9M,OAAS9I,EAAgB4V,EAAM5R,MAAQ,IAEvE,GACF,CACc0R,CAAUxM,GAAOuI,QAAO,SAACC,GACrC,OAAImE,MAAMC,QAAQpE,GACTA,EAAEqE,MAAK,SAAC9V,GAAK,OAAe,OAAVA,CAAc,IAE1B,OAANyR,CAEX,IAAGsE,MAbMzS,CAeX,GAAG,CAACpD,EAAUoD,EAAa2F,IAErBmI,EAA0B,MAAftH,EACbxJ,EAAc4J,GAAoBE,EAClC9J,GAAe2J,IACjB3J,EAAc,MAChB,IAAI+E,EACFhB,EAAAA,cAACgN,EAAAA,EAAM,CACLrK,QAAS3G,EACToG,QAAQ,WACR6K,WAAS,EACTC,cAAY,EACZjO,YAAaA,EACb7B,SAAUA,EACVzB,MAAOoR,EAAWtH,EAAc,GAChCnE,SAAUzF,EACVqG,YAAaA,EACbQ,KAAK,QACLzF,KAAMA,EACNC,OAAQA,EACRC,QAASA,GA9ES,SAAhBqN,EAAiB6G,GAAM,IAAExM,EAAKC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,EAAC,OACtCoD,OAAOC,KAAKkJ,GAAQ5U,KAAI,SAAAkV,GACtB,IAAML,EAAQD,EAAOM,GACd/M,EAAsD0M,EAAtD1M,MAAOJ,EAA+C8M,EAA/C9M,KAAM9E,EAAyC4R,EAAzC5R,MAAO4B,EAAkCgQ,EAAlChQ,SAAU2D,EAAwBqM,EAAxBrM,YAAalF,EAAWuR,EAAXvR,QAC5CmF,EAAS,KAAeC,OAAON,GACjC+M,EACF5R,EAAAA,cAAA,YACGkF,GAAUlF,EAAAA,cAAA,YAAOkF,GACjBD,EAAcjF,EAAAA,cAAA,SAAIN,GAAaA,GAUpC,OAPIK,IACF6R,EACE5R,EAAAA,cAACC,GAAAA,EAAO,CAACC,MAAOH,EAASI,UAAU,cAChCyR,IAIHhN,EACK,CACL5E,EAAAA,cAAC6R,GAAAA,EAAa,CAACvQ,SAAUA,EAAUuB,IAAK2B,EAAMsN,eAAe,GAC1DF,GAEHpH,EAAc5F,EAAOC,EAAM,IAI3B7E,EAAAA,cAACiE,EAAAA,EAAQ,CAAC3C,SAAUA,EAAUuB,IAAK2B,EAAM7I,MAAO6I,GAC7CoN,EAIT,GAAE,CAgDCpH,CAAc5F,IASnB,OANI3I,IACF+E,EACEhB,EAAAA,cAACC,GAAAA,EAAO,CAACC,MAAQjD,EAAqB,KAAdhB,GAAqB+E,IAG3ChB,EAAAA,cAACsE,EAAAA,EAAW,KAAEtD,EAErB,EPpBC+Q,qBLdF,SAAgBzW,GACd,OAAO0E,EAAAA,cAACgS,GAAqBxM,GAAalK,EAAOA,EAAMQ,QACxD,EKcCmW,QJjEF,SAAe9T,GAAsB,IAApByI,EAAIzI,EAAJyI,KAAM/K,EAAQsC,EAARtC,SACjBkL,EAAOV,GAAWO,IAAS,KAC/B,OAAKG,GAAiB,SAATH,EAIA,SAATA,EAEA5G,EAAAA,cAACkS,GAAAA,EAAI,CACHxP,KAAK,QACLpB,SAAUzF,EACV0E,MAAOkG,GAAYG,IACnBG,GAGGA,EAZA/G,EAAAA,cAACoG,GAAQ,KAcnB,EIiDC+L,UAAAA,GACAC,eQ7FF,SAAejU,GAAwB,IAAtB4C,EAAQ5C,EAAR4C,SACf,OAD+B5C,EAANrC,OAClBkE,EAAAA,cAAAA,EAAAA,SAAA,KAAGe,EACX,ER4FCsR,SAAAA,GACAC,USzFF,SAAenU,GAAyE,IAAvExC,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAAUxG,EAAKvB,EAALuB,MAAO6S,EAAYpU,EAAZoU,aAAcC,EAASrU,EAATqU,UAAWnL,EAAElJ,EAAFkJ,GAAIvL,EAAMqC,EAANrC,OAAQ8K,EAAIzI,EAAJyI,KAGtEC,GAFe/K,EAAOS,SAArBkW,WAES,WAAH,OAASvM,GAAUvK,EAAM,GAChC8L,EAAUb,EACV8L,EAAY/W,GAAS4W,GAAyB7S,EAC9CqH,EAAOpL,EAAQqE,EAAAA,cAAC2S,GAAAA,EAAQ,MAAM3S,EAAAA,cAAC4S,GAAAA,EAAY,MAEjD,MAAY,QAARhM,EACE4L,EACKxS,EAAAA,cAACgH,GAAAA,EAAU,CAChBnE,IAAKwE,EAAGI,EACRZ,QAASA,EACTnE,KAAM,SACNqE,GAEK/G,EAAAA,cAACiH,GAAAA,EAAM,CACZpE,IAAKwE,EAAGI,EACRZ,QAASA,EACTnE,KAAM,QACNwE,UAAWH,GACX2L,GAIC1S,EAAAA,cAAC6S,GAAAA,EAAgB,CACtBC,QAAS9S,EAAAA,cAACyQ,EAAAA,EAAM,CACdlJ,UAAW5L,EACX+G,KAAM,QACNtF,SA3Ba,SAAA6L,GAAC,OAAI/C,EAAS+C,EAAE4B,OAAOtD,QAAQ,IA6B9C7H,MAAOgT,GAEV,ETyDCK,gBAAAA,GACAC,WUnGF,SAAe7U,GAAkD,IAAhD8U,EAAI9U,EAAJ8U,KAAMC,EAAM/U,EAAN+U,OAAQC,EAAUhV,EAAVgV,WAAYjT,EAAK/B,EAAL+B,OACzCkT,EADyDjV,EAATiV,WACtC,CACRC,YAAanT,GAAS,gBACtBA,MAAO,KACPoT,iBAAkBJ,GAAU,KAC5BK,iBAAkBJ,GAAc,WAE/BK,KAAKP,GAAK,OACJ,WAAO,GACjB,EV2FCQ,cAAeC,EAAAA,EAEfC,YAjEkB,SAAHxV,GAA2B,IAAtBrC,EAAMqC,EAANrC,OAAQiF,EAAQ5C,EAAR4C,SACtB6S,EAAgB9X,EAAOS,SAAS6C,OAAS,CAAC,EAC1CyU,EAAiB/X,EAAOS,SAASuX,QAAU,CAAC,EAC5CC,EAAeF,EAAepZ,OAC9BuZ,EAAcJ,EAAcK,IAC5BH,EAASD,EAAeI,IACxB7U,GAAQ8U,EAAAA,EAAAA,GAAYF,EAAaF,EAAQ,CAC7CtT,QAAS,CAIP,IAIE2T,EAAmBxZ,IAAc,EAAI,CACzCmZ,OAAQC,GACN,CACFK,cAAeL,GAGXM,EAAQrU,EAAAA,cAAA,OAAKwD,UAAU,OAAOzC,GAC9BuT,EACJtU,EAAAA,cAACuU,EAAAA,GAAoBrT,EAAAA,EAAAA,GAAA,CAACsT,YAAaC,EAAAA,GAAmBN,GACpDnU,EAAAA,cAAC0U,EAAAA,EAAe,KACbL,IAUP,OANkBjV,EAChBY,EAAAA,cAAC2U,EAAAA,EAAa,CAACvV,MAAOA,GACnBkV,GAEDA,CAGN,G,ykBWpEA,IAAM/X,GAAQ+F,GAAAA,GAAA,GACTsS,EAAAA,GAAYrY,UAAQ,IAEvBsY,YAAa,SAACvZ,EAAK6C,GAAA,IAAA2W,EAAGC,EAAG5W,EAAH4W,IAAGC,EAAA7W,EAAE8W,EAAIlD,EAAoBiD,EAApBjD,qBAAsBhB,EAAciE,EAAdjE,eAAc,OAAOzV,SAAkB,QAAbwZ,EAALxZ,EAAOM,mBAAW,IAAAkZ,GAAlBA,EAAoBI,WAC1FH,EAAIhD,EAAsBzW,GAC1ByZ,EAAIhE,EAAgBzV,EAAM,EAC9B6Z,eAAgB,SAAC7Z,EAAKsG,GAAA,IAAAwT,EAAGL,EAAGnT,EAAHmT,IAAGM,EAAAzT,EAAEqT,EAAIlD,EAAoBsD,EAApBtD,qBAAsBhB,EAAcsE,EAAdtE,eAAc,OAAOzV,SAAkB,QAAb8Z,EAAL9Z,EAAOM,mBAAW,IAAAwZ,GAAlBA,EAAoBF,WAC7FH,EAAIhD,EAAsBzW,GAC1ByZ,EAAIhE,EAAgBzV,EAAM,EAC9Bga,WAAY,SAACha,EAAKwG,GAA0B,OAAOiT,EAA3BjT,EAAHiT,KAAuBjT,EAAlBmT,EAAIlE,eAAyCzV,EAAM,EAC7Eia,YAAa,SAACja,EAAKiE,GAAoB,OAAOwV,EAArBxV,EAAHwV,KAAiBxV,EAAZ0V,EAAI5C,SAA6B/W,EAAM,EAClEka,aAAc,SAACla,EAAKwF,GAAqB,OAAOiU,EAAtBjU,EAAHiU,KAAkBjU,EAAbmU,EAAI3C,UAA+BhX,EAAM,EACrEma,aAAc,SAACna,EAAKoa,GAAqB,OAAOX,EAAtBW,EAAHX,KAAkBW,EAAbT,EAAI9C,UAA+B7W,EAAM,EACrEwL,WAAY,SAACxL,EAAKqa,GAAmB,OAAOZ,EAApBY,EAAHZ,KAAgBY,EAAXV,EAAIhD,QAA2B3W,EAAM,EAC/Dsa,kBAAmB,SAACta,EAAKua,GAA0B,OAAOd,EAA3Bc,EAAHd,KAAuBc,EAAlBZ,EAAI7C,eAAyC9W,EAAM,EACpFwa,mBAAoB,SAACxa,EAAKya,GAA2B,OAAOhB,EAA5BgB,EAAHhB,KAAwBgB,EAAnBd,EAAIlC,gBAA2CzX,EAAM,EACvF0a,mBAAoB,SAAC1a,EAAK2a,GAA2B,OAAOlB,EAA5BkB,EAAHlB,KAAwBkB,EAAnBhB,EAAIlC,gBAA2CzX,EAAM,EACvF4a,eAAgB,SAAC5a,EAAK6a,GAAuB,OAAOpB,EAAxBoB,EAAHpB,KAAoBoB,EAAflB,EAAItB,YAAmCrY,EAAM,EAC3E8a,cAAe,SAAC9a,EAAK+a,GAAiB,OAAOrD,EAAPqD,EAAdpB,EAAIjC,YAA4B1X,EAAM,EAC9DoY,WAAY,SAAA4C,GAAmB,OAAO7C,EAAP6C,EAAjBrB,EAAIxB,gBAAmC,IAGjD8C,GAAOjU,GAAAA,GAAA,GACRsS,EAAAA,GAAY2B,SAAO,IACtBC,KAAIlU,GAAAA,GAAA,GACCsS,EAAAA,GAAY2B,QAAQC,MAAI,IAC3BC,QAAS,SAACnb,EAAKob,GAAyB,OAAO3B,EAA1B2B,EAAH3B,KAAsB2B,EAAjBzB,EAAIxK,cAAuCnP,EAAM,IAE1Eqb,SAAQrU,GAAAA,GAAA,GACHsS,EAAAA,GAAY2B,QAAQI,UAAQ,IAC/BF,QAAS,SAACnb,EAAKsb,GAA6B,OAAO7B,EAA9B6B,EAAH7B,KAA0B6B,EAArB3B,EAAIlK,kBAA+CzP,EAAM,IAElFub,OAAMvU,GAAAA,GAAA,GACDsS,EAAAA,GAAY2B,QAAQM,QAAM,IAC7BJ,QAAS,SAACnb,EAAKwb,GAA2B,OAAO/B,EAA5B+B,EAAH/B,KAAwB+B,EAAnB7B,EAAI1H,gBAA2CjS,EAAM,IAE9Eyb,YAAWzU,GAAAA,GAAA,GACNsS,EAAAA,GAAY2B,QAAQQ,aAAW,IAClCN,QAAS,SAACnb,EAAK0b,GAA8D,IAA3DjC,EAAGiC,EAAHjC,IAAGkC,EAAAD,EAAE/B,EAAInE,EAAqBmG,EAArBnG,sBAAuBJ,EAAoBuG,EAApBvG,qBAChD,OAAQpV,EAAM4b,YAAc5b,EAAM4Z,WAC9BH,EAAIjE,EAAqBxO,GAAAA,GAAA,GAAMhH,GAAK,IAAEE,UAAU,KAChDuZ,EAAIrE,EAAsBpV,EAChC,IAEF6b,OAAM7U,GAAAA,GAAA,GACDsS,EAAAA,GAAY2B,QAAQY,QAAM,IAC7BV,QAAS,SAACnb,EAAK8b,GAAyD,IAAtDrC,EAAGqC,EAAHrC,IAAGsC,EAAAD,EAAEnC,EAAInE,EAAqBuG,EAArBvG,sBAAuBhE,EAAeuK,EAAfvK,gBAChD,OAAQxR,EAAM4b,YAAc5b,EAAM4Z,WAC9BH,EAAIjE,EAAuBxV,GAC3ByZ,EAAIjI,EAAiBxR,EAC3B,IAEFgT,OAAMhM,GAAAA,GAAA,GACDsS,EAAAA,GAAY2B,QAAQjI,QAAM,IAC7BmI,QAAS,SAACnb,EAAKgc,GAA2B,OAAOvC,EAA5BuC,EAAHvC,KAAwBuC,EAAnBrC,EAAInH,gBAA2CxS,EAAM,IAE9Eic,QAAAjV,GAAAA,GAAA,GACKsS,EAAAA,GAAY2B,QAAO,SAAQ,IAC9BE,QAAS,SAACnb,EAAKkc,GAA4B,OAAOzC,EAA7ByC,EAAHzC,KAAyByC,EAApBvC,EAAI/E,iBAA6C5U,EAAM,IAEhFmc,KAAInV,GAAAA,GAAA,GACCsS,EAAAA,GAAY2B,QAAQkB,MAAI,IAC3BhB,QAAS,SAACnb,EAAKoc,GAAyB,OAAO3C,EAA1B2C,EAAH3C,KAAsB2C,EAAjBzC,EAAI9J,cAAuC7P,EAAM,IAE1Eqc,KAAIrV,GAAAA,GAAA,GACCsS,EAAAA,GAAY2B,QAAQoB,MAAI,IAC3BlB,QAAS,SAACnb,EAAKsc,GAAyB,OAAO7C,EAA1B6C,EAAH7C,KAAsB6C,EAAjB3C,EAAIzI,cAAuClR,EAAM,IAE1Euc,SAAQvV,GAAAA,GAAA,GACHsS,EAAAA,GAAY2B,QAAQsB,UAAQ,IAC/BpB,QAAS,SAACnb,EAAKwc,GAA6B,OAAO/C,EAA9B+C,EAAH/C,KAA0B+C,EAArB7C,EAAI/I,kBAA+C5Q,EAAM,IAElFyc,YAAWzV,GAAAA,GAAA,GACNsS,EAAAA,GAAY2B,QAAQwB,aAAW,IAClCtB,QAAS,SAACnb,EAAK0c,GAA0B,OAAOjD,EAA3BiD,EAAHjD,KAAuBiD,EAAlB/C,EAAI3F,eAAyChU,EAAM,MAIxE2c,GAAK3V,GAAA,GACNsS,EAAAA,GAAYqD,OAGXC,GAAG5V,GAAAA,GAAA,GACJsS,EAAAA,GAAYsD,KAAG,IAClBjD,EAAC3S,GAAAA,GAAA,GACIsS,EAAAA,GAAYsD,IAAIjD,GAChBkD,MAKHrc,GAAMwG,GAAAA,GAAA,GACLsS,EAAAA,IAAW,IACdsD,IAAAA,GACAD,MAAAA,GACA1B,QAAAA,GACAha,SAAAA,KAMF,SAJAT,GAASpB,EAAAA,GAAM0d,aAAaC,UAAUvc,GAAQ,CAC5C,e,+nMCrGEwc,EAAqB,EACzB,mBAEE,IAAMC,IAAY,IAAIC,MAAOC,UAAUxW,SAAS,IAAI,MAAMyW,OAAO,EAAE,IAMnE,MALU,4BAA4BC,QAAQ,UAAU,SAACC,GACvD,IAAMC,EAAU,MAAND,EAAYE,KAAKC,MAAsB,GAAhBD,KAAKE,UAA0C,GAAxBV,IAExD,OADgB,MAANM,EAAYC,EAAS,EAAJA,EAAU,GAC5B5W,SAAS,GACpB,IACWsW,CACZ,E,uOCRM,IAAMU,EAAsB,CACjC,cAAe,mBAAoB,iBAAkB,YAAa,2BAA4B,kBAAmB,kBAAmB,mBAGzHC,EAAkB,CAC7B,WAAY,gBAAiB,cAAe,YAAa,gBAG9CC,EAAW,SAAC/L,GACvB,MAAoB,YAAbqB,EAAAA,EAAAA,GAAOrB,IAAwB,OAANA,GAAoD,oBAAtClF,OAAOkR,UAAUnX,SAASoX,KAAKjM,EAC/E,EAEakM,EAAc,SAAClM,GAC1B,GAAiB,YAAbqB,EAAAA,EAAAA,GAAOrB,IAAwB,OAANA,EAAY,CACvC,GAAImE,MAAMC,QAAQpE,GAChB,OAAAsC,EAAAA,EAAAA,GAAWtC,GACN,GAAI+L,EAAS/L,GAClB,O,qWAAA9K,CAAA,GAAW8K,EAEf,CACA,OAAOA,CACT,EAEazO,EAAO,SAAC4a,EAAKpR,GACxB,OAAOD,OAAOsR,YAAYtR,OAAOuR,QAAQF,GAAKpM,QAAO,SAAAhP,GAAA,IAAEzB,GAAF4M,EAAAA,EAAAA,GAAAnL,EAAA,GAAG,UAAOgK,EAAK5E,SAAS7G,EAAE,IACjF,EAMagd,EAAmB,SAACC,GAAU,IAAAC,EACzC,OAAyB,QAAzBA,EAAOD,aAAK,EAALA,EAAOE,mBAAW,IAAAD,EAAAA,EAAI,CAC/B,EAUaE,EAAY,SAASC,EAAIC,GACpC,OAAID,IAAOC,IAEAC,EAAAA,GAAIC,MAAMH,GACZA,EAAGI,OAAOH,GAEVra,KAAKvD,UAAU2d,IAAOpa,KAAKvD,UAAU4d,GAEhD,EAeaI,EAAe,SAACC,EAAGC,GAAoB,IAAjBC,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACrC,OAAIuV,IAAMC,IAEC/I,MAAMC,QAAQ6I,GAU3B,SAA4BG,EAAMC,GAAoB,IAAdF,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1C,GAAI0V,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAMF,EAAKzV,OAEf,GAAI0V,EAAK1V,SAAW2V,EAClB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAEvB,KADcJ,EAAOH,EAAaI,EAAKG,GAAIF,EAAKE,GAAIJ,GAAQC,EAAKG,KAAOF,EAAKE,IAE3E,OAAO,EAIX,OAAO,CACT,CAhCWC,CAAmBP,EAAGC,EAAGC,GACzBN,EAAAA,GAAIC,MAAMG,GACVA,EAAEF,OAAOG,GACG,WAAZ7L,EAAAA,EAAAA,GAAO4L,GA+BlB,SAA6BQ,EAAMC,GAAoB,IAAdP,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC3C,GAAI+V,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAQ7S,OAAOC,KAAK0S,GACpBG,EAAQ9S,OAAOC,KAAK2S,GACpBJ,EAAMK,EAAMhW,OAEhB,GAAIiW,EAAMjW,SAAW2V,EACnB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAI9X,EAAMkY,EAAMJ,GAEhB,KADcJ,EAAOH,EAAaS,EAAKhY,GAAMiY,EAAKjY,GAAM0X,GAAQM,EAAKhY,KAASiY,EAAKjY,IAEjF,OAAO,CAEX,CAEA,OAAO,CACT,CAxDWoY,CAAoBZ,EAAGC,EAAGC,GAE1BF,IAAMC,EACjB,EAuDO,IAAMY,EAAc,SAAC9N,GAC1B,MAAoB,YAAbqB,EAAAA,EAAAA,GAAOrB,IAAwB,OAANA,GAAgC,mBAAXA,EAAE+N,IACzD,EAEaC,EAAkB,SAAChO,GAC9B,OAAO8N,EAAY9N,IAAMiO,EAAAA,GAAAA,OAAiBjO,EAC5C,EAEO,SAASkO,EAAgBlO,GAC9B,OAAQgO,EAAgBhO,GAAKA,EAAI,IAAIiO,EAAAA,GAAAA,KAAejO,EACtD,CAEO,SAASmO,EAAUnO,GACxB,OAAQ8N,EAAY9N,GAAKA,EAAE+N,OAAS/N,CACtC,CAEO,IAAMoO,EAAe,SAACC,GAC3B,OAAOA,EAAO9C,QAAQ,uBAAwB,OAChD,EAEa+C,EAA0B,SAACC,EAAUC,EAAUC,EAAMC,EAASC,EAASC,GAClF,GAAIzK,MAAMC,QAAQmK,GAChB,OAAOC,CAEX,EAEaK,EAAW,SAAXA,EAAYC,GACvB,IAEiBtR,EASjB,GAAIsR,aAAe3K,MACjB,OAAO2K,EAAIzf,KAAI,SAAC0f,EAAIC,GAAE,OAAKH,EAASE,EAAG,IAClC,GAAmB,YAAf1N,EAAAA,EAAAA,GAAOyN,IAA4B,OAARA,GAChCG,EAAWH,GAAM,KAAAI,EACbC,EAAU5d,EAAKud,EAfT,CAAC,WAAY,SAAU,SAAU,MAAO,QAsBpD,OANIK,EAAQ3V,OACV2V,EAAQ3V,KAdO,iBADJgE,EAeY2R,EAAQ3V,MAb1BgE,EACiB,mBAARA,EACTA,EAAItD,KAENsD,GAWD2R,SAAc,QAAPD,EAAPC,EAASjhB,aAAK,IAAAghB,GAAdA,EAAgBvb,WAClBwb,EAAQjhB,MAAMyF,SAAWkb,EAASM,EAAQjhB,MAAMyF,WAE3Cwb,CACT,CAEF,OAAOL,CACT,EAEaG,EAAa,SAACH,GACzB,MAAsB,YAAfzN,EAAAA,EAAAA,GAAOyN,IACD,OAARA,IACC3K,MAAMC,QAAQ0K,IACfhU,OAAOC,KAAK+T,GAAK3Y,SAAS,SAC1B2E,OAAOC,KAAK+T,GAAK3Y,SAAS,UAC1B2E,OAAOC,KAAK+T,GAAK3Y,SAAS,QAC1B2E,OAAOC,KAAK+T,GAAK3Y,SAAS,QAC1B2E,OAAOC,KAAK+T,GAAK3Y,SAAS,WACjC,EAEaiZ,GAAQ,SAACN,GAAG,MACR,YAAfzN,EAAAA,EAAAA,GAAOyN,IACI,OAARA,IACC3K,MAAMC,QAAQ0K,IACQ,iBAAhBA,EAAU,MACjBhU,OAAOC,KAAK+T,GAAK3Y,SAAS,QAAQ,EAG1BkZ,GAAc,SAACC,GAQ1B,MAP4B,YAAjBjO,EAAAA,EAAAA,GAAOiO,IACH,OAAVA,IACCnL,MAAMC,QAAQkL,IACe,IAA9BxU,OAAOC,KAAKuU,GAAO3X,MAK1B,EAEO,SAAS4X,GAAMC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,EACtB,GACF,CAKO,SAASI,GAAiBC,EAAMC,GAGrC,OAFKD,IAAMA,EAAO,IACbC,IAAMA,EAAO,IACXA,EACJzgB,KAAI,SAAA0gB,GAAE,MAAI,CAACA,EAAIF,EAAKvQ,QAAQyQ,GAAI,IAChC1gB,KAAI,SAAAqF,EAAY6Y,EAAGyC,GAAS,IAAA7d,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAtBqb,EAAE5d,EAAA,GACP,IAAY,GADAA,EAAA,GACG,CACb,IAAM8d,EAAOD,EAAKE,MAAM3C,EAAE,GAEpB4C,EADOH,EAAKE,MAAM,EAAG3C,GACR6C,UAAUC,MAAK,SAAA3c,GAAA,IAAA4U,GAAApM,EAAAA,EAAAA,GAAAxI,EAAA,GAAU,OAAJ4U,EAAA,IAAiB,GAAbA,EAAA,EAAc,IACpDgI,EAASL,EAAKI,MAAK,SAAA9H,GAAA,IAAAE,GAAAvM,EAAAA,EAAAA,GAAAqM,EAAA,GAAU,OAAJE,EAAA,IAAiB,GAAbA,EAAA,EAAc,IACjD,OAAI6H,EACK,CAACP,EAAI,SAAUO,EAAO,IACtBH,EACA,CAACJ,EAAI,QAASI,EAAM,IAEpB,CAACJ,EAAI,SAAU,KAC1B,CAEE,OAAO,IAEX,IACChQ,QAAO,SAAAwQ,GAAC,OAAU,OAANA,CAAU,IACtBC,QAAO,SAACC,EAAG9H,GAA0B,IAAAE,GAAA3M,EAAAA,EAAAA,GAAAyM,EAAA,GAAvB+H,EAAK7H,EAAA,GAAE8H,EAAG9H,EAAA,GAAE+H,EAAK/H,EAAA,GACxBgI,EAAMJ,EAAInR,QAAQsR,GAUxB,OAT2B,GAAvBH,EAAInR,QAAQoR,KACVG,GAAO,EAETJ,EAAIK,OAAQD,GAAc,SAAPF,EAAiB,EAAI,GAAI,EAAGD,GAG/CD,EAAIK,OAAgB,UAAPH,EAAkBxY,IAAW,EAAI,EAAGuY,IAG9CD,CACT,GAAGZ,EAAKK,QACZ,CAEO,IAAMa,GAAa,SAAbA,EAAa5E,GACL,YAAf9K,EAAAA,EAAAA,GAAO8K,IAA4B,OAARA,GAAiB8C,EAAW9C,KACzDrR,OAAOC,KAAKoR,GAAK6E,SAAQ,SAAAC,GACV,YAATA,GACFF,EAAW5E,EAAI8E,GAEnB,IACAnW,OAAOoW,OAAO/E,GAElB,EAEagF,GAAmB,SAAnBA,EAAoBC,EAAKjF,GAA6B,IAAxBkF,EAAG3Z,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGN,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GAC1D,GAAIqU,EAASqF,GAAM,CACjB,GAAIA,EAAG,IAEL,OADAC,EAAID,EAAG,KAAQjF,GACR,EAET,IAAKJ,EAASI,GACZ,OAAO,EACT,IAAK,IAAM7c,KAAK8hB,EAGd,IAAKD,EAFMC,EAAI9hB,GACJ6c,EAAI7c,GACe+hB,EAAK,GAAFC,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,KAC3C,OAAO,EAEX,OAAO,CACT,CAAO,GAAI6U,MAAMC,QAAQgN,GAAM,CAC7B,IAAKjN,MAAMC,QAAQ+H,GACjB,OAAO,EACT,IAAK,IAAIoB,EAAI,EAAIA,EAAI6D,EAAIzZ,OAAS4V,IAGhC,IAAK4D,EAFMC,EAAI7D,GACJpB,EAAIoB,GACe8D,EAAK,GAAFC,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAEmW,KAC3C,OAAO,EAEX,OAAO,CACT,CACE,OAAO6D,IAAQjF,CAEnB,EAIaoF,GAAY,WAAqB,IAApBC,EAAO9Z,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAE/B,OAD2B9F,MAAX4f,GAAuBA,EACtBC,QAAU,CACzBlc,MAAO,WAAO,EACdmc,IAAK,WAAO,EACZC,KAAM,WAAO,EACbC,MAAO,WAAO,EACdhW,KAAM,WAAO,EAEjB,EAEaiW,GAAkB,WAE7B,IAF2C,IACvCC,EAD0BC,EAAGra,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GAE3B6V,EAAI,EAAIA,EAAIwE,EAAIpa,OAAS4V,IAAK,CACrC,IAAMvN,EAAI+R,EAAIxE,GACd,QAAU3b,IAANoO,EAAiB,CACnB8R,EAAM9R,EACN,KACF,CACF,CACA,OAAO8R,CACT,EAEaE,GAAST,K,gxBC9UtB,IAAMxF,GAAW,SAAC/L,GAAC,MAAkB,WAAZqB,EAAAA,EAAAA,GAAOrB,IAAuB,OAANA,IAAemE,MAAMC,QAAQpE,EAAE,EAEnEiS,GAAc,SAACjS,EAAGlN,GAC7B,OAAS,MAALkN,GAAkB,IAALA,OACf,EACS+L,GAAS/L,GAClB9K,GAAAA,GAAA,GACK8K,GAAC,IACJlN,MAAOkN,EAAElN,OAASkN,EAAEzR,QAGf,CACLA,MAAOyR,EACPlN,WAAkBlB,IAAVkB,EAAsBA,EAAQ,GAAGkN,EAG/C,EAEakS,GAAsB,SAAClS,GAClC,IAAMmS,EAAKF,GAAYjS,GACvB,OAAI+L,GAASoG,GACXjd,GAAAA,GAAA,GACK+c,GAAYjS,IAAE,IACjBoS,UAAU,IAGLD,CAEX,EAGaE,GAAoB,SAACC,GAChC,GAAInO,MAAMC,QAAQkO,GAChB,OAAOA,EAAcjjB,KAAI,SAAA2Q,GAAC,OAAIiS,GAAYjS,EAAE,IAC9C,IAAK+L,GAASuG,GACZ,OAAOA,EAET,IAAIC,EAAgB,GACpB,IAAK,IAAIvS,KAAKsS,EAAe,CAC3B,IAAMxf,EAAQwf,EAActS,GAC5BuS,EAAcC,KAAKP,GAAYjS,EAAGlN,GACpC,CACA,OAAOyf,CACT,EAIaE,GAAsB,SAAC7Z,EAAYrK,GAC9C,OAAI4V,MAAMC,QAAQxL,GACDA,EAAWvJ,KAAI,SAAA2Q,GAAC,OAAIiS,GAAYjS,EAAE,IACnCqQ,MAAK,SAAArQ,GAAC,MAAK,GAAGA,EAAEzR,OAAU,GAAGA,CAAK,SAEnBqD,IAAtBgH,EAAWrK,GAAuB0jB,GAAY1jB,EAAOqK,EAAWrK,SAAUqD,CAErF,EAEa8gB,GAAuB,SAAC9Z,EAAYrK,GAC/C,GAAkBqD,MAAdgH,EACF,OAAOrK,EACT,IAAMokB,EAAKF,GAAoB7Z,EAAYrK,GAC3C,YAAcqD,IAAP+gB,EAAmBA,EAAG7f,MAAQvE,CACvC,EAEaqkB,GAAuB,SAACha,EAAYrK,GAC/C,GAAkBqD,MAAdgH,EACF,OAAOrK,EACT,IAAMokB,EAAKF,GAAoB7Z,EAAYrK,GAC3C,YAAcqD,IAAP+gB,EAAmBA,EAAGpkB,MAAQA,CACvC,EAEaV,GAAgB,SAAC+K,EAAYia,GACxC,IAAIf,EAAM,GACV,GAAI3N,MAAMC,QAAQxL,GAAa,KACLka,EADKC,E,65BAAAC,CACfpa,GAAU,IAAxB,IAAAma,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA0B,KAAjBnT,EAAC8S,EAAAvkB,MACF4jB,EAAKU,EAAMZ,GAAYjS,IACnB,MAANmS,GACFL,EAAIU,KAAKL,EACb,CAAC,OAAAiB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACH,MACE,IAAK,IAAI9kB,KAASqK,EAAY,CAC5B,IAAMuZ,EAAKU,EAAMZ,GAAY1jB,EAAOqK,EAAWrK,KACrC,MAAN4jB,GACFL,EAAIU,KAAKL,EACb,CAEF,OAAOL,CACT,EAEawB,GAAkB,SAACC,EAAQ3a,GAAU,OAChD/K,GAAc+K,GAAY,SAACuZ,GAAE,OACO,GAAlC,GAAAb,OAAGa,EAAG5jB,OAAQ+Q,QAAQiU,KAA8C,GAA7BpB,EAAGrf,MAAMwM,QAAQiU,GACpDpB,EAAK,IAAI,IAEZpS,QAAO,SAAAC,GAAC,OAAU,OAANA,CAAU,IACtBC,OAAO,EAECuT,GAAe,SAACllB,EAAesK,GAAU,OACpD/K,GAAc+K,GACZ,SAACuZ,GAAE,MAAM,GAAGA,EAAG5jB,OAAU,GAAGD,EAAgB6jB,EAAK,IAAI,IAEpDpS,QAAO,SAAAC,GAAC,OAAU,OAANA,CAAU,IACtBC,OAAO,ECxFCwT,GAAiB,SAACrc,GAAI,QAAAsc,EAAAhc,UAAAC,OAAKgc,EAAM,IAAAxP,MAAAuP,EAAA,EAAAA,EAAA,KAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAANkF,EAAMlF,EAAA,GAAA/W,UAAA+W,GAAA,OAC5CrX,EAAKwc,UAAU,aAAaC,eAAc,SAACC,GAGzC,OAFAA,EAAKC,KAAK,GACVD,EAAKtB,KAAKwB,MAAMF,EAAMH,GACfG,CACT,GAAE,EAQSG,GAAoB,SAAC7c,GAAI,QAAA8c,EAAAxc,UAAAC,OAAKgc,EAAM,IAAAxP,MAAA+P,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANR,EAAMQ,EAAA,GAAAzc,UAAAyc,GAAA,OAC/C/c,EAAKwc,UAAU,aAAaC,eAAc,SAACC,GAEzC,OADAA,EAAKtB,KAAKwB,MAAMF,EAAMH,GACfG,CACT,GAAE,EAQSM,GAAgB,SAACC,EAAMjd,GAClC,IAAIzD,EAAW,IAAIsa,EAAAA,GAAAA,YAAoBqG,EAAAA,EAAAA,GAAC,CAAC,EAAED,EAAKE,IAAI,MAASF,IACzDzgB,EAAMygB,EAKV,OAJAjd,EAAK4Z,SAAQ,SAAC/W,GAAO,IAAAua,EACnB5gB,EAAMD,EAAS4gB,IAAIta,GACnBtG,EAAc,QAAN6gB,EAAG5gB,SAAG,IAAA4gB,OAAA,EAAHA,EAAKD,IAAI,YACtB,IACO3gB,CACT,EAoCa6gB,GAAuB,SAACJ,GACnC,IAAIK,EAAUL,EAmBd,OAjBA,SAASM,EAAc/c,EAAMR,GAA8B,IAAxBwd,EAAcld,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACzCmd,EAAWzd,EAAKob,KAAK5a,EAAK2c,IAAI,OAC9BO,EAAWld,EAAKmd,MAAM,CAAC,aAAc,aACvCH,GAAkBE,IACpBJ,EAAUA,EAAQM,SAASvB,GAAeoB,EAAU,aAAc,cAGpE,IAAMlhB,EAAWiE,EAAK2c,IAAI,aACtB5gB,GACFA,EAAStE,KAAI,SAAC4lB,EAAOC,GACnBP,EAAaM,EAAOJ,EAAUC,GAAYF,EAC5C,GAEJ,CAEAD,CAAaN,EAAM,IAAIpG,EAAAA,GAAAA,MAEhByG,CACT,EAQaS,GAAiB,SAACd,GAC7B,IAAIK,EAAUL,EAiCd,OA/BA,SAASM,EAAc/c,EAAMR,EAAMge,EAAKC,GACtC,GAAKzd,EAAL,CACA,IAAM0d,EAAW1d,EAAK2c,IAAI,QACpBgB,EAAS3d,EAAK2c,IAAI,MAClBiB,EAASD,GAAUF,GAAUI,IAC7BZ,EAAWzd,EAAKob,KAAKgD,GACtBF,GAAaA,EAASvI,OAAO8H,KAChCH,EAAUA,EAAQgB,MAAMjC,GAAeoB,EAAU,QAASA,IAEvDU,IACHb,EAAUA,EAAQgB,MAAMjC,GAAeoB,EAAU,MAAOW,IAG1D,IAAM7hB,EAAWiE,EAAK2c,IAAI,aACtB5gB,IACgC,QAA9BA,EAASgiB,YAAYzb,OAEvBwa,EAAUA,EAAQgB,MAChBjC,GAAeoB,EAAU,aACzB,IAAI5G,EAAAA,GAAAA,WAAqBta,KAG7BA,EAAStE,KAAI,SAAC4lB,EAAOW,GACnBjB,EAAaM,EAAOJ,EAAUO,EAAM,EAAGQ,EACzC,IAvBe,CAyBnB,CAEAjB,CAAaN,EAAM,IAAIpG,EAAAA,GAAAA,KAAkB,GAGlCyG,CACT,EAEamB,GAAuB,SAACxB,GACnC,IAAIK,EAAUL,EAuBd,OArBA,SAASM,EAAc/c,EAAMR,EAAMge,EAAKC,GACtC,IAAKzd,EAAM,OAAO,EAClB,IAAM4d,EAAS5d,EAAK2c,IAAI,OAASc,EAC3BR,EAAWzd,EAAKob,KAAKgD,GAErB7hB,EAAWiE,EAAK2c,IAAI,aAC1B,GAAI5gB,EAAU,CACZ,IAAMmiB,EAAkBniB,EAAStE,KAAI,SAAC4lB,EAAOW,GAC3C,OAAOjB,EAAaM,EAAOJ,EAAUO,EAAM,EAAGQ,EAChD,IAAGpF,QAAO,SAACuF,EAAM/V,GAAC,OAAM+V,GAAQ/V,CAAC,IAAG,GACpC,IAAsB,GAAjBrM,EAAS2B,MAAawgB,IAAoBV,EAAM,EAEnD,OADAV,EAAUA,EAAQM,SAASvB,GAAeoB,KACnC,CAEX,CACA,OAAO,CACT,CAEAF,CAAaN,EAAM,IAAIpG,EAAAA,GAAAA,KAAkB,GAGlCyG,CACT,EAMasB,GAAc,SAAC3B,GAC1B,IAAInc,EAAO,GACPV,EAAQ,CAAC,EACTye,EAAQ,GACRC,EAAgB,EAChBC,EAAkB,EAElBC,EAAmB,EACnBC,EAAoB,CAAC,GAIzB,SAASC,EACP1e,EAAMR,EAAMmf,EAAiBC,EAAcC,EAAiBrB,EAAKsB,EAAQC,GAEzE,IAAMC,EAAShf,IAASyc,EAClB7a,EAAO5B,EAAK2c,IAAI,QAChBsC,EAAYjf,EAAK2c,IAAI,aACrBta,EAAKrC,EAAK2c,IAAI,MACd5gB,EAAWiE,EAAK2c,IAAI,aACpBO,EAAWld,EAAKmd,MAAM,CAAC,aAAc,aACrC+B,EAAcnjB,EAAWA,EAAStE,KAAI,SAAC0nB,EAAQnB,GAAO,OAAKA,CAAO,IAAEoB,WAAWC,UAAY,KAC3FC,EAAuB,eAAT1d,EACd2d,EAAkB,SAAT3d,EACT4d,EAAmB,UAAT5d,EACV6d,EAAuB,eAAT7d,EAEd8d,GAAgBb,KAAqB9iB,GAAYujB,GACjDK,GAAcT,aAAW,EAAXA,EAAanf,QAAS,EACpC6f,EAAWpgB,EAAKO,OAASP,EAAKA,EAAKO,OAAO,GAAK,KAC/C8f,EAAgBJ,EAAcpd,EAAKyc,EAGrCW,IACFpB,EAAMzD,KAAKvY,GAEXkc,EAAkB,EAElBC,EAAmB,EACnBC,EAAoB,CAAC,GAEvB,IAIIrjB,EAJE0kB,EAASD,EAAgBxB,EAAM3W,QAAQmY,GAAiB,KACxDE,EAAczf,EAAKP,OACnB1E,EAAMijB,EAGPU,KACH5jB,EAAW,CAAC,GACH0kB,OAASA,EAClB1kB,EAAS4kB,eAAiBP,EAAcK,EAASrB,EAAkB7c,IAAS,EAC5ExG,EAAS6kB,UAAY,GAAHvG,QAAAhP,EAAAA,EAAAA,GAAQlL,EAAK8Y,MAAM,GAAG7gB,KAAI,SAAA4K,GAAE,OAAIzC,EAAMyC,GAAI0c,OAAO,KAAC,CAAEA,IAClEQ,EACFnkB,EAAS8kB,aAAe3B,EACfiB,IACTpkB,EAAS+kB,cAAgB3B,IAI7Ble,EAAKsa,KAAKvY,GACVzC,EAAMyC,GAAM,CACV+d,KAAMpgB,EACNhC,MAAO+hB,EACP1d,GAAIA,EACJT,KAAMA,EACNye,OAAQT,EACRU,WAAYV,EAAWhgB,EAAMggB,GAAUhe,KAAO,KAC9C7F,SAAUmjB,EACVH,QAAAA,EACAD,OAAQe,EACRC,OAAAA,EACAtgB,KAAMA,EAAKka,OAAOrX,GAClBmb,IAAKA,EACL+C,QAASxkB,EACT2jB,aAAAA,EACAxC,SAAUA,GAAY0B,EAEtBvjB,IAAMsjB,EAAkB,KAAOtjB,EAE/BmlB,cAAef,GAAe1jB,OAAW/B,EACzCymB,uBAAwBhB,EAAc,OAAIzlB,EAE1CoB,SAAAA,EAEA6jB,UAAWA,EACXyB,KAAMX,EAENY,MAAO5kB,GAYT,IAAI6kB,EAAS,EACTC,EAAQ,EACPlC,IACHL,GAAiB,EACjBsC,GAAU,GACNjB,GAAgBV,GAAcK,IAEhCuB,GAAS,GAEN7B,GAAWS,IACdD,GAAWhB,IAEXe,GAAUhB,IACVE,EAAkB7c,IAAS6c,EAAkB7c,IAAS,GAAK,IAG3Dkd,GAAUY,GACZ9f,EAAMkf,GAAQ2B,yBAIhB,IAAIK,EAAgB,EAChBC,EAAY,EAChB,GAAIpB,EAAa,CACf,IAAIqB,EAAa,EACjBjlB,EAAStE,KAAI,SAAC4lB,EAAOW,GACnB,GAAIX,EAAO,CACTqB,EACErB,EACA7d,EAAKka,OAAOrX,GACZsc,GAAmBM,EAAWL,GAAgB1B,EAAU2B,GAAmBS,EAC3E9B,EAAM,EAAGqC,EAAemB,GAE1B,IAAMC,EAAYrhB,EAAMoe,GAExB8C,EAAgBhN,KAAKrL,IAAIqY,EAAeG,EAAUJ,OAAS,GAC3DE,GAAaE,EAAUL,OACvBI,GACF,CACF,GACF,CAGAJ,GAAUG,EACVF,GAASC,EACT,IACMI,EADa5gB,EAAKP,OACKggB,EACvBoB,EAAUxC,EAAkB,KAAOtjB,EAAMulB,EAE/C1d,OAAOke,OAAOxhB,EAAMyC,GAAK,CACvBwe,MAAO9kB,EAAW8kB,OAAQ7mB,EAC1BknB,QAAAA,EACAN,OAAAA,EACAO,OAAAA,GAEJ,CAGAzC,CAAajC,EAAM,IAAI,GAAO,GAAO,EAAO,EAAG,KAAM,MAGrD,IAAK,IAAI9G,EAAI,EAAIA,EAAIrV,EAAKP,OAAS4V,IAAK,CACtC,IAAM0L,EAAS1L,EAAI,EAAIrV,EAAKqV,EAAE,GAAK,KAC7B2L,EAAS3L,EAAKrV,EAAKP,OAAO,EAAKO,EAAKqV,EAAE,GAAK,KAC7C3V,EAAOJ,EAAMU,EAAKqV,IACtB3V,EAAKuhB,KAAOF,EACZrhB,EAAKqY,KAAOiJ,CACd,CAEA,MAAO,CAAChhB,KAAAA,EAAMV,MAAAA,EAAOye,MAAAA,EACvB,EAQamD,GAAoC,SAAC/E,GAChD,IAAKA,EACH,OAAQ,EACV,IAAIgF,EAAM,EA2BV,OAzBA,SAAS1E,EAAc/c,EAAMR,EAAMge,GACjC,IAAInb,EAAItG,EAAU6F,EACM,mBAAb5B,EAAK2c,KACdta,EAAKrC,EAAK2c,IAAI,MACd5gB,EAAWiE,EAAK2c,IAAI,aACpB/a,EAAO5B,EAAK2c,IAAI,UAEhBta,EAAKrC,EAAKqC,GACVtG,EAAWiE,EAAK0hB,UAChB9f,EAAO5B,EAAK4B,MAGd6f,IAEI1lB,GAHwB,cAAR6F,GAIlB7F,EAAStE,KAAI,SAAC4lB,EAAOC,GACfD,GACFN,EAAaM,EAAO7d,EAAKka,OAAOrX,GAAKmb,EAAM,EAE/C,GAEJ,CAEAT,CAAaN,EAAM,GAAI,GAEhBgF,EAAM,CACf,EAOaE,GAA2B,SAAClF,GACvC,IAAKA,EACH,OAAQ,EACV,IAAIgF,EAAM,EA4BV,OA1BA,SAAS1E,EAAc/c,EAAMR,EAAMge,GACjC,IAAInb,EAAItG,EAAU6F,EACM,mBAAb5B,EAAK2c,KACdta,EAAKrC,EAAK2c,IAAI,MACd5gB,EAAWiE,EAAK2c,IAAI,aACpB/a,EAAO5B,EAAK2c,IAAI,UAEhBta,EAAKrC,EAAKqC,GACVtG,EAAWiE,EAAK0hB,UAChB9f,EAAO5B,EAAK4B,MAGF,QAARA,GAA0B,cAARA,EAEpB6f,IACS1lB,GACTA,EAAStE,KAAI,SAAC4lB,EAAOC,GACfD,GACFN,EAAaM,EAAO7d,EAAKka,OAAOrX,GAAKmb,EAAM,EAE/C,GAEJ,CAEAT,CAAaN,EAAM,GAAI,GAEhBgF,CACT,EAKaG,GAAe,SAACnF,GAAuD,IAAjDoF,IAAY/hB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASgiB,IAAgBhiB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAClEgd,EAAUL,EA+Bd,OA7BA,SAASM,EAAc/c,EAAM4d,GACvBiE,GAAgB7hB,EAAKR,aAChBQ,EAAKR,KAEVqiB,IAAiBC,GAAoBlE,UAChC5d,EAAKqC,GAEd,IAAI0f,EAAa/hB,EAAK+hB,WAClBA,GACgC,MAA9BA,EAAWC,wBACND,EAAWC,gBAItB,IAAMjmB,EAAWiE,EAAK0hB,UACtB,GAAI3lB,EAAU,CACZ,IAAK,IAAIsG,KAAMtG,EACTA,EAASsG,IACX0a,EAAahhB,EAASsG,GAAKA,GAG3Byf,IACF9hB,EAAK0hB,UAAYxe,OAAO+e,OAAOlmB,GAEnC,CACF,CAEAghB,CAAaN,EAAM,MAEZK,CACT,EAEaoF,GAAkB,SAACzF,GAC9B,IAAI0F,EAAO,GACLpmB,EAAW0gB,EAAKE,IAAI,aAiB1B,OAhBI5gB,GACFA,EAAStE,KAAI,SAAC4lB,GACZ,IACI+E,EADEzrB,EAAQ0mB,EAAMF,MAAM,CAAC,aAAc,UAErCxmB,GAAuB,GAAdA,EAAM+G,MACjB0kB,EAAYzrB,EAAMgmB,IAAI,GAClBpQ,MAAMC,QAAQ4V,IAAkC,GAApBA,EAAUriB,SACxCqiB,EAAY,OAGdA,EAAY,KAEdD,EAAO,GAAHzI,QAAAhP,EAAAA,EAAAA,GAAOyX,GAAI,CAAEC,GACnB,IAGKD,CACT,EAEaE,GAAc,SAAC5F,GAAI,OAAOA,EAAKE,IAAI,cAA8C,GAA9BF,EAAKE,IAAI,aAAajf,IAAS,EAElFiiB,GAAc,SAAClD,EAAMjd,GAAI,OAAKid,EAAKU,MAAMtB,GAAerc,EAAM,cAAc9B,KAAO,CAAC,EAGpF4kB,GAAqB,SAACla,GACjC,GAAIA,SAAAA,EAAG+N,KAAM,KAAAoM,EACLC,EAAMpa,SAAO,QAANma,EAADna,EAAG+N,YAAI,IAAAoM,OAAA,EAAPA,EAAAlO,KAAAjM,GACZ,OAAIoa,SAAAA,EAAKC,KAEAra,EAAEsa,eAGFF,CAEX,CACE,OAAOpa,CAEX,ECjfaua,GAAU,SAACC,GAAyD,IAA1CC,IAAK/iB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASgiB,IAAgBhiB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACnE,GAAK8iB,EAAL,CACA,IAAInG,EAAOmG,EAGX,OAFAnG,EAAOA,EAAKtG,OACLyL,GAAanF,EAAMoG,EAAOf,EAHG,CAKtC,EAEagB,GAAW,SAACC,GACvB,GAAIC,GAAgBD,GAClB,OAAOA,EACF,GAAIE,GAAOF,GAChB,OAAOxF,GAAe2F,GAAcH,IAC/B,GAAsB,iBAAXA,GAAuBA,EAAQI,WAAW,WAG1D,MAAM,IAAIC,MAAM,4IACX,GAAuB,iBAAZL,EAChB,OAAOxF,GAAe2F,GAAcvoB,KAAKC,MAAMmoB,KAC1C,MAAM,IAAIK,MAAM,mBACzB,EAEaJ,GAAkB,SAACvG,GAC9B,OAAOxH,EAAAA,GAAIC,MAAMuH,EACnB,EAEawG,GAAS,SAACxG,GACrB,MAAsB,WAAfhT,EAAAA,EAAAA,GAAOgT,KAAkC,SAAbA,EAAK7a,MAAgC,gBAAb6a,EAAK7a,KAClE,EAEO,SAASshB,GAAczG,GAqC5B,OApCY4G,EAAAA,EAAAA,IAAO5G,GAAM,SAAU5e,EAAKlH,EAAO6I,GAC7C,IASI8jB,EATEC,EAAY/jB,GACbA,EAAKO,OAAS,GACU,UAAxBP,EAAKA,EAAKO,OAAO,IACO,SAAxBP,EAAKA,EAAKO,OAAO,GAChByjB,EAAchkB,GACfA,EAAKO,OAAS,GACU,UAAxBP,EAAKA,EAAKO,OAAO,IACO,eAAxBP,EAAKA,EAAKO,OAAO,GAGtB,GAAW,cAAPlC,EAAqB,CACvBylB,EAAW3sB,EAAM+rB,eAKjB,IAAK,IAAI/M,EAAI,EAAIA,EAAI,EAAIA,IAAK,KAAA8N,EAAAC,EAAAC,EACY,QAAf,QAArBF,EAAAH,EAAS3G,IAAI,gBAAQ,IAAA8G,GAAK,QAALC,GAArBC,EAAAF,GAAuB9G,WAAG,IAAA+G,OAAA,EAA1BA,EAAArP,KAAAsP,EAA6BhO,MAC/B2N,EAAWA,EAASxF,MAAM,CAAC,QAASnI,QAAI3b,GAE5C,CACF,MACEspB,EADSC,EACEjB,GAAmB3rB,IACpB6I,EAAOgkB,EAAqB,SAAP3lB,IAAmBwY,EAAAA,GAAAA,SAAmBuN,UAAUjtB,GACpEA,EAAMc,IAAI6qB,IAAoBuB,SACzB,mBAAPhmB,EAEElH,EAAMwf,OACD,aAAPtY,GAAsBwY,EAAAA,GAAAA,SAAmBuN,UAAUjtB,GACjD,IAAI0f,EAAAA,GAAAA,WAAqB1f,EAAMc,KAAI,SAAA4lB,GAAK,MAAI,EAACA,aAAK,EAALA,EAAOV,IAAI,QAASkB,IAAQR,EAAM,KAE/EhH,EAAAA,GAAAA,SAAmBuN,UAAUjtB,GAASA,EAAMktB,SAAWltB,EAAM+rB,eAE1E,OAAOY,CACT,GAEF,C,0nDCjEA,IAGMQ,GAAgB,UAChBC,GAAe,SACfC,GAAU,CAAC,KAAM,MACjBC,GAAa,CAAC,IAAK,KAAM,IAAK,MAC9BC,GAAiB,CACrB,qBAAsB,yBACtB,uBAAwB,4BAGpBC,GAAa,SAACC,GAClB,MAAO,CACLC,OAAQ,GACR9sB,SAAU6sB,aAAU,EAAVA,EAAY7sB,SAE1B,EAEa+sB,GAAoB,SAACC,EAAWztB,GAC3C,OAAO0tB,GAAmBD,EAAWztB,GAAQ,EAC/C,EAEa0tB,GAAqB,SAACD,EAAWztB,GAAgC,IAAxB2tB,IAAY3kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAE5D4kB,EAAOP,KACXO,EAAKntB,SAAW,CACdotB,oBAAoB,EACpBF,aAAAA,GAEF,IAAMG,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjD8qB,EAAOC,GAAUH,GACjBI,EAAST,EAAYU,GAAiBV,EAAWO,EAAMF,EAAgB,CAAC,OAAQ,QAAS,UAAWF,QAAQ1qB,EAC5GkrB,EAAUF,EAASlC,GAASkC,QAAUhrB,EAE5C,OAAIyqB,EACK,CAACS,EAASR,EAAKL,SAElBK,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,yCAA0C2K,EAAKL,QACvDa,EAEX,EAGMH,GAAY,SAACjuB,GACjB,IAAIquB,EAAY,CAAC,EACbC,EAAuB,CAAC,EAC5B,IAAK,IAAIC,KAASvuB,EAAOquB,UAAW,CAClC,IAAMG,EAAWxuB,EAAOquB,UAAUE,GAClC,GAAiC,iBAAtBC,EAASC,UAAuB,CAEzC,IAAMC,EAAMF,EAASC,UAAY,IAAM7Q,EAAiB4Q,GACnDH,EAAUK,KACbL,EAAUK,GAAO,IACnBL,EAAUK,GAAK5K,KAAKyK,EACtB,MAAO,GAAiC,iBAAvBC,EAASG,WAAwB,CAEhD,IAAMD,EAAMF,EAASG,WAAa,IAAM/Q,EAAiB4Q,GACpDH,EAAUK,KACbL,EAAUK,GAAO,IACnBL,EAAUK,GAAK5K,KAAKyK,GAEfD,EAAqBC,KACxBD,EAAqBC,GAAS,CAAC,GACjCD,EAAqBC,GAAS,CAC5B,SAAYC,EAASC,UAAUzB,GAAeuB,EAAOtB,IACrD,WAAcuB,EAASG,WACvB,4BAA+BH,EAASI,0BAE5C,CACF,CAEA,IAAIC,EAAe,CAAC,EACpB,IAAK,IAAIvjB,KAAWtL,EAAO6uB,aAGzBA,EAF8B7uB,EAAO6uB,aAAavjB,GACjBwjB,eAAiBxjB,EAAQyjB,eACvCzjB,EAGrB,IACyD8Y,EADrD4K,EAAQ,CAAC,EAAE3K,EAAAC,GACsB2K,GAAajvB,IAAO,IAAzD,IAAAqkB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA2D,KAAAyK,GAAA1hB,EAAAA,EAAAA,GAAA4W,EAAAvkB,MAAA,GAA/CsvB,EAAQD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,OAAE,EACFD,EAAWE,kBACbD,EAAK,IAAMD,EAAWX,UACkB,iBAAxBW,EAAWX,YAC3BY,EAAKD,EAAWX,WAEdY,IACGL,EAAMK,KACTL,EAAMK,GAAM,IACdL,EAAMK,GAAIvL,KAAKqL,GAEnB,CAAC,OAAAzK,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CAED,IAAA4K,EAAiCvvB,EAAOS,SAASguB,UAEjD,MAAO,CACLJ,UAAAA,EACAQ,aAAAA,EACAG,MAAAA,EACAQ,QAAS,CAAC,MANMD,EAAXE,YAAsBF,EAATG,WAOlBpB,qBAAAA,EAEJ,EAeMqB,GAAwB,SAACC,EAAW5B,EAAMJ,GAAkC,IAC5EiC,EADgDC,EAAgB9mB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAEvE,GAAIglB,SAAAA,EAAMM,qBACR,IAAK,IAALhO,EAAA,EAAAyP,EAA2B3jB,OAAOuR,QAAQqQ,EAAKM,sBAAqBhO,EAAAyP,EAAA9mB,OAAAqX,IAAE,CAAjE,IAAA0P,GAAAxiB,EAAAA,EAAAA,GAAAuiB,EAAAzP,GAAA,GAAOvZ,EAAGipB,EAAA,GAAEnwB,EAAKmwB,EAAA,GACpB,GAAyB,MAApBF,GAA4BA,EAAiBroB,SAASV,GAAO,CAChE,IAAMkpB,EAAeC,GAAgBrwB,EAAMswB,SAAUP,GAEjDK,EAAaG,QACVP,EAEAjC,EAAKL,OAAOzJ,KAAK,yCAADlB,OAA0CiN,EAAS7N,MAAK,SAAAY,OAAQ7b,IAFtE8oB,EAAWI,EAI1BJ,EAAgB,MAAIhwB,EAAM8uB,WAE9B,CACF,CAGF,OAAOkB,CACT,EAaMK,GAAkB,SAAlBA,EAAmBC,EAAUP,GAAyE,IAA9DC,EAAQ7mB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,OAAS,EAAM,QAAW,KAAM,OAAU,IAClG,GAAgB9F,MAAZitB,GAAsCjtB,MAAb0sB,EAE3B,OADAC,EAASO,OAAQ,EACVP,EAGT,IAAMQ,EAAQjkB,OAAOC,KAAK8jB,GACpBG,EAAQlkB,OAAOC,KAAKujB,GAC1B,GAAIS,EAAMpnB,SAAWqnB,EAAMrnB,OAGzB,OADA4mB,EAASO,OAAQ,EACVP,EAET,IAAK,IAAI3oB,EAAQ,EAAGA,EAAQmpB,EAAMpnB,OAAQ/B,IAAS,CACjD,IAAMH,EAAMspB,EAAMnpB,GACZrH,EAAQswB,EAASppB,GACvB,GAAIA,IAAQupB,EAAMppB,GAGhB,OADA2oB,EAASO,OAAQ,EACVP,EACF,GAAIhwB,IAAUmtB,IAAiBrM,GAAYiP,EAAU7oB,IAE1D8oB,EAASU,QAAUX,EAAU7oB,QACxB,GAAIlH,IAAUotB,GAEnB4C,EAASW,OAAO1M,KAAK8L,EAAU7oB,SAC1B,GAAqB,YAAjB4L,EAAAA,EAAAA,GAAO9S,IAAgC,OAAVA,GAAkB4V,MAAMC,QAAQ7V,GAEtEgwB,EAAWK,EAAgBrwB,EAAO+vB,EAAU7oB,GAAM8oB,QAC7C,GAAIhwB,IAAU+vB,EAAU7oB,GAG7B,OADA8oB,EAASO,OAAQ,EACVP,CAEX,CACA,OAAOA,CACT,EAGM1B,GAAmB,SAAnBA,EAAoBvN,EAAOoN,EAAMhuB,EAAQywB,EAAe7C,GAAuF,IAC/IvM,EAAIgK,EAQJjI,EAT8DtX,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU0nB,EAAW1nB,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAEytB,EAAM3nB,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAE0tB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAE9G2X,GAAYC,KACdS,EAAKjV,OAAOC,KAAKuU,GAAO,GACxByK,EAAOzK,EAAMS,GACR5L,MAAMC,QAAQ2V,KACjBA,EAAO,CAAEA,KAIb,IAAMwF,EAAkBjD,EAAKL,OAAOtkB,OAE7B6nB,EAAY9wB,EAAOS,SAASguB,UAA5BqC,SACDC,EAAkB,KAAN1P,GAA6B,GAAfgK,EAAKpiB,QAAeoiB,EAAK,IAAM1K,GAAY0K,EAAK,KAAO2C,EAAKwB,QAAQ/nB,SAAS2E,OAAOC,KAAKgf,EAAK,IAAI,IAE5H+E,EAAQT,GAAsB/O,EAAOoN,EAAMJ,GAC7CwC,KAEF/E,EAAO,IACF,GAAK+E,EAAMG,QAChBH,EAAMI,OAAOlO,SAAQ,SAAA0O,GAAG,OAAI3F,EAAKvH,KAAKkN,EAAI,IAE1C3P,EAAK+O,EAAMpO,OAEb,IAAMiP,EAAc,KAAN5P,IAAc0P,EACtB3K,EAAW0K,GAAYzP,GAAMyP,EAE7B5I,EADWuI,EAAchpB,SAAS,UAEpC2e,EACFhD,EAAM+K,EAAiB9C,EAAK,GAAI2C,EAAMhuB,EAAQywB,EAAe7C,EAAM9hB,EAAK4kB,EAAaC,EAAQC,GAAa,GACjGK,EAET7N,EAAM+K,EAAiB9C,EAAK,GAAI2C,EAAMhuB,EAAQywB,EAAe7C,GAAO9hB,EAAK4kB,EAAaC,EAAQC,GACtFH,EAAchpB,SAAS,OAE/B2b,EAAM8N,GAAgB7P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,IACpDO,GAAe9P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK4kB,EAAa9C,EAAMgD,IAC/DQ,GAAcxQ,EAAO8P,EAAaC,EAAQ3wB,EAAQ4tB,IAEnD6C,EAAchpB,SAAS,YACzB2b,EAAMiO,GAAUhQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,IAE1C1tB,MAAPkgB,GAAoBqN,EAAchpB,SAAS,WAC7C2b,EAAMkO,GAAYjQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,GAAa,IAEzD1tB,MAAPkgB,GAAoBqN,EAAchpB,SAAS,UAC7C2b,EAAMmO,GAAUlQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,IAEjDxN,GACE8E,IAAW,CAAC,QAAS,gBAAgBzgB,SAAS2b,EAAItY,QACpDsY,EAAMoO,GAAkBpO,EAAKpjB,KAKnC,IAAMyxB,EAAiB7D,EAAKL,OAAOtkB,OASnC,MARU,KAANoY,QAAqBne,IAARkgB,GAAqBqO,GAAkBZ,GACtDjD,EAAKL,OAAOzJ,KAAK,qBAADlB,OAAsB/e,KAAKvD,UAAUsgB,KAGnDwF,IACFhD,EAAI6H,WAAW7E,UAAW,GAGrBhD,CACT,EAGMgO,GAAgB,SAACtiB,EAAK4hB,EAAaC,EAAQ3wB,EAAQ4tB,GAAS,IAAA8D,EAGhE,QAFYxuB,IAAR4L,IACFA,EAAM4hB,aAAW,EAAXA,EAAaiB,mBACTzuB,IAAR4L,EAAJ,CACA6hB,EAASA,IAAUD,aAAW,EAAXA,EAAakB,YAChC,IAAMC,EAAe7xB,EAAOya,QAAQkW,GAC9BmB,EAAYpB,aAAW,EAAXA,EAAa5lB,KAE/B,IAAIgnB,GAAcD,EAAlB,CAKA,IAAIlR,GAAY7R,GAAhB,CAMA,GAAkB,SAAdgjB,GAAuC,iBAARhjB,EAAkB,CACnD,IAAOijB,EAAY/U,KAAKC,MAAMnO,EAAM,GAAK,IAAM,GAArCkjB,EAAyChV,KAAKC,MAAMnO,EAAM,IAAM,GAA7DyV,EAAiEzV,EAAM,GAC9ES,EAAcsiB,EAAatiB,YACjC,GAAIA,EAAa,CACf,IAAM0iB,EAAU,IAAIvV,KAAK5N,GACzBmjB,EAAQC,gBAAgB,GACxBD,EAAQE,SAASJ,GACjBE,EAAQG,WAAWJ,GACnBC,EAAQI,WAAW9N,GACnBzV,EAAMnQ,KAAOszB,GAASxiB,OAAOF,EAC/B,MACET,EAAM,GAAH8T,OAAMmP,EAAC,KAAAnP,OAAIoP,EAAC,KAAApP,OAAI2B,EAEvB,CAGA,GAAI,CAAC,OAAQ,YAAY9c,SAASqqB,IAAchjB,KAASA,aAAe4N,MACtE,IACE,IAAMuV,EAAU,IAAIvV,KAAK5N,GACrBmjB,aAAmBvV,MAAQuV,EAAQK,gBAAkBxjB,IACvDA,EAAMmjB,EAEV,CAAE,MAAM9kB,GACNygB,EAAKL,OAAOzJ,KAAK,uBAADlB,OAAwB9T,EAAG,aAC3CA,OAAM5L,CACR,CAIF,GAAI4L,aAAe4N,MAAQgU,EAAa,CACtC,IAAMnhB,EAAcsiB,EAAatiB,YAC7BA,IACFT,EAAMnQ,KAAOmQ,GAAKW,OAAOF,GAE7B,CAEA,IAAIgjB,EAMJ,GALIzjB,SAAO4hB,GAA0B,QAAfgB,EAAXhB,EAAa8B,qBAAa,IAAAd,GAA1BA,EAA4BtW,aAErCmX,EADa9c,MAAMC,QAAQ5G,GAAOA,EAAM,CAACA,IAIvC+iB,SAAAA,EAAcY,gBAChB,IACE3jB,EAAM+iB,EAAaY,gBAAgBlV,KAAKvd,EAAOoc,IAAKtN,EACtD,CAAE,MAAM3B,GAAG,IAAAulB,EACT9E,EAAKL,OAAOzJ,KAAK,sBAADlB,OAAuB9T,EAAG,iCAAA8T,OAAgC+N,EAAM,MAAA/N,OAAe,QAAf8P,EAAKvlB,aAAC,EAADA,EAAGwlB,eAAO,IAAAD,EAAAA,EAAIvlB,IACnG2B,OAAM5L,CACR,CAGF,MAAO,CACL6J,SAAU,QACVlN,MAAOiP,EACP8jB,UAAWf,aAAY,EAAZA,EAAc/mB,KACzBynB,gBAAAA,EA1DF,CAFE3E,EAAKL,OAAOzJ,KAAK,8BAADlB,OAA+B/e,KAAKvD,UAAUwO,IAHhE,MAFE8e,EAAKL,OAAOzJ,KAAK,sBAADlB,OAAuBkP,GANF,CAyEzC,EAEMZ,GAAkB,SAAC7P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACxE,GAAIglB,EAAKwB,QAAQ/nB,SAAS4Z,IAAyB,iBAAXgK,EAAK,GAAgB,KAAAwH,EACrDrd,EAAQsd,GAAe9yB,EAAQqrB,EAAK,GAAIuF,GACxCF,EAAcqC,GAAe/yB,EAAQwV,GAC3C,OAAKkb,GAA6B,QAAdmC,EAACjF,EAAKntB,gBAAQ,IAAAoyB,GAAbA,EAAehF,mBAK7B,CACL9gB,SAAU,QACVlN,MAAO2V,EACPod,UAAWlC,aAAW,EAAXA,EAAa5lB,WAPxB8iB,EAAKL,OAAOzJ,KAAK,uBAADlB,OAAwBpN,GAS5C,CAGF,EA4FM2b,GAAiB,SAAC9P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,GAAsD,IAAjD4kB,EAAW1nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM4kB,EAAI5kB,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAE0tB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC3F,GAAKqY,EAAL,CACA,IAAIsK,EAAMqH,EAASC,EACb3D,EAA2B,UAANjO,EAC3B,GAAIiO,EAAmB,CACrB,IAAI7R,EAAKyV,EAAKC,GAAAC,EAAAA,GAAAA,GACS/H,GAAtB5N,EAAG0V,EAAA,GAAExH,EAAIwH,EAAA,GAAKD,EAAIC,EAAA3R,MAAA,GACnBwR,EAAU,CAACvV,GAAGmF,QAAAhP,EAAAA,EAAAA,GAAKsf,GACrB,MACEvH,EAAOtK,EACP2R,EAAU3H,EAGZ,IAAMgE,GAAMC,EAAoB,IAAM,IAAM3D,EACtC0H,GAAa3C,aAAW,EAAXA,EAAa5lB,QAAQ4lB,aAAW,EAAXA,EAAa2C,YAC/CC,GAAYtF,EAAKgB,MAAMK,IAAO,IAAIhe,QAAO,SAAAzQ,GAAC,OAC7C8vB,GAAc6C,GAAcvzB,EAAQY,GAAGyyB,YAAcA,CAAiB,IAEzE,GAAIC,EAASrqB,OACXgqB,EAAUK,EAAS,OACd,CACL,IAE0CE,EAFpCliB,GAACsU,EAAAA,EAAAA,GAAA,GAAKvE,EAAKgK,GAAMoI,EAAAnP,GAED2K,GAAajvB,IAAO,IAA1C,IAAAyzB,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAA4C,KAAAiP,GAAAlmB,EAAAA,EAAAA,GAAAgmB,EAAA3zB,MAAA,GAAhC8kB,EAAC+O,EAAA,GAAEC,EAAED,EAAA,GACf,GAAIC,EAAGlB,mBAAoBY,GAAaM,EAAGN,YAAcA,GAAoB,CAC3E,IAAIO,OAAM,EACV,IACEA,EAASD,EAAGlB,gBAAgBnhB,EAC9B,CAAE,MAAMtD,GACN,CAEE4lB,IACFX,EAAUtO,EACVqO,EAAUY,EAEd,CACF,CAAC,OAAAlP,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACH,CACA,GAAKsO,GAGDA,EAAS,CACX,IAAM7D,EAAamE,GAAcvzB,EAAQizB,GACnCY,EAAUznB,OAAOC,KAAK+iB,EAAW0E,MAAQ,CAAC,GAC5CC,EAAUf,EAAQlR,QAAO,SAACC,EAAKjT,EAAKqT,GACtC,IAEI6R,EAFEC,EAASJ,EAAQ1R,GACjB+R,EAAY9E,EAAW0E,KAAKG,GAKlC,OAHIC,IACFF,EAAS7F,GAAiBrf,EAAKkf,EAAMhuB,EAAQ,CAAC,OAAQ4tB,GAAM,EAAOsG,EAAW,KAAMtD,SAEpE1tB,IAAX8wB,EAAoBxtB,GAAAA,GAAA,GAAOub,GAAG,IAAA6D,EAAAA,EAAAA,GAAA,GAAGqO,EAASD,IAAUjS,CAC7D,GAAG,CAAC,GAEJ,IAAK,IAAIkS,KAAU7E,EAAW0E,KAAM,CAClC,IAI4BK,EAJtBD,EAAY9E,EAAW0E,KAAKG,GAC9BD,EAASD,EAAQE,GACrB,QAAe/wB,IAAX8wB,EASF,QAPe9wB,KADf8wB,EAASE,aAAS,EAATA,EAAWvC,gBAElBqC,EAAS,CACPn0B,MAAOm0B,EACPjnB,SAAgB,QAANonB,EAAAH,SAAM,IAAAG,GAANA,EAAQxI,KAAO,OAAS,QAClCiH,UAAWsB,EAAUppB,YAGV5H,IAAX8wB,GACF,GAAIE,UAAAA,EAAWE,WAIb,YADAxG,EAAKL,OAAOzJ,KAAK,oBAADlB,OAAqBqR,EAAM,aAAArR,OAAYqQ,SAIzDc,EAAQE,GAAUD,CAGxB,CAEA,MAAO,CACLjnB,SAAU,OACVlN,MAAO,CACL8rB,KAAMsH,EACNa,KAAMC,GAERnB,UAAWxD,EAAWiE,WAE1B,CAtFyB,CAyF3B,EAGM/B,GAAc,SAACjQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,GAAkD,IA1hBjFvK,EA0hBqCuN,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9DsC,EAAU0iB,EAAKa,aAAaxN,GAC3BgT,EAAkBr0B,EAAOS,SAAzB4zB,eAGP,GAAI/oB,EAAS,CACX,IACMrG,EAAWomB,EACd1qB,KAAI,SAAA2Q,GAAC,OAAI6c,GAAiB7c,EAAG0c,EAAMhuB,EAAQ,CAAC,OAAQ,SAAU4tB,GAAM,EAAO,KAAM,KAAMgD,EAAY,IACnGvf,QAAO,SAAA0L,GAAC,YAAU7Z,IAAN6Z,CAAe,IAC3B+E,QAAO,SAACC,EAAKhF,GAAC,OAAAvW,GAAAA,GAAA,GAAUub,GAAG,IAAA6D,EAAAA,EAAAA,GAAA,GAAG7I,EAAExR,GAAMwR,GAAC,GAAI,CAAC,GACzCuX,EAAgBloB,OAAO+e,OAAOlmB,GACjCtE,KAAI,SAAA2Q,GAAC,IAAAijB,EAAAC,EAAA,MAA+B,UAA3BljB,SAAa,QAAZijB,EAADjjB,EAAG2Z,kBAAU,IAAAsJ,OAAA,EAAbA,EAAeE,YAAuBnjB,SAAa,QAAZkjB,EAADljB,EAAG2Z,kBAAU,IAAAuJ,OAAA,EAAbA,EAAehf,MAAK,IACnEnE,QAAO,SAAAsT,GAAC,IAAA+P,EAAA,OAAI/P,SAAW,QAAV+P,EAAD/P,EAAGld,gBAAQ,IAAAitB,OAAA,EAAXA,EAAAnX,KAAAoH,EAAc0P,EAAe,IACtCM,EAA8BvoB,OAAOsR,aAxiB5B2F,EAyiBHiR,EAziBW7e,MAAMmf,KAAK,IAAIC,IAAIxR,KAyiBf1iB,KAAI,SAAAgkB,GAC3B,IAAMmQ,EAAQnQ,EAAEzlB,MAAMm1B,GAChBU,EAAO3oB,OAAOsR,YAClBoX,EAAMtT,MAAM,GAAI,GACb7gB,KAAI,SAACgkB,EAAG9F,EAAGiW,GAAK,SAAAlS,QAAAhP,EAAAA,EAAAA,GAASkhB,EAAMtT,MAAM,EAAG3C,IAAE,CAAE8F,GAAC,IAC7ChkB,KAAI,SAAAq0B,GAAE,MAAI,CAACA,EAAGn0B,KAAKwzB,GAAiBtB,GAAe/yB,EAAQg1B,GAAI,IAC/D3jB,QAAO,SAAAhP,GAAA,IAAAyD,GAAA0H,EAAAA,EAAAA,GAAAnL,EAAA,GAAMsxB,GAAF7tB,EAAA,GAAIA,EAAA,UAAkB,WAAZ6tB,aAAE,EAAFA,EAAI7oB,KAAgB,KAE9C,MAAO,CAAC6Z,EAAGvY,OAAOC,KAAK0oB,GACzB,KASE9J,EAAa,CACfgK,YAAa3pB,EACbQ,IAAKA,GAEDP,EAAKwb,IAEP6D,EAAY,CAAC,EACbsK,EAAY,CAAC,EAuDjB,OAtDA9oB,OAAOuR,QAAQ1Y,GAAUtE,KAAI,SAAAqF,GAAY,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAVpF,EAAC6C,EAAA,GAAE6N,EAAC7N,EAAA,GACjC,GAAe,UAAX6N,aAAC,EAADA,EAAGxG,OAA8B,eAAXwG,aAAC,EAADA,EAAGxG,MAE3B8f,EAAUhqB,GAAK0Q,MACV,KAAA6jB,EACC3f,EAAQlE,SAAa,QAAZ6jB,EAAD7jB,EAAG2Z,kBAAU,IAAAkK,OAAA,EAAbA,EAAe3f,MACvB4f,EAAiBT,EAA4Bnf,IAAU,GACvD6f,EAAaD,EAAeA,EAAensB,OAAS,GAC1D,GAAKosB,EAKE,CAEL,IAAIC,EAAK1K,EACL2K,EAAmBC,GAAc5E,EAAa5wB,GAC5Cy1B,EAAYD,GAAcH,EAAYr1B,GACzBse,EAAaiX,EAAkBE,EAAUjU,MAAM,EAAG+T,EAAiBtsB,WAEpFssB,EAAmB,IACOF,EACzBn2B,MAAMm1B,GACN7S,MAAM+T,EAAiBtsB,QACvBtI,KAAI,SAACgkB,EAAG9F,EAAGiW,GAAK,MAAK,GAAAlS,QAAAhP,EAAAA,EAAAA,GAAI2hB,IAAgB3hB,EAAAA,EAAAA,GAAKkhB,EAAMtT,MAAM,EAAG3C,IAAE,CAAE8F,IAAG9jB,KAAKwzB,EAAe,IACxF1zB,KAAI,SAACgkB,GAAC,MAAM,CAACA,EAAAA,EAAGgP,GAAIZ,GAAe/yB,EAAQ2kB,IAAM,CAAC,EAAE,IACpDtT,QAAO,SAAArM,GAAI,MAAkB,WAAlBA,EAAF2uB,GAAY7oB,IAAiB,IACrBnK,KAAI,SAAAiZ,EAAmBiF,GAAM,IAApB6W,EAAE9b,EAAL+K,EAAWgR,EAAG/b,EAAP+Z,GAC3BiC,EAAUV,EAAUQ,GACnBE,IACHA,EAAU7O,IACVmO,EAAUQ,GAAME,EAChBN,EAAGM,GAAW,CACZ9qB,KAAM,aACNS,GAAIqqB,EACJhL,UAAW,CAAC,EACZK,WAAY,CACVgK,YAAa3pB,EACbQ,KAAK,EACL0J,MAAOkgB,EACPjB,SAAU,QACVoB,KAAMF,EAAIE,QAIhBP,EAAKA,EAAGM,GAAShL,SACnB,IACA0K,EAAG10B,GAAK0Q,CACV,MAtCMA,IACFsZ,EAAUhqB,GAAK0Q,EAsCrB,CACF,IAIO,CACLxG,KA1FS,QA2FTS,GAAIA,EACJqf,UAAWA,EACXK,WAAYA,EAEhB,CAGF,EA+BMuG,GAAoB,SAACsE,EAAM91B,GAAwB,IAAhB8L,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1C,MAAO,CACL8B,KAAM,QACNS,GAAIwb,IACJ6D,WAAShF,EAAAA,EAAAA,GAAA,GAAKkQ,EAAKvqB,GAAKuqB,GACxB7K,WAAY,CACVgK,YAAac,GAAmB/1B,GAChC8L,IAAKA,GAGX,EAaMkqB,GAAa,SAAC3U,EAAI4U,EAAO5K,EAAMuF,EAAa5C,EAAMhuB,EAAQ4tB,GAAS,IAAAsI,EAGjEC,EAA8B/I,GACjCzsB,KAAI,SAACy1B,GAAM,IAAAC,EAAA,OAA6B,QAA7BA,EAAKr2B,EAAOquB,UAAU+H,UAAO,IAAAC,OAAA,EAAxBA,EAA0B1H,UAAU,IACpDlnB,SAAS4Z,GACNiV,EAAWt2B,EAAOS,SAAS81B,eAAe9uB,SAAS4Z,KAAQ8U,EAC7DpY,EAAcuY,EAAW,EAAIL,EAAQ,EACrCK,EACFvY,EAAc,EACPmP,GAAQzlB,SAAS4Z,IAAsB,GAAftD,GAAgC,OAAZsN,EAAK,KACxD4K,EAAQ,EACRlY,EAAc,EACdsN,EAAO,CAACA,EAAK,KAGf,IAAMqD,EAAMrN,EAAK,IAAMtD,EACnByY,EAASxI,EAAKK,UAAUK,GAC5B,GAAK8H,EAAL,CAGA,IAAIjG,EAASC,EAAS,GACtB,GAAIrD,GAAW1lB,SAAS4Z,IAAgB,GAAT4U,EAC7B1F,EAAUlF,EAAK,GACfmF,EAAS,CAAEnF,EAAK,GAAIA,EAAK,QACpB,KAAAoL,EACkBpL,EAAIqL,GAAAtD,EAAAA,GAAAA,GAAAqD,GAA1BlG,EAAOmG,EAAA,GAAKlG,EAAMkG,EAAAlV,MAAA,EACrB,CAEA,GAAKb,GAAY4P,GAAjB,CAKA,IAAMoG,EAvXW,SAACL,EAAU/F,EAASuD,EAAM9F,EAAMhuB,GAAqE,IAUlHwV,EAAOif,EAAUmC,EAAQlO,EAV4B5c,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM0nB,EAAW1nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM4kB,EAAI5kB,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAE0tB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACzGpI,EAAIwL,OAAOC,KAAKkkB,GAAS,GACzBjf,EAAIlF,OAAO+e,OAAOoF,GAAS,GAEzBsG,EAAS,SAACj2B,EAAG0Q,GACjB,OA6DoB,SAAC+P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACnEyM,MAAMC,QAAQ2V,KACjBA,EAAO,CAAEA,IACX,IAAMuI,EAAS1C,GAAgB7P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,GAClE,GAAIgD,EACF,MAAO,CACLa,SAAU,QACVjf,MAAOoe,EAAO/zB,MAIpB,CAxEWi3B,CAAgBl2B,EAAG0Q,EAAG0c,EAAMhuB,EAAQ8L,EAAK8hB,EAAMgD,IA0EnC,SAACvP,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,GAAsD,IAC9F8nB,EAASzC,GAAe9P,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EADQ9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAUA,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAa8F,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,MAE3F,GAAI4qB,EACF,MAAO,CACLa,SAAU,OACVjf,MAAOoe,EAAO/zB,MAIpB,CAlFOk3B,CAAen2B,EAAG0Q,EAAG0c,EAAMhuB,EAAQ8L,EAAK4kB,EAAa9C,EAAMgD,EAChE,EAEMC,EAAkBjD,EAAKL,OAAOtkB,OAE9B2qB,EAASiD,EAAOj2B,EAAG0Q,GAWzB,GAVIsiB,IACFpe,EAAQoe,EAAOpe,MACfif,EAAWb,EAAOa,UAEhB6B,IACF5N,GAAU,EACVkO,EAAS9C,EAAK,GACdA,EAAO,IAGA,UAALlzB,GAAiB6U,MAAMC,QAAQpE,IAAkB,GAAZA,EAAErI,OAAa,CACtD,IAAA+tB,EAA0B1lB,EAAC2lB,GAAAzpB,EAAAA,EAAAA,GAAAwpB,EAAA,GAAtB3lB,EAAM4lB,EAAA,GAAElV,EAAGkV,EAAA,GAAEC,EAAID,EAAA,GACtB,GAAItW,GAAYtP,IAAmB,GAAR6lB,GACtBvW,GAAYoB,IACZtM,MAAMC,QAAQqM,EAAI,OAAwB,GAAfA,EAAI,KAAK,IACpCpB,GAAYoB,EAAI,KAAK,KAA6B,eAAtBA,EAAI,KAAK,GAAQ,IAIhD,GAFAnhB,EAAIwL,OAAOC,KAAKgF,GAAQ,GACxBC,EAAIlF,OAAO+e,OAAO9Z,GAAQ,GACjB,UAALzQ,EAAe,CACjB,IAAAu2B,EAAsB7lB,EAAC8lB,GAAA5pB,EAAAA,EAAAA,GAAA2pB,EAAA,GAAlBxzB,EAAKyzB,EAAA,GAAE/lB,EAAM+lB,EAAA,GAClB,GAAIzW,GAAYhd,GAAQ,CAGtB,IAAM0zB,EAAcR,EAFpBj2B,EAAIwL,OAAOC,KAAK1I,GAAO,GACvB2N,EAAIlF,OAAO+e,OAAOxnB,GAAO,IAErB0zB,IACF7hB,EAAQ6hB,EAAY7hB,MACpBif,EAAW4C,EAAY5C,SACvBmC,EAASvlB,EACTqX,GAAU,EAEd,CACF,KAAO,CACL,IAAM2O,EAAcR,EAAOj2B,EAAG0Q,GAC1B+lB,IACF7hB,EAAQ6hB,EAAY7hB,MACpBif,EAAW4C,EAAY5C,SACvB/L,GAAU,EAEd,CAEJ,CACA,IAAM+I,EAAiB7D,EAAKL,OAAOtkB,OAKnC,GAHKuM,GAASic,GAAkBZ,GAC9BjD,EAAKL,OAAOzJ,KAAK,eAADlB,OAAgB/e,KAAKvD,UAAUiwB,KAE5C/a,EAEL,MAAO,CACLA,MAAAA,EAAOif,SAAAA,EAAUmC,OAAAA,EAAQlO,QAAAA,EAASoL,KAAAA,EAEtC,CAuTcwD,CAAWhB,EAAU/F,EAASC,EAAQxC,EAAMhuB,EAAQ,KAAM,KAAM4tB,EAAMgD,GAClF,GAAK+F,EAAL,CACA,IACEnhB,EACEmhB,EADFnhB,MAAOif,EACLkC,EADKlC,SAAUmC,EACfD,EADeC,OAAiB9C,GAChC6C,EADuBjO,QACvBiO,EADgC7C,MAE9BpD,EAAcqC,GAAe/yB,EAAQwV,GAC3C,GAAKkb,GAA6B,QAAdwF,EAACtI,EAAKntB,gBAAQ,IAAAy1B,GAAbA,EAAerI,mBAApC,CAKA,IAAIU,EAAQiI,EAAO,GACnB,GAAIA,EAAOvtB,OAAS,GAAKynB,GAAeA,EAAYrC,UAAW,CAI7D,GAAqB,IAFrBmI,EAASA,EACNnlB,QAAO,SAAAzQ,GAAC,OAAI8vB,EAAYrC,UAAU5mB,SAAS7G,EAAE,KACrCqI,OAET,YADA2kB,EAAKL,OAAOzJ,KAAK,gCAADlB,OAAiCpN,IAGnD+Y,EAAQiI,EAAO,EACjB,CAEA,MAAO,CACLhhB,MAAAA,EAAOif,SAAAA,EAAU/D,YAAAA,EAAanC,MAAAA,EAAOuF,KAAAA,EAAM8C,OAAAA,EAf7C,CAFEhJ,EAAKL,OAAOzJ,KAAK,qBAADlB,OAAsBpN,GANxB,CAHhB,MAFEoY,EAAKL,OAAOzJ,KAAK,0BAADlB,OAA2BvB,EAAE,MAAAuB,OAAK/e,KAAKvD,UAAU+qB,IAX3D,CAyCV,EAEMkG,GAAY,SAAZA,EAAalQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,GAA4D,IAAA2J,EAAtD3G,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMwuB,EAAqBxuB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC7F,GAAKqY,EAAL,CAEA,IAAMoW,EAAUrrB,OAAO+e,OAAOnrB,EAAO6uB,cAAcluB,KAAI,SAAAkZ,GAAe,OAAAA,EAAbiV,aAAgC,IAGnF4I,EA/EU,SAACrW,EAAI4U,EAAO5K,EAAMuF,EAAa5C,EAAMhuB,EAAQ4tB,GAC7D,IAAM+J,EAAUtK,GAAWO,GACvB1oB,EAAM8wB,GAAW3U,EAAI4U,EAAO5K,EAAMuF,EAAa5C,EAAMhuB,EAAQ23B,GACjE,GAAKzyB,EAKL,OAAOA,EAJL0oB,EAAKL,OAAOzJ,KAAK6T,EAAQpK,OAAO1sB,KAAK,OAAS,cAAJ+hB,OAAkBvB,EAAE,KAAAuB,OAAIqT,GAKtE,CAsEmB2B,CAAUvW,EAFbgK,EAAKpiB,OAEmBoiB,EAAMuF,EAAa5C,EAAMhuB,EAAQ4tB,GACvE,GAAK8J,EAAL,CACA,IAwBIG,EACAC,EAzBCtiB,EAAqDkiB,EAArDliB,MAAOif,EAA8CiD,EAA9CjD,SAAU/D,EAAoCgH,EAApChH,YAAanC,EAAuBmJ,EAAvBnJ,MAAOuF,EAAgB4D,EAAhB5D,KAAM8C,EAAUc,EAAVd,OAC1CmB,EAAoBhF,GAAe/yB,EAAQ4wB,GAE7CpC,EAAWxuB,EAAOquB,UAAUE,GAG1ByJ,IAFmBh4B,EAAOquB,UAAkB,QAATkJ,EAAC/I,SAAQ,IAAA+I,OAAA,EAARA,EAAUU,YAO9CzP,EAAkC,UAApBkI,EAAY5lB,KAE1BotB,EAA2C,WAA3BH,aAAiB,EAAjBA,EAAmBjtB,MACrCqtB,EAASH,MACTh4B,EAAOS,SAAS23B,wBAEf5P,IAAgBoO,IACfpO,GAAe0P,IAAkBV,GAIjCa,EAAUvsB,GAAOqsB,IAjBA,EAqBnBG,GAAY,EACVC,IAAiBv4B,EAAOS,SAAS23B,uBACvC,GAAyB,WAArB1H,aAAW,EAAXA,EAAa5lB,OAAoB8rB,EAAQ,CAC3CiB,EAAOzrB,OAAOC,KAAKuqB,GAAQ,GAC3BkB,EAAalB,EAAOiB,GACfpiB,MAAMC,QAAQoiB,KACjBA,EAAa,CAAEA,IAOjB,IADA,IAAI1H,EAAQT,GAAsBiH,EAAQ5I,EAAMJ,GACjC,KAARiK,IAAgBzH,KACK,KAARyH,GACK,GAArBC,EAAW7uB,QAAe6uB,EAAW,IAAMnX,GAAYmX,EAAW,KAC/D9J,EAAKwB,QAAQ/nB,SAAS2E,OAAOC,KAAKyrB,EAAW,IAAI,MAH1B,CAQ5BQ,GAAaA,EACb1B,EAASA,EAAO,KAChBiB,EAAOzrB,OAAOC,KAAKuqB,GAAQ,GAC3BkB,EAAalB,EAAOiB,GAEhBU,GAAgBd,EAAQhwB,SAASowB,IAA8B,GAArBC,EAAW7uB,SACvD2tB,EAASA,EAAOiB,GAAM,GACtBA,EAAOzrB,OAAOC,KAAKuqB,GAAQ,GAC3BkB,EAAalB,EAAOiB,IAItBzH,EADkBT,GAAsBiH,EAAQ5I,EAAMJ,IACtBwC,CAClC,CACK3a,MAAMC,QAAQoiB,KACjBA,EAAa,CAAEA,IAGb1H,KAEF0H,EAAa,IACF,GAAK1H,EAAMG,QACtBH,EAAMI,OAAOlO,SAAQ,SAAA0O,GAAG,OAAI8G,EAAWhU,KAAKkN,EAAI,IAEhD6G,EAAOzH,EAAMpO,MAEjB,CAGIqW,IACFvsB,GAAOA,EACPyiB,EAAQC,EAASyJ,WACjBzJ,EAAWxuB,EAAOquB,UAAUE,IAG9B,IAAMoC,EAAS6H,GAAoBx4B,EAAQwV,EAAO+Y,EAAO,MAEnDkK,EAAgB3E,EACnBnzB,KAAI,SAAA2Q,GAAC,OAAI6c,GAAiB7c,EAAG0c,EAAMhuB,EAAQ,CAAC,OAAQ4tB,GAAM,EAAO8C,EAAaC,EAAQC,EAAY,IACrG,IAAI6H,EAAcpnB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAErI,OAA/C,CAKA,IAAI/D,EAEA4sB,EAAYpB,aAAW,EAAXA,EAAa5lB,KAK7B,GAJkB,WAAdgnB,GAAwC,YAAdA,IAC5BA,EAAY,MAGW,WAArBpB,aAAW,EAAXA,EAAa5lB,OAAoB8rB,EAAQ,CAOhC,IAAA8B,EASX,QAfgCx1B,IAA5B8qB,EAAKa,aAAagJ,GAEpB3yB,EAAMosB,GAAYuG,EAAMC,EAAY9J,EAAMhuB,EAAQs4B,EAAW1K,EAAMpY,GAAO,IAG1EtQ,EAAMqsB,EAAUsG,EAAMC,EAAY9J,EAAMhuB,EAAQs4B,EAAW1K,EAAMpY,GAAO,MAErD,eAAbtQ,EAAI4F,OAAuC,QAAd4tB,EAAAxzB,EAAI+lB,kBAAU,IAAAyN,OAAA,EAAdA,EAAgBljB,SAAUA,IACzDtQ,EAtNyB,SAAC4wB,EAAMlF,EAAamH,EAAmB/3B,GAA0C,IAAlC63B,EAAI7uB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAW4I,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACrG,GAAK8sB,EACL,MAAO,CACLhrB,KAAM,aACNS,GAAIwb,IACJ6D,WAAShF,EAAAA,EAAAA,GAAA,GAAKkQ,EAAKvqB,GAAKuqB,GACxB7K,WAAY,CACVgK,YAAa4C,GAAQc,GAAwB34B,EAAQ+3B,GACrDjsB,IAAKA,EACL0J,MAAOob,GAGb,CA0MgBgI,CAA2B1zB,EAAKsQ,EAAOkb,EAAa1wB,IAE5DoM,OAAOke,OAAOplB,EAAI+lB,WAAY,CAC5BgK,YAAa0D,GAAwB34B,EAAQ0wB,OAI9CxrB,EACH,OAEFA,EAAI4F,KAAO,aACXsB,OAAOke,OAAOplB,EAAI+lB,WAAY,CAC5BzV,MAAOA,EACPqgB,KAAMnF,EAAYmF,KAClBgD,SAAUtK,IAEY,SAApBmC,EAAYmF,MACdzpB,OAAOke,OAAOplB,EAAI+lB,WAAY,CAC5BprB,MAAO44B,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEzR,KAAK,IACrCkN,SAAU0rB,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEvE,QAAQ,IAC3C6lB,UAAW6F,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEshB,SAAS,MAG7C9mB,IAEF5G,EAAMssB,GAAkBtsB,EAAKlF,EAAQ8L,GAEzC,MAAO,GAAyB,WAArB4kB,aAAW,EAAXA,EAAa5lB,OAAqB8rB,EAyBtC,CACL,IAAMkC,EAAqBL,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEihB,eAAe,IAAElhB,QAAO,SAAAC,GAAC,OAASpO,MAALoO,CAAc,IACzFihB,EAAkBuG,EAAmB7vB,OAAS6vB,EAAmB,QAAK51B,EAC5EgC,EAAM,CACJ4F,KAAM,OACNS,GAAIwb,IACJkE,WAAUzkB,GAAA,CACRgP,MAAOA,EACPif,SAAUA,EACVoE,SAAUtK,EACV1uB,MAAO44B,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEzR,KAAK,IACrCkN,SAAU0rB,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEvE,QAAQ,IAC3C6lB,UAAW6F,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEshB,SAAS,KACzCL,EAAkB,CAACA,gBAAAA,GAAmB,CAAC,KAG3CzmB,GAAO0rB,KACTtyB,EAAMssB,GAAkBtsB,EAAKlF,EAAQ8L,GAEzC,MA3CE5G,EAAM,CACJ4F,KAAM,aACNS,GAAIwb,IACJ6D,UAAW,CAAC,EACZK,WAAY,CACVgK,YAAa0D,GAAwB34B,EAAQ0wB,GAG7C5kB,KAAK,EACL+pB,KAAMnF,EAAYmF,KAClBrgB,MAAOA,EACPqjB,SAAUtK,IAGW,UAArBmC,EAAYmF,MACdzpB,OAAOke,OAAOplB,EAAI+lB,WAAY,CAC5BprB,MAAO44B,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEzR,KAAK,IACrCkN,SAAU0rB,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEvE,QAAQ,IAC3C6lB,UAAW6F,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEshB,SAAS,MAG7C9mB,IACF5G,EAAMssB,GAAkBtsB,EAAKlF,EAAQ8L,IAuBzC,OAAO5G,CA3FP,CA1F+B,CANN,CA4L3B,EAGMmsB,GAAY,SAAChQ,EAAIgK,EAAM2C,EAAMhuB,EAAQ8L,EAAK8hB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAClE,GAA0B,QAAtBqY,aAAE,EAAFA,EAAI0N,eAAR,CAEA,IAMMnE,EANOmO,GAAe1N,GAET1qB,KAAI,SAAAoZ,GAAA,IAAAE,GAAAzM,EAAAA,EAAAA,GAAAuM,EAAA,GAAEif,EAAI/e,EAAA,GAAEnL,EAAGmL,EAAA,SAAO,CACvC+e,EAAO7K,GAAiB6K,EAAMhL,EAAMhuB,EAAQ,CAAC,OAAQ,SAAU4tB,GAAM,EAAO,KAAM,KAAMgD,GAAe,KACvGqI,GAAuBj5B,EAAQ4tB,EAAMI,EAAMlf,GAC5C,IACuBnO,KAAI,SAAAwZ,GAAA,IAAAE,GAAA7M,EAAAA,EAAAA,GAAA2M,EAAA,GAAE6e,EAAI3e,EAAA,GAAEvL,EAAGuL,EAAA,UAAM6e,GAAWF,EAAMlqB,EAAK9O,EAAQ4tB,EAAK,IAShF,MAPgB,CACd9iB,KAAM,eACNS,GAAIwb,IACJ6D,UAAAA,EACAK,WAAY,CAAC,EAdiC,CAkBlD,EAEM8N,GAAiB,SAAC9zB,GACtB,IAAIuE,EAAO,GAYX,OAXA,SAAS2vB,EAAwBC,GAC/B,IAAAC,GAAA7rB,EAAAA,EAAAA,GAA+B4rB,EAAI,GAA9BJ,EAAIK,EAAA,GAAEC,EAAMD,EAAA,GAAEE,EAAQF,EAAA,GAC3B7vB,EAAKsa,KAAK,CAACkV,EAAMM,IACjB,IAAME,EAAU7Y,GAAY4Y,GAAYntB,OAAOC,KAAKktB,GAAU,GAAK,KACpC,QAA3BC,aAAO,EAAPA,EAASzK,eACXoK,EAAwBI,EAASC,IAEjChwB,EAAKsa,KAAK,MAAC5gB,EAAWq2B,GAE1B,CACAJ,CAAwBl0B,GACjBuE,CACT,EAEM0vB,GAAa,SAACF,EAAMS,EAAez5B,EAAQ4tB,GAC/C,IAAI8L,EA2BJ,OA1BIV,GACFU,EAAKlzB,GAAA,GAAOwyB,IACFluB,MACU,SAAd4uB,EAAM5uB,OACR4uB,EAAQlI,GAAkBkI,EAAO15B,IAEnC05B,EAAM5uB,KAAO,eAEb8iB,EAAKL,OAAOzJ,KAAK,oBAADlB,OAAqB/e,KAAKvD,UAAUo5B,KACpDA,OAAQx2B,GAGVw2B,EAAQ,CACNnuB,GAAIwb,IACJjc,KAAM,aACNmgB,WAAY,CAAC,GAIbyO,IACFA,EAAMzO,WAAUzkB,GAAAA,GAAA,GACXkzB,EAAMzO,YACNwO,IAIAC,CACT,EAEMT,GAAyB,SAACj5B,EAAQ4tB,EAAMI,EAAMlf,GAClD,IAAM6qB,EAAuB5G,GAAe/yB,EAAQ,eACpD,GAAK25B,EAAL,CAIA,IAAMhJ,EAASgJ,EAAqB/H,WAC9BgI,EAAY55B,EAAOya,QAAQkW,GACjC,GAAKiJ,EAAL,CAIA,IAAMC,EAAU1L,GAAiBrf,EAAKkf,EAAMhuB,EAAQ,CAAC,MAAO,YAAa4tB,GAAM,EAAO+L,EAAsBhJ,GAC5G,GAAeztB,MAAX22B,EAAJ,CAGA,IAAQh6B,EAA8Bg6B,EAA9Bh6B,MAAOkN,EAAuB8sB,EAAvB9sB,SAAU6lB,EAAaiH,EAAbjH,UAOzB,MANoB,CAClB/yB,MAAO,CAACA,GACRkN,SAAU,CAACA,QAAAA,EAAY,SACvB6lB,UAAW,CAACA,QAAAA,EAAagH,aAAS,EAATA,EAAW9uB,MACpC0K,MAAO,cANT,CAJA,MAFEoY,EAAKL,OAAOzJ,KAAK,aAADlB,OAAc+N,EAAM,mBAJtC,MAFE/C,EAAKL,OAAOzJ,KAAK,qCAqBrB,E,wBC5hCagW,G,OAAYC,GAEzBD,GAAUE,KAAO,SAAClrB,GAChB,MAAqB,KAAjBA,EAAImrB,OAAO,GACNnrB,EAAIorB,UAAU,EAAGprB,EAAI7F,OAAO,GAE5B6F,CACX,EAEAgrB,GAAUK,WAAa,SAACrrB,GAA0C,IAArCsrB,IAASpxB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASqxB,IAAOrxB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAEhD9D,EAAM40B,GAAUQ,OAAOxrB,GAS3B,MADM,KAFN5J,GAAOk1B,EAAY,IAAM,KAFzBl1B,GAFAA,EAAM40B,GAAUE,KAAK90B,IAEX2X,QAAQ,QAAS,UAEWwd,EAAU,IAAM,KAEpC,GAEpB,EAEO,IAAME,GAAgB,SAACC,GAC5B,IAAIlpB,EAAI,KACFxG,EAAO0vB,aAAQ,EAARA,EAAU1vB,KAWvB,MAVY,QAARA,EAEFwG,EAAI,eACa,YAARxG,EACTwG,EAAI,qBACa,QAARxG,EACTwG,EAAI,UACa,UAARxG,IACTwG,EAAI,KAECA,CACT,EAEampB,GAAkB,SAACD,GAC9B,IAAIlpB,EAAI,GAKR,MAHY,WADCkpB,aAAQ,EAARA,EAAU1vB,QAErBwG,EAAI,GAECA,CACT,EAsDaopB,GAAc,SAAC5rB,GAG1B,MAAO,GAAP8T,OAAU9T,EAAG,WACf,EAEa6rB,GAAa,SAAC7rB,GAAqD,IAAhD8rB,EAAa5xB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU6xB,EAAY7xB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAEjE,GAAI8F,QACF,MAAO,OAET,QAAA6D,EAAAA,EAAAA,GAAe7D,IACf,IAAK,UACH,OAAQA,EAAO,OAAS,QAC1B,IAAK,SACH,IAAKiD,OAAO+oB,SAAShsB,IAAQisB,MAAMjsB,GACjC,OACF,OAAOA,IAAQiD,OAAOipB,UAAUlsB,IAAQ8rB,EAAgB,IAAM,IAChE,IAAK,SACH,GAAInlB,MAAMC,QAAQ5G,GAChB,OAlEiB,SAACuc,GAA0B,IAE5C4P,EACAC,EAyBAC,EA5BwB5S,EAAOvf,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAI7BoyB,EAAkB,CAAC,MAAO,SAuChC,OAtCA/P,EAAK1qB,KAAI,SAAA2Q,GACP,GAAIA,QAA+B,CACjC,GAAiB,iBAANA,EACT4pB,EAAK,aACA,IAAiB,iBAAN5pB,EAEX,MAAM,IAAIgb,MAAM,+BAAD1J,OAAgCtR,EAAC,cADrD4pB,EAAKnpB,OAAOipB,UAAU1pB,GAAK,MAAQ,OAC8B,CAEnE,GAAK2pB,GAEE,GAAIA,GAAYC,EAAI,CACzB,IAAIE,EAAgB3zB,SAASwzB,KAAaG,EAAgB3zB,SAASyzB,GAG5D,MAAM,IAAI5O,MAAM,yDAAD1J,OAA0DqY,EAAQ,SAAArY,OAAQsY,IAD9FD,EAAW,OAEf,OANEA,EAAWC,CAOf,CACF,IACKD,IACHA,EAAW,UAMXE,EADc,SAAZF,EACY5P,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAIqpB,GAAWrpB,GAAG,EAAK,IAEjC+Z,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAIqpB,GAAWrpB,EAAE,IAKvCiX,EACI,OAAH3F,OAAUqY,EAAQ,OAAArY,OAAMuY,EAAYt6B,KAAK,MAAK,KAE3C,IAAH+hB,OAAOuY,EAAYt6B,KAAK,MAAK,IAIpC,CAsBaw6B,CAAevsB,EAAK+rB,GAG3B,MAAM,IAAIvO,MAAM,uCAEpB,QAAS,OA5Ec,SAACxd,GAExB,MAAO,IAAMA,EAAI+N,QAAQ,KAAM,MAAQ,GACzC,CAyEkBye,CAAiBxsB,GAEnC,EAEaysB,GAAmB,SAACzG,GAC/B,OAAIA,GAASrf,MAAMC,QAAQof,IAAUA,EAAM7rB,OAClC6rB,EACJn0B,KAAI,SAAA66B,GACH,MAAiB,SAAbA,EAAK1wB,KACA6vB,GAAWa,EAAK37B,OACD,YAAb27B,EAAK1wB,KACP,GAAG0wB,EAAK37B,MACO,YAAb27B,EAAK1wB,KACP,IAAI0wB,EAAK37B,WADX,CAGT,IACCwR,QAAO,SAAA0L,GAAC,OAAS7Z,MAAL6Z,CAAc,IAC1Blc,KAAK,OAED,MAEX,EAIa46B,GAAmB,SAAC3sB,GAC/B,GAAW5L,MAAP4L,EACF,MAAO,MAAC5L,EAAW,IACrB,IAAIqqB,EAAS,GACP1tB,EAAyB,cAAjBiP,EAAI8jB,UAA4B9jB,EAAIjP,MAAQiP,EAqB1D,MAAO,EApBU2G,MAAMC,QAAQ7V,GAASA,EAAQ,CAACA,IAC5Bc,KAAI,SAAA4lB,GACvB,MAAuB,UAAnBA,EAAMxZ,SACY,OAAhBwZ,EAAM1mB,WACR,EAEO,CACLiL,KAAM,QACNjL,MAAO0mB,EAAM1mB,OAGW,UAAnB0mB,EAAMxZ,SACR,CACLjC,KAAOyb,EAAMmV,WAAa,WAAa,WACvC77B,MAAO0mB,EAAM1mB,YAGf0tB,EAAOzJ,KAAK,wBAADlB,OAAyB2D,EAAMxZ,SAAQ,qBAEtD,IAAGsE,QAAO,SAAAC,GAAC,OAASpO,MAALoO,CAAc,IAChBic,EACf,EAEaoO,GAAsB,SAACrqB,GAAC,OAAW,MAALA,EAAY,OAASA,EAAEnL,UAAU,EAE/Dy1B,GAAmB,SAACtqB,GAC/B,OAASpO,MAALoO,GAEW,OAAXA,aAAC,EAADA,EAAI,KAAqC,OAAvBA,aAAC,EAADA,GAAIA,aAAC,EAADA,EAAGrI,QAAS,IAD7BqI,EAKF,IAAMA,EAAI,GACnB,E,olDChLO,IAAMuqB,GAAgB,uBACvBC,GAAqB,CACzB/f,UAAU,EACVF,MAAM,EACNF,MAAM,GAGKogB,GAAa,SAACpW,EAAM3lB,GAC/B,OAAOg8B,GAAYrW,EAAM3lB,GAAQ,EACnC,EAEag8B,GAAc,SAACrW,EAAM3lB,GAAgC,IAAxB2tB,IAAY3kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAEhD4kB,EAAO,CACTL,OAAQ,IAGJO,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDgC,EAAM+2B,GAAWtW,EAAMmI,EAAgBF,EAAM,MAEnD,OAAID,EACK,CAACzoB,EAAK0oB,EAAKL,SAEdK,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,kCAAmC2K,EAAKL,QAChDroB,EAEX,EAGM+2B,GAAa,SAAC/yB,EAAMlJ,EAAQ4tB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACpD,GAAKE,EAAL,CACA,IAAM4B,EAAO5B,EAAK2c,IAAI,QAEtB,MAAc,UAAT/a,GAA6B,eAATA,EAChBoxB,GAAYhzB,EAAMlJ,EAAQ4tB,EAAMgD,GACrB,SAAT9lB,EACFqxB,GAAWjzB,EAAMlJ,EAAQ4tB,EAAMgD,GACrB,gBAAR9lB,EACFsxB,GAAalzB,EAAMlJ,EAAQ4tB,EAAMgD,GACvB,cAAR9lB,EACFuxB,GAAWnzB,EAAMlJ,EAAQ4tB,EAAMgD,QADjC,CAToB,CAc7B,EAEMyL,GAAa,SAACnzB,EAAMlJ,EAAQ4tB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9C8B,EAAO5B,EAAK2c,IAAI,QACtB,GAAY,cAAR/a,EAAJ,CAIA,IAAMmgB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAEjDme,EAA8CC,GAC5Cv8B,EAAQirB,EAAY2C,EAAM,KAAMgD,EAAa,eAC9C4L,GAAAhvB,EAAAA,EAAAA,GAAA8uB,EAAA,GAFMG,EAAcD,EAAA,GAKrB,OAL+BA,EAAA,GAAWA,EAAA,GAKnC,CADMN,GAAYhzB,EAAMlJ,EAAQ4tB,EAAMgD,GAC/B6L,EARd,CAFE7O,EAAKL,OAAOzJ,KAAK,4BAADlB,OAA6B9X,EAAI,kBAWrD,EAEMsxB,GAAe,SAAClzB,EAAMlJ,EAAQ4tB,GACf1kB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GADc,IAEzDlZ,EAAWiE,EAAK2c,IAAI,aAC1B,GAAK5gB,EAAL,CACA,IAAMsiB,EAAQtiB,EACXtE,KAAI,SAAC+7B,GAAY,OAAKL,GAAWK,EAAc18B,EAAQ4tB,EAAM,KAAK,IAClEvc,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAC5DpU,WACAC,UAEH,GAAKhB,EAAMte,OAAX,CAEA,GAAoB,GAAhBse,EAAMte,SAAgBse,EAAM,GAAG,GAEjC,OAAOA,EAAM,GAAG,GAIlB,IADA,IAAIoV,EAAgB,GACX9d,EAAI,EAAIA,EAAI0I,EAAMte,OAAS4V,IAC9BA,GAAM0I,EAAMte,OAAS,GAAOse,EAAM1I,GAAG,IAGvC8d,EAAc7Y,KAAKyD,EAAM1I,IACrBA,GAAM0I,EAAMte,OAAS,GAAMse,EAAM1I,GAAG,IAEtC8d,EAAc7Y,KAAK,MAAC5gB,EAAW,QALjC0qB,EAAKL,OAAOzJ,KAAK,yBAADlB,OAA0B/D,IAW9C,IADA,IAAI+d,EAAO,GAAIC,EAAQ,GACdhe,EAAI,EAAIA,EAAI8d,EAAc1zB,OAAS4V,IAAK,CAC/C,IAAAie,GAAAtvB,EAAAA,EAAAA,GAAoBmvB,EAAc9d,GAAE,GAA/Bma,EAAI8D,EAAA,GAAEj9B,EAAKi9B,EAAA,GACH55B,MAATrD,IACFA,EAAQ,QACEqD,MAAR81B,IACFA,EAAO,QACLna,GAAM8d,EAAc1zB,OAAS,GAC/B2zB,GAAQ,IAAJha,OAAQoW,EAAI,OAAApW,OAAM/iB,EAAK,OAC3Bg9B,GAAS,KAETD,GAAQ,GAAJha,OAAO/iB,EAEf,CACA,OAAO+8B,EAAOC,CAlCqB,CAPJ,CA0CjC,EAEMX,GAAc,SAAChzB,EAAMlJ,EAAQ4tB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC/C8B,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C0X,EAAO5K,EAAWpF,IAAI,QACtB5gB,EAAWiE,EAAK2c,IAAI,cAAgB,IAAIkX,EAAAA,GACxCvnB,EAAQyV,EAAWpF,IAAI,SAEzBoP,EAAchK,EAAWpF,IAAI,eAC5BoP,IACHA,EAAcc,GAAmB/1B,IACnC,IAAMg9B,EAAwBh9B,EAAO6uB,aAAaoG,GAC5CnpB,EAAMmf,EAAWpF,IAAI,OAErB2C,EAAuB,eAAT1d,EACdmyB,EAAmBzU,GAAuB,UAARqN,EAClCR,EAAa4H,EAAmBznB,EAAQob,EAExCsM,GADgBnK,GAAe/yB,EAAQq1B,IAAe,CAAC,GAC3B6H,YAC3B7I,EAAkBr0B,EAAOS,SAAzB4zB,eAGH8I,EAAgBlS,EAAWpF,IAAI,YAC9BsX,GAAmBtH,GAAgB,QAARA,IAC9BsH,EAAgB,QAElB,IAAMC,EAAoBC,GAAQr9B,EAAQm9B,EAAe3nB,GACnD8nB,EAAeF,GAAqBD,EACpCI,EAA8BJ,GAAiBK,GAAkBx9B,EAAQo9B,EAAmB5nB,IAAU,KACtG8gB,EAAW9N,KAAiB4U,GAAgE,GAA3CG,EAA4Bxf,aAGnF0f,EAA8ClB,GAC5Cv8B,EAAQirB,EAAY2C,EAAMwP,EAAmBxM,EAAa,MAC3D8M,GAAAlwB,EAAAA,EAAAA,GAAAiwB,EAAA,GAFMhB,EAAciB,EAAA,GAAE3wB,EAAQ2wB,EAAA,GAAE9K,EAAS8K,EAAA,GAKpCtY,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAWS,EAAc18B,EAAQ4tB,EAAMyH,EAAW,IACxEhkB,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAE/D,GAAIO,IAAqB3G,GAEvB,GAAsBpzB,MAAlBu5B,EACF,YAEF,IAAKrX,EAAKxe,KACR,OAGJ,IAIIwc,EAJEua,EAAenV,EACfnX,EAAS+T,EAAKxe,KAAOo2B,EAAsBY,eAAergB,KAAKvd,EAAOoc,IAAKgJ,EAAM6P,EAAanpB,EAAK6xB,GAAgB,KAIzH,GAAIV,EAAkB,CACpB,IAAMY,EAAiBC,GAAYlQ,EAAM5tB,EAAQwV,EAAOob,GAElDmN,GADM1J,GAAkB,MACP6I,EAAc,SAAW,UAC1Cc,EAAW,GAAHpb,OAAMib,GAAcjb,OAAGmb,GAE/BE,EAAe5sB,EAAS,GAAHuR,OAAMib,EAAc,OAAAjb,OAAMvR,EAAM,KAAAuR,OAAImb,GAAYC,EAG3E5a,EAAM8a,GACJtQ,EAAM5tB,EAAQirB,EAAYgT,EAHT3H,EAAW0H,EAAWvB,EAGaW,EAAmBrwB,EAAU6lB,EAAW0K,EAEhG,MACEla,EAAM/R,EAGR,OAAO+R,CACT,EAmCM8a,GAAmB,SAACtQ,EAAM5tB,EAAQirB,EAAY4S,EAAgBpB,EAAgB5D,EAAU9rB,EAAU6lB,GAA6B,IAAlBuL,EAAKn1B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAChHwM,EAAQyV,EAAWpF,IAAI,SACvBhI,EAAQ2f,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACvDglB,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC7C0V,EAAkBD,EAAWpF,IAAI,mBAGjCuY,EAAKvgB,EAAMwgB,cAxCO,SAACxF,EAAUyF,EAAoB1L,GACvD,IAAM2L,EAASD,EAAmBC,OAClC,GAAKA,EAAL,CACA,IAGIH,EAHEI,EAASD,EAAO92B,SAAS,QACzBg3B,EAAc3C,GAAmBlJ,GACnC8L,EAAMH,EAEJxgB,EAAcH,EAAiB0gB,GAuBrC,OAtBIG,EAIFL,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACpE,IAAMmE,EAAa9C,GAAchf,QAAQ,cAAc,SAAC9Y,EAAGnD,GAAC,OAAW,GAALA,EAAS4U,EAASuI,EAAc,EAAIoN,EAAOvqB,EAAE,GAAKuqB,CAAO,IAC3H,MAAO,GAAPvI,OAAU+b,EAAU,KAAA/b,OAAI8b,EAAG,KAC7B,EACSF,EACTJ,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACpE,OAAO+D,EAAO1hB,QAAQ,cAAc,SAAC9Y,EAAGnD,GAAC,OAAW,GAALA,EAAS4U,EAASuI,EAAc,EAAIoN,EAAOvqB,EAAE,GAAKuqB,CAAO,GAC1G,EACwB,GAAfpN,EAETqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACpE,MAAO,GAAP5X,OAAUpN,EAAK,KAAAoN,OAAI8b,EACrB,EACwB,GAAf3gB,IACTqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACpE,MAAO,GAAP5X,OAAUpN,EAAK,KAAAoN,OAAI8b,EAAG,KAAA9b,OAAIuI,EAC5B,GAEKiT,CA5BsB,CA6B/B,CASmCQ,CAAkB/F,EAAUhb,EAAO+U,GACpE,GAAKwL,EAAL,CAMA,IAUIhb,EAVE0Q,EAAO,CACX+J,EACAhF,EACA4D,EACA1vB,EACA6lB,EACA/vB,EAAKgb,EAAOT,GACZ8N,EACAsP,GAcF,OAXApX,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,IAGzBqK,IACF/a,EAAMpjB,EAAOS,SAASo+B,kBAAkBthB,KAAKvd,EAAOoc,IAAKgH,SAG/ClgB,IAARkgB,GACFwK,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,uCAAAjW,OAAsC7V,IAGtEqW,CAzBP,CAFEwK,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBA4BzC,EAEMwE,GAAU,SAACr9B,EAAQ64B,EAAUrjB,GACjC,GAAKqjB,EAAL,CACA,IAAIhb,EAAQ2f,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACvDyiB,EAAapa,EAAMoa,WACnB6G,EAAWtB,GAAkBx9B,EAAQi4B,EAAYziB,IAAU,CAAC,EAG1DupB,EAAclhB,EAAM0gB,QAAU1gB,EAAMwgB,aACpCW,EAAiBF,EAASP,QAAUO,EAAST,aACnD,GAAKU,GAAgBC,EAArB,CAGA,IAAKD,GAAeC,EAAgB,CACrB,IAAA38B,EACY,CAAC41B,EAAYY,GAArCA,EAAQx2B,EAAA,GAAE41B,EAAU51B,EAAA,OAAAyD,EACD,CAACg5B,EAAUjhB,GAA9BA,EAAK/X,EAAA,GAAEg5B,EAAQh5B,EAAA,EAClB,CACA,OAAO+yB,CANP,CAV+B,CAiBjC,EAEMsD,GAAa,SAACjzB,EAAMlJ,EAAQ4tB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9CiiB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C3I,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAC5BgT,EAAW5N,EAAWpF,IAAI,YAC9B,GAAa,MAATrQ,GAA6B,MAAZqjB,EAArB,CAIA,IAAMoG,EAAS5B,GAAQr9B,EAAQ64B,EAAUrjB,GACzC,GAAKypB,EAAL,CAIA,IAAMd,EAAQc,GAAUpG,EAGxBqG,EAA8C3C,GAC5Cv8B,EAAQirB,EAAY2C,EAAMqR,EAAQrO,EAAa,MAChDuO,GAAA3xB,EAAAA,EAAAA,GAAA0xB,EAAA,GAFMzC,EAAc0C,EAAA,GAAEpyB,EAAQoyB,EAAA,GAAEvM,EAASuM,EAAA,GAG1C,QAAuBj8B,IAAnBu5B,EAAJ,CAIA,IAAMoB,EAAiBuB,GAAUxR,EAAM5tB,EAAQwV,EAAOif,EAAU7D,GAChE,QAAuB1tB,IAAnB26B,EAOJ,OAHUK,GACRtQ,EAAM5tB,EAAQirB,EAAY4S,EAAgBpB,EAAgBwC,EAAQlyB,EAAU6lB,EAAWuL,EATvE,CARlB,MAFEvQ,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBALrB,CA2BpB,EAEMuG,GAAY,SAACxR,EAAM5tB,EAAQwV,EAAOif,GAAiC,IAAvB7D,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9D,MAAiB,SAAbyrB,EACK4K,GAAWzR,EAAM5tB,EAAQwV,EAAOob,GAEhCkN,GAAYlQ,EAAM5tB,EAAQwV,EAAOob,EAC5C,EAEM2L,GAAkB,SAACv8B,EAAQirB,EAAY2C,EAAMiL,EAAUjI,GAA0C,IAA7B0O,EAAiBt2B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACxFwM,EAAQyV,EAAWpF,IAAI,SACrB0Z,EAAYtU,EAAWpF,IAAI,YAC3B2Z,EAAavU,EAAWpF,IAAI,cACT,eAArByZ,GAAsCE,GAAmC,cAArBA,EAAW3Z,IAAI,MACrErQ,EAAQ,eAEV,IAQIinB,EAREjC,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC7C8oB,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACpEuI,EAAcH,EAAiB0gB,GAC/BmB,EAASxU,EAAWpF,IAAI,SACxB0M,EAAkBtH,EAAWpF,IAAI,mBAEnC6Z,EAAY,GACZC,EAAa,GAGjB,GAAcz8B,MAAVu8B,EAAqB,CACvB,IAAMG,EAASH,EAAO9+B,KAAI,SAACk/B,EAAc1d,GACvC,IAAMpV,EAAWwyB,EAAYA,EAAU1Z,IAAI1D,GAAO,KAC5CyQ,EAAY4M,EAAaA,EAAW3Z,IAAI1D,GAAO,KAC/C2d,EAASC,GAAcF,EAAc9yB,EAAU/M,GAC/C2wB,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtDizB,EAAiBC,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,EAAU,CAAEmzB,WAAW,IAC9FC,EAAKC,GACTxS,EAAM5tB,EAAQ8/B,EAAQ/yB,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAUyF,EAAoB1N,EAAa2B,GAMlH,YAJWrvB,IAAPi9B,IACFT,EAAU5b,KAAK/W,GACf4yB,EAAW7b,KAAK8O,IAEXuN,CACT,IACME,EAAqBT,EAAOvuB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,EAC/Dg5B,EAAOh5B,KAAOmX,GAAesiB,IAClC5D,EAAiB1e,EAAc,EAAI6hB,EAAOrX,UAA4B,GAAfxK,EAAmB6hB,EAAOU,QAAU,KAE/F,CAEA,MAAO,CACL7D,EACCiD,EAAUz2B,OAAS,EAAIy2B,EAAYA,EAAU,GAC7CC,EAAW12B,OAAS,EAAI02B,EAAaA,EAAW,GAErD,EAEMS,GAAc,SAACxS,EAAM5tB,EAAQ6/B,EAAc9yB,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAU0H,GAAqD,IAAxC3P,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMupB,EAAevpB,UAAAC,OAAA,GAAAD,UAAA,SAAA9F,EACxJ,QAAqBA,IAAjB28B,EAAJ,CAEA,IAAIzc,EACJ,GAAiB,UAAbrW,EACFqW,EAAM0a,GAAYlQ,EAAM5tB,EAAQ6/B,EAAcjP,QACzC,GAAiB,SAAb7jB,EACTqW,EAAMic,GAAWzR,EAAM5tB,EAAQ6/B,EAAcjP,QAE7C,GAA+C,mBAApCoP,aAAc,EAAdA,EAAgBQ,iBAAgC,CACzD,IAAMpC,EAAK4B,EAAeQ,gBACpB1M,EAAO,CACX+L,EAAYr5B,GAAAA,GAAA,GAEPi6B,KAAKjG,EAAU,CAAC,gBAAiB,gBAAc,IAClDjI,gBAAAA,IAGF1vB,EAAKm9B,EAAgB7iB,IAMvB,GAJI0b,IACF/E,EAAKhQ,KAAK+U,GACV/E,EAAKhQ,KAAKyc,IAEI,SAAZxzB,EAAqB,CACvB,IAAM2zB,EAAqB3N,GAAe/yB,EAAQ6/B,IAAiB,CAAC,EACpE/L,EAAKhQ,KAAK4c,EACZ,CACAtd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MACE1Q,EAAMuX,GAAWkF,GAGrB,OAAOzc,CA/BW,CAgCpB,EAEM0a,GAAc,SAAClQ,EAAM5tB,EAAQwV,GAA8B,IAAvBob,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACtD,GAAKwM,EAAL,CACA,IAAO6e,EAAkBr0B,EAAOS,SAAzB4zB,eACDsM,EAAkB5N,GAAe/yB,EAAQwV,IAAU,CAAC,EACpDorB,EAAapL,GAAchgB,EAAOxV,GAClC6gC,EAAoBC,GAAqBtrB,EAAOxV,EAAQ4wB,GACxDmQ,EAAgB/gC,EAAOS,SAASugC,gBAChCC,EAAYC,GAAgB1rB,EAAOxV,EAAQ4tB,EAAMgD,GACjDuQ,EAAiBN,EAAkBlgC,KAAI,SAAAqF,GAA2B,IAClEujB,EADkE9lB,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAzBe,EAAGtD,EAAA,GAAE29B,EAAG39B,EAAA,GAAE49B,EAAS59B,EAAA,GAWhE,OATI49B,IAEA9X,EADoB,WAAlB8X,EAAUv2B,MAAuC,UAAlBu2B,EAAUv2B,MAAsC,UAAlBu2B,EAAUxL,KAChEuL,EAAIE,UAAY,MAAQ,QACR,UAAlBD,EAAUv2B,KACRs2B,EAAIG,cAAgB,QAAU,UAE9B,SAGN,CACLx6B,IAAAA,EACAwiB,OAAAA,EACAiY,eAJqBJ,aAAG,EAAHA,EAAKI,eAK1BnN,eAAAA,EAEJ,IAEA,OADuB0M,EAAcxjB,KAAKvd,EAAOoc,IAAK6kB,EAAWrQ,EAAagQ,EAAYO,EAAgBR,EAAiB3gC,EAzBzG,CA2BpB,EAGMq/B,GAAa,SAACzR,EAAM5tB,EAAQ6/B,GAAqC,IAAA4B,EAAAC,EAAvB9Q,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACtDiqB,EAA0B,QAAnBwO,EAAG5B,EAAaha,WAAG,IAAA4b,OAAA,EAAhBA,EAAAlkB,KAAAsiB,EAAmB,QAC7B/L,EAAuB,QAAnB4N,EAAG7B,EAAaha,WAAG,IAAA6b,OAAA,EAAhBA,EAAAnkB,KAAAsiB,EAAmB,QAC1BzQ,EAAamE,GAAcvzB,EAAQizB,GACzC,GAAK7D,EAAL,CAKA,IAAIuS,EAAgB,CAAC,EACjBC,EAAO,GACPC,EAAiB,GACrB,IAAK,IAAM5N,KAAU7E,EAAW0E,KAAM,KAAAgO,EAAAC,EAC9B7N,EAAY9E,EAAW0E,KAAKG,GAC5BuG,EAAWzH,GAAe/yB,EAAQk0B,GACjCvC,EAA4BuC,EAA5BvC,aAAcyC,EAAcF,EAAdE,WACf4N,EAAkBrQ,SAAAA,EAAchG,KAAO,OAAS,QAChDqI,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACrC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EACxCg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EAClC,SAAhBg/B,GAAkC,QAAZJ,EAAIG,SAAQ,IAAAH,GAARA,EAAUziB,OAEtC4iB,EAAWA,EAAS5iB,QAEtB,IAAM8iB,EAAqBnO,EAASA,EAAOnO,IAAI,wBAAqB3iB,EAC9Dk/B,EAAwC,QAAhCL,EAAG7N,EAAUmO,2BAAmB,IAAAN,GAAAA,EACxClJ,EAAW,KACXlI,EAAS6H,GAAoBx4B,EAAQk0B,EAAW2E,EAAUqJ,GAC1DlC,EAAiBC,GAAqBjgC,EAAQk0B,EAAW2E,EAAUlI,EAAQuR,EAAa,CAAEhC,WAAW,IAErGoC,EAAkBlC,GACtBxS,EAAM5tB,EAAQiiC,EAAUC,EAAahO,EAAUppB,KAAMk1B,EAAgBxF,EAAU,KAAM,KAAM5J,EAAauR,GAE1G,GAAgBj/B,MAAZ++B,QAA6C/+B,IAApBo/B,EAG3B,YAFmB,QAAfJ,GACFtU,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8BqR,EAAM,cAAArR,OAAaqQ,KAGrE,IAAIsP,OAAmB,EACvB,QAAwBr/B,IAApBo/B,IAAkClO,GAA8BlxB,MAAhByuB,EAA2B,CAC7E,IAAM6Q,EAAgBhK,GAAoBx4B,EAAQk0B,EAAW2E,EAAUmJ,GACjES,EAAwBxC,GAAqBjgC,EAAQk0B,EAAW2E,EAAU2J,EAAeR,EAAiB,CAAE9B,WAAW,IAI7H,QAA4Bh9B,KAH5Bq/B,EAAsBnC,GACpBxS,EAAM5tB,EAAQ2xB,EAAcqQ,EAAiB9N,EAAUppB,KAAM23B,EAAuBjI,EAAU,KAAM,KAAM5J,EAAauR,IAKvH,YAFuB,QAAnBH,GACFpU,EAAKL,OAAOzJ,KAAK,qCAADlB,OAAsCqR,EAAM,cAAArR,OAAaqQ,IAG/E,CAEA,IAAMyP,EAAoBJ,QAAAA,EAAmBC,EAC7C,QAA0Br/B,IAAtBw/B,EAAiC,KAAAC,EACnC,GAAIf,EAAK34B,OAAQ,KACgBmb,EADhBC,EAAAC,GACYsd,GAAI,IAA/B,IAAAvd,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiC,KAAtBme,EAAYxe,EAAAvkB,MACrB8hC,EAAciB,QAAgB1/B,CAChC,CAAC,OAAAwhB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACDid,EAAO,EACT,CACAD,EAAc1N,GAAUmO,EAAWM,EAA6B,QAAZC,EAAIV,SAAQ,IAAAU,EAAAA,EAAIhR,CACtE,MACOyC,GACHyN,EAAe/d,KAAKmQ,GACtB2N,EAAK9d,KAAKmQ,EAEd,CACA,IAAI4N,EAAe54B,OAAnB,CAKA,IAAIma,EACJ,GAAyC,mBAA9BgM,EAAWyT,eAA+B,CACnD,IAAMzE,EAAKhP,EAAWyT,eAChB/O,EAAO,CACX6N,GAEFve,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MAAO,GAAI1E,EAAW0T,SAAU,CAE9B1f,EAAMgM,EAAW0T,SACdjmB,QAAQ,cAAc,SAACkmB,EAAO9O,GAAW,IAAA+O,EACxC,OAA4B,QAA5BA,EAAOrB,EAAc1N,UAAO,IAAA+O,EAAAA,EAAID,CAClC,IAEF,IAGiCvP,EAH3ByP,EAAe72B,OAAOC,KAAK+iB,EAAW0E,MAAQ,CAAC,GAClDpS,UACArQ,QAAO,SAAA4iB,GAAM,QAAM7E,EAAW0E,KAAKG,GAAQG,UAAU,IAAEX,EAAAnP,GACrC2e,GAAY,IAAjC,IAAAxP,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAAmC,KAAxBwP,EAAMT,EAAA3zB,MACf,GAA6BqD,MAAzBy+B,EAAc1N,GAChB,MACF7Q,EAAMA,EAAIvG,QAAQ,IAAIqmB,OAAO,YAAmBjP,EAAS,IAAK,KAAM,GACtE,CACA,OAAAvP,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACAvB,EAAMA,EAAIvG,QAAQ,aAAc,OAClC,MACE+Q,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,sBAElC,OAAO7P,CA7BP,CA/DA,MAFEwK,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,6BA+FpC,E,olDCnhBA,IAAMkQ,GAAqB,CACzBpoB,OAAQ,SACR4E,OAAQ,OACRlE,QAAS,UACT2nB,KAAM,QAGFC,GAAuB,CAC3BC,OAAQ,QAKJjmB,GAAW,SAAC/L,GAAC,MAAkB,WAAZqB,EAAAA,EAAAA,GAAOrB,IAAuB,OAANA,IAAemE,MAAMC,QAAQpE,EAAE,EAEnEiyB,GAAe,SAAC9V,EAAWztB,GACtC,OAAOwjC,GAAc/V,EAAWztB,GAAQ,EAC1C,EAEawjC,GAAgB,SAACC,EAASzjC,GAAgC,IAQjE0jC,EACAC,EATyChW,IAAY3kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAErD4kB,EAAO,CACTL,OAAQ,IAEJO,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjD8qB,EAAOC,GAAUH,GAInBI,OAAShrB,EACb,IAEEwgC,EADmBE,GAAAA,wBAAwBC,QAAQJ,GACnBK,mBAClC,CAAE,MAAO32B,GACPygB,EAAKL,OAAOzJ,KAAK3W,EACnB,CAEIu2B,IAEFC,EAAeI,GAAoBL,EAAoB9V,GACvDtK,GAAOJ,MAAM,gBAAiBygB,EAAc/V,IAE5CM,EAAS8V,GAAcL,EAAc3V,EAAMF,EAAgBF,KAC9B,SAAfM,EAAOpjB,MAAkC,gBAAfojB,EAAOpjB,OAC7CojB,EAASsD,GAAkBtD,EAAQJ,EAAgB6V,EAAkB,MAEvErgB,GAAOJ,MAAM,UAAWgL,IAG1B,IAAME,EAAUF,EAASlC,GAASkC,QAAUhrB,EAE5C,OAAIyqB,EACK,CAACS,EAASR,EAAKL,SAElBK,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,oCAAqC2K,EAAKL,QAClDa,EAEX,EAEM2V,GAAsB,SAAtBA,EAAuBE,EAAMrW,GAA4B,IAqHzD9e,EArHmCo1B,EAAUl7B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9C8B,EAAOm5B,EAAKE,UACdl/B,EAAWg/B,EAAKG,cAAczjC,KAAI,SAAA4lB,GAAK,OAAIwd,EAAoBxd,EAAOqH,EAAMqW,EAAK,IAYrF,GATY,SAARn5B,GAA2B,UAARA,IACrB7F,EAAWA,EAAS6c,QAAO,SAACC,EAAKwE,GAC/B,IACM/c,EADa+c,EAAMzb,MAAQA,GAASyb,EAAMza,IACL,CAACya,GAAlBA,EAAMthB,SAChC,MAAO,GAAP2d,QAAAhP,EAAAA,EAAAA,GAAWmO,IAAGnO,EAAAA,EAAAA,GAAKpK,GACrB,GAAG,KAIO,UAARsB,EAIF,OAHuB,GAAnB7F,EAASgE,QACX2kB,EAAKL,OAAOzJ,KAAK,6CAADlB,OAA8C3d,EAASgE,OAAM,MAE/EzC,GAAAA,GAAA,GACKvB,EAAS,IAAE,IACd6G,KAAO7G,EAAS,GAAG6G,MAIvB,GAAY,YAARhB,EAAoB,CAQtB,IAAMu5B,GANNp/B,EAAWA,EAASoM,QAAO,SAAAkV,GAEzB,QADgC,aAAdA,EAAMzb,MAAgD,GAAzByb,EAAMthB,SAASgE,QAAyC,WAA1Bsd,EAAMthB,SAAS,GAAG6F,MAA8C,GAAzByb,EAAMthB,SAAS,GAAG6J,IAExI,KAG2B6S,MAAK,SAAA4E,GAAK,MACrB,aAAdA,EAAMzb,IAAmB,IAEvBu5B,GAA0C,GAA7BA,EAAUp/B,SAASgE,QAClC2kB,EAAKL,OAAOzJ,KAAK,0CAADlB,OAA2CyhB,EAAUp/B,SAASgE,SAEhF,IAAMoI,EAASgzB,EAAYA,EAAUp/B,SAAS,GAAK,KAC/Cq/B,EAAYr/B,EAASA,EAASgE,OAAS,GACrCs7B,EAA2B,UAAlBD,EAAUx5B,MAAgD,QAA5Bw5B,EAAUx1B,IAAI01B,YACpC,SAAlBF,EAAUx5B,MAA2C,QAAxBw5B,EAAUE,WACtCC,EAA6B,YAAlBH,EAAUx5B,MAAuC,UAAjBw5B,EAAUx1B,IACrD41B,EAAcz/B,EAASoM,QAAO,SAAAkV,GAAK,OACvCA,IAAU8d,GAAa9d,IAAU+d,CAAS,IAEtCK,EAAS,CACb75B,KAAM,WACN7F,SAAUy/B,GAGZ,IADgBH,GAAUE,IAAyC,MAA5BG,GAAYF,GAEjD,MAAO,CACL55B,KAAM,QACNuG,OAAAA,EACAszB,OAAAA,GAoCJ,GA1BA1/B,GANAA,EAAWA,EAASoM,QAAO,SAAAkV,GACzB,IAAMse,EAAuB,YAAdte,EAAMzb,MAAmC,QAAbyb,EAAMzX,IAC3CoZ,EAAuB,YAAd3B,EAAMzb,MAAmC,QAAbyb,EAAMzX,IACjD,QAAS+1B,GAAU3c,EACrB,KAEoBvnB,KAAI,SAAA4lB,GACtB,MAAkB,WAAdA,EAAMzb,MAA8C,GAAzByb,EAAMthB,SAASgE,OACrC,CACL6B,KAAM,UACNgE,IAAKyX,EAAMthB,SAAS,GAAG6J,IACvBg2B,MAAOve,EAAMthB,SAAS,GAAG6F,MAGpByb,CAEX,IAgBsB,SAAlB+d,EAAUx5B,KAAiB,CAC7B,IAAMsY,EAAM,CAAC,EACTiE,EAAOjE,EACX,EAAG,KAAA2hB,EAAAC,EACD54B,OAAOke,OAAOjD,EAAMid,GACpBr/B,EAAWA,EAASoM,QAAO,SAAAkV,GAAK,OAAIA,IAAU+d,CAAS,IAEhC,UAAV,QAATU,EADJV,EAAYr/B,EAASA,EAASgE,OAAS,UAC1B,IAAA+7B,OAAA,EAATA,EAAWl6B,OACbuc,EAAK5J,IAAM,CAAC,EACZ4J,EAAOA,EAAK5J,KAERxY,EAASgE,OAAS,EACpBoe,EAAK5J,IAAM,CACT3S,KAAM,WACN7F,SAAAA,GAGFoiB,EAAK5J,IAAM6mB,CAGjB,OAA2B,UAAV,QAATS,EAAAT,SAAS,IAAAS,OAAA,EAATA,EAAWj6B,OACnB,OAAOsY,CACT,CACF,CAIA,IACM6gB,EAAKgB,OACPn2B,EAAMm1B,EAAKgB,SACsB,GAAxBhB,EAAKiB,SAASj8B,SACvB6F,EAAMm1B,EAAKiB,WAEf,CAAE,MAAM/3B,GACNmW,GAAOzc,MAAM,gCAAiCsG,EAChD,CAcA,GAXY,WAARrC,IACFgE,EAAMiqB,GAAe9zB,IAIJ,YAAf0N,EAAAA,EAAAA,GAAO7D,IAA4B,OAARA,IACzBA,EAAI01B,YAAc11B,EAAIq2B,gBACxBr2B,EAAIglB,KAAOhlB,EAAIglB,KAAKnzB,KAAI,SAAA4lB,GAAK,OAAIwd,EAAoBxd,EAAOqH,EAAMqW,EAAK,KAI/D,QAARn5B,IACFgE,EAAMA,EAAInO,KAAI,SAAAuI,GAAI,OAAI66B,EAAoB76B,EAAM0kB,EAAMqW,EAAK,KAGtDC,GAA4B,GAAdp1B,EAAI7F,QACrB,OAAO6F,EAAI,GAIf,GAAY,kBAARhE,EAA0B,CAC5B,IAAMs6B,EAAMngC,EAAS0c,MAAK,SAAA4E,GAAK,MAAkB,uBAAdA,EAAMzb,IAA6B,IAChEu6B,EAAMD,aAAG,EAAHA,EAAKt2B,IACjB,OAAKu2B,EAKE,CACLv6B,KAAM,OACNu6B,IAAAA,EACAvR,KAJW7uB,EAASoM,QAAO,SAAAkV,GAAK,MAAkB,uBAAdA,EAAMzb,IAA6B,UAHvE8iB,EAAKL,OAAOzJ,KAAK,8DAADlB,OAA+D/e,KAAKvD,UAAU2E,IASlG,CAEA,GAAY,WAAR6F,EAAmB,CACrB,IAAMs6B,EAAMngC,EAAS0c,MAAK,SAAA4E,GAAK,MAAkB,uBAAdA,EAAMzb,IAA6B,IAChEu6B,EAAMD,aAAG,EAAHA,EAAKt2B,IACjB,OAAKu2B,GAISpgC,EAASoM,QAAO,SAAAkV,GAAK,MAAkB,uBAAdA,EAAMzb,IAA6B,IACnE,CACLA,KAAM,QACNu6B,IAAAA,SANAzX,EAAKL,OAAOzJ,KAAK,uDAADlB,OAAwD/e,KAAKvD,UAAU2E,IAQ3F,CAEA,GAAY,YAAR6F,GAA8B,UAARA,EAAkB,CAG1C,IAAAw6B,EAAyCx2B,EAAlCq2B,EAAYG,EAAZH,aAAcX,EAAUc,EAAVd,WAAY1Q,EAAIwR,EAAJxR,KACjC,MAAO,CACLhpB,KAAM,QACN05B,WAAYW,GAAgBX,EAC5Be,MAAe,YAARz6B,EACPgpB,KAAAA,EAEJ,CAEA,MAAO,CACLhpB,KAAAA,EACA7F,SAAAA,EACA6J,IAAAA,EAEJ,EAEMiqB,GAAiB,SAAC9zB,GACtB,IAAIuE,EAAO,GAWX,OAVA,SAAS2vB,EAAwBC,GAC/B,IAAAC,GAAA7rB,EAAAA,EAAAA,GAA+B4rB,EAAI,GAA9BJ,EAAIK,EAAA,GAAEC,EAAMD,EAAA,GAAEE,EAAQF,EAAA,GAC3B7vB,EAAKsa,KAAK,CAACkV,EAAMM,IACK,YAAlBC,aAAQ,EAARA,EAAUzuB,MACZquB,EAAwBI,EAASt0B,UAEjCuE,EAAKsa,KAAK,MAAC5gB,EAAWq2B,GAE1B,CACAJ,CAAwBl0B,GACjBuE,CACT,EAEMykB,GAAY,SAACjuB,GACjB,IAAIquB,EAAY,CAAC,EAAEmX,EAAA,SAAAjX,GAEjB,IAAMC,EAAWxuB,EAAOquB,UAAUE,GAClC,GAAIC,EAASiX,QAEXjX,EAASiX,QAAQnjB,SAAQ,SAAAic,GACvB,IAAM7P,EAAM6P,EACPlQ,EAAUK,KACbL,EAAUK,GAAO,IACnBL,EAAUK,GAAK5K,KAAKyK,EACtB,SACK,GAAIC,EAAS+P,OAAQ,CAC1B,IAAM7P,EAAMF,EAAS+P,OAChBlQ,EAAUK,KACbL,EAAUK,GAAO,IACnBL,EAAUK,GAAK5K,KAAKyK,EACtB,MACEjL,GAAON,IAAI,iCAADJ,OAAkC2L,GAEhD,EAlBA,IAAK,IAAIA,KAASvuB,EAAOquB,UAASmX,EAAAjX,GAoBlC,IAAIM,EAAe,CAAC,EACpB,IAAK,IAAIvjB,KAAWtL,EAAO6uB,aAGzBA,EAF8B7uB,EAAO6uB,aAAavjB,GACjBo6B,UAAYp6B,EAAQyjB,eAClCzjB,EAGrB,IACyD8Y,EADrD4K,EAAQ,CAAC,EAAE3K,EAAAC,GACsB2K,GAAajvB,IAAO,QAAA2lC,EAAA,WAAE,IAAAzW,GAAA1hB,EAAAA,EAAAA,GAAA4W,EAAAvkB,MAAA,GAA/CsvB,EAAQD,EAAA,GAAEE,EAAUF,EAAA,GAC1B0W,EAAM,GACH9C,EAAY1T,EAAZ0T,SACP,GAAwB,iBAAbA,EAAuB,CAChC,IAAMG,EAAe72B,OAAOC,KAAK+iB,EAAW0E,MAAQ,CAAC,GAClDpS,UACArQ,QAAO,SAAA4iB,GAAM,QAAM7E,EAAW0E,KAAKG,GAAQG,YAAsDlxB,MAAxCksB,EAAW0E,KAAKG,GAAQtC,YAAyB,IACvGkU,EAAe/C,EAClBjmB,QAAQ,cAAc,SAAC9Y,EAAG+hC,GAAE,MAAK,GAAG,IACjCC,EAAoB9C,EACvBnhB,QAAO,SAACC,EAAKkS,GAAM,SAAArR,QAAAhP,EAAAA,EAAAA,GAEbmO,GAAG,EAEJkS,GAAMrR,QAAAhP,EAAAA,EAAAA,GACFmO,EAAIA,EAAI9Y,OAAO,IAAM,MAAE,GAG9B,IACFtI,KAAI,SAAAqlC,GAAe,OAClBlD,EACGjmB,QAAQ,qBAAqB,SAACkmB,EAAOxkB,GAAC,OACrCynB,EAAgBv+B,SAAS8W,GAAK,GAAKwkB,CAAK,IAEzClmB,QAAQ,cAAc,SAAC9Y,EAAG+hC,GAAE,MAAK,GAAG,GAAC,IAE5CF,EAAM,CACJC,GAAYjjB,QAAAhP,EAAAA,EAAAA,GACTmyB,GAEP,CAAC,IACmBE,EADnBC,EAAA5hB,GACgBshB,GAAG,IAApB,IAAAM,EAAA3hB,MAAA0hB,EAAAC,EAAA1hB,KAAAC,MAAsB,KAAX4K,EAAE4W,EAAApmC,MACNmvB,EAAMK,KACTL,EAAMK,GAAM,IACdL,EAAMK,GAAIvL,KAAKqL,EACjB,CAAC,OAAAzK,GAAAwhB,EAAA/4B,EAAAuX,EAAA,SAAAwhB,EAAAvhB,GAAA,CACH,EApCA,IAAAN,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAAkhB,GAoCC,OAAAjhB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CAED,IAAIwhB,EAAa,CAAC,EAClB,IAAK,IAAIC,KAAKpmC,EAAOya,QAAS,CAC5B,IAAMmf,EAAY55B,EAAOya,QAAQ2rB,GAC1BC,EAAyBzM,EAAzByM,gBACP,GADgCzM,EAAR9uB,KACpBu7B,EAAiB,KACa7S,EADbC,EAAAnP,GACF+hB,GAAe,IAAhC,IAAA5S,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAAkC,KAAvB4K,EAAEmE,EAAA3zB,MACX,GAAkB,iBAAPwvB,EAAiB,CAC1B,IAAMiX,EAAKjX,EAAGxS,QAAQ,cAAc,SAAC9Y,EAAGnD,GAAC,MAAK,GAAG,IAC3C2lC,GAAY3yB,EAAAA,EAAAA,GAAIyb,EAAGmX,SAAS,eAAe7lC,KAAI,SAAA0B,GAAA,IAAAyD,GAAA0H,EAAAA,EAAAA,GAAAnL,EAAA,GAAM,OAAHyD,EAAA,GAAGA,EAAA,EAAO,IAC7DqgC,EAAWG,KACdH,EAAWG,GAAM,IACnBH,EAAWG,GAAIxiB,KAAK,CAClBsiB,EAAAA,EACAG,UAAAA,GAEJ,CACF,CAAC,OAAA7hB,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACH,CACF,CAEA,IAAI8hB,EAAU,CAAC,EACf,IAAK,IAAIplB,KAAMrhB,EAAOquB,UAAW,CAC/B,IACOkQ,EADOv+B,EAAOquB,UAAUhN,GACxBkd,OACP,GAAIA,SAAAA,EAAQ92B,SAAS,QAAS,CAC5B,IAAM6+B,EAAK/H,EAAO1hB,QAAQ,cAAc,SAAC9Y,EAAGnD,GAAC,MAAK,GAAG,IAC/C2lC,GAAY3yB,EAAAA,EAAAA,GAAI2qB,EAAOiI,SAAS,eAAe7lC,KAAI,SAAAqF,GAAA,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAM,OAAHvC,EAAA,GAAGA,EAAA,EAAO,IACjEgjC,EAAQH,KACXG,EAAQH,GAAM,IAChBG,EAAQH,GAAIxiB,KAAK,CACfzC,GAAAA,EACAklB,UAAAA,GAEJ,CACF,CAQA,OALAE,EADoB5K,GAAchf,QAAQ,cAAc,SAAC9Y,EAAGnD,GAAC,MAAK,GAAG,KAC9C,CAAC,CACtBygB,GAAI,WACJklB,UAAW,CAAC,IAAK,OAGZ,CACLlY,UAAAA,EACAQ,aAAAA,EACAG,MAAAA,EACAmX,WAAAA,EACAM,QAAAA,EAEJ,EAEMzC,GAAgB,SAAhBA,EAAiB0C,EAAM1Y,EAAMhuB,EAAQ4tB,GAA4B,IAAA+Y,EAAtBC,EAAU59B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5D,GAAK09B,EAAL,CACAA,EAAKG,YAA8B,QAAnBF,EAAGD,EAAKG,mBAAW,IAAAF,EAAAA,EAAIC,aAAU,EAAVA,EAAYC,YAEnD,IAAI3hC,EAAK4hC,GAAgB,EACzB,GAAiC,IAA7BJ,EAAK57B,KAAK8F,QAAQ,QAA8B,YAAd81B,EAAK57B,KACzC5F,EAAMqsB,GAAUmV,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,QACrC,GAAiB,SAAbF,EAAK57B,KAAiB,KAAAi8B,EACzBC,EAAkBhD,EAAc0C,EAAK/B,OAAQ3W,EAAMhuB,EAAQ4tB,EAAM8Y,GACvEA,EAAKG,YAAcG,aAAe,EAAfA,EAAiBnnC,MACpC,IAAIonC,EAAcjD,EAAc0C,EAAKr1B,OAAQ2c,EAAMhuB,EAAQ4tB,EAAM8Y,GACxC,SAAV,QAAXK,EAAAE,SAAW,IAAAF,OAAA,EAAXA,EAAaj8B,QACfm8B,EAAczV,GAAkByV,EAAajnC,EAAQ0mC,EAAKr1B,OAAOvF,MAEnE5G,EAAM,CACJ+hC,YAAAA,EACAD,gBAAAA,GAEGJ,IAEH1hC,OAAMhC,EACN0qB,EAAKL,OAAOzJ,KAAK,4BACjBgjB,GAAgB,EAEpB,MAAO,GAAiB,WAAbJ,EAAK57B,KAAmB,CACjC,IAAM8f,EAAY,CAAC,EACnB8b,EAAK53B,IAAIwT,SAAQ,SAAAhR,GACf,IAAA0lB,GAAAxpB,EAAAA,EAAAA,GAAoB8D,EAAC,GAAd0nB,EAAIhC,EAAA,GAAEloB,EAAGkoB,EAAA,GACV0C,EAAQwN,GAAUlO,EAAMlqB,EAAKkf,EAAMhuB,EAAQ4tB,EAAM8Y,GACnDhN,IACF9O,EAAU8O,EAAMnuB,IAAMmuB,EAE1B,IACAx0B,EAAM,CACJ4F,KAAM,eACNS,GAAIwb,IACJ6D,UAAAA,EACAK,WAAY,CAAC,EAEjB,CAMA,IAJK/lB,GAAO4hC,IACV5hC,EAAMiiC,GAAWT,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,IAGzC1hC,IAAQA,EAAI4F,OAAS87B,EAAY,CAGnC,IAAMQ,EAAKC,GAAkBX,EAAM1Y,EAAMhuB,EAAQ4tB,GAC7CwZ,EACFliC,EAAMkiC,GAENliC,OAAMhC,EACN0qB,EAAKL,OAAOzJ,KAAK,8BAADlB,OAA+B8jB,EAAK57B,KAAI,gCAE5D,CAEA,OAAO5F,CAxDoB,CAyD7B,EAEMqsB,GAAY,SAAZA,EAAamV,EAAM1Y,EAAMhuB,EAAQ4tB,GAA4B,IAC7D1oB,EADuC0hC,EAAU59B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAGpDqY,EAAKqlB,EAAK57B,KAAKuhB,WAAW,OAASqa,EAAK57B,KAAK0W,MAAM,GAAgBklB,EAAK57B,KAI5E,IADuB,SAANuW,GAAuB,QAANA,IAAyC,GAAxBqlB,EAAKzhC,SAASgE,OACpD,CACX,IAAIq+B,EAAWZ,EAAKY,SAKpB,MAJU,SAANjmB,IACFimB,GAAYA,GAEdZ,EAAKzhC,SAAS,GAAGqiC,SAAWA,EACrBtD,GAAc0C,EAAKzhC,SAAS,GAAI+oB,EAAMhuB,EAAQ4tB,EAAMgZ,EAC7D,CAGA,IAAMW,EAAyB,OAANlmB,GAAuC,GAAxBqlB,EAAKzhC,SAASgE,QAAwC,SAAzBy9B,EAAKzhC,SAAS,GAAG6F,MAA4C,SAAzB47B,EAAKzhC,SAAS,GAAG6F,KACpH08B,EAAsB,MAANnmB,GAAsC,GAAxBqlB,EAAKzhC,SAASgE,QAAwC,SAAzBy9B,EAAKzhC,SAAS,GAAG6F,MAA4C,SAAzB47B,EAAKzhC,SAAS,GAAG6F,KAEtH,GADkBy8B,GAAmBC,EACtB,CACb,IAAAC,GAAAj6B,EAAAA,EAAAA,GAAqBk5B,EAAKzhC,SAAS,GAAGA,SAAQ,GAAvC23B,EAAI6K,EAAA,GAAE7S,EAAI6S,EAAA,GACjBC,GAAAl6B,EAAAA,EAAAA,GAAoBk5B,EAAKzhC,SAAS,GAAGA,SAAQ,GAAtC43B,EAAK6K,EAAA,GAAEC,EAAED,EAAA,GAEhB,GADqBE,GAAYhL,EAAMC,EAAO6J,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,GACtD,CACGhS,EAAK9lB,IACP64B,EAAG74B,IADpB,IAEM+4B,EAAU,CACd/8B,KAAM,aACN7F,SAAU,CACR23B,EACAhI,EACA+S,GAEF77B,IAAK07B,GAGP,OADAK,EAAQhB,YAAcD,aAAU,EAAVA,EAAYC,YAC3BtV,EAAUsW,EAAS7Z,EAAMhuB,EAAQ4tB,EAAMgZ,EAChD,CACF,CAGA,IAAIpQ,EAASxI,EAAKK,UAAUhN,GAClB,MAANA,GAAuC,QAAzBqlB,EAAKzhC,SAAS,GAAG6F,KACjC0rB,EAAS,CAAC,WACK,MAANnV,GAAuC,QAAzBqlB,EAAKzhC,SAAS,GAAG6F,KACxC0rB,EAAS,CAAC,eACK,MAANnV,GAAuC,UAAzBqlB,EAAKzhC,SAAS,GAAG6F,MAA4C,IAAxB47B,EAAKzhC,SAAS,GAAG6J,IAC7E0nB,EAAS,CAAC,YACK,MAANnV,GAAuC,UAAzBqlB,EAAKzhC,SAAS,GAAG6F,MAA4C,IAAxB47B,EAAKzhC,SAAS,GAAG6J,IAC7E0nB,EAAS,CAAC,gBACK,WAANnV,IACTmV,EAAS,CAAC,YAIZ,IAAMsR,EAAkB,WAAM,IAAAC,EACxBC,EAActB,EAAKzhC,SAAStE,KAAI,SAAA4lB,GAAK,OACvCyd,GAAczd,EAAOyH,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,IAKhD,OAHIsB,EAAY/+B,QAAU,GAA+B,aAAf,QAAX8+B,EAAAC,SAAW,IAAAD,GAAK,QAALA,EAAXA,EAAc,UAAE,IAAAA,OAAA,EAAhBA,EAAkBj9B,QAC/Ck9B,EAAcA,EAAY,GAAG/iC,UAExB+iC,CACT,EACA,GAAU,OAAN3mB,GAAqB,MAANA,EAAY,CAC7B,IAAMuJ,EAAY,CAAC,EACNkd,IACRxlB,SAAQ,SAAAhR,GACX,GAAIA,EAAG,CACL,IAAM/F,EAAKwb,IACXzV,EAAE/F,GAAKA,EACOrI,MAAVoO,EAAExG,KACJ8f,EAAUrf,GAAM+F,EAEhBsc,EAAKL,OAAOzJ,KAAK,uBAADlB,OAAwB/e,KAAKvD,UAAUgR,IAE3D,CACF,IACApM,EAAM,CACJ4F,KAAM,QACNS,GAAIwb,IACJ6D,UAAAA,EACAK,WAAY,CACVgK,YAAajH,EAAKa,aAAaxN,GAC/BvV,IAAK46B,EAAK56B,KAGhB,MAAO,GAAI0qB,EAAQ,KAAAyR,EAAAC,EAAA3Q,EACXlM,EAAOyc,IACPK,EAAW9c,EAAK,GAClBoN,EAAgBpN,EAAK7J,MAAM,GACzB6T,EAAa8S,SAAyB,QAAjBF,EAARE,EAAUnB,uBAAe,IAAAiB,OAAA,EAAzBA,EAA2BpoC,MACxCuoC,EAAqB,QAAhBF,EAAGzP,SAAa,IAAAyP,OAAA,EAAbA,EAAgB,GAE1B3Z,EAAQiI,EAAO,GACnB,GAAIA,EAAOvtB,OAAS,EAAG,KAAAo/B,EAAAC,EACf1V,GAAmB,QAAPyV,EAAAhd,EAAK,UAAE,IAAAgd,OAAA,EAAPA,EAASzV,aAAoB,QAAX0V,EAAIjd,EAAK,UAAE,IAAAid,OAAA,EAAPA,EAAS1V,WAE3Cpd,EAAQ2yB,aAAQ,EAARA,EAAUtoC,MAClB4a,EAAU+b,EAAO71B,KAAI,SAAA0gB,GAAE,MAAK,CAACA,GAAAA,EAAIsP,OAAQ6H,GAAoBx4B,EAAQwV,EAAO6L,GAAI,IAItF,GAHAiC,GAAOL,KAAK,wBAADL,OAAyBvB,EAAE,sBAAAuB,OAAqB4T,EAAM,KAC/D,WAAY/b,EAAS,QAAS4Q,EAAM,aAAcuH,GAE1C,MAANvR,GAAoB,MAANA,EAAY,CAC5B,IAAMknB,EAAK9tB,EAAQkH,MAAK,SAAA3c,GAAKA,EAAFqc,GAAH,IAAOsP,EAAM3rB,EAAN2rB,OAAM,OAAQA,GAAoB,SAAVA,CAAiB,IACpE4X,IACFha,EAAQga,EAAGlnB,GAEf,CACF,CAGI8mB,SAAAA,EAAUnB,kBACRoB,GAASA,EAAMpB,iBAAqD,SAAlCoB,EAAMpB,gBAAgBj6B,UAAuBq7B,EAAMpB,gBAAgBnnC,OAASw1B,GAEhH9G,EAAQ,MACRkK,EAAgB,IACE,SAATlK,GAAsC,SAAlB6Z,EAAMr7B,UAA0C,UAAnBq7B,EAAMxV,WAAwC,GAAfwV,EAAMvoC,OAC/F0uB,EAAQ,OACRkK,EAAgB,IACE,WAATlK,GAAwC,SAAlB6Z,EAAMr7B,UAA0C,UAAnBq7B,EAAMxV,WAAwC,GAAfwV,EAAMvoC,QACjG0uB,EAAQ,OACRkK,EAAgB,KAIpB,IAAIjK,EAAWxuB,EAAOquB,UAAUE,GAC1Bia,EAAmBxoC,EAAOquB,UAAkB,QAATkJ,EAAC/I,SAAQ,IAAA+I,OAAA,EAARA,EAAUU,YAC9CwQ,EAAiB/B,EAAK56B,KAAO,CAAC,WAAWrE,SAAS8mB,GAElD4J,IADiBqQ,MACWxoC,EAAOS,SAAS23B,wBAA0BqQ,IAC5D/B,EAAK56B,KAAOqsB,GAAUsQ,KAEpCla,EAAQC,EAASyJ,WACjBzJ,EAAWxuB,EAAOquB,UAAUE,GAC5BmY,EAAK56B,KAAO46B,EAAK56B,KAEnB,IAAM48B,IAAoBhC,EAAK56B,IAG/B,GAFA46B,EAAK56B,KAAM,EAENq8B,EAEE,GAAIA,EAASnB,gBAEuB,SAArCmB,EAASnB,gBAAgBj6B,UAC3B6gB,EAAKL,OAAOzJ,KAAK,wBAADlB,OAAyB/e,KAAKvD,UAAU6nC,KAG1DjjC,EAAMyjC,GAAeR,EAAU5Z,EAAOkK,EAAez4B,EAAQ4tB,OACxD,CAEoB,SAArBua,EAASp7B,UAA4C,QAArBo7B,EAASp7B,UAC3C6gB,EAAKL,OAAOzJ,KAAK,uCAADlB,OAAwC/e,KAAKvD,UAAU6nC,KAEzE,IAAM3yB,EAAQ2yB,EAAStoC,MACvBqF,EAAM0jC,GAAU5oC,EAAQ4tB,EAAMpY,EAAO+Y,EAAOkK,EAAeiO,EAC7D,CAEIgC,IACe,UAAbxjC,EAAI4F,KACN5F,EAAMssB,GAAkBtsB,EAAKlF,GAAQ,GAErCkF,EAAI+lB,WAAWnf,KAAO5G,EAAI+lB,WAAWnf,IAG3C,MACO86B,IAEH1hC,EAAMmiC,GAAkBX,EAAM1Y,EAAMhuB,EAAQ4tB,IAMhD,OAAO1oB,CACT,EAEM0/B,GAAc,SAAC9P,GAA6C,IAAtClH,EAAI5kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG6/B,EAAc7/B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC/C8/B,GAAU,EACR5jC,EAAM4vB,EAAMn0B,KAAI,SAAAmc,GACpB,GAAc,YAAVA,EAAEhS,MAAgC,YAAVgS,EAAEhS,MAAgC,WAAVgS,EAAEhS,MAAgC,UAAXgS,EAAEgoB,MAC3E,OAAOhoB,EAAEhO,IACJ,IAAAi6B,EAAAC,EACLF,GAAU,EACVD,IAAkBjb,SAAY,QAARmb,EAAJnb,EAAML,cAAM,IAAAwb,GAAM,QAANC,EAAZD,EAAcjlB,YAAI,IAAAklB,GAAlBA,EAAAzrB,KAAAwrB,EAAA,2CAAAnmB,OAAgE/e,KAAKvD,UAAUwc,KAErG,IACA,OAAQgsB,OAAgB5lC,EAANgC,CACpB,EAEMiiC,GAAa,SAAbA,EAAcT,EAAM1Y,EAAMhuB,EAAQ4tB,GAA4B,IAAAqb,EAAAC,EAAtBtC,EAAU59B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACzD,GAAY9F,MAARwjC,EAAJ,CAEA,IAAOrS,EAAkBr0B,EAAOS,SAAzB4zB,eAGP,GAFAqS,EAAKG,YAA8B,QAAnBoC,EAAGvC,EAAKG,mBAAW,IAAAoC,EAAAA,EAAIrC,aAAU,EAAVA,EAAYC,YAElC,YAAbH,EAAK57B,MAAmC,YAAb47B,EAAK57B,KAAoB,CAEtD,IAAM0K,EAAQsd,GAAe9yB,EAAQ0mC,EAAK53B,IAAK43B,EAAKG,aAC9CnW,EAAcqC,GAAe/yB,EAAQwV,GACrCkmB,EAA0B,YAAbgL,EAAK57B,KACxB,MAAO,CACLiC,SAAU,QACV6lB,UAAWlC,aAAW,EAAXA,EAAa5lB,KACxB4wB,WAAAA,EACA77B,MAAO2V,EAEX,CAAO,GAAiB,YAAbkxB,EAAK57B,KAAoB,CAElC,IAAMgqB,EAAQ8P,GAAY8B,EAAKzhC,SAAU2oB,GACzC,GAAIkH,EAAO,KAAAqU,EACH3zB,EAAQsd,GAAe9yB,EAAQ80B,EAAMj0B,KAAKwzB,GAAiBqS,EAAKG,aAChEnW,EAAcqC,GAAe/yB,EAAQwV,GACrCkmB,EAAyC,aAAf,QAAbyN,EAAAzC,EAAKzhC,gBAAQ,IAAAkkC,GAAK,QAALA,EAAbA,EAAgB,UAAE,IAAAA,OAAA,EAAlBA,EAAoBr+B,MACvC,MAAO,CACLiC,SAAU,QACV6lB,UAAWlC,aAAW,EAAXA,EAAa5lB,KACxB4wB,WAAAA,EACA77B,MAAO2V,EAEX,CAGF,KAAO,IAAI2tB,GAAmBuD,EAAK57B,MAAO,CACxC,IAAIjL,EAAQ6mC,EAAK53B,IACX8jB,EAAYuQ,GAAmBuD,EAAK57B,MAI1C,OAHI47B,EAAKY,WACPznC,GAASA,GAEJ,CACLkN,SAAU,QACV6lB,UAAAA,EACA/yB,MAAAA,EAEJ,CAAO,GAAiB,QAAb6mC,EAAK57B,MAAkBu4B,GAAqBqD,EAAKrB,IAAI+D,IAAI,IAAK,CACvE,IAAMtV,EAAO4S,EAAK5S,KAAKnzB,KAAI,SAAA2Q,GAAC,OAAI61B,EAAW71B,EAAG0c,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,IACjE7mC,EAAQi0B,aAAI,EAAJA,EAAO,GACflB,EAAYyQ,GAAqBqD,EAAKrB,IAAI+D,IAAI,IACpD,OAAA5iC,GAAAA,GAAA,GACK3G,GAAK,IACR+yB,UAAAA,GAEJ,CAAO,GAAiB,QAAb8T,EAAK57B,KAAgB,KAAAu+B,EACxBle,EAASub,EAAK53B,IAAInO,KAAI,SAAA2Q,GAAC,OAAI61B,EAAW71B,EAAG0c,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,IAIxE,OAHkBvb,EAAOliB,SAAkB,QAAZogC,EAAGle,EAAO,UAAE,IAAAke,GAATA,EAAWzW,WAGtC,CACL7lB,SAAU,QACV6lB,UAnrBgB,cAorBhB/yB,MALYsrB,EAAOxqB,KAAI,SAAA2Q,GAAC,OAAIA,aAAC,EAADA,EAAGzR,KAAK,IAOxC,CAAO,GAAkB,YAAd6mC,EAAK57B,MAA2C,aAArB87B,aAAU,EAAVA,EAAY97B,OAA+D,gBAAX,QAA9Bo+B,EAAAlpC,EAAOS,SAAS6oC,sBAAc,IAAAJ,OAAA,EAA9BA,EAAgCp+B,MAItG,OAAOy+B,GAAqB7C,EAAM1Y,EAAMhuB,EAAQ4tB,EAClD,CAEA,IAAI4b,EAAQC,GAAY/C,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,GAClD,QAAc1jC,IAAVsmC,EACF,OAAOA,EAGT5b,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8B8jB,EAAK57B,MAxEjC,CA0EpB,EAeM4+B,GAAuB,SAAvBA,EAAwBhD,EAAMiD,GAClC,IAntB0Br7B,EAmtBtBzI,EAAS,GAAI0e,EAAI,GACbzZ,EAA2D47B,EAA3D57B,KAAM05B,EAAqDkC,EAArDlC,WAAiB/mB,GAAoCipB,EAAzC53B,IAAyC43B,EAApCjpB,KAAKqW,EAA+B4S,EAA/B5S,KAAMyR,EAAyBmB,EAAzBnB,MAAOF,EAAkBqB,EAAlBrB,IAAKpgC,EAAayhC,EAAbzhC,SAChDq/B,EAAYr/B,aAAQ,EAARA,EAAWA,EAASgE,OAAO,GACzC2gC,EAAUD,EAAKA,EAAK1gC,OAAO,GAC/B,GAAa,UAAT6B,EAAkB,CAIpB,IADA,IAAI++B,EAAIpsB,EACDosB,GAAG,KAAAC,EACRC,EAAsBL,EAAoBljC,GAAAA,GAAC,CAAC,EAAGqjC,GAAC,IAAEpsB,IAAK,OAAO,CAAC,CAAC,IAAGusB,GAAAx8B,EAAAA,EAAAA,GAAAu8B,EAAA,GAA5DE,EAAED,EAAA,GAAEE,EAAOF,EAAA,GAClB,GAAW,MAAPC,EAAY,CAEd,IAAME,EAAS,CACb5lB,EAAGqlB,EAAQrlB,EACX1e,QAAM+N,EAAAA,EAAAA,GAAMg2B,EAAQ/jC,QACpBukC,MAAIx2B,EAAAA,EAAAA,GAAMg2B,EAAQQ,OAGpBR,EAAQQ,KAAKC,QAAQ,KACrBT,EAAQ/jC,OAAOwkC,QAAQR,GAEvBF,EAAK7lB,KAAKqmB,GACVP,EAAUD,EAAKA,EAAK1gC,OAAO,EAC7B,CAEA2gC,EAAQQ,KAAKC,QAAQJ,IACrBH,EAAAF,EAAQ/jC,QAAOwkC,QAAO/kB,MAAAwkB,GAAAl2B,EAAAA,EAAAA,GAAIs2B,IAC1BL,EAAe,UAAXA,EAAE/+B,KAAmB++B,EAAEpsB,IAAM,IACnC,CAAC,IACqB6sB,EADrBC,EAAAjmB,GACiBqlB,GAAI,IAAtB,IAAAY,EAAAhmB,MAAA+lB,EAAAC,EAAA/lB,KAAAC,MAAwB,KAAA+lB,EAAbC,EAAGH,EAAAzqC,MACZgG,EAAS,GAAH+c,QAAAhP,EAAAA,EAAAA,IACA62B,aAAG,EAAHA,EAAK5kC,SAAU,KAAE+N,EAAAA,EAAAA,GACjBkgB,GAAQ,KAEdvP,EAAI,GACAkmB,SAAS,QAAND,EAAHC,EAAKL,YAAI,IAAAI,GAATA,EAAWvhC,SACbsb,GAAKkmB,EAAIL,KAAKvpC,KAAK,KAAO,KAC5B0jB,IAAMghB,EAAQ,IAAM,IAAMf,EAC1BjgB,GAAK,KAAOuP,GAAQ,IAAInzB,KAAI,SAAAoD,GAAC,MAAI,GAAG,IAAElD,KAAK,MAAQ,IACnD4pC,EAAIlmB,EAAIA,EACRkmB,EAAI5kC,OAASA,CACf,CAAC,OAAA6e,GAAA6lB,EAAAp9B,EAAAuX,EAAA,SAAA6lB,EAAA5lB,GAAA,CACH,KAAoB,SAAT7Z,GAETjF,EAASiuB,GAAQ,GACjBvP,EAAI,OAAH3B,OAAUyiB,EAAIxkC,KAAK,KAAI,KAAA+hB,OAAI/c,EAAOlF,KAAI,SAAAoD,GAAC,MAAI,GAAG,IAAElD,KAAK,MAAK,MACzC,UAATiK,EAETyZ,EAAI,KAAH3B,OAAQyiB,EAAIxkC,KAAK,KAAI,KACJ,aAATiK,GAA0C,aAAnBw5B,EAAUx5B,OApwBlBwD,EAowB4Dg2B,EAAUx1B,IApwBhE,CAAC,UAAUrH,SAAS6G,IAuwBlDiW,EAAItf,EAAStE,KAAI,SAACmc,GAAM,IAAA4tB,EACtB,GAAI5tB,IAAMwnB,EACR,OAAOxnB,EAAEhO,IACX,IAAA67B,EAAsBjB,EAAoBljC,GAAAA,GAAC,CAAC,EAAGsW,GAAC,IAAEW,IAAK,OAAO,CAAC,CAAC,IAAGmtB,GAAAp9B,EAAAA,EAAAA,GAAAm9B,EAAA,GAA5DV,EAAEW,EAAA,GAAEV,EAAOU,EAAA,GAElB,OADAF,EAAA7kC,GAAOie,KAAIwB,MAAAolB,GAAA92B,EAAAA,EAAAA,GAAIs2B,IACRD,CACT,IAAGppC,KAAK,MAERgF,EAAS,CAAC6gC,GACVniB,EAAI,KAQN,OALIqlB,IACFA,EAAQrlB,EAAIA,EACZqlB,EAAQ/jC,OAASA,GAGZ,CAAC0e,EAAG1e,EACb,EAEM4jC,GAAc,SAAC/C,EAAM1Y,EAAMhuB,EAAQ4tB,GAA4B,IAAAid,EAAtBjE,EAAU59B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAEpD8hC,EAAiB,SAAAx5B,GAAC,OAAI0yB,GAAc1yB,EAAG0c,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,EAChEqE,EAzFoB,SAACrE,GAE3B,IAAMiD,EAAO,CACX,CAACplB,EAAG,GAAI1e,OAAQ,GAAIukC,KAAM,KAG5B,OADAV,GAAqBhD,EAAMiD,GACpBA,EAAKhpC,KAAI,SAAAiZ,GAAW,MAAO,CAAC2K,EAAhB3K,EAAD2K,EAAoB1e,OAAX+T,EAAN/T,OAAwB,IAAG6b,UAAUrQ,QAAO,SAAAwI,GAAA,IAAE0K,EAAC1K,EAAD0K,EAAC,MAAY,KAANA,GAAkB,MAANA,CAAS,GACjG,CAkFiBymB,CAAoBtE,GAC7BuE,EAAYF,SAAW,QAALF,EAANE,EAAS,UAAE,IAAAF,OAAA,EAAXA,EAAatmB,EAC3BwmB,EAAO9hC,QACTqa,GAAOJ,MAAM,kBAAmBwjB,EAAM,IAAKuE,EAAWF,GAGxD,IAAIG,EAAaC,GAAmBzE,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,EAAYmE,EAAQD,GAClF,QAAmB5nC,IAAfgoC,EACF,OAAOA,EAGT,IAKIjY,EAAS7D,EAAY2E,EALrBqX,EAAUC,GAAgB3E,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,EAAYmE,EAAQD,GAC5E,QAAgB5nC,IAAZkoC,EACF,OAAOA,EAIT,IACgCE,EADhCC,EAAAjnB,GAC0BymB,GAAM,QAAAS,EAAA,WAAE,IAAAC,EAAAH,EAAAzrC,MAAtB0kB,EAACknB,EAADlnB,EAAG1e,EAAM4lC,EAAN5lC,OACPytB,EAAWtF,EAAKgB,MAAMzK,GAC5B,GAAI+O,EAAU,CAEZL,EAAUK,EAAS,GAEnB,IAAOwP,GADP1T,EAAamE,GAAcvzB,EAAQizB,IAC5B6P,SACD9P,EAAUntB,EAAOlF,IAAImqC,GACrBvE,GAAY3yB,EAAAA,EAAAA,GAAIkvB,EAAS0D,SAAS,eAAe7lC,KAAI,SAAAoZ,GAAA,IAAAE,GAAAzM,EAAAA,EAAAA,GAAAuM,EAAA,GAAM,OAAHE,EAAA,GAAGA,EAAA,EAAO,IAGtE,OAFF8Z,EAAU3nB,OAAOsR,YACf6oB,EAAU5lC,KAAI,SAACszB,EAAQpV,GAAC,MAAK,CAACoV,EAAQjB,EAAQnU,GAAG,KACjD,CAEJ,CACF,EAdA,IAAA0sB,EAAAhnB,MAAA+mB,EAAAC,EAAA/mB,KAAAC,OAAA+mB,MAeA,OAAA9mB,GAAA6mB,EAAAp+B,EAAAuX,EAAA,SAAA6mB,EAAA5mB,GAAA,CACA,IAAKsO,EAAS,KAC8ByY,EAD9BC,EAAArnB,GACU2K,GAAajvB,IAAO,IAA1C,IAAA2rC,EAAApnB,MAAAmnB,EAAAC,EAAAnnB,KAAAC,MAA4C,KAAAmnB,GAAAp+B,EAAAA,EAAAA,GAAAk+B,EAAA7rC,MAAA,GAAhC8kB,EAACinB,EAAA,GAAEjY,EAAEiY,EAAA,GACf,GAAIjY,EAAGkY,WAAY,CACjB,IAAIjY,OAAM,EACV,IACEA,EAASD,EAAGkY,WAAWnF,EACzB,CAAE,MAAM14B,GACN,CAEF,GAAI4lB,EAIF,IAAK,IAAIK,KAFT7E,EAAamE,GAAcvzB,EAD3BizB,EAAUtO,GAEVoP,EAAU,CAAC,EACQH,EACjBG,EAAQE,GAAU6W,EAAelX,EAAOK,GAG9C,CACF,CAAC,OAAAvP,GAAAinB,EAAAx+B,EAAAuX,EAAA,SAAAinB,EAAAhnB,GAAA,CACH,CAGA,GAAIsO,EAAS,CACX,IAAM6Y,EAAW,CAAC,EAClB,IAAK,IAAI7X,KAAU7E,EAAW0E,KAAM,CAClC,IAWSK,EAXHD,EAAY9E,EAAW0E,KAAKG,GAC9BD,EAASD,EAAQE,GACrB,QAAe/wB,IAAX8wB,EAEF,QAAe9wB,KADf8wB,EAASE,aAAS,EAATA,EAAWvC,eAElB,GAAIuC,UAAAA,EAAWE,WAIb,YADAxG,EAAKL,OAAOzJ,KAAK,oBAADlB,OAAqBqR,EAAM,aAAArR,OAAYqQ,SAIzDe,EAAS,CACPn0B,MAAOm0B,EACPjnB,SAAgB,QAANonB,EAAAH,SAAM,IAAAG,GAANA,EAAQxI,KAAO,OAAS,QAClCiH,UAAWsB,EAAUppB,MAIvBkpB,IACF8X,EAAS7X,GAAUD,EACvB,CAEA,MAAO,CACLjnB,SAAU,OACVlN,MAAO,CACL8rB,KAAMsH,EACNa,KAAMgY,GAERlZ,UAAWxD,EAAWiE,WAE1B,CAEqBqT,EAAdlC,YAEL5W,EAAKL,OAAOzJ,KAAK,aAADlB,OAAcqoB,EAAS,wBAG3C,EAEME,GAAqB,SAACzE,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,EAAYmE,EAAQD,GACxE,IAAIiB,EAAMC,EAAWC,EACfC,EAAa,GAEnB,IAAK,IAAI9F,KAAKpmC,EAAOya,QAAS,CAC5B,IACO4rB,EADWrmC,EAAOya,QAAQ2rB,GAC1BC,gBACP,GAAIA,EACF,IAAK,IAAIxnB,EAAI,EAAIA,EAAIwnB,EAAgBp9B,OAAS4V,IAAK,CACjD,IAAMstB,EAAK9F,EAAgBxnB,GAC3B,GAAIxB,GAAS8uB,GAAK,CAChB,IAAMxpB,EAAM,CAAC,EACb,GAAIF,GAAiB0pB,EAAIzF,EAAM/jB,GAAM,CACnC,IAAK,IAAM/hB,KAAK+hB,EACdA,EAAI/hB,GAAKkqC,EAAenoB,EAAI/hB,IAE9BsrC,EAAWpoB,KAAK,CACdS,EAAG,WAAF3B,OAAawjB,EAAC,qBAAAxjB,OAAoB/D,EAAC,KACpCunB,EAAAA,EACArS,QAASpR,GAEb,CACF,CACF,CAEJ,CAAC,IAE+BypB,EAF/BC,EAAA/nB,GAEyBymB,GAAM,IAAhC,IAAAsB,EAAA9nB,MAAA6nB,EAAAC,EAAA7nB,KAAAC,MAAkC,KAEE6nB,EAFFC,EAAAH,EAAAvsC,MAAtB0kB,EAACgoB,EAADhoB,EAAG1e,EAAM0mC,EAAN1mC,OAC0B2mC,EAAAloB,GAAzB0J,EAAKmY,WAAW5hB,IAAM,IACF,QAAAkoB,EAAA,WAAE,IAAAC,EAAAJ,EAAAzsC,MAAxBumC,EAACsG,EAADtG,EAAGG,EAASmG,EAATnG,UACPvT,EAAUntB,EAAOlF,IAAImqC,GACrB/W,EAAU3nB,OAAOsR,YACrB6oB,EAAU5lC,KAAI,SAACszB,EAAQpV,GAAC,MAAK,CAACoV,EAAQjB,EAAQnU,GAAG,KAEnDqtB,EAAWpoB,KAAK,CACdS,EAAAA,EACA6hB,EAAAA,EACArS,QAAAA,GAEJ,EAVA,IAAAyY,EAAAjoB,MAAA+nB,EAAAE,EAAAhoB,KAAAC,MAAAgoB,GAUC,OAAA/nB,GAAA8nB,EAAAr/B,EAAAuX,EAAA,SAAA8nB,EAAA7nB,GAAA,CACH,CAAC,OAAAD,GAAA2nB,EAAAl/B,EAAAuX,EAAA,SAAA2nB,EAAA1nB,GAAA,CAED,IAAK,IAALrE,EAAA,EAAAqsB,EAA8BT,EAAU5rB,EAAAqsB,EAAA1jC,OAAAqX,IAAE,CAArC,IAAAssB,EAAAD,EAAArsB,GAAOiE,EAACqoB,EAADroB,EAAG6hB,EAACwG,EAADxG,EAAGrS,EAAO6Y,EAAP7Y,QACV6F,EAAY55B,EAAOya,QAAQ2rB,GAC1ByG,EAAyBjT,EAAzBiT,gBAAiB/hC,EAAQ8uB,EAAR9uB,KAIxB,IAAK,IAAMlK,KAHXqrC,EAAc7F,EACd4F,EAAYznB,EACZwnB,EAAO,GACShY,EACT,CAAC,SAAStsB,SAASssB,EAAQnzB,GAAGmM,WACjCg/B,EAAKjoB,KAAK,GAADlB,OAAIhiB,EAAC,+BAAAgiB,OAA8BmR,EAAQnzB,GAAGmM,WAG3D,IAAIlN,EAAQk0B,EAAQziB,EAAEzR,MACtB,GAAIgtC,IAAoBd,EAAK9iC,OAAQ,KAAA6jC,EACnBD,EAAgBtvB,KAAKvd,EAAOoc,IAAK2X,EAAQziB,EAAGsoB,EAAW7F,GAAQgZ,GAAAv/B,EAAAA,EAAAA,GAAAs/B,EAAA,GAA9EjtC,EAAKktC,EAAA,IAAEhB,EAAIgB,EAAA,MACCt3B,MAAMC,QAAQq2B,KACzBA,EAAO,CAACA,GACZ,CACA,IAAKA,EAAK9iC,OACR,MAAO,CACL8D,SAAU,QACV6lB,UAAW9nB,EACXjL,MAAAA,EAGN,CAEIosC,GAAeF,EAAK9iC,QACtB2kB,EAAKL,OAAOzJ,KAAK,aAADlB,OAAcopB,EAAS,iCAAAppB,OAAgCqpB,EAAW,WAAArpB,OAAUmpB,EAAKlrC,KAAK,OAI1G,EAEMwqC,GAAkB,SAAC3E,EAAM1Y,EAAMhuB,EAAQ4tB,EAAMgZ,EAAYmE,EAAQD,GACrE,IAAIiB,EAAMxd,EAAOyd,EACegB,EADLC,EAAA3oB,GACDymB,GAAM,IAAhC,IAAAkC,EAAA1oB,MAAAyoB,EAAAC,EAAAzoB,KAAAC,MAAkC,KAEGyoB,EAFHC,EAAAH,EAAAntC,MAAtB0kB,EAAC4oB,EAAD5oB,EAAG1e,EAAMsnC,EAANtnC,OACuBunC,EAAA9oB,GAAtB0J,EAAKyY,QAAQliB,IAAM,IACE,QAmClC8oB,EAnCkCC,EAAA,WAAE,IAAAC,EAAAC,EAAAN,EAAArtC,MAAzBwhB,EAAEmsB,EAAFnsB,GAAIklB,EAASiH,EAATjH,UACRvT,EAAUntB,EAAOlF,IAAImqC,GAE3B,GADAvc,EAAQlN,EACG,aAAPA,EAAmB,CACrB,GACEulB,EAAW97B,KAAKuhB,WAAW,QACM,GAA9Bua,EAAW3hC,SAASgE,QACW,UAA/B29B,EAAW3hC,SAAS,GAAG6F,MACQ,IAA/B87B,EAAW3hC,SAAS,GAAG6J,IAC1B,OAAAwC,EACO,CACLxG,KAAM,WACN7F,SAAU+tB,IAGZ+Y,EAAKjoB,KAAK,gDAEd,CACAkoB,EAAYznB,EACZwnB,EAAO,GACP,IAAMluB,EAAQ7d,EAAOquB,UAAUE,GAChBoR,GAAc9hB,EAAtB0gB,OAAsB1gB,EAAd8hB,YACT5L,EAAU3nB,OAAOsR,YACrB6oB,EAAU5lC,KAAI,SAACszB,EAAQpV,GAAC,MAAK,CAACoV,EAAQjB,EAAQnU,GAAG,KAE7CrJ,EAAQue,EAAQ,GAChB0E,EAAgBrsB,OAAOC,KAAK0nB,GAAS1iB,QAAO,SAAAzQ,GAAC,OAAI9B,SAAS8B,GAAK,CAAC,IAAED,KAAI,SAAAC,GAAC,OAAImzB,EAAQnzB,EAAE,IAErFgyB,EAA+E,QAAtE2a,EAAGva,EAAQ3hB,QAAO,SAAAkN,GAAC,QAAMA,CAAC,IAAEoD,MAAK,SAAAxH,GAAU,MAAmB,UAAnBA,EAARpN,QAAkC,WAAC,IAAAwgC,OAAA,EAAnEA,EAAqE3a,UAIvF,GAHI+M,GAAc/M,IAAc+M,EAAWl4B,SAASmrB,IAClDmZ,EAAKjoB,KAAK,qBAADlB,OAAsB+c,EAAU,cAAA/c,OAAagQ,KAEnDmZ,EAAK9iC,OAAQ,OAAAqI,EACTs3B,GAAU5oC,EAAQ4tB,EAAMpY,EAAO+Y,EAAOkK,EAAeiO,GAEhE,EAnCA,IAAA0G,EAAA7oB,MAAA2oB,EAAAE,EAAA5oB,KAAAC,MAAA,GAAA4oB,EAAAC,IAAA,OAAAD,EAAA/7B,CAmCC,OAAAoT,GAAA0oB,EAAAjgC,EAAAuX,EAAA,SAAA0oB,EAAAzoB,GAAA,CACH,CAAC,OAAAD,GAAAuoB,EAAA9/B,EAAAuX,EAAA,SAAAuoB,EAAAtoB,GAAA,CAEG4J,GAASwd,EAAK9iC,QAChB2kB,EAAKL,OAAOzJ,KAAK,aAADlB,OAAcopB,EAAS,iCAAAppB,OAAgC2L,EAAK,WAAA3L,OAAUmpB,EAAKlrC,KAAK,OAIpG,EAEM+nC,GAAY,SAAC5oC,EAAQ4tB,EAAMpY,EAAO+Y,EAAOkK,EAAeiO,GAAS,IAAA+G,EAAAC,EACrE,IAAIjV,EAAcpnB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAErI,OAA/C,CAGA,IAAIwrB,EAAgB,QAALgZ,EAAAj4B,SAAK,IAAAi4B,GAALA,EAAO9hB,KAAO,OAAS,QAClCtO,GAAS7H,IAAUA,EAAMzI,WAE3B0nB,EAAWjf,EAAMzI,SACjByI,EAAQA,EAAM3V,OAEhB,IAAM6wB,EAAcqC,GAAe/yB,EAAQwV,GAC3C,GAAKkb,EAAL,CAKA,IAAMqH,EAAoBhF,GAAe/yB,EAAQ0mC,aAAI,EAAJA,EAAMG,aACjDre,EAAkC,UAApBkI,EAAY5lB,KAE1BotB,GADe1P,GAAekI,EAAYmF,KACC,WAA3BkC,aAAiB,EAAjBA,EAAmBjtB,OAErC0jB,EAAWxuB,EAAOquB,UAAUE,GAC1Bia,EAAmBxoC,EAAOquB,UAAkB,QAATqf,EAAClf,SAAQ,IAAAkf,OAAA,EAARA,EAAUzV,YAC9CwQ,GAAiB/B,aAAI,EAAJA,EAAM56B,MAAO,CAAC,WAAWrE,SAAS8mB,GAEnD4J,IADiBqQ,MAEnBxoC,EAAOS,SAAS23B,wBACfqQ,IACCjgB,GAAe0P,KAELwO,aAAI,EAAJA,EAAM56B,MAAOqsB,GAAUsQ,KAGrCla,EAAQC,EAASyJ,WACjBzJ,EAAWxuB,EAAOquB,UAAUE,GAC5BmY,EAAK56B,KAAO46B,EAAK56B,KAEnB,IAAM48B,IAAoBhC,UAAAA,EAAM56B,KAE1B6kB,EAAS6H,GAAoBx4B,EAAQwV,EAAO+Y,GAC5CsD,EAAe7xB,EAAOya,QAAQkW,GAAUD,EAAYkB,YACpDkH,EAAqBL,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEihB,eAAe,IAAElhB,QAAO,SAAAC,GAAC,OAASpO,MAALoO,CAAc,IACzFihB,EAAkBuG,EAAmB7vB,OAAS6vB,EAAmB,QAAK51B,EAExEgC,EAAM,CACR4F,KAAM,OACNS,GAAIwb,IACJkE,WAAUzkB,GAAA,CACRgP,MAAAA,EACAif,SAAAA,EACAoE,SAAUtK,EACV1uB,MAAO44B,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEzR,KAAK,IACrCkN,SAAU0rB,EAAc93B,KAAI,SAAA2Q,GAAC,OAAIA,EAAEvE,QAAQ,IAC3C6lB,UAAW6F,EAAc93B,KAAI,SAAA2Q,GAC3B,MAAkB,SAAdA,EAAEvE,YACG8kB,aAAY,EAAZA,EAAc/mB,QAAQ4lB,aAAW,EAAXA,EAAa5lB,QAErCwG,EAAEshB,SACX,KACIL,EAAkB,CAACA,gBAAAA,GAAmB,CAAC,IAS/C,OALImW,IACFxjC,EAAMssB,GAAkBtsB,EAAKlF,EAAQ0mC,EAAK56B,MAIrC5G,CAtDP,CAFE0oB,EAAKL,OAAOzJ,KAAK,uBAADlB,OAAwBpN,GAT1C,CAkEF,EAEMmzB,GAAiB,SAAHtuB,EAAoCkU,EAAOkK,EAAez4B,EAAQ4tB,GAAS,IAAtEqZ,EAAW5sB,EAAX4sB,YAAaD,EAAe3sB,EAAf2sB,gBACpC,GAAgC,SAA5BA,EAAgBj6B,SAClB,KAAM,wBAAN6V,OAA8B/e,KAAKvD,UAAU0mC,IAC/C,IAAM3R,EAAa2R,EAAgBnnC,MAC/B8tC,EAAc/E,GAAU5oC,EAAQ4tB,EAAMyH,EAAY9G,EAAOkK,GAC7D,GAAKkV,EAAL,CAEA,IAEIzoC,EAFEwrB,EAAcqC,GAAe/yB,EAAQq1B,GACrCQ,EAAOnF,aAAW,EAAXA,EAAamF,KAqC1B,OAjCE3wB,EADwB,WAAtB+hC,aAAW,EAAXA,EAAan8B,MACZtE,GAAAA,GAAA,GACGygC,GAAe,CAAC,GAAC,IACrBn8B,KAAM,aACNmgB,WAAUzkB,GAAAA,GAAAA,GAAA,GACLmnC,EAAY1iB,aACXgc,aAAW,EAAXA,EAAahc,aAAc,CAAC,GAAC,IACjC4K,KAAAA,MAKDrvB,GAAAA,GAAA,GACGmnC,GAAe,CAAC,GAAC,GAHd1G,EAGc,CACrBn8B,KAAM,aACN8f,UAAW,CAAEqc,GACbhc,WAAUzkB,GAAAA,GAAA,GACLmnC,EAAY1iB,YAAU,IACzB4K,KAAAA,KAKmB,CACrB/qB,KAAM,aACNmgB,WAAUzkB,GAAAA,GAAA,GACLmnC,EAAY1iB,YAAU,IACzB4K,KAAAA,OAKGtqB,KACPrG,EAAIqG,GAAKwb,KACJ7hB,CAvCW,CAwCpB,EAGM0iC,GAAc,SAAChL,EAAMC,EAAQ6J,EAAM1Y,EAAMhuB,EAAQ4tB,GACrD,GAAIgP,EAAK9xB,MAAQ+xB,EAAM/xB,KAAM,CAC3B,GAAiB,SAAb8xB,EAAK9xB,KAAiB,CACxB,IAAA8iC,EAAkC,CAAChR,EAAK+H,OAAQ9H,EAAM8H,QAAQhkC,KAAI,SAAA2Q,GAAC,OAAI61B,GAAW71B,EAAG0c,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,IAACmH,GAAArgC,EAAAA,EAAAA,GAAAogC,EAAA,GAAxGE,EAAUD,EAAA,GAAEE,EAAWF,EAAA,GAE9B,OAAOC,EAAWjuC,OAASkuC,EAAYluC,KACzC,CACE,IAAAmuC,EAA4B,CAACpR,EAAMC,GAAOl8B,KAAI,SAAA2Q,GAAC,OAAI61B,GAAW71B,EAAG0c,EAAMhuB,EAAQ4tB,EAAM8Y,EAAK,IAACuH,GAAAzgC,EAAAA,EAAAA,GAAAwgC,EAAA,GAApFE,EAAOD,EAAA,GAAEE,EAAQF,EAAA,GACxB,OAAOC,EAAQruC,OAASsuC,EAAStuC,KAErC,CACA,OAAO,CACT,EAEMwnC,GAAoB,SAACv4B,EAAKkf,EAAMhuB,EAAQ4tB,GAC5C,IAAIhD,EAAY,CAAC,EAEX8O,EAAQwN,GADD,KACiBp4B,EAAKkf,EAAMhuB,EAAQ4tB,GAUjD,OATI8L,IACF9O,EAAU8O,EAAMnuB,IAAMmuB,GAEd,CACR5uB,KAAM,eACNS,GAAIwb,IACJ6D,UAAAA,EACAK,WAAY,CAAC,EAGjB,EAEMic,GAAY,SAAClO,EAAMlqB,EAAKkf,EAAMhuB,EAAQ4tB,GAAsB,IAG5D8L,EAH4CgN,EAAI19B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACjDywB,EAAgBR,GAAuBj5B,EAAQ4tB,EAAMI,EAAMlf,EAAK43B,GA6BtE,OA1BI1N,GACFU,EAAQsK,GAAchL,EAAMhL,EAAMhuB,EAAQ4tB,EAAM8Y,KACnChN,EAAM5uB,MACC,SAAd4uB,EAAM5uB,OACR4uB,EAAQlI,GAAkBkI,EAAO15B,IAEnC05B,EAAM5uB,KAAO,eAEb8iB,EAAKL,OAAOzJ,KAAK,oBAADlB,OAAqB/e,KAAKvD,UAAUo5B,KACpDA,OAAQx2B,GAGVw2B,EAAQ,CACNnuB,GAAIwb,IACJjc,KAAM,aACNmgB,WAAY,CAAC,GAIbyO,IACFA,EAAMzO,WAAUzkB,GAAAA,GAAA,GACXkzB,EAAMzO,YACNwO,IAIAC,CACT,EAKM6P,GAAuB,SAAC7C,EAAM1Y,EAAMhuB,EAAQ4tB,GAChD,IAAIpkB,EAAO,GAgBX,OAfA,SAAS4kC,EAAuBnpC,GAC9BA,EAAStE,KAAI,SAAA4lB,GACX,GAAmB,YAAfA,EAAMzb,KACRsjC,EAAuB7nB,EAAMthB,cACxB,CACL,IAAMopC,EAAiBlH,GAAW5gB,EAAOyH,EAAMhuB,EAAQ4tB,EAAM8Y,GACzD2H,EACF7kC,EAAKsa,KAAKuqB,GAEVzgB,EAAKL,OAAOzJ,KAAK,iBAADlB,OAAkB2D,EAAMzb,KAAI,qBAEhD,CACF,GACF,CACAsjC,CAAuB1H,EAAKzhC,UACrB,CACL8H,SAAU,QACV6lB,UAAW,aACX/yB,MAAO2J,EAEX,EAEMyvB,GAAyB,SAACj5B,EAAQ4tB,EAAMI,EAAMlf,GAAqB,IAAAw/B,EAAAC,EAEnE1U,EACAlJ,EACAkB,EAY2C2c,EAhBQ9H,EAAI19B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC1DywB,EAAgB,CAAC,EAIfE,EAAuB5G,GAAe/yB,EAAQ,eAClC,aAAd8O,aAAG,EAAHA,EAAKhE,OAA+D,gBAAX,QAA9BwjC,EAAAtuC,EAAOS,SAAS6oC,sBAAc,IAAAgF,OAAA,EAA9BA,EAAgCxjC,OAI7D6lB,EAAS,aACTkJ,EAAU0P,GAAqBz6B,EAAKkf,EAAMhuB,EAAQ4tB,KAElD+C,EAASgJ,aAAoB,EAApBA,EAAsB/H,WAC/BC,EAAe7xB,EAAOya,QAAQkW,IAC9BkJ,EAAUsN,GAAWr4B,EAAKkf,EAAMhuB,EAAQ4tB,EAAM8Y,KACV,UAArB7M,EAAQ9sB,WACrB8sB,EAAQjH,WAAwB,QAAZ4b,EAAA3c,SAAY,IAAA2c,OAAA,EAAZA,EAAc1jC,QAAQ6uB,aAAoB,EAApBA,EAAsB7uB,OAAQ+uB,EAAQjH,YAGpF,IAAMgH,EAAY55B,EAAOya,QAAQkW,GACjC,GAAe,eAAXA,EAAyB,CAI3B,IAAM8d,EAAkB7U,aAAS,EAATA,EAAWiT,gBACnC,GAAI4B,EAAiB,CACnB,IAE0BC,EAF1BC,EAA8BF,EAAgBlxB,KAAKvd,EAAOoc,IAAKyd,GAAQ+U,GAAAphC,EAAAA,EAAAA,GAAAmhC,EAAA,GAAhEE,EAAOD,EAAA,GAAYA,EAAA,GACfjuC,KAAI,SAAAwM,GAAC,OAAIygB,EAAKL,OAAOzJ,KAAK3W,EAAE,IACxBjK,MAAX2rC,IACFpV,EAAgB,CACd55B,MAAO,CAACgvC,GACR9hC,SAAU,CAAC,SACX6lB,UAAW,CAAgB,QAAhB8b,EAAC9U,aAAS,EAATA,EAAW9uB,YAAI,IAAA4jC,EAAAA,EAAI,cAC/Bl5B,MAAO,eAGb,CACF,MAAsBtS,MAAX22B,GAA0C32B,OAAX,QAAPqrC,EAAA1U,SAAO,IAAA0U,OAAA,EAAPA,EAAS1uC,SAC1C45B,EAAgB,CACd55B,MAAO,CAACg6B,EAAQh6B,OAChBkN,SAAU,CAAC8sB,EAAQ9sB,UACnB6lB,UAAW,CAACiH,EAAQjH,WACpBpd,MAAO,gBAGX,OAAOikB,CACT,EAgBMjI,GAAoB,SAACsE,EAAM91B,GAAwB,IAAhB8L,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1C,MAAO,CACL8B,KAAM,QACNS,GAAIwb,IACJ6D,WAAShF,EAAAA,EAAAA,GAAA,GAAKkQ,EAAKvqB,GAAKuqB,GACxB7K,WAAY,CACVgK,YAAac,GAAmB/1B,GAChC8L,IAAKA,IAAO,GAGlB,E,ykBCvyCO,IAAMgjC,GAAkB,SAAC9uC,GAA2D,IAAnD+uC,IAAW/lC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASgmC,EAAmBhmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACzEimC,EAAgBjvC,EAAOS,SAAvBwuC,aACHtqB,GAAMqqB,EAAqCE,GAAmBlvC,EAAQgvC,GAA1CC,IAC3BF,GAAeI,GAAcnvC,EAAQgvC,IACrC,KAKL,OAHS,MAALrqB,GAA0B,iBAANA,GAAmBvF,EAAYuF,KACrDA,EAAIyH,GAAczH,IAEbA,CACT,EAEauqB,GAAqB,SAAClvC,GAAuC,IAAAmC,EAA/B6sC,EAAmBhmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC/D,IAAKgmC,EACH,OAAO,KACT,IAAM3a,GAAiBr0B,SAAgB,QAAVmC,EAANnC,EAAQS,gBAAQ,IAAA0B,OAAA,EAAhBA,EAAkBkyB,iBAAkB,IACrD+a,EAAwBrc,GAAe/yB,EAAQgvC,GACjDrqB,EAAIyqB,aAAqB,EAArBA,EAAuBH,aAI/B,OAHItqB,IACFA,EAAI,GAAA/B,QAAAhP,EAAAA,EAAAA,GAAI4hB,GAAcwZ,IAAoB,CAAErqB,IAAG9jB,KAAKwzB,IAE/C1P,CACT,EAEa0qB,GAAqB,SAACrvC,GAA+B,IAAAsvC,EAChE,SADoDtmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,MACF,QAAhCsmC,EAAItvC,EAAOS,SAAS8uC,oBAAY,IAAAD,OAAA,EAA5BA,EAA+B,KAAM,OAC7D,EAEaE,GAAqB,SAACxvC,EAAQwV,GAA8B,IAAvBu5B,IAAW/lC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACrD0nB,EAAcqC,GAAe/yB,EAAQwV,GACrCi6B,GAAiB/e,aAAW,EAAXA,EAAarC,YAAa,GAC3BqhB,EAAyB1vC,EAAOS,SAAjDkvC,gBACDD,IAA0BD,EAAehoC,SAASioC,KACpDA,EAAwB,MAC1B,IAAME,EAAuBlf,aAAW,EAAXA,EAAaif,gBACpCE,EAA0Bnf,aAAW,EAAXA,EAAaof,mBACvCC,EAAgBhB,EAAciB,GAAiBhwC,EAAQwV,GAAS,KAEtE,OADWq6B,GAA2BH,GAAyBE,GAAwBG,CAEzF,EAGaE,GAAyB,SAACjwC,EAAQ64B,EAAUrjB,GACvD,IAAI06B,EAAiBrX,EAAW2E,GAAkBx9B,EAAQ64B,EAAUrjB,GAAS,KAC7E,OAAK06B,GAEEA,EAAezuC,QAAU,IAAI8d,EAAAA,GAAAA,IAClC2wB,EAAezuC,SACZyuC,EAAezuC,QAAQ0uC,UAAY,CAAC,GAHhC,IAKX,EAEaC,GAAwB,SAACpwC,GAAyG,IAGnIqwC,EAAAC,EAAAC,EAHkCvB,EAAmBhmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAME,EAAIF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMwnC,IAAuBxnC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAAS+lC,EAAW/lC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC5HwM,EAAQ,KAAMqjB,EAAW,KAAMpE,EAAW,KACvCgc,EAAoBzwC,EAAOS,SAA3BgwC,iBACHvnC,GACFurB,EAAWvrB,SAAgB,QAAZmnC,EAAJnnC,EAAM+hB,kBAAU,IAAAolB,OAAA,EAAhBA,EAAkB5b,SAC7Bjf,EAAQtM,SAAgB,QAAZonC,EAAJpnC,EAAM+hB,kBAAU,IAAAqlB,OAAA,EAAhBA,EAAkB96B,MAC1BqjB,EAAW3vB,SAAgB,QAAZqnC,EAAJrnC,EAAM+hB,kBAAU,IAAAslB,OAAA,EAAhBA,EAAkB1X,UACpB2X,GAGP/b,GAFFjf,EAAQs5B,GAAgB9uC,EAAQ+uC,EAAaC,IAEhC5vB,EAAY5J,GAAS,OAAS,QAE9B65B,GAAmBrvC,GAEhC64B,EAAW2W,GAAmBxvC,EAAQwV,GAAO,IAE7Cif,EAAW4a,GAAmBrvC,GAEhC,IAAI0wC,EAAU,IAAInxB,EAAAA,GAAAA,IAAc,CAC9BkV,SAAUA,EACVjf,MAAOA,EACPqjB,SAAUA,EACVh5B,MAAO,IAAI0f,EAAAA,GAAAA,KACXxS,SAAU,IAAIwS,EAAAA,GAAAA,KAEd2L,gBAAiB+kB,GAAuBjwC,EAAQ64B,EAAUrjB,KAM5D,GAJIi7B,IACFC,EAAUA,EAAQC,IAAI,aAAc,IAAIpxB,EAAAA,GAAAA,OAGtC/J,GAASqjB,EAAU,CACrB,IACA+X,EAA0EC,GACxE7wC,EAAQA,EAAQ0wC,EAASl7B,EAAOqjB,EAAU,YAF7B,GACVzmB,EAAQw+B,EAARx+B,SAAU0+B,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAAcC,EAAaJ,EAAbI,cAAeC,EAAaL,EAAbK,cAGzDP,EAAUA,EACPC,IAAI,QAASv+B,GACbu+B,IAAI,WAAYG,GAChBH,IAAI,YAAaI,GAChBN,IACFC,EAAUA,EACPC,IAAI,aAAcK,GAClBL,IAAI,aAAcM,GAEzB,CACA,OAAOP,CACT,EAGa/X,GAA0B,SAAC34B,GAA+B,IAAvB0wB,EAAW1nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAEtDkoC,GADNxgB,EAAcqC,GAAe/yB,EAAQ0wB,KACRA,EAAY7B,cAAgBziB,OAAOC,KAAKrM,EAAO6uB,cAC5E,OAAoB,GAAhBqiB,EAAMjoC,OACDioC,EAAM,GACRlxC,EAAOS,SAASk4B,yBAA2B34B,EAAOS,SAASs1B,oBAAsBmb,EAAM,EAChG,EAEanb,GAAqB,SAAC/1B,GAAM,OACvCA,EAAOS,SAASs1B,oBAAsB3pB,OAAOC,KAAKrM,EAAO6uB,cAAc,EAAE,EAE9DsiB,GAAyB,SAACnxC,GAAM,IAAE0wB,EAAW1nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAK,IAAIuW,EAAAA,GAAAA,IAAc,CACtF0V,YAAa0D,GAAwB34B,EAAQ0wB,GAC7C5kB,KAAK,GACL,EAEWslC,GAAwB,SAACpxC,EAAQkJ,GAAS,IAAAmoC,EACrD,OAAOnoC,GAAqB,SAAbA,EAAK4B,KAChBqmC,GAAuBnxC,EAAQkJ,SAAgB,QAAZmoC,EAAJnoC,EAAM+hB,kBAAU,IAAAomB,OAAA,EAAhBA,EAAkB77B,OACjD46B,GAAsBpwC,EAAQ,KAAMkJ,EAC1C,EAEaooC,GAAc,SAAC/lC,EAAIvL,GAAM,OAAA4lB,EAAAA,EAAAA,GAAA,GACnCra,EAAK,IAAIgU,EAAAA,GAAAA,IAAc,CACtBzU,KAAM,OACNS,GAAIA,EACJ0f,WAAYmlB,GAAsBpwC,KAClC,EAGSuxC,GAAc,SAACvxC,GAAqC,IAA7BwxC,IAAiBxoC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACnD,OAAO,IAAIuW,EAAAA,GAAAA,IAAc,CACvBzU,KAAM,QACNS,GAAIwb,IACJ6D,UAAW,IAAIrL,EAAAA,GAAAA,WAAqBiyB,EAAiBhrC,GAAA,GAAQ8qC,GAAYvqB,IAAQ/mB,IAAY,CAAC,GAC9FirB,WAAYkmB,GAAuBnxC,IAEvC,EAEayxC,GAA2B,SAACpxB,GACvC,OAAIf,EAAgBe,GACXA,EACFqxB,GAAoB,CAACrxB,GAC9B,EAEaqxB,GAAsB,SAACruB,GAClC,OAAI/D,EAAgB+D,GACXA,EACF,IAAI9D,EAAAA,GAAAA,KAAe8D,EAC5B,EAEasuB,GAAkB,WAAH,OAAS,IAAIpyB,EAAAA,GAAAA,GAAe,E,olDCtJjD,I,GAAMqyB,GAAc,SAAC1oC,EAAMlJ,GAAsD,IAElF4tB,EAAO,CACTL,OAAQ,GACR9sB,SAAU,CACRoxC,aALgD7oC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAMhD8oC,YANqE9oC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,KAUnE8kB,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDgC,EAAM+2B,GAAW/yB,EAAM4kB,EAAgBF,EAAM,MAInD,OAFIA,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,oCAAqC2K,EAAKL,QAClDroB,CACT,EAGM+2B,GAAa,SAAC/yB,EAAMlJ,EAAQ4tB,GAA6B,IAAvBgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACpD,GAAKE,EAAL,CACA,IAAM4B,EAAO5B,EAAK2c,IAAI,QAGtB,OAFiB3c,EAAK2c,IAAI,aAEZ,UAAT/a,GAA6B,eAATA,EAChBoxB,GAAYhzB,EAAMlJ,EAAQ4tB,EAAMgD,GACrB,SAAT9lB,EACFqxB,GAAWjzB,EAAMlJ,EAAQ4tB,EAAMgD,QADjC,CANoB,CAW7B,EAGMsL,GAAc,SAAChzB,EAAMlJ,EAAQ4tB,GAA6B,IAAAmkB,EAAAC,EAAvBphB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACrD6pB,EAAsCjF,EAAKntB,SAAnCoxC,EAAYhf,EAAZgf,aAAcC,EAAWjf,EAAXif,YAChBhnC,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C0X,EAAO5K,EAAWpF,IAAI,QACtB5gB,EAAWiE,EAAK2c,IAAI,cAAgB,IAAIkX,EAAAA,GAExCvU,EAAwB,eAAT1d,EAEfuqB,EAAa7M,GAAuB,SAARqN,EAAkB5K,EAAWpF,IAAI,SAAW,KACxEsX,EAAyB,eAATryB,EAAwBmgB,EAAWpF,IAAI,YAAc,KACrEosB,EAA2B9U,EAA4D,QAA/C4U,EAAkC,QAAlCC,EAAGhyC,EAAOquB,UAAU8O,UAAc,IAAA6U,OAAA,EAA/BA,EAAiCj0B,mBAAW,IAAAg0B,EAAAA,EAAI,OAAI7uC,EAC/FgvC,EAAuB1pB,GAAwB,UAATqN,GAAoBoc,GAA4B,EACtFnmC,EAAMmf,EAAWpF,IAAI,OACrBT,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAWS,EAAc18B,EAAQ4tB,EAAMyH,EAAW,IACxEhkB,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAC/D,GAAKwV,GAAyB9sB,EAAKxe,MAASkrC,EAA5C,CAIA,IAAI7c,EAAchK,EAAWpF,IAAI,eAC5BoP,IACHA,EAAcc,GAAmB/1B,IACnC,IAIIojB,EAJE4Z,EAAwBh9B,EAAO6uB,aAAaoG,GAE5Ckd,EAAU/sB,EAAKxe,KAAOo2B,EAAsBoV,WAAW70B,KAAKvd,EAAOoc,IAAKgJ,EAAM6P,EAAanpB,EAAK+lC,GAAgB,KAGtH,GAAIxc,EAAY,CACd,IAAMgd,EAAWlW,GAAWjzB,EAAMlJ,EAAQ4tB,EAAMgD,GAAa,GAC7D,GAAIyhB,EAAU,KAAAC,EACNnU,EAAQkU,EAASz8B,MACjBke,EAAO,CACXqe,GAAOvvB,QAAAhP,EAAAA,EAAAA,GACJy+B,IAELjvB,GAAMkvB,EAAAtyC,EAAOS,SAAS8xC,YAAWh1B,KAAI+H,MAAAgtB,EAAA,CAACtyC,EAAOoc,KAAGwG,QAAAhP,EAAAA,EAAAA,GAAKkgB,KACjDqK,IACF/a,EAAMpjB,EAAOS,SAAS+xC,cAAcj1B,KAAKvd,EAAOoc,IAAKgH,EAAK,KAAM,KAAM,KAAM,KAAMyuB,GAEtF,CACF,MACEzuB,EAAM+uB,EAMR,OAHIL,GAAsB,MAAP1uB,IACjBA,EAAM,KAEDA,CA9BP,CA+BF,EAkFM+Y,GAAa,SAACjzB,EAAMlJ,EAAQ4tB,GAAiD,IAA3CgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMypC,EAAUzpC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACpE0pC,EAAsC9kB,EAAKntB,SAAnCoxC,EAAYa,EAAZb,aAAcC,EAAWY,EAAXZ,YAChB7mB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C3I,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAC5BgT,EAAW5N,EAAWpF,IAAI,YAC1BqF,EAAkBD,EAAWpF,IAAI,mBACrC,GAAc,MAATrQ,GAA6B,MAAZqjB,GAAsBiZ,EAA5C,CAGA,IAAMtX,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC/C+qB,EAAc/C,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EAC7DyiB,EAAasI,EAAYtI,WACzB0a,EAAiBnV,GAAkBx9B,EAAQi4B,EAAYziB,IAAU,CAAC,EAGlE2oB,GAAQ,EACRC,EAAKmC,EAAYqS,SACrB,IAAKxU,GAAMnG,IACTmG,EAAKuU,EAAeC,UACZ,CACNzU,GAAQ,EAAK,IAAA97B,EACY,CAAC41B,EAAYY,GAArCA,EAAQx2B,EAAA,GAAE41B,EAAU51B,EAAA,OAAAyD,EACW,CAAC6sC,EAAgBpS,GAAhDA,EAAWz6B,EAAA,GAAE6sC,EAAc7sC,EAAA,EAC9B,CAUF,GAPIgsC,IAAgBjZ,IAClBA,EAAW,KAIRuF,IACHA,EA5DsB,SAACvF,EAAUyF,EAAoB1Q,GACvD,IAGIwQ,EAHI0T,EAAgBlkB,EAAKntB,SAArBqxC,YACFe,GAAMvU,aAAkB,EAAlBA,EAAoBwU,iBAAkBja,EAC5C9a,EAAcH,EAAiB0gB,GAqBrC,OAnBmB,GAAfvgB,EACFqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACpE,MAAO,GAAPjvB,OAAUpN,EAAK,KAAAoN,OAAIiwB,EACrB,EACwB,GAAf90B,EACTqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACpE,OAAIC,GAAsB,MAAPzwB,GAAyB,MAAX8J,EACxB3V,GAAmB,MAAVA,EAAgB,GAAHoN,OAAMpN,EAAK,MAAO,IAE1C,GAAPoN,OAAUpN,EAAK,KAAAoN,OAAIiwB,EAAG,KAAAjwB,OAAIuI,EAC5B,EACwB,GAAfpN,IAETqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GAAiB,IAAAkB,EAAAC,EAC/EC,EAAU9nB,SAAa,QAAP4nB,EAAN5nB,EAAQmV,aAAK,IAAAyS,OAAA,EAAbA,EAAAx1B,KAAA4N,GACV+nB,EAAQ/nB,SAAW,QAAL6nB,EAAN7nB,EAAQtF,WAAG,IAAAmtB,OAAA,EAAXA,EAAAz1B,KAAA4N,EAAc,GAC5B,MAAO,GAAPvI,OAAUpN,EAAK,KAAAoN,OAAIiwB,EAAG,KAAAjwB,OAAIqwB,EAAO,SAAArwB,OAAQswB,EAC3C,GAEK9U,CACT,CAmCSQ,CAAkB/F,EAAU0H,EAAa3S,IAC3CwQ,EAAL,CAIA,IAAMP,EAA8B,SAAbpJ,EACnB4K,GAAWr/B,EAAQ4tB,EAAMpY,EAAOob,GAChCkN,GAAY99B,EAAQ4tB,EAAMpY,EAAOob,GACrC,GAAsB1tB,MAAlB26B,EAAJ,CAIA,IAAAvB,EA5HsB,SAACt8B,EAAQirB,EAAY2C,EAAMulB,EAAWviB,GAC5D,IAaI6L,EACAmD,EAdJ1J,EAAsCtI,EAAKntB,SAArBqxC,GAAF5b,EAAZ2b,aAAyB3b,EAAX4b,aAChBt8B,EAAQyV,EAAWpF,IAAI,SACvB0Z,EAAYtU,EAAWpF,IAAI,YAC3B2Z,EAAavU,EAAWpF,IAAI,aAC5B2U,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC7CqjB,EAAWsa,GAAaloB,EAAWpF,IAAI,YACvC0a,EAAc/C,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EAC7DuI,EAAcH,EAAiB2iB,GAC/Bd,EAASxU,EAAWpF,IAAI,SACxB0M,EAAkBtH,EAAWpF,IAAI,mBAEnC6Z,EAAY,GACZC,EAAa,GAgCjB,OA5Bcz8B,MAAVu8B,MACFG,EAASH,EAAO9+B,KAAI,SAACk/B,EAAc1d,GACjC,IAAMpV,EAAWwyB,EAAYA,EAAU1Z,IAAI1D,GAAO,KAC5CyQ,EAAY4M,EAAaA,EAAW3Z,IAAI1D,GAAO,KAC/C2d,EAAUgS,EAA8DjS,EAAhDE,GAAcF,EAAc9yB,EAAU/M,GAC9D2wB,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtDizB,EAAiBC,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,EAAU,CAAEmzB,WAAW,IAChGC,EAAKC,GACPpgC,EAAQ4tB,EAAMkS,EAAQ/yB,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAU0H,EAAa3P,EAAa2B,GAM3G,YAJWrvB,IAAPi9B,IACFT,EAAU5b,KAAK/W,GACf4yB,EAAW7b,KAAK8O,IAEXuN,CACT,KACkC9uB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,IAClCg5B,EAAOh5B,OAASmX,IAElD0e,EAAiC,GAAf1e,EAAmB6hB,EAAOU,QAAUV,GAGtDkS,IAAgBrV,IAClBA,EAAiB1e,EAAc,EAAI,IAAIgf,EAAAA,GAAKtnB,MAAMmf,KAAK,CAAC3rB,OAAQ8U,IAAcpd,KAC5E,SAACoD,EAAG8a,GAAC,IAAAu0B,EAAAC,EAAA,OAAmB,QAAnBD,EAAW,QAAXC,EAAKzT,SAAM,IAAAyT,OAAA,EAANA,EAAQxtB,IAAIhH,UAAE,IAAAu0B,EAAAA,EAAI,GAAG,KAC7B,KAGC,CACL3W,EACCiD,EAAUz2B,OAAS,EAAIy2B,EAAYA,EAAU,GAC7CC,EAAW12B,OAAS,EAAI02B,EAAaA,EAAW,GAErD,CA0EgDpD,CAC5Cv8B,EAAQirB,EAAY2C,EAAMiL,EAAUjI,GACrC4L,GAAAhvB,EAAAA,EAAAA,GAAA8uB,EAAA,GAFMG,EAAcD,EAAA,GAAEzvB,EAAQyvB,EAAA,GAAE5J,EAAS4J,EAAA,GAG1C,QAAuBt5B,IAAnBu5B,EAAJ,CAIA,IAAM3I,EAAO,CACX+J,EACAhF,EACA4D,EACA1vB,EACA6lB,EACA/vB,EAAK09B,EAAanjB,GAClB8N,EACA2mB,EACArX,EACA2D,GAGF,GAAIsU,EACF,OAAO3e,EACF,IAAAwf,EAEDlwB,GAAMkwB,EAAAlV,GAAG7gB,KAAI+H,MAAAguB,EAAA,CAACtzC,EAAOoc,KAAGwG,OAAKkR,IAOjC,OAJIqK,IACF/a,EAAMpjB,EAAOS,SAAS+xC,cAAcj1B,KAAKvd,EAAOoc,IAAKgH,EAAKyV,EAAUZ,EAAYsI,EAAaoS,EAAgBd,IAGxGzuB,CA1BT,CARkB,CAPA,CA3BA,CAsEpB,EAGMgd,GAAc,SAACpgC,EAAQ4tB,EAAM/tB,EAAOkN,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAUhb,GAA+C,IAY5IuF,EAZoGwN,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMupB,EAAevpB,UAAAC,OAAA,GAAAD,UAAA,SAAA9F,EAC3IqwC,EAAsC3lB,EAAKntB,SAAnCoxC,EAAY0B,EAAZ1B,aAAcC,EAAWyB,EAAXzB,YACtB,QAAc5uC,IAAVrD,EACF,OAAIiyC,EAC6B,WAA3B9R,aAAc,EAAdA,EAAgBwT,QACX,GAEF,SAEP,EAIJ,GAAgB,SAAZzmC,EACFqW,EAAM0a,GAAY99B,EAAQ4tB,EAAM/tB,EAAO+wB,QAClC,GAAgB,QAAZ7jB,EACTqW,EAAMic,GAAWr/B,EAAQ4tB,EAAM/tB,EAAO+wB,QAEtC,GAA2C,mBAAhCoP,aAAc,EAAdA,EAAgBI,aAA4B,CACrD,IAAMhC,EAAK4B,EAAeI,YACpBtM,EAAO,CACXj0B,EAAK2G,GAAAA,GAAA,GAEAi6B,KAAKjG,EAAU,CAAC,gBAAiB,gBAAc,IAClDjI,gBAAAA,IAGF1vB,EAAKm9B,EAAgB7iB,GACrB00B,GAMF,GAJIhZ,IACF/E,EAAKhQ,KAAK+U,GACV/E,EAAKhQ,KAAKjG,IAEI,SAAZ9Q,EAAqB,CACvB,IAAM2zB,EAAqB3N,GAAe/yB,EAAQH,IAAU,CAAC,EAC7Di0B,EAAKhQ,KAAK4c,EACZ,CACAtd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MACE1Q,EAAMvjB,EAGV,OAAOujB,CACT,EAGM0a,GAAc,SAAC99B,EAAQ4tB,EAAMpY,GAAqD,IAA9Cob,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMyqC,IAAczqC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAC1E0qC,EAAsC9lB,EAAKntB,SAAnCoxC,EAAY6B,EAAZ7B,aAAcC,EAAW4B,EAAX5B,YACtB3vC,EAAgDnC,EAAOS,SAAhCkzC,GAAFxxC,EAAdkyB,eAAqClyB,EAArBwxC,uBACnBvwB,EAAM,KACV,GAAI5N,EAAO,CACT,IAAMmrB,EAAkB5N,GAAe/yB,EAAQwV,IAAU,CAAC,EACpDorB,EAAapL,GAAchgB,EAAOxV,GAClC4zC,EAAmBC,GAAmBr+B,EAAOxV,EAAQyzC,EAAiB7iB,EAAc,MACpFkjB,EAAiBF,EAAmBA,EAAiB/yC,KAAK8yC,GAAyB,KACnFI,EAAcpT,EAAgBqT,QAAUF,EAG9C1wB,GAAM2d,EAFgB/gC,EAAOS,SAASq9B,aACpBoD,GAAgB1rB,EAAOxV,EAAQ4tB,EAAM6lB,EAAiB7iB,EAAc,KAAM,CAACqjB,cAAc,IAC5ErT,EAAYmT,EAAapT,EAAiB3gC,EAAQ6xC,EACnF,MAAUC,IACR1uB,EAAM,KAER,OAAOA,CACT,EAGMic,GAAa,SAACr/B,EAAQ4tB,EAAMsmB,GAAkC,IAAAC,EAAAC,EAAAC,EAAvBzjB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACzDsrC,EAAsC1mB,EAAKntB,SAAnCoxC,EAAYyC,EAAZzC,aAAcC,EAAWwC,EAAXxC,YAChB7e,EAAUihB,SAAc,QAALC,EAATD,EAAWruB,WAAG,IAAAsuB,OAAA,EAAdA,EAAA52B,KAAA22B,EAAiB,QACjC,IAAKjhB,EACH,OAAO6e,EAAc,WAAQ5uC,EAE/B,IAAM4wB,EAAoB,QAAhBsgB,EAAGF,EAAUruB,WAAG,IAAAuuB,OAAA,EAAbA,EAAA72B,KAAA22B,EAAgB,QACvB9kB,EAAamE,GAAcvzB,EAAQizB,GACzC,GAAK7D,GACE0iB,EADP,CAMA,IAS6B1tB,EATvBmwB,EAAY/e,GAAcvC,EAASjzB,GACnCw0C,EAAcD,EAAUA,EAAUtrC,OAAO,GACzCwrC,EAAW5C,IAAgBziB,aAAU,EAAVA,EAAYxrB,QAAS4wC,EAElD7S,EAAgB,CAAC,EACjBC,EAAO,GACPC,EAAiB,GACjB6S,EAAyB,CAAC,EACsErwB,EAAAC,GAAnF8K,EAAahjB,OAAOC,KAAK+iB,EAAW0E,MAAQ,CAAC,IAAKA,SAAY,QAARugB,EAAJvgB,EAAM6gB,cAAM,IAAAN,OAAA,EAAZA,EAAA92B,KAAAuW,GAAiBvL,YAAa,IACpE,IAA7B,IAAAlE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA+B,KAAAqd,EAApB7N,EAAM7P,EAAAvkB,MACTq0B,EAAY9E,aAAU,EAAVA,EAAY0E,KAAKG,GAC7BuG,EAAWzH,GAAe/yB,EAAQk0B,GACxClvB,EAAmCkvB,GAAa,CAAC,EAA1CvC,EAAY3sB,EAAZ2sB,aAAcyC,EAAUpvB,EAAVovB,WACf4N,EAAkBrQ,SAAAA,EAAchG,KAAO,OAAS,QAChDipB,EAAU/C,IAAgB3d,aAAS,EAATA,EAAWtwB,QAASqwB,EAC9CD,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACrC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EACxCg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EAClC,SAAhBg/B,GAAkC,QAAZJ,EAAIG,SAAQ,IAAAH,GAARA,EAAUziB,OAEtC4iB,EAAWA,EAAS5iB,QAEtB,IAAM8iB,EAAqBnO,EAASA,EAAOnO,IAAI,wBAAqB3iB,EAC9Do/B,EAAkBlC,GACtBpgC,EAAQ4tB,EAAMqU,EAAUC,EAAahO,aAAS,EAATA,EAAWppB,KAAM0vB,EAAUtG,EAAW,KAAM,KAAMtD,EAAauR,GAEtFj/B,MAAZ++B,QAA6C/+B,IAApBo/B,GACR,QAAfJ,GACFtU,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8BqR,EAAM,cAAArR,OAAaqQ,IAGrE,IAAIsP,OAAmB,EACvB,QAAwBr/B,IAApBo/B,IAAkClO,GAA8BlxB,MAAhByuB,QAItBzuB,KAH5Bq/B,EAAsBnC,GACpBpgC,EAAQ4tB,EAAM+D,EAAcqQ,EAAiB9N,aAAS,EAATA,EAAWppB,KAAM0vB,EAAUtG,EAAW,KAAM,KAAMtD,EAAauR,IAK5G,YAFuB,QAAnBH,GACFpU,EAAKL,OAAOzJ,KAAK,qCAADlB,OAAsCqR,EAAM,cAAArR,OAAaqQ,KAK/E,IAAMyP,EAAoBJ,QAAAA,EAAmBC,EAC7C,QAA0Br/B,IAAtBw/B,EAAiC,CACnC,GAAId,EAAK34B,OAAQ,KACmCuqB,EADnCC,EAAAnP,GAC6B2P,GAAM,IAAlD,IAAAR,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAAoD,KAAAiP,GAAAlmB,EAAAA,EAAAA,GAAAgmB,EAAA3zB,MAAA,GAAxC+iC,EAAYlP,EAAA,GAAeA,EAAA,GACrCiO,EAAciB,QAAgB1/B,CAEhC,CAAC,OAAAwhB,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACDid,EAAO,EACT,CACAD,EAAc1N,GAAUyO,EACxBgS,EAAuBE,GAAWlS,CACpC,MACOtO,GACHyN,EAAe/d,KAAKmQ,GACtB2N,EAAK9d,KAAK,CAACmQ,EAAQ2gB,GAEvB,CAAC,OAAAlwB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACD,IAAIkd,EAAe54B,QAEZ6oC,EAFP,CAOA,IAAI1uB,EAAM,KACV,GAAsC,mBAA3BgM,aAAU,EAAVA,EAAYiQ,YAA2B,CAChD,IAAMjB,EAAKhP,EAAWiQ,WAChBvL,EAAO,CACX6N,EACAkQ,GAEFzuB,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,KAAO,CACL,IAAM+gB,EAAUzoC,OAAOuR,QAAQk0B,EAAe6C,EAAyB/S,GACpEhhC,KAAI,SAAAqF,GAAA,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAEpF,EAAC6C,EAAA,GAAE6N,EAAC7N,EAAA,UAAOouC,EAAe,GAAHjvB,OAAMhiB,EAAC,MAAAgiB,OAAKtR,GAAC,GAAAsR,OAAQtR,EAAG,IACrDzQ,KAAK,MACRuiB,EAAM,GAAHR,OAAM6xB,EAAQ,KAAA7xB,OAAIiyB,EAAO,IAC9B,CACA,OAAOzxB,CAhBP,CAlEA,MAHIwK,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,6BAsFtC,ECpaa6hB,GAAc,cACdC,GAAmB,mBACnBC,GAAc,cACdC,GAAa,aACbC,GAAsB,sBACtBC,GAAyB,yBAEzBC,GAAyB,yBACzBC,GAAgB,gBAChBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAiC,iCACjCC,GAAoB,oBACpBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAyB,yBACzBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA0B,0BAC1BC,GAA+B,+BAC/BC,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAAiC,iCACjCC,GAAgC,gCAChCC,GAAuB,uBACvBC,GAAiC,iCACjCC,GAAwB,wBACxBC,GAAiC,iCACjCC,GAAgB,gBAEhBC,GAAgB,gBAChBC,GAAqB,qBACrBC,GAAgC,gCAChCC,GAAwB,wBAExBC,GAAmB,Q,YCrCnBC,IAAYC,GAAG,CAAC,GAAJtxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAsxB,GACtBC,GAAwB,eACxBA,GAA6B,2CAC7BA,GAAwB,eACxBA,GAAuB,cACvBA,GAAgC,iCDCL,iBCAA,yDAC3BA,GAAmC,uCACnCA,GAAmC,sCACnCA,GAA0B,iBAC1BA,GAAmC,mFAAgFvxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAsxB,GACnHC,GAAmC,4CACnCA,GAA2C,8DAC3CA,GAA4B,mBAC5BA,GAA2B,kBAC3BA,GAA2B,kBAC3BA,GAA8B,yCAC9BA,GAAiC,OAAS,kEAC1CA,GAAiC,SAAW,oEAC5CA,GAA6B,wDAC7BA,GAAiC,0EAAuEvxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAsxB,GACxGC,GAAoC,+EACpCA,GAAyC,yFACzCA,GAAsC,4EACtCA,GAAoC,IAAIA,GAA6B,iFACrEA,GAAsC,yEACtCA,GAAoC,IAAIA,GAA6B,iFACrEA,GAAsC,iCACtCA,GAA2C,6CAC3CA,GAA0C,yDAC1CA,GAAiC,mEAAgEvxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAsxB,GACjGC,GAA2C,wDAC3CA,GAAkC,8DAClCA,GAA2C,0FAC3CA,GAA0B,iBAE1BA,GAA+B,QAC/BA,GAAwB,SAAW,0BACnCA,GAAwB,UAAY,4BACpCA,GAAwB,eAAiB,kCACzCA,GAAwB,eAAiB,4BACzCA,GAAwB,kBAAoB,mCAAgCvxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAsxB,GAC5EC,GAAwB,mBAAqB,oCAC7CA,GAAwB,wBAA0B,0CAClDA,GAAwB,wBAA0B,oCAClDA,GAAkC,+BAClCA,GAA0C,8CC7ChCC,GAAM,iBACNC,GAAO,GAAHz0B,OAAMw0B,GAAG,KAEpBE,GAAOC,GAAAA,GAAAA,iBACbD,GAAKpgB,KAAK,CACRsgB,YAAa,OAEfF,GAAKG,aAAa,KAAML,GAAKM,IAEtB,IAAMC,GAAsB,SAAtBA,EAAuB5wC,EAAK+sB,GACvC,OAAI/sB,SAAAA,EAAK6wC,IAEA7wC,EAAI6wC,IAET7wC,SAAAA,EAAKA,IACA4wC,EAAoB5wC,EAAIA,IAAKA,EAAI+sB,MAE7B,OAATA,EACK/sB,EAEFuwC,GAAKO,EACV9wC,EAAIU,SAAS,KAAOV,EAAMswC,GAAKtwC,EAC/B+sB,EAEJ,EAEA,Y,ykBCTA,IAAMgkB,GAAS,SAACxmC,GACd,MAAiB,YAAbqB,EAAAA,EAAAA,GAAOrB,IAAwB,OAANA,GAAcmE,MAAMC,QAAQpE,GAChD,SAEPqB,EAAAA,EAAAA,GAAerB,EACnB,EAWaymC,GAAc,SAACpyB,EAAM3lB,GAChC,OAAiD,IAA1Cg4C,GAAiBryB,EAAM3lB,GAAQiJ,MACxC,EAIa+uC,GAAmB,SAACryB,EAAM3lB,GACrC,IAAOywC,EAAoBzwC,EAAOS,SAA3BgwC,iBACHwH,EAAY,GA2BhB,OAHItyB,GAtBJ,SAASM,EAAc/c,EAAMR,EAAMge,GAAK,IAAAwxB,EAAAC,EAChC5sC,EAAKrC,EAAK2c,IAAI,MACd5gB,EAAWiE,EAAK2c,IAAI,aACpBuyB,EAAalvC,EAAKmd,MAAM,CAAC,aAAc,eACvCgyB,EAAanvC,EAAKmd,MAAM,CAAC,aAAc,eACvC7Q,EAAQtM,EAAKmd,MAAM,CAAC,aAAc,UAClCiyB,EAA+B,QAAvBJ,EAAG1iC,SAAU,QAAL2iC,EAAL3iC,EAAOqQ,WAAG,IAAAsyB,OAAA,EAAVA,EAAA56B,KAAA/H,EAAa,eAAO,IAAA0iC,EAAAA,EAAI1iC,IACnB4iC,aAAU,EAAVA,EAAYxxC,MAAO,GAAKwxC,EAAW/mC,QAAO,SAAAC,GAAC,OAAS,MAALA,CAAS,IAAE1K,KAAO,KACtDyxC,IACpB5H,GAEXwH,EAAUn0B,KAAKw0B,GAEbrzC,GACFA,EAAStE,KAAI,SAAC4lB,EAAOC,GACfD,GACFN,EAAaM,EAAO7d,EAAKka,OAAOrX,GAAKmb,EAAM,EAE/C,GAEJ,CAGET,CAAaN,EAAM,GAAI,GAElBlQ,MAAMmf,KAAK,IAAIC,IAAIojB,GAC5B,EAGaM,GAAY,SAAC5yB,EAAM3lB,GAC9B,IAAM8tB,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDzB,EAAU,CACd+2C,kBAAmBx4C,EAAOS,SAASg4C,wBACnCC,sBAAuB14C,EAAOS,SAASk4C,4BACvCC,iBAAkB54C,EAAOS,SAASo4C,uBAClCC,UAAU,GAEZC,EAA4CC,GAC1CrzB,EAAM,KAAMmI,EAAgBA,EAC5BrsB,GAFKw3C,EAASF,EAATE,UAAWC,EAASH,EAATG,UAOlB,OAPwCH,EAAXI,aAIVD,EAAUjwC,QAC3B8Z,QAAQE,KAAK,sBAAuBi2B,GAE/BD,CACT,EAOaG,GAAe,SAACzzB,EAAM3lB,GAAyB,IAAjByB,EAAOuH,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9C8kB,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDm2C,EAAY7yC,GAAAA,GAAA,GACb/E,GAAO,IAEV+2C,mBAAmB,EACnBI,kBAAkB,EAClBF,uBAAuB,EACvBI,UAAU,IAMZ,OAJoBE,GAClBrzB,EAAM,KAAMmI,EAAgBA,EAC5BurB,GAFKH,SAKT,EAYaI,GAAe,SAAC3zB,EAAM3lB,GAAyB,IAAjByB,EAAOuH,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9C8kB,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDm2C,EAAY7yC,GAAA,CAEhBgyC,mBAAmB,EACnBI,kBAAkB,EAClBF,uBAAuB,EACvBI,UAAU,GACPr3C,GAEL83C,EAA4DP,GAC1DrzB,EAAM,KAAMmI,EAAgBA,EAC5BurB,GAEF,MAAO,CAACJ,UAJQM,EAATN,UAIYO,YAJUD,EAAXC,YAIcC,eAJaF,EAAdE,eAIiBP,UAJQK,EAATL,UAKjD,EAGaQ,GAAqB,SAAC1zB,EAAS2zB,EAAUC,EAAWC,EAAWrB,EAAmBI,EAAkBF,QACrFx1C,IAAtBs1C,IACFA,EAAoBoB,EAAUn5C,SAASg4C,8BAEhBv1C,IAArB01C,IACFA,EAAmBgB,EAAUn5C,SAASo4C,6BAEV31C,IAA1Bw1C,IACFA,EAAwBkB,EAAUn5C,SAASk4C,6BAE7C,IAOAmB,EAAuEd,GACrEhzB,EAAS2zB,EAAUC,EAAWC,EARhB,CAEdrB,kBAAAA,EACAI,iBAAAA,EACAF,sBAAAA,EACAI,UAAU,IAEPG,EAASa,EAATb,UAAsBO,GAAFM,EAATZ,UAAsBY,EAAXN,aAW3B,OAXsDM,EAAdL,eAA2BK,EAAXX,aAIrCK,EAAYvwC,QAC7B8Z,QAAQE,KAAK,sBAAuBu2B,GAK1B/yB,GAAewyB,EAE7B,EAsCaD,GAAgB,SAC3BrzB,EAAMg0B,EAAU35C,EAAQ65C,EAAWp4C,GAEnC,IAAKkkB,EACH,MAAO,CACLszB,UAAWtzB,EACXuzB,UAAW,GACXM,YAAa,GACbC,eAAgB,GAChBN,aAAa,GAIjB,IAwBIY,EAAWC,EAxBf33C,EAYIZ,GAAW,CAAC,EAVd+2C,EAAiBn2C,EAAjBm2C,kBACAI,EAAgBv2C,EAAhBu2C,iBACAF,EAAqBr2C,EAArBq2C,sBACAI,EAAQz2C,EAARy2C,SAAQmB,EAAA53C,EAER63C,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAA93C,EACtB+3C,wBAAAA,OAAuB,IAAAD,GAAOA,EAAAE,EAAAh4C,EAC9Bi4C,oBAAAA,OAAmB,IAAAD,GAAQA,EAAAE,EAAAl4C,EAC3Bm4C,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAAp4C,EACjCq4C,sBAAAA,OAAqB,IAAAD,GAAOA,EAKxB7sB,EAAO,CACXL,OAAQ,CAAC,GAEL0rB,EAAY0B,GAAah1B,EAAM,GAAI,KAAMiI,EANrC,CACR5tB,OAAAA,EAAQ65C,UAAAA,EAAWrB,kBAAAA,EAAmBI,iBAAAA,EAAkBF,sBAAAA,EAAuBI,SAAAA,IAM3EK,EAAcvrB,EAAKgtB,UAGnB1B,EAAY,GAKlB,IAAK,IAAM3tC,KAHPmvC,IACFX,EAAYzyB,GAAY2xB,GAAWnwC,OAEpB8kB,EAAKL,OAAQ,CAC5B,IAAAstB,EAAuBjtB,EAAKL,OAAOhiB,GAA7B7C,EAAImyC,EAAJnyC,KAAM6kB,EAAMstB,EAANttB,OACR2sB,IACF3sB,EAASA,EAAO5sB,KAAI,SAAAwM,GAClB,OAAA3G,GAAAA,GAAA,GACK2G,GAAC,IACJyqC,IAAKD,GAAoBxqC,IAE7B,KAEF,IAAI2tC,EAAY,CAAEpyC,KAAAA,EAAM6kB,OAAAA,GACxB,GAAI6sB,EAAyB,CAC3B,IAAMlxC,EAAOwc,GAAc40B,EAAsBrB,EAAYtzB,EAAMjd,GAEnE,GAD+B,IAAhBA,EAAKO,QACgB,UAArBC,EAAK2c,IAAI,QAAqB,CAC3C,IAEMk1B,EAAUnJ,GAAY1oC,EAAMlJ,EADbw6C,GADD,GAGpBM,EAAUC,QAAUA,CACtB,CACF,CACA,GAAIL,EAAuB,CACzB,IAAIM,EAAWjB,EAAUxuC,GACnB0vC,GAAaD,EAQnB,GAPIC,IAEGjB,IACHA,EAAe1yB,GAAY3B,GAAM7c,OAEnCkyC,EAAWhB,EAAazuC,IAEtByvC,EAAU,CAEZ,IAAME,EAAY10C,GAAAA,GAAA,GACbw0C,EAAS12C,UAAQ,IACpB4C,MAAO8zC,EAAS9zC,MAChB4D,KAAMkwC,EAASlwC,KACfmwC,UAAAA,IAEFH,EAAUI,aAAeA,EAEzB,IAAMC,EAASH,EAAS9zC,MAEpBiwC,GAAwB,KAAK6D,EAASlwC,MAAMmwC,EAAY,YAAc,IADtE9D,GAEEiE,EAAM50C,GAAA,GACP00C,GAEL,GAAIV,EAA4B,CAE9B,IAF8B,IAAAa,EAE9B/6B,EAAA,EAAAg7B,EAAgB,CAAC,SAAU,eAAgB,gBAAiB,kBAAiBh7B,EAAAg7B,EAAAryC,OAAAqX,IAAE,CAA1E,IAAM1f,EAAC06C,EAAAh7B,GACOpd,MAAbk4C,EAAOx6C,KACTw6C,EAAOx6C,GAAKw6C,EAAOx6C,GAAK,EAE5B,CACAw6C,EAAOjyB,UAAkC,QAAzBkyB,EAAGH,EAAa/xB,iBAAS,IAAAkyB,OAAA,EAAtBA,EAAwB16C,KAAI,SAAAwhB,GAAG,OAAIA,EAAI,CAAC,GAC7D,CACA24B,EAAUS,gBAAkB5D,GAAoBwD,EAAOC,GACnDJ,EAAS9zC,QACP8zC,EAAShzB,QAA4B,eAAlBgzB,EAASlwC,OAC9BgwC,EAAUS,gBAAkB5D,GAAoBR,GAA+B3wC,GAAAA,GAAA,GAC1E40C,GAAM,IACTxD,IAAKkD,EAAUS,oBAGG,eAAlBP,EAASlwC,OACXgwC,EAAUS,gBAAkB5D,GAAoBR,GAAuC3wC,GAAAA,GAAA,GAClF40C,GAAM,IACTxD,IAAKkD,EAAUS,oBAIvB,CACF,CACArC,EAAUp1B,KAAKg3B,EACjB,CAKA,IAFA,IAAItB,EAAc,GACdC,EAAiB,GACrB+B,EAAA,EAAAC,EAAyBvC,EAASsC,EAAAC,EAAAxyC,OAAAuyC,IAAE,CAA/B,IAAME,EAAUD,EAAAD,GACbG,EAAkBD,EAAWnuB,OAAOlc,QAAO,SAAAlE,GAAC,QAAMA,EAAEyuC,KAAK,IAC3DC,EAAqBH,EAAWnuB,OAAOlc,QAAO,SAAAlE,GAAC,OAAKA,EAAEyuC,OAAmB,gBAAVzuC,EAAEpG,GAAqB,IACtF40C,EAAgB1yC,QAClBuwC,EAAY11B,KAAItd,GAAAA,GAAC,CAAC,EACbk1C,GAAU,IACbnuB,OAAQouB,KAGRE,EAAmB5yC,QACrBwwC,EAAe31B,KAAItd,GAAAA,GAAC,CAAC,EAChBk1C,GAAU,IACbnuB,OAAQsuB,IAGd,CAEA,MAAO,CACL5C,UAAAA,EAAWC,UAAAA,EAAWM,YAAAA,EAAaC,eAAAA,EAAgBN,YAAAA,EAEvD,EAEA,SAAS2C,GAAUluB,EAAM1kB,EAAMR,EAAMgc,GACnC,IAAMnZ,EAAKrC,EAAK2c,IAAI,MACf+H,EAAKL,OAAOhiB,KACfqiB,EAAKL,OAAOhiB,GAAM,CAChB7C,KAAM,GAAFka,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE6C,IAChBgiB,OAAQ,KAGZK,EAAKL,OAAOhiB,GAAIgiB,OAAOzJ,KAAKY,EAC9B,CAEA,SAASq3B,GAAkBnuB,EAAM1kB,GAC/B,IAAMqC,EAAKrC,EAAK2c,IAAI,MAChB+H,EAAKL,OAAOhiB,IACdqiB,EAAKL,OAAOhiB,GAAIgiB,OAAO5sB,KAAI,SAAAwM,GACzBA,EAAEyuC,OAAQ,CACZ,GAEJ,CAEA,SAASjB,GAAczxC,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,GAC/C,IAAMhS,EAAO5B,aAAI,EAAJA,EAAM2c,IAAI,QAEvB,MAAc,UAAT/a,GAA6B,eAATA,GAAiC,cAARA,GAAgC,gBAARA,EAS5E,SAAwB5B,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,GAAG,IAAAk/B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5C7D,EAA8D17B,EAA9D07B,kBAAmBE,EAA2C57B,EAA3C47B,sBAAiC14C,GAAU8c,EAApBg8B,SAAoBh8B,EAAV9c,QAGvDuL,GAFuBvL,EAAOS,SAA3BgwC,iBAEEvnC,EAAK2c,IAAI,OACd5gB,EAAWiE,EAAK2c,IAAI,aAClBqC,GAAUxf,EAAKO,OACfqzC,EAAcr3C,EACd6F,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,cACtBrQ,EAAQyV,aAAU,EAAVA,EAAYpF,IAAI,SACxBgQ,EAAO5K,aAAU,EAAVA,EAAYpF,IAAI,QACvBgT,EAAW5N,SAAe,QAAL+wB,EAAV/wB,EAAYpF,WAAG,IAAAm2B,OAAA,EAAfA,EAAAz+B,KAAA0N,EAAkB,YAC7BsxB,EAAsB,eAATzxC,GAAkC,UAAT+qB,EACtC2mB,EAAkB,eAAT1xC,EACT4e,EAAgB8yB,GAAsBt5C,MAAZ+B,EAC1B8Y,EAAc8a,EAAkD,QAA1CojB,EAA6B,QAA7BC,EAAGl8C,EAAOquB,UAAUwK,UAAS,IAAAqjB,OAAA,EAA1BA,EAA4Bn+B,mBAAW,IAAAk+B,EAAAA,EAAI,OAAI/4C,EAGxEu5C,EAAsBD,GAAU9yB,EAAiB6yB,EAA4B,GAAfx+B,EAAmBy6B,EACjFkE,EAAeH,GAAcC,GAE9BjxC,GAAMub,IACTvb,EAAKub,EACL5d,EAAOA,EAAKynC,IAAI,KAAMplC,GACtBqiB,EAAKgtB,WAAY,GAGf8B,IACFxzC,EAAOyzC,GAAazzC,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,IAIhD,IAAI6a,EAAU,CACZpK,OAAQ,CAAC,GAILqvB,EAA2B,QAAXR,EAFtBn3C,EAAmB,QAAXk3C,EAAGl3C,SAAQ,IAAAk3C,OAAA,EAARA,EACPx7C,KAAK,SAAC+7B,EAAcxV,GAAO,OAAKyzB,GAAaje,EAAch0B,EAAKka,OAAOrX,GAAK2b,EAASyQ,EAAS7a,EAAE,WACnE,IAAAs/B,OAAA,EAARA,EAAU/qC,QAAO,SAACqrB,GAAY,OAAsBx5B,MAAhBw5B,CAAyB,IAClF8b,IACFvzC,EAAW23C,GAEb,IAAIhC,EAAYjjB,EAAQijB,YAAc0B,aAAW,EAAXA,EAAa11C,QAAgB,QAAZy1C,EAAIp3C,SAAQ,IAAAo3C,OAAA,EAARA,EAAUz1C,MAEjEi2C,EAAUrE,IAAsBtwB,EAgCpC,OA/BIq0B,GAAc/mC,IAEhBqnC,EAAUnE,KAJakE,SAAAA,EAAkBh2C,OAMpB61C,IACrBX,GAAUluB,EAAM1kB,EAAMR,EAAM,CAC1B3B,IAAKmhB,EACDivB,GACAqF,EACErF,GACAoF,EACEpF,GACAA,GACRrjB,KAAM,CAAEte,MAAAA,GACRomC,MAAOiB,IAELA,IACFd,GAAkBnuB,EAAM1kB,GACxBA,OAAOhG,IAIP03C,IACFhtB,EAAKgtB,WAAY,GACfA,GAAa1xC,IACfA,EAAOA,EAAKynC,IAAI,YAAa1rC,IAE/B2oB,EAAKL,OAAM/mB,GAAAA,GAAA,GACNonB,EAAKL,SACJoK,aAAO,EAAPA,EAASpK,SAAU,CAAC,GAEnBrkB,CACT,CArFW4zC,CAAc5zC,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,GAC7B,SAAThS,EACF6xC,GAAazzC,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,GAEvC5T,CAEX,CAqFA,SAASyzC,GAAczzC,EAAMR,EAAMoe,EAAQ8G,EAAM9Q,GAC/C,IAAO47B,EAAwE57B,EAAxE47B,sBAAuBE,EAAiD97B,EAAjD87B,iBAAkBE,EAA+Bh8B,EAA/Bg8B,SAAU94C,EAAqB8c,EAArB9c,OAAQ65C,EAAa/8B,EAAb+8B,UAC3DpJ,EAAoBzwC,EAAOS,SAA3BgwC,iBACDsM,GAAUtM,GAAoBqI,EAEhCvtC,EAAKrC,EAAK2c,IAAI,MAEZ22B,EAAkB,eADXtzC,EAAK2c,IAAI,QAElBoF,EAAa/hB,EAAK2c,IAAI,cAC1B,IAAKoF,EAAY,CACf,IAAIuxB,EASF,YADAV,GAAUluB,EAAM1kB,EAAMR,EALV,CACV3B,IAAKowC,GACLrjB,KAAM,CAAC,EACP8nB,MAAOlD,GAAyBE,IALlC3tB,EAAa,IAAI1L,EAAAA,GAAAA,GAUrB,CACA,IAAI/J,EAAQyV,EAAWpF,IAAI,UAAY,KACnC22B,IACFhnC,EAAQ,eAEV,IAAIif,EAAWxJ,EAAWpF,IAAI,aAAe,KACzCgT,EAAW5N,EAAWpF,IAAI,aAAe,KACzCqF,EAAkBD,EAAWpF,IAAI,mBACjC9Y,EAAWke,EAAWpF,IAAI,YAC1BhmB,EAAQorB,EAAWpF,IAAI,SACvBuyB,EAAantB,EAAWpF,IAAI,cAC5BwyB,EAAaptB,EAAWpF,IAAI,cAE1Bm3B,EAAgB,WAAM,IAAAC,EAAAC,EAC1B,MAAO,CACL1nC,OAAY,QAALynC,EAAAznC,SAAK,IAAAynC,GAAM,QAANC,EAALD,EAAO59B,YAAI,IAAA69B,OAAA,EAAXA,EAAA3/B,KAAA0/B,KAAmBznC,EAC1Bif,SAAAA,EACAoE,SAAAA,EACA3N,gBAAiBA,EAAkBA,EAAgB7L,OAAS,CAAC,EAC7DtS,SAAUA,EAAWA,EAASsS,OAAS,KACvCxf,MAAOA,EAAQA,EAAMwf,OAAS,KAC9B+4B,WAAYA,EAAaA,EAAW/4B,OAAS,KAC7Cg5B,WAAYA,GAA0B,KAE1C,EAEM8E,EAAgBH,KAGjBzxC,GAAMub,IACTvb,EAAKub,EACL5d,EAAOA,EAAKynC,IAAI,KAAMplC,GACtBqiB,EAAKgtB,WAAY,GAInB,IAAMja,EAAkBnrB,EAAQud,GAAe/yB,EAAQwV,GAAS,KAC5DA,IAAUmrB,IACZmb,GAAUluB,EAAM1kB,EAAMR,EAAM,CAC1B3B,IAAKowC,GACLrjB,KAAM,CAAEte,MAAAA,GACR4nC,KAAM,MACNxB,MAAOlD,GAAyBE,IAElCpjC,EAAQ,MAEG,MAATA,GAAkBgnC,IACpBvxB,EAAa,CACX,WAAY,kBAAmB,WAAY,QAAS,aAAc,aAAc,SAChFnJ,QAAO,SAACnhB,EAAKoG,GAAG,OAAKpG,EAAG,OAAQoG,EAAI,GAAEkkB,GACxC4N,EAAW,MAERpE,IAAYjf,GAAUgnC,IACzB/nB,EAAW4oB,GAAY7nC,GACvByV,EAAaA,EAAW0lB,IAAI,WAAYlc,IAKzB,kBAAboE,GAA6C,sBAAbA,IAClCA,EAAwB,kBAAbA,EAA+B,UAAY,cAMtD5N,EAAaA,EAAW0lB,IAAI,WAAY9X,IAE1C,IAAMyF,EAAqBzF,EAAW2E,GAAkBx9B,EAAQ64B,EAAUrjB,GAAS,KAC/EqjB,IAAayF,IACfwd,GAAUluB,EAAM1kB,EAAMR,EAAM,CAC1B3B,IAAKowC,GACLrjB,KAAM,CAAE+E,SAAAA,GACRukB,KAAM,KACNxB,MAAOlD,GAAyBE,IAElC/f,EAAW,MAEb,IAAMykB,EAAW9nC,EAAQ+nC,GAAqBv9C,EAAQwV,GAAS,GAC3DA,IAAUgnC,IACPc,SAAAA,EAAUr0C,OAQJ4vB,IAA2C,GAA/BykB,EAAS1sC,QAAQioB,KACrB,aAAbA,GAAwC,iBAAbA,GAE7BA,EAAwB,aAAbA,EAA0B,UAAY,cAMjD5N,EAAaA,EAAW0lB,IAAI,WAAY9X,KAExCijB,GAAUluB,EAAM1kB,EAAMR,EAAM,CAC1B3B,IAAKowC,GACLrjB,KAAM,CAAE+E,SAAAA,EAAUrjB,MAAAA,GAClB4nC,KAAM,MACNxB,MAAOlD,GAAyBE,IAElC/f,EAAW,QAxBbijB,GAAUluB,EAAM1kB,EAAMR,EAAM,CAC1B3B,IAAKowC,GACLrjB,KAAM,CAAEte,MAAAA,GACR4nC,KAAM,MACNxB,MAAOlD,GAAyBE,IAElC/f,EAAW,OAsBC,MAAZA,GAAqB2jB,IAEvBvxB,EAAa,CACX,kBAAmB,WAAY,QAAS,cACxCnJ,QAAO,SAACnhB,EAAKoG,GAAG,OAAKpG,EAAG,OAAQoG,EAAI,GAAEkkB,IAI1CC,EAAkBD,EAAWpF,IAAI,oBAE5BgT,GAAY3N,IAAoBoT,EAAmB78B,SACtDypB,EAAkB,KAClBD,EAAaA,EAAU,OAAQ,oBACtB4N,IAAa3N,GAAmBoT,EAAmB78B,UAC5DypB,EAAkB+kB,GAAuBjwC,EAAQ64B,EAAUrjB,GAC3DyV,EAAaA,EAAW0lB,IAAI,kBAAmBzlB,IAIjDne,EAAWke,EAAWpF,IAAI,YAC1BhmB,EAAQorB,EAAWpF,IAAI,SACvB,IACA+qB,EAEIC,GAAsB7wC,EAAQ65C,EAAW5uB,EAAYzV,EAAOqjB,EAAU,KAAMkkB,GAH7D,GAEjB3qC,EAAQw+B,EAARx+B,SAAU0+B,EAAWF,EAAXE,YAAaE,EAAaJ,EAAbI,cAAewM,EAAgB5M,EAAhB4M,iBAAkBvM,EAAaL,EAAbK,cAAewM,EAAU7M,EAAV6M,WAEzE59C,EAAQuS,EACRrF,EAAW+jC,EACXsH,EAAapH,EACbqH,EAAapH,EACbz7B,EAAQioC,EAGRxyB,GADAA,GADAA,EAAaA,EAAW0lB,IAAI,QAASn7B,IACbm7B,IAAI,QAAS9wC,IACb8wC,IAAI,WAAY5jC,GAEtCke,EADEwlB,EACWxlB,EACV0lB,IAAI,aAAcyH,GAClBzH,IAAI,aAAc0H,GAERptB,EAAU,OACb,cAAa,OACb,cAGZ,IAAMyyB,EAAgBV,IAChBW,GAAoB3/B,EAAUm/B,EAAeO,GAC7CE,EAAQC,GAA+B5yB,EAAW6yB,WAAY99C,GAC9D+9C,EAAcvB,EAASoB,EAAM9oB,MAAMj1B,MAAQ+9C,EAAMI,OAAS,EAQhE,GAPIL,IACF/vB,EAAKgtB,WAAY,EACjB1xC,EAAOA,EAAKynC,IAAI,aAAc1lB,IAEhCuyB,SAAAA,EAAkB78C,KAAI,SAAAwM,GAAC,OACrB2uC,GAAUluB,EAAM1kB,EAAMR,EAAMyE,EAAE,KAE3B4wC,EACH,GAAIvB,OAEG,CACL,IAAIyB,EAAoBL,EAAMI,MAA2BtF,EAAnBE,EASlCsF,EAAW,CAAEn3C,IAAKowC,GAA2BrjB,KAAM,CAAC,GACxD,GAAK8pB,EAAM9oB,MAAMtf,OAGV,IAAIooC,EAAM9oB,MAAMj1B,MAAO,KAAAs+C,EAAAC,EAAAC,EAAAC,EAC5BJ,EAASn3C,IAAMowC,GACf+G,EAASd,KAAO,MAEQ,QAAtBe,EAAAT,EAAc3wC,gBAAQ,IAAAoxC,GAAtBA,EAAyB,KAA4B,QAAtBC,EAAAV,EAAc3wC,gBAAQ,IAAAqxC,OAAA,EAAtBA,EAAyB,MAA4B,QAA1BC,EAAIlB,EAAcpwC,gBAAQ,IAAAsxC,OAAA,EAAtBA,EAAyB,KACxDn7C,OAAT,QAAnBo7C,EAAAZ,EAAc79C,aAAK,IAAAy+C,OAAA,EAAnBA,EAAsB,MAGzBJ,EAASn3C,IAAMowC,GACf+G,EAASpqB,KAAO,CACd4L,UAAWge,EAAc3wC,UAG/B,OAfEmxC,EAASn3C,IAAMowC,GACf+G,EAASd,KAAO,MAelBc,EAAStC,MAAQqC,EACjBnC,GAAUluB,EAAM1kB,EAAMR,EAAMw1C,GACxBD,IACFlC,GAAkBnuB,EAAM1kB,GACxBA,OAAOhG,EAEX,CAGF,OAAOgG,CACT,CAWO,IAAMq1C,GAAgB,SAC3Bv+C,EAAQw+C,EAAWhpC,EAAOqjB,EAAUh5B,EAAO+yB,EAAW7lB,EAAUwlB,GAE7D,IADHwqB,EAAM/zC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUy1C,EAAUz1C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU01C,EAAW11C,UAAAC,OAAA,SAAA/F,IAAA8F,UAAA,KAAAA,UAAA,IAE3CkwC,EAAY,GACZyF,EAAa9+C,EAEjB,GAAa,MAATA,EAAe,KAAA++C,EAAAC,EAAAC,EAAAC,EACjB,GAAiB,UAAbhyC,EAAsB,KAAAiyC,EACEC,GAAmBT,EAAWhpC,EAAO3V,EAAOkN,EAAU6lB,EAAWL,EAAiBvyB,EAAQ64B,EAAUkkB,EAAQ0B,GAAWS,GAAA1xC,EAAAA,EAAAA,GAAAwxC,EAAA,GAAhJL,EAAUO,EAAA,GAAEhG,EAASgG,EAAA,EACxB,MAAO,GAAiB,SAAbnyC,EAAqB,KAAAoyC,EACJC,GAAkBZ,EAAWhpC,EAAO3V,EAAOkN,EAAU6lB,EAAWL,EAAiBvyB,EAAQ64B,EAAUkkB,EAAQ0B,EAAYC,GAAYW,GAAA7xC,EAAAA,EAAAA,GAAA2xC,EAAA,GAA5JR,EAAUU,EAAA,GAAEnG,EAASmG,EAAA,EACxB,MAAO,GAAiB,UAAbtyC,IAAyBA,EAAU,KAAAuyC,EAClBC,GAAoB/pC,EAAO3V,EAAOkN,EAAU6lB,EAAWL,EAAiBvyB,EAAQ64B,EAAUkkB,EAAQ0B,GAAWe,GAAAhyC,EAAAA,EAAAA,GAAA8xC,EAAA,GAAtIX,EAAUa,EAAA,GAAEtG,EAASsG,EAAA,EACxB,CAEA,IAAIC,IAA2B,QAAVb,EAAC1F,SAAS,IAAA0F,GAATA,EAAWj9B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,KAAK,KAMnD,GAL+BpmC,IAEzB,CAAC,QAAS,QAAQ/N,SAASsF,KAEjB,QAAV8xC,EAAC3F,SAAS,IAAA2F,IAATA,EAAW51C,QAAUw2C,GACF,CAIxB,IAAMrZ,EAAI5N,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACjDuxB,EAAqBzF,EAAW2E,GAAkBx9B,EAAQ64B,EAAUrjB,GAAS,KAC7EkqC,EAAwBzf,GAAqBjgC,EAAQwV,EAAOqjB,EAAUuN,EAAGr5B,EAAU,CAAEmzB,WAAW,IAChGyf,EAAqC,UAAb5yC,EAAuBgmB,GAAe/yB,EAAQH,GAAS,KAC/E2yB,EAAgBktB,EAEhBthB,EAAKshB,EAAsBnB,cACjC,GAAkB,mBAAPngB,EAAmB,CAC5B,IAAMtK,EAAO,CACX6qB,EACAnsB,EACAqG,EACAyF,GAEe,UAAbvxB,GACF+mB,EAAKhQ,KAAK67B,GACZ,IAC4FC,EACtFC,EAFAC,EAAc1hB,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,IAChB,YAAvBnhB,EAAAA,EAAAA,GAAOmtC,IAA4C,OAAhBA,GAAyBrqC,MAAMC,QAAQoqC,GAe5C,kBAAhBA,EACG,GAAfA,GACF5G,EAAUp1B,KAAK,CAAC/c,IAAKowC,GAAyBrjB,KAAM,CAAC,IAEvB,iBAAhBgsB,GAChB5G,EAAUp1B,KAAK,CAAC/c,IAAK+4C,EAAahsB,KAAM,QAjBtC+rB,EADmB,QAArBD,EAAIE,EAAYj5C,aAAK,IAAA+4C,GAAjBA,EAAmB74C,IACbP,GAAA,GAAOs5C,EAAYj5C,OAGhB,CAACE,IAAK+4C,EAAYj5C,MAAOitB,KAAM,WAEb5wB,IAA3B48C,EAAYnB,YAA4B5B,IAC1C8C,EAASjE,OAAQ,EACjBiE,EAASE,UAAYpB,EACrBkB,EAASG,QAAUF,EAAYnB,WAC/BA,EAAamB,EAAYnB,YAE3BzF,EAAUp1B,KAAK+7B,GAQnB,CACF,CAIA,GADAJ,IAA2B,QAAVX,EAAC5F,SAAS,IAAA4F,GAATA,EAAWn9B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,KAAK,KAClC,QAATmD,EAAA7F,SAAS,IAAA6F,GAATA,EAAW91C,SAAWw2C,GAAkB1C,EAAQ,CAClD,IAAMrsB,EAAcqC,GAAe/yB,EAAQwV,GACrCgd,EAAgB9B,aAAW,EAAXA,EAAa8B,cAC7Bb,EAAea,aAAa,EAAbA,EAAeb,aACpC,QAAqBzuB,IAAjByuB,EAA4B,CAC9B,IAAMsuB,EAAY/G,EAAUA,EAAUjwC,OAAS,GAC/Cg3C,EAAUrE,OAAQ,EAClBqE,EAAUF,UAAYpB,EACtBsB,EAAUD,QAAUruB,EACpBgtB,EAAahtB,EAEbunB,EAAUv4C,KAAI,SAAAwM,GACZA,EAAEyuC,OAAQ,CACZ,GACF,CACF,CACF,CAEA,MAAO,CAAC+C,EAAYzF,EACtB,EAsDMqG,GAAsB,SAAC/pC,EAAO3V,EAAOkN,EAAU6lB,EAAWL,EAAiBvyB,GAAgE,IAnzB/HsR,EAAGxG,EAmzBoE+tB,EAAQ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM+zC,EAAM/zC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1GkwC,EAAY,GACZyF,EAAa9+C,EACjB,GAAI2V,EAAO,CACT,IAAMkb,EAAcqC,GAAe/yB,EAAQwV,GACrC4wB,EAAI5N,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACjDmzC,EAAUlgD,EAAOya,QAAQ2rB,GACzB+Z,EAAQD,aAAO,EAAPA,EAASp1C,KACjB0oC,EAAS0M,aAAO,EAAPA,EAAS1M,OAClBhhB,EAAgB9B,aAAW,EAAXA,EAAa8B,cAC7BtoB,GAAasoB,aAAa,EAAbA,EAAe4tB,cAAc5tB,aAAa,EAAbA,EAAetoB,YACzDm2C,IAAsB7tB,UAAAA,EAAepX,YAErCklC,EAAmBp2C,GAAcm2C,EAGvC,GAAIztB,GAAautB,GAASvtB,GAAautB,EAKrC,OAJAjH,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEqsB,MAAAA,EAAOvtB,UAAAA,KAEV,CAAC/yB,EAAOq5C,GAEjB,GAAI1F,IA10Ba1oC,EA00Bc0oC,EAz0B7BsE,GADYxmC,EA00BUzR,KAz0BRiL,IAEL,WAATA,GAAsBiwB,MAAMzpB,OAu0BagvC,EAKzC,OAJApH,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAE0f,OAAAA,EAAQ+M,YAAazI,GAAOj4C,MAE/B,CAACA,EAAOq5C,GAGjB,GAAI1mB,EAAe,CAEjB,IAAMguB,EAAiBjuB,GAAmBroB,EAE1C,GAAIs2C,IAAmBhuB,EAAc/yB,mBAA2B,eAAN2mC,EAAoB,KAAAqa,EApFxD,SAAC5gD,EAAOqK,EAAY6yC,EAAQ0B,EAAYiC,GAClE,IAAMv1B,EAAS5L,EAAAA,GAAAA,KAAeohC,OAAO9gD,GAASA,EAAMwf,OAAUxf,aAAiB4V,OAAK7B,EAAAA,EAAAA,GAAO/T,QAASqD,EAChGy7C,EAAa9+C,EACbq5C,EAAY,GAChB,GAAI/tB,EAAQ,CACV,IAAAy1B,EAAgCz1B,EAAOrJ,QAAO,SAAAhc,EAAsBgJ,GAAQ,IAAA9I,GAAAwH,EAAAA,EAAAA,GAAA1H,EAAA,GAA5B+6C,EAAQ76C,EAAA,GAAE86C,EAAO96C,EAAA,GACzD+6C,EAAKh9B,GAAoB7Z,EAAY4E,GAC3C,OAAU5L,MAAN69C,EACK,CAACF,EAAU,GAAFj+B,QAAAhP,EAAAA,EAAAA,GAAMktC,GAAO,CAAEhyC,KAExB,CAAC,GAAD8T,QAAAhP,EAAAA,EAAAA,GAAKitC,GAAQ,CAAEE,EAAGlhD,QAAQihD,EAErC,GAAG,CAAC,GAAI,KAAIE,GAAAxzC,EAAAA,EAAAA,GAAAozC,EAAA,GAPLK,EAAUD,EAAA,GAAEE,EAASF,EAAA,GAQtBG,EAAUD,EAAUj4C,OAAS,EAInC,GADA01C,GADA5B,EAASA,IAAmD,IAAzC2D,IACIS,EAAUF,EAAaphD,EAC1CqhD,EAAUj4C,OAAQ,CACpB,IAAM2yC,EAAQmB,GAAUoE,EACxBjI,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEotB,UAAAA,EAAWE,MAAOF,EAAUj4C,QACpC2yC,MAAAA,EACAmE,UAAWnE,EAAQzwB,OAASjoB,EAC5B88C,QAASpE,EAAQ+C,OAAaz7C,GAElC,CACA,MAAO,CAACy7C,EAAYzF,EACtB,CACE,IAAM6H,EAAKh9B,GAAoB7Z,EAAYrK,GAa3C,OAZUqD,MAAN69C,GACFpC,EAAa5B,EAAS,KAAOl9C,EAC7Bq5C,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEj0B,MAAAA,GACR+7C,MAAOmB,EACPgD,UAAWhD,EAASl9C,OAAQqD,EAC5B88C,QAASjD,EAAS4B,OAAaz7C,KAGjCy7C,EAAaoC,EAAGlhD,MAEX,CAAC8+C,EAAYzF,EAExB,CAyCkCmI,CACxBxhD,EAAO2gD,EAAgBzD,EAAQ0B,EAAYz+C,EAAOS,SAASigD,sCAC5DY,GAAA9zC,EAAAA,EAAAA,GAAAizC,EAAA,GAFA9B,EAAU2C,EAAA,GAAEpI,EAASoI,EAAA,EAGxB,CAEI9uB,EAAc5jB,UAAY,GAAc,MAAT/O,GAAiByjC,OAAOzjC,GAAOoJ,OAASupB,EAAc5jB,YACvF+vC,EAAa5B,EAASzZ,OAAOzjC,GAAOq6B,UAAU,EAAG1H,EAAc5jB,WAAa/O,EAC5Eq5C,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEj0B,MAAAA,EAAOoJ,OAAQq6B,OAAOzjC,GAAOoJ,OAAQupB,cAAAA,GAC7CopB,MAAOmB,EACPgD,UAAWhD,EAASl9C,OAAQqD,EAC5B88C,QAASjD,EAAS4B,OAAaz7C,KAInC,IAAMq+C,EAAqCr+C,MAArBsvB,EAAc9gB,KAAyCxO,MAArBsvB,EAAc7gB,IAAmBwlC,QAA6Bj0C,EAC7F,MAArBsvB,EAAc9gB,KAAe7R,EAAQ2yB,EAAc9gB,MACrDitC,EAAa5B,EAASvqB,EAAc9gB,IAAM7R,EAC1Cq5C,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEj0B,MAAAA,EAAO2yB,cAAAA,EAAegvB,QAASD,GACvC3F,MAAOmB,EACPgD,UAAWhD,EAASl9C,OAAQqD,EAC5B88C,QAASjD,EAAS4B,OAAaz7C,KAGV,MAArBsvB,EAAc7gB,KAAe9R,EAAQ2yB,EAAc7gB,MACrDgtC,EAAa5B,EAASvqB,EAAc7gB,IAAM9R,EAC1Cq5C,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEj0B,MAAAA,EAAO2yB,cAAAA,EAAegvB,QAASD,GACvC3F,MAAOmB,EACPgD,UAAWhD,EAASl9C,OAAQqD,EAC5B88C,QAASjD,EAAS4B,OAAaz7C,IAGrC,CACF,CAEA,MAAO,CAACy7C,EAAYzF,EACtB,EAMM+F,GAAqB,SAACT,EAAWhpC,EAAO3V,EAAO4hD,EAAW7uB,EAAWL,EAAiBvyB,GAAgE,IAAxD64B,EAAQ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACvGkwC,EAAY,GAClB/2C,EAAmDnC,EAAOS,SAAnD4zB,EAAclyB,EAAdkyB,eAAgBqtB,EAAwBv/C,EAAxBu/C,yBACjBj1B,EAA4B,WAAhB9Z,EAAAA,EAAAA,GAAO6C,KAAqBA,aAAK,EAALA,EAAOmsC,YAC/CC,EAAensC,MAAMC,QAAQ8oC,GAAaA,EAAU39C,KAAKwzB,GAAkBmqB,EAC3EqD,EAAkB9uB,GAAe/yB,EAAQw+C,GACzCsD,EAAgBrsC,MAAMC,QAAQ7V,GAASA,EAAMgB,KAAKwzB,GAAkBx0B,EACpEkiD,EAAmBhvB,GAAe/yB,EAAQH,GAChD,OAAKkiD,EAODvD,GAAasD,IAAkBF,IAAiBn1B,GAClDysB,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEte,MAAOosC,KAEV,CAAC/hD,EAAOq5C,IAEbtmB,GAAaA,GAAamvB,EAAiBj3C,MAC7CouC,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEte,MAAOssC,EAAeh3C,KAAMi3C,EAAiBj3C,KAAMk3C,SAAUpvB,KAEhE,CAAC/yB,EAAOq5C,IAEbsF,IAAc/xB,GAAai1B,IACdA,EACbE,EAAcC,EAAiBC,EAAeC,EAAkBlpB,IAGhEqgB,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAE0qB,UAAWoD,EAAcK,WAAYH,KAExC,CAACjiD,EAAOq5C,IAGZ,CAACr5C,IAhCNq5C,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEte,MAAOssC,KAEV,CAACjiD,EAAOq5C,GA6BnB,EAKMkG,GAAoB,SACxBZ,EAAWhpC,EAAO3V,EAAO4hD,EAAW7uB,EAAWL,EAAiBvyB,GAE7D,IAAAkiD,EAAAC,EAFqEtpB,EAAQ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACnF+zC,EAAM/zC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUy1C,EAAUz1C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU01C,EAAW11C,UAAAC,OAAA,SAAA/F,IAAA8F,UAAA,KAAAA,UAAA,IAE3C21C,EAAa9+C,EACXq5C,EAAY,GAElB,IAAKr5C,EAEH,MAAO,CAACA,GAEV,IAAMozB,EAAmB,QAAZivB,EAAGriD,EAAMgmB,WAAG,IAAAq8B,OAAA,EAATA,EAAA3kC,KAAA1d,EAAY,QAC5B,IAAKozB,EAEH,MAAO,CAACpzB,GAEV,IAAM26B,EAAWzH,GAAe/yB,EAAQwV,GACxC,GAAIglB,SAAAA,EAAUxL,QAAUwL,EAASxL,MAAMvnB,SAASwrB,GAK9C,OAJAimB,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEb,QAAAA,EAASzd,MAAAA,KAEZ,CAAC3V,EAAOq5C,GAEjB,IAAM9pB,EAAamE,GAAcvzB,EAAQizB,GACzC,IAAK7D,EAKH,OAJA8pB,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEb,QAAAA,KAEH,CAACpzB,EAAOq5C,GAEjB,IAAMzE,EAA2B,QAAnB0N,EAAG/yB,EAAWxrB,aAAK,IAAAu+C,EAAAA,EAAIlvB,EACrC,GAAIL,GAAaxD,EAAWiE,YAAcT,EAKxC,OAJAsmB,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEb,QAAAA,EAASwhB,SAAAA,EAAUphB,WAAYjE,EAAWiE,WAAYT,UAAAA,KAEzD,CAAC/yB,EAAOq5C,GAIjB,IAAK,IAAMjlB,KADX8oB,EAASA,GAAU2B,EACEtvB,EAAW0E,KAAM,KAAAsuB,EAC9BluB,EAAY9E,EAAW0E,KAAKG,GAC5BH,EAAO6qB,EAAW94B,IAAI,QACtBmO,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACnCm/C,EAAStvB,GAAe/yB,EAAQk0B,GAChC0gB,EAAuB,QAAhBwN,EAAGC,aAAM,EAANA,EAAQz+C,aAAK,IAAAw+C,EAAAA,EAAInuB,EAC3BgO,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EAC1Cg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EACtD,QAAiBA,IAAb++B,EAAwB,CAC1B,IAAAqgB,EAAiC/D,GAC/Bv+C,EAAQw+C,EAAW6D,EAAQxpB,EAAUoJ,EAAU/N,EAAUppB,KAAMo3B,EAAa3P,EAAiBwqB,EAAQ0B,EAAYC,GAClH6D,GAAA/0C,EAAAA,EAAAA,GAAA80C,EAAA,GAFME,EAAWD,EAAA,GAAEE,EAASF,EAAA,GAGvBryC,IAAWuyC,SAAAA,EAAWx5C,QACtBy5C,EAAU3F,GAAUyF,IAAgBvgB,EAGpC0gB,EAAiB5F,IAAW7sC,IAAYwyC,IAAYjE,GAAcC,GASxE,GARIgE,IACF/D,EAAaA,EAAW33B,MAAM,CAAC,OAAQiN,EAAQ,SAAUuuB,IAEvDG,IAEFhE,EAAaA,EAAWr4B,SAAS,CAAC,OAAQ2N,IAC1C0qB,EAAaiE,GAAkB5iD,EAAQ2+C,EAAYvvB,EAAY6E,KAE5D/jB,EAAS,KAAAzM,EAAAo/C,EACNC,EAAwF,QAA9Er/C,EAA6C,QAA7Co/C,EAAGJ,EAAU9gC,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,QAAUzuC,EAAE41C,MAAM,WAAC,IAAAF,EAAAA,EAAIJ,EAAU9gC,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,KAAK,WAAC,IAAAn4C,EAAAA,EAAIg/C,EAAU,GACtG7G,EAAQ8G,GAAWC,EACnBI,EAAqD,IAA5CN,EAAUpxC,QAAO,SAAAlE,GAAC,OAAKA,EAAE41C,MAAM,IAAE95C,OAChD,GAAI65C,EAAY,CACd,IAAME,EAAqBrL,GAAoBmL,GAC/C5J,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CACJb,QAAAA,EAASwhB,SAAAA,EAAUxgB,OAAAA,EAAQ2gB,QAAAA,EAASoO,mBAAAA,EAEpCP,UAAAA,GAEFM,OAAAA,EACAnH,MAAAA,EACAmE,UAAWnE,EAAQ3Z,OAAW/+B,EAC9B88C,QAASpE,EAAS8G,EAAUF,EAActuB,EAAUvC,kBAAgBzuB,GAExE,CACF,CACF,MAAO,IAAKgxB,EAAUE,aAAeqqB,GAAcC,GAAc,CAC/D,IAAMuE,EAAWlG,QAAqC75C,IAA3BgxB,EAAUvC,eAA+B8sB,GAAcC,GAC9DD,GAGlBvF,EAAUp1B,KAAK,CACb/c,IAAKowC,GACLrjB,KAAM,CAAEb,QAAAA,EAASwhB,SAAAA,EAAUxgB,OAAAA,EAAQ2gB,QAAAA,GACnCgH,MAAOqH,EACPjD,QAASiD,EAAW/uB,EAAUvC,kBAAezuB,EAC7C6/C,QAASE,IAGTA,IAEFtE,EAAaA,EAAWr4B,SAAS,CAAC,OAAQ2N,IAC1C0qB,EAAaiE,GAAkB5iD,EAAQ2+C,EAAYvvB,EAAY6E,GAEnE,CACF,CAEA,MAAO,CAAC0qB,EAAYzF,EACtB,EAKagK,GAAgB,SAACljD,EAAQwV,EAAOqjB,EAAU1N,EAAQuU,GAC7D,IAKIyjB,EALEjT,EAAiB1S,GAAkBx9B,EAAQ64B,EAAUrjB,GACrD4tC,EAAsBvqB,EAAWjb,EAAiBsyB,GAAkB,KACpEmT,EAAgB3jB,EAAUrgB,KAAOqgB,EAAUrgB,OAASqgB,EACpD4jB,EAAan4B,EAAO9L,KAAO8L,EAAO9L,OAAS8L,EAC3Co4B,EAAyBF,EAAahyC,QAAO,SAAAmyC,GAAE,MAAU,SAANA,GAAuB,MAANA,CAAU,IAAEv6C,QAAUm6C,EAEhG,GAAIlT,SAAAA,EAAgBuT,gBAAkBF,EAAwB,CAC5D,IAAMx2C,EAAWs2C,EAAa,GACxBjd,EAAI5N,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACjD2yC,EAAwBzf,GAAqBjgC,EAAQwV,EAAOqjB,EAAUuN,EAAGr5B,GACzE22C,EAAWhE,SAAAA,EAAuBrgC,KACpCikC,EAAU3iD,KAAI,SAAA2Q,GACd,IAAIqyC,EAAQjE,EAAsBrgC,KAAK9B,KAAKvd,EAAOoc,IAAK9K,EAAGouC,GAI3D,OAHIiE,aAAiBjnC,OACnBinC,EAAQA,EAAMhnC,WAETgnC,CACT,IACEL,EACExD,EAAc5P,EAAeuT,eAAeC,GACvB,kBAAhB5D,GACU,GAAfA,IACFqD,EAAa,CACXp8C,IAAKowC,GACLrjB,KAAM,CACJ4vB,SAAAA,EACAv4B,OAAQm4B,IAKlB,CACA,OAAOH,CACT,EAYatS,GAAwB,SACnC7wC,GAEA,IAAA4jD,EAAAC,EAAAC,EAAAC,EAFQlK,EAAS7wC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM0nC,EAAO1nC,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAE8gD,EAAQh7C,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAE+gD,EAAWj7C,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAAEghD,EAAWl7C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACxE+zC,EAAM/zC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUy1C,EAAUz1C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU01C,EAAW11C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAG1C6wC,IACHA,EAAY75C,GACd,IAAAmkD,EAEInkD,EAAOS,SADT2jD,EAAyBD,EAAzBC,0BAA2BC,EAAkBF,EAAlBE,mBAAoBC,EAAuBH,EAAvBG,wBAAyBC,EAAoBJ,EAApBI,qBAEpE/H,EAAqB,eAAZwH,EACXQ,EAAe9T,EAAQ7qB,IAAI,UAC1B2+B,GAAgBhI,IACnBgI,EAAeR,GAEjB,IAkDI/S,EAlDEwT,EAAmB/T,EAAQ7qB,IAAI,aAC/B6+B,EAAkBhU,EAAQ7qB,IAAI,YAC9B8+B,EAAkBjU,EAAQ7qB,IAAI,YAC9Bga,EAAe6Q,EAAQ7qB,IAAI,SAC3B++B,EAAkBlU,EAAQ7qB,IAAI,WAAY,IAAItG,EAAAA,GAAAA,MAC9CslC,EAAmBnU,EAAQ7qB,IAAI,YAAa,IAAItG,EAAAA,GAAAA,MAChDulC,EAAoBpU,EAAQ7qB,IAAI,aAAc,IAAItG,EAAAA,GAAAA,MAClDgT,EAAkBme,EAAQ7qB,IAAI,mBAE9Bk/B,EAAsBvI,EACtBwI,EAAwBxnB,GAAkBqc,EAAW8K,GACrDM,EAAoBznB,GAAkBx9B,EAAQikD,EAAaD,GAC3DkB,EAA6B1I,EAAS,EAAImI,EAAkB/mC,EAAiBonC,GAAyB,KACtG5B,EAAsB5G,EAAS,EAAIyH,EAAcrmC,EAAiBqnC,GAAqB,KACvFE,EAAqBpyB,GAAe8mB,EAAW2K,GAC/CY,EAAiBryB,GAAe/yB,EAAQgkD,GACxCqB,GAAoBb,GAAgBC,GAAoBL,EACxDkB,GAAcH,aAAkB,EAAlBA,EAAoBr6C,OAAQ25C,EAC1Cc,GAAUH,aAAc,EAAdA,EAAgBt6C,QAASk5C,GAAYqB,GAAoBC,EACnEE,EAAwBL,aAAkB,EAAlBA,EAAoBM,eAC5CC,EAAoBN,aAAc,EAAdA,EAAgBK,eACpCE,GAAsC,QAAZ/B,EAAAY,SAAY,IAAAZ,GAAK,QAALC,EAAZD,EAAc/9B,WAAG,IAAAg+B,OAAA,EAAjBA,EAAAtmC,KAAAqmC,EAAoB,UAAWY,EAEzDoB,IAD8B,QAAR9B,EAAAE,SAAQ,IAAAF,GAAK,QAALC,EAARD,EAAUj+B,WAAG,IAAAk+B,OAAA,EAAbA,EAAAxmC,KAAAumC,EAAgB,UAAWE,IACR2B,EAE3CnI,EAAmB,GAEnBqI,GAAiBrB,GAAgBa,KAC/BV,GAAmBV,GAAec,IACnB7hD,MAAhB28B,EAsBL,KApBIylB,IAAeC,GAAWD,GAAeC,GACxB,UAAhBrB,GAA2B0B,GAAmBtB,GAC9B,aAAhBJ,GAA8BK,KAEjCsB,GAAgB,GAEdD,GAAmBE,GAAYr+C,SAAS89C,KACtCG,GAAqBA,IAAsBF,IAI7CK,GAAgB,IAGfd,IAAyBllB,SAAAA,EAAcj5B,OAAQw8C,KAAuBvjB,UAAAA,EAAcj5B,MAASw8C,KAChGyC,GAAgB,GAKM,SAApBnB,GAA8BV,EAAU,CAC1C,IAAA+B,EAAkCxH,GAChCv+C,EAAQ,KAAM,KAAMikD,EAAaD,EAAUuB,EAASb,EAAiBnyB,EAAiBwqB,EAAQ0B,EAAYC,GAC3GsH,GAAAx4C,EAAAA,EAAAA,GAAAu4C,EAAA,GAFMtI,EAAUuI,EAAA,GAAEC,EAAWD,EAAA,GAGxB91C,IAAW+1C,SAAAA,EAAah9C,QACxBy5C,EAAUjF,IAAeuG,EACzBkC,IAAoBh2C,GAAWwyC,IAAYuD,EAAYtkC,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,KAAK,IACzEuK,GAAapJ,IAAW7sC,IAAYg2C,MAAsBhC,GAAeF,IAAaQ,EAS5F,GALW2B,GACTnC,EAAWQ,EACF9B,IACTsB,EAAWvG,IAERvtC,EAAS,CACZ,IAAMk2C,IAAal2C,IAAYg2C,KAAkCC,GAC3DrD,GAAamD,EAAYtkC,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,QAAUzuC,EAAE41C,MAAM,IAC1DqD,IAAatD,KACf7R,EAAgB0G,GAAoBmL,KAGtCmD,EAAYtlD,KAAI,SAAAwM,GAAC,OAAIqwC,EAAiB15B,KAAItd,GAAAA,GAAC,CACzC42C,KAAM,OACHjwC,GAAC,IACJyuC,MAAOzuC,EAAEyuC,OAASuK,IAlBL,QAmBb,GACJ,CACF,CAGA,IAAK,IAAItnC,GAAI,EAAIA,GAAIukC,EAAsBvkC,KAAK,CAC9C,IAAM2kC,GAAKoB,EAAgB/+B,IAAIhH,KAAM,KAC/BwnC,GAAgB7tB,GAAoBqhB,EAAW2K,EAAcG,EAAiBnB,IAC9E8C,GAAY9tB,GAAoBx4B,EAAQgkD,EAAUC,EAAaT,IAG/D+C,GAA4B,UAAP/C,GAAiB6C,GACxC7tB,GAAoBqhB,EAAW2K,EAAcG,EAAiB,SAC5D6B,GAAwB,UAAPhD,GAAiB8C,GACpC9tB,GAAoBx4B,EAAQgkD,EAAUC,EAAa,SAEhCuC,IAAkBD,KACnClC,EAAmBkC,KAAuB,IAAI9+C,SAAS++C,MACvDD,IAAsBlB,IAE1BQ,GAAgB,EAEpB,CAEIlB,GAAmBV,GAAe,CAACU,EAAiBV,GAAax8C,SAAS,eAC5Eo+C,GAAgB,GAGlB,IAAMY,GAAgB7B,EAAgBtkB,QAChComB,GAAoBzmB,GAAqBjgC,EAAQgkD,EAAUC,EAAa,KAAMwC,IAChFr5C,GAAeu5C,GAA0B3mD,EAAQgkD,EAAUC,EAAa,OACvED,GAAYqB,IACfj4C,GAAehB,OAAOC,KAAKrM,EAAOS,SAASmmD,mBAE7C,IACIC,GADE7kB,GAAkB50B,GAAa,GAET,IAAxBg2C,GAA6BsD,SAAgDxjD,IAA3BwjD,GAAkB57C,KACtE+7C,GAAmBH,GAAkB57C,KACJ,IAAxBs4C,GAA6BgC,QAA0CliD,IAAxBkiD,EAAet6C,OACvE+7C,GAA2C,WAAxBzB,EAAet6C,KAAoB,SAAWs6C,EAAet6C,MAIlF,IAAIg8C,GAAwBjB,GAAiC,aAAhB3B,GACT,IAA/BgB,GAA4D,IAAxB9B,EAErC2D,GAAa,GACbC,GAAgB,GAChBC,GAAiB,GACjBC,GAAczxC,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,kBAAM,IAAI,IACtE,GAAIyC,EACF,IADiB,IAAArgB,GAAA,SAAA2hB,GAEf,IAAI71C,EAAIuuB,EAAaha,IAAIhH,GACrBuoC,EAAQvC,EAAiBh/B,IAAIhH,IAAM,KACnCwoC,EAAOzC,EAAgB/+B,IAAIhH,IAAM,KACjCioC,IAA+B,IAANjoC,IAC3BvN,OAAsBpO,IAAlB6jD,GAAW,GAAmBA,GAAW,GAAKlnB,EAAaha,IAAI,GACnEkhC,GAAWloC,GAAKvN,EAChB81C,EAAQvC,EAAiBh/B,IAAI,IAAM,KACnCwhC,EAAOzC,EAAgB/+B,IAAI,IAAM,MAEnC,IAAMyhC,GAAaD,QAA8CnkD,IAAtCkK,GAAauU,MAAK,SAAArQ,GAAC,OAAIA,GAAK+1C,CAAI,IAC3DE,EAAgChJ,GAC9Bv+C,EAAQgkD,EAAUA,EAAUC,EAAa3yC,EAAG81C,EAAOC,EAAM90B,EAAiBwqB,EAAQ0B,EAAYC,GAC/F8I,GAAAh6C,EAAAA,EAAAA,GAAA+5C,EAAA,GAFM5I,EAAU6I,EAAA,GAAEtO,EAASsO,EAAA,GAGtBt3C,IAAWgpC,SAAAA,EAAWjwC,QAMtBy5C,EAAU/D,IAAertC,EACzB40C,GAAoBh2C,GAAWwyC,KAAYxJ,SAAAA,EAAWv3B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,KAAK,KACxE6L,IAAoBvO,SAAAA,EAAWv3B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,QAAUzuC,EAAE41C,MAAM,KAO9D2E,GAAYJ,GACbvK,IAAW7sC,IAAYg2C,KAAsBuB,GAAoB7B,GACjE11C,GAEHgpC,SAAAA,EAAWv4C,KAAI,SAAAwM,GAAC,OAAIqwC,EAAiB15B,KAAItd,GAAAA,GAAC,CACxC42C,KAAM,MACNuK,MAAO9oC,GACJ1R,GAAC,IACJyuC,MAAOzuC,EAAEyuC,OAAS8L,IAClB,IAEAA,IACFX,GAAWloC,GAAK,KACN,IAANA,UACKkoC,GAAW,IAGtB,IAAMX,GAAal2C,IAAYwyC,EACzBI,EAAa5J,aAAS,EAATA,EAAWv3B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,QAAUzuC,EAAE41C,MAAM,IACzDqD,GAAatD,IACfoE,GAAYroC,GAAK84B,GAAoBmL,IAEnCJ,IACFqE,GAAWloC,GAAK8/B,IAEdmI,IAA+B,IAANjoC,GAAY3O,GAAYwyC,IAEnDoE,IAAwB,GAEtBA,IAA+B,IAANjoC,GAAW,CAAC,OAAQ,SAASpX,SAAS4/C,KAEjEP,IAAwB,EAE5B,EA9DSjoC,GAAI,EAAIA,GAAIukC,EAAsBvkC,KAAG2mB,GAAA2hB,IAkEhD,IAAKtB,EACH,IAAK,IAAIhnC,GAAI,EAAIA,GAAIukC,EAAsBvkC,KACzC,GAA4B,IAAxBukC,EAA2B,KAAAwE,GAEvBC,GAAK1kC,GAAgB,CACzBiiC,aAAc,EAAdA,EAAgBzzB,aAChByzB,SAA6B,QAAfwC,GAAdxC,EAAgB5yB,qBAAa,IAAAo1B,QAAA,EAA7BA,GAA+Bj2B,aAC/B+0B,cAAiB,EAAjBA,GAAmB/0B,eAErBo1B,GAAWloC,IAAKgpC,GACZA,UAAAA,GAAIl8B,OACNq7B,GAAcnoC,IAAK,OAGvB,CAKJ,IAAK,IAAIA,GAAI,EAAIA,GAAIukC,EAAsBvkC,KAAK,CAC9C,IAEuDipC,GAAAC,GAFnDvE,GAAKqC,GAAiBjB,EAAgB/+B,IAAIhH,KAAM,KAChDmpC,GAAKnC,GAAiBhB,EAAiBh/B,IAAIhH,KAAM,KACjDgnC,GAAiBiB,IAA+B,IAANjoC,KAC5C2kC,GAAqB,QAAnBsE,GAAGd,GAAcnoC,WAAE,IAAAipC,GAAAA,GAAIlD,EAAgB/+B,IAAI,GAC7CmiC,GAAsB,QAApBD,GAAGd,GAAepoC,WAAE,IAAAkpC,GAAAA,GAAIlD,EAAiBh/B,IAAI,GAC/CmhC,GAAcnoC,IAAK2kC,GACnByD,GAAepoC,IAAKmpC,IAEH56C,GAAa3F,SAAS+7C,MAEvCwD,GAAcnoC,IAAKmjB,IAEhBgmB,KACHf,GAAepoC,IAAKgoC,GAExB,CAGA,IAAIz0C,GAAWytB,GACXknB,GAAW99C,OAAS,IAAM48C,KAC5BzzC,GAAW,IAAImN,EAAAA,GAAAA,KAAe9J,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,SAAC6E,EAASppC,GAChF,YAAyB3b,IAAlB6jD,GAAWloC,GAAmBkoC,GAAWloC,GAAMgnC,EAAgBhmB,EAAaha,IAAIhH,QAAK3b,CAC9F,MAEF,IAAI4tC,GAAc8T,GACdoC,GAAc/9C,OAAS,IAAM48C,KAC/B/U,GAAc,IAAIvxB,EAAAA,GAAAA,KAAe9J,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,SAAC6E,EAASppC,GAAM,IAAAqpC,EACzF,OAAuB,QAAvBA,EAAOlB,GAAcnoC,UAAE,IAAAqpC,EAAAA,EAAKrC,GAAiBjB,EAAgB/+B,IAAIhH,IAAM,IACzE,MAEF,IAAIkyB,GAAe8T,GACfoC,GAAeh+C,OAAS,IAAM48C,KAChC9U,GAAe,IAAIxxB,EAAAA,GAAAA,KAAe9J,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,SAAC6E,EAASppC,GAAM,IAAAspC,EAC1F,OAAwB,QAAxBA,EAAOlB,GAAepoC,UAAE,IAAAspC,EAAAA,EAAKtC,GAAiBhB,EAAiBh/B,IAAIhH,IAAM,IAC3E,MAIF,IAAMupC,GAAgBlF,GAAcljD,EAAQgkD,EAAUC,EAAa7xC,GAAU0+B,IAC7E,GAAIsX,GAAe,CAEjB,IAAMC,GAAuB1Q,GAAoByQ,IAC3C1F,GAAU3F,GAAUqG,GAAuB,EAC3CkF,GAAWl2C,GACbswC,KACFqE,GAAW,GAAK30C,GAASyT,IAAI,GAC7BzT,GAAWA,GAASu+B,IAAI,EAAGoW,GAAW,IACtCG,GAAY,GAAKA,GAAY,KAEZxE,IAEjBwE,GAAYpjC,KAAKukC,IAEnB7K,EAAiB15B,KAAItd,GAAAA,GAAC,CACpB42C,KAAM,MACNuK,OAAQ,GACLS,IAAa,IAChBxM,MAAO8G,GACP3C,UAAW2C,GAAU,CAAC4F,GAASziC,IAAI,GAAIyiC,GAASziC,IAAI,SAAM3iB,EAC1D88C,QAAS0C,GAAU,CAACtwC,GAASyT,IAAI,GAAIzT,GAASyT,IAAI,SAAM3iB,IAE5D,CAEA,IAAI8tC,GAAgB8T,EACdyD,IAAuBzD,aAAiB,EAAjBA,EAAmBl+C,QAASsgD,GAAYj+C,QAChEi+C,GAAY71C,QAAO,SAACC,EAAGuN,GAAC,OAAMvN,GAAKwzC,EAAkBj/B,IAAIhH,EAAE,IAAG5V,OAAS,EAK5E,OAJIs/C,KACFvX,GAAgB,IAAIzxB,EAAAA,GAAAA,KAAe2nC,KAG9B,CACLrB,cAAAA,EAAezzC,SAAAA,GAAU0+B,YAAAA,GAAaC,aAAAA,GAAcqS,oBAAAA,EAAqB3F,WAAYuG,EACrFhT,cAAAA,GAAeC,cAAAA,EAAeuM,iBAAAA,EAElC,ECz5CMngC,GAAW,SAAC/L,GAAC,MAAkB,WAAZqB,EAAAA,EAAAA,GAAOrB,IAAuB,OAANA,IAAemE,MAAMC,QAAQpE,EAAE,EAQnEk3C,GAAoB,SAAC3oD,EAAOG,GACvC,GAAKH,EAAL,CAEA,IAAMozB,EAAUpzB,EAAMgmB,IAAI,QACpBuJ,EAAa6D,GAAWM,GAAcvzB,EAAQizB,GACpD,GAAK7D,EAAL,CAEA,IAAIq5B,EAAa5oD,EACb6oD,GAAiB,EACrB,IAAK,IAAMz0B,KAAU7E,EAAW0E,KAAM,CACpC,IAAMI,EAAY9E,EAAW0E,KAAKG,GAC3B7mB,EAA0C8mB,EAA1C9mB,aAAcgnB,EAA4BF,EAA5BE,WAAYzC,EAAgBuC,EAAhBvC,aAC3Bg3B,EAAuBC,GAA2B5oD,EAAQoN,EAAc8mB,GACxEJ,EAAO20B,EAAW5iC,IAAI,QACtBgjC,EAAoD,GAA/BF,EAAqB1/C,OAAc0/C,EAAqB,QAAKzlD,EAClF8wB,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACnC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EAC1Cg/B,GAAelO,EAASA,EAAOnO,IAAI,iBAAc3iB,IAAc2lD,EACrE,QAAiB3lD,IAAb++B,EAAwB,CAC1B,IAAM6mB,EAAmB/oB,GAAckC,EAAUC,EAAaliC,GAC9D,QAAyBkD,IAArB4lD,EACF,OAIF,GAHWA,IAAqB7mB,IAC9BwmB,EAAaA,EAAWzhC,MAAM,CAAC,OAAQiN,EAAQ,SAAU60B,IAEvDJ,EAEF,MAEJ,MAAO,QAAqBxlD,IAAjByuB,GAA+BtU,GAASsU,GAG5C,KAAIyC,EAKT,OAHAs0B,GAAiB,CAInB,MAPED,GADAA,EAAaA,EAAWzhC,MAAM,CAAC,OAAQiN,EAAQ,SAAU80B,GAAmB70B,KACpDlN,MAAM,CAAC,OAAQiN,EAAQ,YAAa,QAQhE,CACA,OAAOw0B,CAlCW,CAJA,CAuCpB,EA2CaO,GAAU,SAACnpD,EAAOozB,EAASjzB,EAAQipD,GAC9C,IAAM50B,EAAiBr0B,EAAOS,SAAS4zB,eACvCx0B,EAAQA,GAAS,IAAI0f,EAAAA,GAAAA,IACjB9J,MAAMC,QAAQud,KAEhBA,EAAUA,EAAQpyB,KAAKwzB,IAEzB,IAAM60B,EAAarpD,EAAMgmB,IAAI,QACvBsjC,EAAUtpD,EAAMgmB,IAAI,QAC1BhmB,EAAQA,EAAM8wC,IAAI,OAAQ1d,GAE1B,IAAM7D,EAAa6D,GAAWM,GAAcvzB,EAAQizB,GAC9Cm2B,EAAmBn2B,GAAWo2B,GAAiBrpD,EAAQizB,GACvDq2B,EAAmBJ,GAAcG,GAAiBrpD,EAAQkpD,GAC1DK,EAAeC,GAA8BF,EAAkBF,EAAkBD,EAASnpD,EAAQipD,GAYxG,OAREppD,EAHE0pD,EAAatgD,OACEmD,OAAOC,KAAK+8C,EAAiBt1B,MACdziB,QAAO,SAAAzQ,GAAC,OAAK2oD,EAAa9hD,SAAS7G,EAAE,IAC9CkhB,QAAO,SAACjiB,EAAOe,GAAC,OAAKf,EAAMymB,SAAS,CAAC,OAAQ1lB,GAAG,GAAEf,GAEjEA,EAAM8wC,IAAI,OAAQ,IAAIpxB,EAAAA,GAAAA,KAIxBkqC,GAAmBzpD,EAAQH,EAAOuvB,EAG5C,EAEMq6B,GAAqB,SAACzpD,EAAQk0C,EAAW9kB,GAC7C,GAAIA,EACF,IAAK,IAAM6E,KAAU7E,EAAW0E,KAC9BogB,EAAY0O,GAAkB5iD,EAAQk0C,EAAW9kB,EAAY6E,GAGjE,OAAOigB,CACT,EAEa0O,GAAoB,SAAC5iD,EAAQk0C,EAAW9kB,EAAY6E,GAC/D,IAAMC,EAAY9E,EAAW0E,KAAKG,GAC3B7mB,EAA8B8mB,EAA9B9mB,aAAcukB,EAAgBuC,EAAhBvC,aACfg3B,EAAuBC,GAA2B5oD,EAAQoN,EAAc8mB,GACxEuyB,EAAgBkC,EAAqB1/C,OAAS0/C,EAAqB,QAAKzlD,EAExE2lD,GADkBl3B,EAAgBtU,GAASsU,IAAmBA,EAAahG,KAAO,OAAS,aAAWzoB,IAC9DujD,EAU9C,OATiBvS,EAAU7tB,MAAM,CAAC,OAAQ4N,WAEnB/wB,IAAjByuB,IACFuiB,EAAYA,EAAUltB,MAAM,CAAC,OAAQiN,EAAQ,SAAU80B,GAAmB70B,KAExE20B,IACF3U,EAAYA,EAAUltB,MAAM,CAAC,OAAQiN,EAAQ,YAAa40B,KAGvD3U,CACT,EAEM6U,GAAqB,SAAH1mD,GAA8B,IAAXxC,EAAKwC,EAAnBsvB,aAC3B,OAAItU,GAASxd,KAAW0f,EAAAA,GAAAA,IAAcnB,MAAMve,IAAUA,EAAM8rB,KACnDpM,EAAAA,GAAAA,OAAiB1f,GAAO,SAAUe,EAAG0Q,GAC1C,OAAOiO,EAAAA,GAAAA,SAAmBuN,UAAUxb,GAAKA,EAAEyb,SAAWzb,EAAEsa,cAC1D,IAEK/rB,CACT,EASa6pD,GAAc,SAAC7pD,EAAOo0B,EAAQD,EAAQE,EAAWl0B,GAC5D,GAAIH,GAASA,EAAMgmB,IAAI,QAAS,CAI9B,IAAM9Y,GAHNlN,EAAQA,EAAMmnB,MAAM,CAAC,OAAQiN,EAAQ,SAAUD,IAGxB3N,MAAM,CAAC,OAAQ4N,EAAQ,aACvC7mB,EAAgB8mB,EAAhB9mB,aACDu7C,EAAuBC,GAA2B5oD,EAAQoN,EAAc8mB,GAC1E20B,EAAoD,GAA/BF,EAAqB1/C,OAAc0/C,EAAqB,QAAKzlD,GACjF2lD,GAAsBF,EAAqBlhD,SAAS,WACvDohD,EAAqB,UAElB97C,GAAY87C,IACfhpD,EAAQA,EAAMmnB,MAAM,CAAC,OAAQiN,EAAQ,YAAa40B,GAEtD,CACA,OAAOhpD,CACT,EASa8pD,GAAiB,SAAC9pD,EAAOo0B,EAAQ21B,EAAWC,EAAYC,GAInE,OAHIjqD,GAASA,EAAMgmB,IAAI,UACrBhmB,EAAQA,EAAMmnB,MAAM,CAAC,OAAQiN,GAAS,IAAI1U,EAAAA,GAAAA,IAAc,CAACxS,SAAU68C,MAE9D/pD,CACT,EAGa2pD,GAAgC,SAACvf,EAAI8f,EAAIC,EAAShqD,GAA+B,IAAvBipD,EAAUjgD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC/E,OAAIihC,aAAE,EAAFA,EAAI5W,cAAc02B,aAAE,EAAFA,EAAI12B,YACjB,GAEIjnB,OAAOC,KAAK09C,EAAGj2B,MACAziB,QAAO,SAACzQ,EAAGie,GACrC,IAAMorC,EAAOF,EAAGj2B,KAAKlzB,GACfspD,EAAOjgB,EAAGnW,KAAKlzB,GAErB,GADewL,OAAOC,KAAK49B,EAAGnW,MAAMljB,QAAQhQ,IACvCspD,SAA+BhnD,IAAtB+mD,EAAKt4B,cAA8Bs4B,EAAK71B,YACpD,OAAO,EAKT,IAAI81B,aAAI,EAAJA,EAAMp/C,OAAQm/C,EAAKn/C,KACrB,OAAO,EACT,GAAIg7C,GAAYr+C,SAASwiD,EAAKn/C,SACvBo/C,EAAKzE,gBAAkByE,EAAKzE,iBAAmBwE,EAAKxE,gBACvD,OAAO,EAEX,GAAIuE,EAAS,KAAAG,EACLn2B,EAASg2B,EAAQnkC,IAAIjlB,GACrBqhC,EAAWjO,aAAM,EAANA,EAAQnO,IAAI,SACvBqc,EAAclO,aAAM,EAANA,EAAQnO,IAAI,YAChC,GAAIqc,GAAe+nB,EAAK78C,eAAiB68C,EAAK78C,aAAa3F,SAASy6B,GAClE,OAAO,EACT,IACAogB,EAAuC/D,GACrCv+C,EAFgB,KAAgCiqD,EAAf,KAEIhoB,EAFWgoB,EAEMn/C,KAAMo3B,EAFY,KAEkB+mB,GAFC,GAG5F1G,GAAA/0C,EAAAA,EAAAA,GAAA80C,EAAA,GAFoB8H,GAAF7H,EAAA,GAAgBA,EAAA,IAGnC,GAAI6H,SAAqC,QAAvBD,EAAdC,EAAgB/4C,QAAO,SAAAlE,GAAC,OAAKA,EAAEyuC,KAAK,WAAC,IAAAuO,GAArCA,EAAuClhD,OACzC,OAAO,CACX,CAEA,OAAO,CACT,GAEF,EC7Oa68C,GAAc,CACzB,SACA,cACA,aACA,mBAIWuE,GAAsB,SAACrqD,EAAQ8xB,GAAc,IAAAw4B,EACxD,OAA8B,QAAvBA,EAAAtqD,EAAOmc,MAAM2V,UAAU,IAAAw4B,OAAA,EAAvBA,EAAyBj8B,YAAa,IAC/C,EAEakvB,GAAuB,SAACv9C,EAAQwV,GAC3C,IAAMkb,EAAcqC,GAAe/yB,EAAQwV,GAE3C,OADiBkb,EAAcA,EAAYrC,UAAY,EAEzD,EAEa2hB,GAAmB,SAAChwC,EAAQwV,GAAU,IAAA+0C,EAC3CC,EAAWjN,GAAqBv9C,EAAQwV,GAC9C,OAAoB,QAApB+0C,EAAOC,aAAQ,EAARA,EAAW,UAAE,IAAAD,EAAAA,EAAI,IAC1B,EAEaE,GAAqB,SAAC5qD,EAAOkN,EAAU/M,GAClD,IAAI0qD,EAAsB,KAC1B,GAAI7qD,EACF,GAAiB,UAAbkN,EAAsB,CACxB,IAAM2jB,EAAcqC,GAAe/yB,EAAQH,GACvC6wB,IACFg6B,EAAsBh6B,EAAY5lB,KAEtC,MAAO,GAAiB,SAAbiC,EAAqB,CAC9B,IAAMkmB,EAAUpzB,EAAMgmB,IAAI,QAC1B,GAAIoN,EAAS,CACX,IAAM7D,EAAamE,GAAcvzB,EAAQizB,GACrC7D,IACFs7B,EAAsBt7B,EAAWiE,YAAcjE,EAAWtkB,KAE9D,CACF,CAEF,OAAO4/C,CACT,EAEaC,GAAoB,SAACn1C,EAAOxV,GACvC,OAAO6zC,GAAmBr+B,EAAOxV,EADyBgJ,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACP,QAAS,YACjE,EAEa6qC,GAAqB,SAACr+B,EAAOxV,GAAiF,IAAzE4wB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM4hD,EAAS5hD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,SAAU6hD,EAAY7hD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,YACzG,IAAKwM,EACH,OAAO,KACT,IAAM6e,EAAiBr0B,EAAOS,SAAS4zB,eACjCS,EAAQU,GAAchgB,EAAOxV,GAC7B8qD,EAAct1B,GAAc5E,EAAa5wB,GAU/C,OATY80B,EACTtT,MAAMspC,EAAY7hD,QAClBtI,KAAI,SAACoqD,EAAO5oC,EAAKkB,GAAG,OAAKA,EAAI7B,MAAM,EAAGW,EAAI,EAAE,IAC5CxhB,KAAI,SAACm0B,GAAK,MAAK,GAAAlS,QAAAhP,EAAAA,EAAAA,GAAIk3C,IAAWl3C,EAAAA,EAAAA,GAAKkhB,IAAOj0B,KAAKwzB,EAAe,IAC9D1zB,KAAI,SAAA66B,GACH,IAAM4F,EAAM4pB,GAAkBhrD,EAAQw7B,EAAMovB,EAAWC,GACvD,OAAOzpB,GAAOA,EAAIx9B,OAASqnD,KAAKzvB,EAAKt8B,MAAMm1B,GAC7C,IACChjB,QAAO,SAAAzN,GAAK,OAAa,MAATA,CAAa,GAElC,EAEak9B,GAAuB,SAACtrB,EAAOxV,GAA+B,IAAvB4wB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAChE,IAAKwM,EACH,OAAO,KACT,IAAM01C,EAAiBt6B,GAAeo6B,GAAkBhrD,EAAQ4wB,IAAgB,KAC1EyD,EAAiBr0B,EAAOS,SAAS4zB,eACjCS,EAAQU,GAAchgB,EAAOxV,GAE7B8qD,EADeK,GAAyB31C,EAAOob,EAAa5wB,GACzBw1B,GAAc5E,EAAa5wB,GAAhC,GACpC,OAAO80B,EACJtT,MAAMspC,EAAY7hD,QAClBtI,KAAI,SAACoqD,EAAO5oC,EAAKkB,GAAG,OAAKA,EAAI7B,MAAM,EAAGW,EAAI,EAAE,IAC5CxhB,KAAI,SAACm0B,GAAK,MAAM,CACf0G,KAAM,GAAA5Y,QAAAhP,EAAAA,EAAAA,GAAIk3C,IAAWl3C,EAAAA,EAAAA,GAAKkhB,IAAOj0B,KAAKwzB,GACtCttB,IAAK+tB,EAAMA,EAAM7rB,OAAS,GAC3B,IACAtI,KAAI,SAAA0B,GAAiB,IAAfm5B,EAAIn5B,EAAJm5B,KAEL,MAAO,CAACz0B,IAFM1E,EAAH0E,IAEEq6B,IADD4pB,GAAkBhrD,EAAQw7B,GAExC,IACC76B,KAAI,SAAAmF,EAAaqc,EAAKkB,GAErB,MAAO,CAFCvd,EAAHiB,IAAQjB,EAAHs7B,IACQjf,EAAM,EAAIkB,EAAIlB,EAAM,GAAGif,IAAM8pB,EAEjD,GACJ,EAEaE,GAAgB,SAACprD,EAAQwV,EAAOqjB,EAAU8uB,GAAmD,IAA3B0D,EAAcriD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAIrFsiD,EAAoBrrB,GAAqBjgC,EAAQwV,EAAOqjB,EAAU,KAJJ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,OAIoB,CAAC,EACtFuiD,EAAiB/tB,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EAGlE4N,EAAM,KACV,IAFoBioC,EAAiB,EAAIE,EAAextC,aAEtC,EAAG,CACnB,IAAMytC,EAAcF,EAAkBE,aAAeD,EAAeC,YAChEA,IACFpoC,EAAMooC,EAAY7D,IAChBvkC,GAAsB,YAAfzQ,EAAAA,EAAAA,GAAOyQ,KAChBA,EAAM,CAACxf,MAAOwf,EAAKjgB,YAAaigB,IAE7BA,IACHA,EAAM,CACJxf,MAAO5D,EAAOS,SAASgrD,WAAa,KAAO9D,EAAM,GACjDxkD,YAAanD,EAAOS,SAASirD,iBAAmB,KAAO/D,EAAM,IAGnE,KAAO,CACL,IAAI/jD,EAAQ0nD,EAAkBG,WAC1BtoD,EAAcmoD,EAAkBI,iBASpCtoC,EAAM,CACJxf,MAAOA,GAAS5D,EAAOS,SAASgrD,WAChCtoD,YAAaA,GAAenD,EAAOS,SAASirD,iBAEhD,CACA,OAAOtoC,CACT,EAEA,SAASuoC,GAA8B3rD,EAAQwV,GAAyC,IAAlCqjB,EAAQ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM+D,EAAQ/D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5EyR,EAAU,GACVilB,EAAY,GAChB,IAAKlqB,EACH,MAAO,CAACiF,QAAAA,EAASilB,UAAAA,GACnB,IAAMksB,EAAgBC,GAAWr2C,GAC3Bs2C,EAAWF,EAAgB,GAAHhpC,OAAMgpC,EAAa,MAAAhpC,OAAKiW,EAAQ,MAAAjW,OAAK7V,GAAa,KAC1Eg/C,EAASC,GAAoBhsD,EAAQ,+BAAgC8rD,GAC3E,GAAIC,EACF,OAAOA,EACT,IAAMt/B,EAA6B,YAAjB9Z,EAAAA,EAAAA,GAAO6C,OAAyBA,EAAMmW,QAAUnW,EAAMwb,KAAOxb,EAAMmsC,YAC/EjxB,EAAcqC,GAAe/yB,EAAQwV,GACrCgZ,EAAWqK,EAAW74B,EAAOquB,UAAUwK,GAAY,KAEzD,GAAInI,SAAAA,EAAajW,QAAS,KAAA+qB,EAAA,WAEtB,IAAM3T,EAAenB,EAAYjW,QAAQkW,GACzC,IAAK3wB,EAAOya,QAAQkW,GAAS,SAG7B,IAAMs7B,EAAiBjsD,EAAOya,QAAQkW,GAAQ5jB,UAAY,QACtDm/C,GAAS,EAiBb,GAhBe,UAAXv7B,IACFu7B,EAASA,GAAUtD,GAA2B5oD,EAAQ,CAAC,SAAU0wB,GAAaznB,OAAS,GAE1E,SAAX0nB,IACFu7B,EAASA,GAAUtD,GAA2B5oD,EAAQ,CAAC,QAAS0wB,GAAaznB,OAAS,GAIvE,UAAb8D,GAAyB8kB,EAAaxD,WAAc5B,GAAuB,gBAAVjX,IACnE02C,GAAS,GACPr6B,EAAaxD,WAAawK,IAC5BqzB,EAASA,IAAuD,GAA7Cr6B,EAAaxD,UAAUzd,QAAQioB,IAChD9rB,GAAYA,GAAYk/C,GAA+B,UAAbl/C,IAC5Cm/C,GAAS,GACP19B,GAAoC,GAAxBA,EAASzQ,aAAwC,UAAnBkuC,IAC5CC,GAAS,GACPA,EAAQ,KAAAC,EAAAC,EACV3xC,EAAQqJ,KAAK6M,GACb,IAAI07B,GAAuE,IAA9B,QAAxBF,EAAAz7B,EAAYtjB,oBAAY,IAAA++C,OAAA,EAAxBA,EAA0Bv7C,QAAQq7C,KACC,IAApDz9B,SAAsB,QAAd49B,EAAR59B,EAAUphB,oBAAY,IAAAg/C,OAAA,EAAtBA,EAAwBx7C,QAAQq7C,MAClCI,GAAiB,GACfA,IAAmB3sB,EAAU/d,MAAK,SAAArQ,GAAC,OAAIA,GAAK26C,CAAc,KAC5DvsB,EAAU5b,KAAKmoC,EACnB,CACF,EA/BA,IAAK,IAAMt7B,KAAUD,EAAYjW,QAAO+qB,GAgC1C,CAEA,IAAM8mB,EAAe,SAAClmB,GACpB,IAAImmB,EAAK,EAaT,OAZI77B,EAAY87B,cACV97B,EAAY87B,cAAc/kD,SAAS2+B,KACrCmmB,GAAO,GAAK77B,EAAY87B,cAAc57C,QAAQw1B,IACvCA,GAAK1V,EAAYkB,aAC1B26B,GAAM,KAEE,UAANnmB,IACFmmB,GAAM,GAEE,SAANnmB,IACFmmB,GAAM,GAEDA,CACT,EAEA9xC,EAAQgyC,MAAK,SAACC,EAAIC,GAAE,OAAML,EAAaK,GAAML,EAAaI,EAAG,IAE7D,IAAMxnD,EAAM,CAAEuV,QAAAA,EAASilB,UAAAA,GAEvB,OADAktB,GAAmB5sD,EAAQ,+BAAgC8rD,EAAU5mD,GAC9DA,CACT,CAEO,IAAM2nD,GAAuB,SAAC7sD,EAAQwV,EAAOqjB,GAElD,OADkB8yB,GAA6B3rD,EAAQwV,EAAOqjB,EADM7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,MAChEyR,OAET,EAEamuC,GAA6B,SAAC5oD,EAAQ0/B,EAAWiB,GAAoB,IAAAmsB,EAChF,IAAKnsB,EACH,OAAOjB,EACT,IAAI5N,EAAgC,QAAvBg7B,EAAGnsB,EAAgB71B,YAAI,IAAAgiD,EAAAA,EAAInsB,EAAgBtN,WAQxD,MAPkB,WAAdvB,IAEFA,EAAY,UAGT4N,IACHA,EAAYtzB,OAAOC,KAAKrM,EAAOS,SAASmmD,mBACnClnB,EAAUruB,QAAO,SAAAmyC,GACtB,IAAI0I,GAAS,EACb,GAAW,UAAP1I,GACExjD,EAAO+sD,kBAAmB,CAE5B,IAAMC,EAASrsB,EAAgBghB,WAAa,EAAI,EAChDuK,EAASA,GAAUlsD,EAAO+sD,kBAAkBj7B,GAAak7B,CAC3D,CAUF,MARW,SAAPxJ,IACE7iB,EAAgB3R,QAClBk9B,EAASA,GAAUvrB,EAAgB3R,MAAM/lB,OAAS,GAEhDjJ,EAAOitD,mBACTf,EAASA,GAAUlsD,EAAOitD,iBAAiBn7B,GAAa,IAGrDo6B,CACT,GACF,EAEavF,GAA4B,SAAC3mD,EAAQwV,EAAOqjB,GAAqC,IAA3B8H,EAAe33B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5E02B,EAAaisB,GAA6B3rD,EAAQwV,EAAOqjB,EAAU,MAAnE6G,UAEP,OAD0BkpB,GAA2B5oD,EAAQ0/B,EAAWiB,EAE1E,EAEanI,GAAsB,SAACx4B,EAAQwV,EAAOqjB,GAA8B,IACxEpe,EAAWkxC,GAA6B3rD,EAAQwV,EAAOqjB,EADK7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,MAC/DyR,QACHkW,EAAS,KAGb,OAFIlW,EAAQxR,SACV0nB,EAASlW,EAAQ,IACZkW,CACT,EAIauQ,GAAkB,SAAC1rB,EAAOxV,EAAQ4tB,GAA2C,IAArCgD,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMvH,EAAOuH,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClF,GAAKwM,EAAL,CACA,IAAMglB,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC5C6e,EAAkBr0B,EAAOS,SAAzB4zB,eACDuM,EAAapL,GAAchgB,EAAOxV,GACpCihC,EAAYxrB,MAAMC,QAAQF,GAASA,EAAM3U,KAAKwzB,GAAkB7e,EACpE,GAAI/T,SAAAA,EAASwyC,cAAgBzZ,EAAS0yB,UAAW,CAC/C,IAAMC,GAAcv5C,EAAAA,EAAAA,GAAOgtB,GAC3BusB,EAAe,GAAK3yB,EAAS0yB,UAC7BjsB,EAAYksB,EAAetsD,KAAKwzB,EAClC,CAIA,GAHImG,EAASyG,YACXA,EAAYzG,EAASyG,WAEnBrQ,EAAa,CACQmC,GAAe/yB,EAAQ4wB,GAA9C,IACIw8B,EAAkBx8B,EACqC,GAAvDqQ,EAAUrwB,QAAQw8C,EAAkB/4B,GACtC4M,EAAYA,EAAUzf,OAAO4rC,EAAkB/4B,GAAgBprB,QAG3DuxB,EAASyG,WAGXrT,EAAKL,OAAOzJ,KAAK,mBAADlB,OAAoBwqC,EAAe,gBAAAxqC,OAAeqe,GAGxE,CACA,OAAOA,CA3BW,CA4BpB,EAMaosB,GAAc,SAACnkD,EAAMlJ,GAChC,IAAM8K,EAAO5B,EAAK2c,IAAI,QAChBgQ,EAAO3sB,EAAKmd,MAAM,CAAC,aAAc,SACvC,MAAY,cAARvb,GAAgC,SAAR+qB,EACnBy3B,GAAoBpkD,EAAMlJ,GAChB,SAAR8K,GAA2B,cAARA,EACrByiD,GAAarkD,EAAMlJ,GAEnBwtD,GAAYtkD,EAAMlJ,EAE7B,EAEMstD,GAAsB,SAACpkD,EAAMlJ,GACjC,IAAMiF,EAAWiE,EAAK2c,IAAI,aACpBoF,EAAa/hB,EAAK2c,IAAI,cAC5B,OAAO4nC,GAAyCxiC,EAAW6yB,WAAY74C,EAAUjF,EACnF,EAQaytD,GAA2C,SAACxiC,EAAYhmB,EAAUjF,GAAW,IAAAi8C,EAAAC,EAClFrjB,EAAW5N,EAAW4N,SAEtB4jB,EAAqC,IADgB,QAA1CR,EAA6B,QAA7BC,EAAGl8C,EAAOquB,UAAUwK,UAAS,IAAAqjB,OAAA,EAA1BA,EAA4Bn+B,mBAAW,IAAAk+B,EAAAA,EAAI,GAEzDyR,GACIC,GAAsB1iC,EAAYjrB,GADtC0tD,GAEOE,GAAqB3oD,EAAUjF,GAG5C,QADkB0tD,KAAsBjR,GAAsBiR,GAEhE,EAEMH,GAAe,SAAC5pD,EAAO3D,GAC3B,IAAMiF,EAAWtB,EAAMkiB,IAAI,aAC3B,OAAO+nC,GAAqB3oD,EAAUjF,EACxC,EAMa4tD,GAAuB,SAAC3oD,EAAUjF,GAE7C,SADkBiF,aAAQ,EAARA,EAAU2B,MAAO,GAAK3B,EAASoM,QAAO,SAAAikB,GAAE,OAAK+3B,GAAY/3B,EAAIt1B,EAAO,IAAE4G,KAAO,EAEjG,EAEM4mD,GAAc,SAAC13B,EAAM91B,GACzB,IAAMirB,EAAa6K,EAAKjQ,IAAI,cAC5B,OAAO8nC,IAAsB1iC,aAAU,EAAVA,EAAY6yB,aAAc,CAAC,EAAG99C,EAC7D,EAOa2tD,GAAwB,SAAC1iC,EAAYjrB,GAKhD,QAFc69C,GAA+B5yB,EAAYjrB,GAFvC,GAGMg+C,OAFD,EAIzB,EAQaH,GAAiC,SAAH73C,EAIxChG,GAA8B,IAAA6tD,EAAAC,EAAAC,EAH/Bv4C,EAAKxP,EAALwP,MAAOif,EAAQzuB,EAARyuB,SACPoE,GAD0B7yB,EAAT8rB,UACT9rB,EAAR6yB,UACAh5B,EAAKmG,EAALnG,MAAOkN,EAAQ/G,EAAR+G,SACEihD,GADiBhoD,EAAT4sB,UACC5pB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,IACZ+U,EAAqD,QAA1C8vC,EAA6B,QAA7BC,EAAG9tD,EAAOquB,UAAUwK,UAAS,IAAAi1B,OAAA,EAA1BA,EAA4B/vC,mBAAW,IAAA8vC,EAAAA,EAAI,EACzDnuB,EAAY3yB,SAAAA,EAAU8Y,IAAM9Y,EAASsS,OAAStS,EAG9C7H,EAAM,CAAE4vB,MAAO,CAAC,EAAGkpB,MAAO,GAQhC,GAPA94C,EAAI4vB,MAAMtf,MAAQw4C,EAAsB,MAATx4C,EAAiBy4C,GAAiBz4C,EAAOif,EAAUz0B,GAClFkF,EAAI4vB,MAAM+D,WAAaA,EACvB3zB,EAAI4vB,MAAMj1B,OAAQA,SAEjB,QAFsBkuD,EAALluD,EAAOwR,QAAO,SAACvC,EAAK64C,GAAK,OACzCsG,GAAiBn/C,EAAK4wB,aAAS,EAATA,EAAYioB,GAAQ3nD,EAAQguD,EAAU,WAC7D,IAAAD,OAAA,EAFiBA,EAEfnnD,QAASonD,EAAYhxC,KAAKtL,IAAIqM,EAAa,GAAKA,GACnD7Y,EAAI84C,MAAQ5xC,OAAOC,KAAKnH,EAAI4vB,OAAOzjB,QAAO,SAAAzQ,GAAC,QAAMsE,EAAI4vB,MAAMl0B,EAAE,IAAEqI,OAE3D+kD,GAAa9oD,EAAI84C,MAAQ,EAAG,CAI9B,IAAMkQ,GAAY,GACbhpD,EAAI4vB,MAAMj1B,OAAsB,SAAb40B,GAAuBw5B,GAAiBz4C,EAAOif,EAAUz0B,GAAQ,EAAOkuD,IAC9FhpD,EAAI84C,QAED94C,EAAI4vB,MAAMtf,OACb3V,SAAAA,EAAOc,KAAI,SAACmO,EAAK64C,GACY,UAAvBjoB,aAAS,EAATA,EAAYioB,KAAqBsG,GAAiBn/C,EAAK4wB,aAAS,EAATA,EAAYioB,GAAQ3nD,GAAQ,EAAOkuD,IAC5FhpD,EAAI84C,OAER,GAEJ,CAEA,OAAO94C,CACT,EAEM+oD,GAAmB,SAAnBA,EAAoBpuD,EAAOkN,EAAU/M,GAAgD,IAAxCguD,EAAShlD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUklD,IAASllD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAC7E,IAAKglD,GAAyB,QAAZjhD,GAAsBlN,EAAO,KAAAqiD,EACvCjvB,EAAmB,QAAZivB,EAAGriD,EAAMgmB,WAAG,IAAAq8B,OAAA,EAATA,EAAA3kC,KAAA1d,EAAY,QACtBuvB,EAAamE,GAAcvzB,EAAQizB,GACzC,GAAI7D,EAAY,CACd,IAAM0E,EAAOj0B,EAAMgmB,IAAI,QACvB,IAAK,IAAMoO,KAAU7E,EAAW0E,KAAM,CACpC,IAAMI,EAAY9E,EAAW0E,KAAKG,GAC5BD,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EAEnC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EAC1Cg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EACtD,GAAgBA,MAAZ++B,QAAqD/+B,KAA5BgxB,aAAS,EAATA,EAAWvC,gBAA+BuC,UAAAA,EAAWE,YAEhF,OAAO,EAET,GAAgBlxB,MAAZ++B,IACGgsB,EAAiBhsB,EAAUC,EAAaliC,GAAQkuD,GAAYF,GAE/D,OAAO,CAGb,CAEA,OAAO,CACT,CACF,CACA,OAAgB9qD,MAATrD,CACT,EAQakgC,GAAgB,SAAClgC,EAAOkN,EAAU/M,GAC7C,MAAgB,QAAZ+M,EACKy7C,GAAkB3oD,EAAOG,GAEzBH,CACX,EAGasuD,GAA0B,SAA1BA,EAA2BjlD,GACtC,IAAMjE,EAAWiE,EAAK2c,IAAI,aAC1B,GAAsB,IAAlB5gB,aAAQ,EAARA,EAAU2B,MAAW,CACvB,IAAM2f,EAAQthB,EAASq7B,QAEvB,MAAkB,UADA/Z,EAAMV,IAAI,QAEnBsoC,EAAwB5nC,GAE1BA,CACT,CACA,OAAO,IACT,E,8oBC/cO,SAAS6nC,GAAextC,EAAOytC,GACpC,OAAOC,KAAAA,MAAS1tC,EAAOytC,EACzB,CAMO,IAAME,GAA4B,CACvCC,KAAM,SAACpwB,EAAIhiB,GAAG,QAAA4I,EAAAhc,UAAAC,OAAK6qB,EAAI,IAAAre,MAAAuP,EAAA,EAAAA,EAAA,KAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAAJ+T,EAAI/T,EAAA,GAAA/W,UAAA+W,GAAA,OAAMqe,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMhiB,GAAGwG,OAAKkR,GAAK,EAClD26B,IAAK,SAAC3jD,EAAMtL,GAAK,MAAM,CAACsL,KAAAA,EAAMtL,MAAAA,EAAM,EACpCkvD,aAAc,SAACC,EAAMC,GAAI,OAAApoD,GAAAA,GAAA,GAAUmoD,GAASC,EAAI,EAChDlxC,YAAa,SAACC,GAAO,OAAKvR,OAAOsR,YAAYC,EAAQ,EACrDkxC,OAAQ,SAACjX,GAAG,OAAMA,aAAG,EAAHA,EAAK3uC,SAAU,CAAC,EAClC6lD,UAAW,SAAClX,EAAKmX,EAASC,GAAK,OAA+C,OAA1CpX,aAAG,EAAHA,EAAKxnB,MAAM,IAAI8S,OAAO6rB,EAASC,IAAe,EAClFC,IAAK,kBAAM,IAAIvyC,IAAM,EACrBwyC,SAAU,SAACvzC,EAAM7M,EAAKqgD,GAAU,OAAOxwD,KAAOgd,GAAMyzC,IAAItgD,EAAKqgD,GAAKE,QAAU,EAC5EtgC,YAAa,SAAC6oB,GAAG,OAAKA,EAAI7oB,aAAa,EACvCugC,YAAa,SAAC1X,GAAG,OAAKA,EAAI0X,aAAa,G,orBCPzC,SAASC,GAAuB3uC,EAAOytC,EAAM3lD,GAC3C,IAAI0a,EACJ,IACEA,EAAMkrC,KAAAA,MAAS1tC,EAAOytC,EACxB,CAAE,MAAOlhD,GAEP,MADAA,EAAEwlB,QAAU,GAAH/P,OAAMla,EAAK7H,KAAK,KAAI,QAAA+hB,OAAOzV,EAAEwlB,SAChCxlB,CACR,CACA,OAAOiW,CACT,CAEA,SAASosC,GAAcC,EAAOrxB,EAAItK,EAAMprB,GACtC,IAAI0a,EACJ,IACEA,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMqxB,GAAK7sC,QAAAhP,EAAAA,EAAAA,GAAKkgB,IAC1B,CAAE,MAAO3mB,GAEP,MADAA,EAAEwlB,QAAU,GAAH/P,OAAMla,EAAK7H,KAAK,KAAI,QAAA+hB,OAAOzV,EAAEwlB,SAChCxlB,CACR,CACA,OAAOiW,CACT,EDVO,WACL,IAAK,IAAIxiB,KAAK2tD,GAlBe/iD,EAmBL5K,EAnBWygB,EAmBRktC,GAA0B3tD,GAlB9C0tD,KAAAA,cAAiB9iD,EAAM6V,GADhC,IAA+B7V,EAAM6V,CAqBrC,CClBAquC,GA0BO,IAAMC,GAAa,CAAC,eAAgB,SAAU,QAAS,YAAa,UAAW,WAAY,QAAS,OAkBrGC,GAA2B,CAC/Bx0C,WAAY,CAAEtQ,KAAM,IAAKgpB,KAAM,CAAC,SAAU,WAC1Czf,SAAU,CAAEvJ,KAAM,KAClBwJ,QAAS,CAAExJ,KAAM,KACjBmH,MAAO,CAAEnH,KAAM,IAAK+kD,OAAO,GAC3BtR,cAAe,CAAEzzC,KAAM,IAAKgpB,KAAM,CAAC,MAAO,gBAAiB,KAAM,QAAS,mBAGtEg8B,GAAiBtpD,GAAAA,GAAA,GAClBopD,IAAwB,IAC3Bj1C,QAAS,CAAE7P,KAAM,MACjBs1B,YAAa,CAAEt1B,KAAM,IAAKgpB,KAAM,CAAC,MAAO,WAAY,SAAU,eAAgB,KAAM,QAAS,kBAC7Fi8B,eAAgB,CAAEjlD,KAAM,IAAKgpB,KAAM,CAAC,MAAO,WAAY,SAAU,KAAM,QAAS,kBAChF0M,gBAAiB,CAAE11B,KAAM,IAAKgpB,KAAM,CAAC,MAAO,WAAY,SAAU,KAAM,QAAS,kBACjF+Y,gBAAiB,CAAE/hC,KAAM,IAAKgpB,KAAM,CAAC,MAAO,SAAU,SACtDk8B,iBAAkB,CAAEllD,KAAM,IAAKgpB,KAAM,CAAC,MAAO,WAAY,SAAU,KAAM,UACzEm8B,yBAA0B,CAAEnlD,KAAM,IAAKgpB,KAAM,CAAC,YAAa,MAAO,KAAM,QAAS,WACjFrF,UAAW,CAAE3jB,KAAM,IAAKgpB,KAAM,CAAC,MAAO,WAAY,SAAU,KAAM,UAClErB,gBAAiB,CAAE3nB,KAAM,IAAKgpB,KAAM,CAAC,QACrCyqB,cAAe,CAAEzzC,KAAM,IAAKgpB,KAAM,CAAC,MAAO,gBAAiB,KAAM,QAAS,kBAC1EzU,KAAM,CAAEvU,KAAM,IAAKgpB,KAAM,CAAC,UAGtBo8B,GAAsB,CAC1BzuD,QAAS,CACPkZ,QAAS,CAAE7P,KAAM,OAEnB8nC,SAAU,CAAE9nC,KAAM,IAAKgpB,KAAM,CAAC,QAAS,KAAM,OAAQ,WAAY,YAAa,QAAS,kBAAmB,eAAgB,aAC1Hq8B,cAAe,CAAErlD,KAAM,IAAKgpB,KAAM,CAAC,QAAS,KAAM,OAAQ,UAAW,WAAY,YAAa,QAAS,kBAAmB,aAC1Hs8B,YAAa,CAAEtlD,KAAM,IAAKgpB,KAAM,CAAC,QAAS,KAAM,OAAQ,WAAY,YAAa,QAAS,kBAAmB,aAC7GuK,aAAc,CAAEvzB,KAAM,IAAKgpB,KAAM,CAAC,QAAS,KAAM,OAAQ,WAAY,YAAa,QAAS,kBAAmB,aAC9GrF,UAAW,CAAE3jB,KAAM,IAAKi4C,OAAQ,SAAUjvB,KAAM,CAAC,QAAS,KAAM,OAAQ,QAAS,kBAAmB,aACpGu8B,uBAAwB,CAAEvlD,KAAM,IAAKi4C,OAAQ,SAAUjvB,KAAM,CAAC,cAC9DpgB,eAAgB,CAAE5I,KAAM,IAAK+kD,OAAO,IAShCS,GAA2B,CAC/BC,YAAaT,GACbU,QAASN,IAgBLO,GAAoBjqD,GAAAA,GAAA,GACrBopD,IAAwB,IAC3Bp9B,cAAeo9B,KAGXc,GAAgBlqD,GAAAA,GAAA,GACjBopD,IAAwB,IAC3Bp9B,cAAeo9B,GACfn1C,QAAS,CACPoH,EAAGyuC,IAELK,gBAAiBb,KAGbc,GAAsB,CAC1B54C,OAAQ,CACNG,IAAK,CAAErN,KAAM,IAAKgpB,KAAM,GAAI+8B,WAAY,GAAI9N,OAAQ,OAGtDzZ,eAAgBonB,GAEhBhP,yBAA0B,CAAE52C,KAAM,IAAKgpB,KAAM,CAAC,YAAa,kBAAmB,aAAc,mBAAoB,OAChH0e,cAAe,CAAE1nC,KAAM,IAAKgpB,KAAM,CAAC,IAAK,KAAM,aAAc,qBAAsB,wBAAyB,iBAC3Gg9B,iBAAkB,CAAEhmD,KAAM,IAAKgpB,KAAM,CAAC,MACtC+K,kBAAmB,CAAE/zB,KAAM,IAAKgpB,KAAM,CAAC,MACvCgK,YAAa,CAAEhzB,KAAM,IAAKgpB,KAAM,CAAC,QAAS,QAAS,SAAU,kBAAmB,SAAU,iBAC1FkN,gBAAiB,CAAEl2B,KAAM,IAAKgpB,KAAM,CAAC,QAAS,cAAe,QAAS,WAAY,kBAAmB,WACrGye,WAAY,CAAEznC,KAAM,IAAKgpB,KAAM,CAAC,WAAY,YAAa,WAAY,QAAS,WAAY,YAAa,QAAS,kBAAmB,eAAgB,iBAEnJi9B,oBAAqB,CAAEjmD,KAAM,IAAKgpB,KAAM,CAAC,aAAc,OAAQ,kBAE/DxZ,cAAe,CAAExP,KAAM,IAAKgpB,KAAM,CAAC,UACnClc,WAAY,CAAE9M,KAAM,IAAKgpB,KAAM,IAE/B/a,YAAa,CAAEjO,KAAM,MACrBuO,eAAgB,CAAEvO,KAAM,MACxB0O,WAAY,CAAE1O,KAAM,MACpB2O,YAAa,CAAE3O,KAAM,MACrB6O,aAAc,CAAE7O,KAAM,MACtBE,WAAY,CAAEF,KAAM,MACpBgP,kBAAmB,CAAEhP,KAAM,MAC3BkP,mBAAoB,CAAElP,KAAM,MAC5BoP,mBAAoB,CAAEpP,KAAM,MAC5BsP,eAAgB,CAAEtP,KAAM,MACxB4O,aAAc,CAAE5O,KAAM,MACtBkmD,mBAAoB,CAAElmD,KAAM,KAE5BmmD,WAAY,CAAEnmD,KAAM,MACpBomD,mBAAoB,CAAEpmD,KAAM,MAC5BqmD,kBAAmB,CAAErmD,KAAM,MAC3BsmD,oBAAqB,CAAEtmD,KAAM,MAC7BumD,mBAAoB,CAAEvmD,KAAM,MAC5BwmD,sBAAuB,CAAExmD,KAAM,MAC/BymD,qBAAsB,CAAEzmD,KAAM,MAC9B0mD,gBAAiB,CAAE1mD,KAAM,OAGrB2mD,GAAc,CAClBl8C,OAAQ,CACNsM,EAAG6uC,IAELj2C,QAAS,CACPoH,EAAGiuC,IAELjhC,aAAc,CACZhN,EAzF2B,CAC7BuwB,WAAY,CAAEtnC,KAAM,IAAKgpB,KAAM,CAAC,WAAY,OAAQ,MAAO,iBAC3D49B,cAAe,CAAE5mD,KAAM,IAAKgpB,KAAM,CAAC,WAAY,OAAQ,QACvD8J,eAAgB,CAAE9yB,KAAM,IAAKgpB,KAAM,CAAC,WAAY,OAAQ,MAAO,mBAwF/DzF,UAAW,CACTxM,EAAGquC,IAEL/zC,MAAO,CACL0F,EAAG,CACDpH,QAAS,CACPoH,EAAGyuC,MAITthC,MAAO,CACLnN,EAACrb,GAAAA,GAAAA,GAAA,GACIiqD,IA5Fe,CACtBkB,eAAgB,CAAE7mD,KAAM,IAAK+kD,OAAO,GACpC+B,WAAY,CAAE9mD,KAAM,IAAK+kD,OAAO,GAEhCphC,UAAW,CAAE3jB,KAAM,IAAKi4C,OAAQ,SAAUjvB,KAAM,CAAC,kBACjDrB,gBAAiB,CAAE3nB,KAAM,IAAKgpB,KAAM,CAAC,QACrC+X,WAAY,CAAE/gC,KAAM,IAAKgpB,KAAM,CAAC,SAChCuL,WAAY,CAAEv0B,KAAM,IAAKgpB,KAAM,CAAC,gBAAiB,iBACjD+9B,cAAe,CAAE/mD,KAAM,IAAKgpB,KAAM,CAAC,kBACnCg+B,gBAAiB,CAAEhnD,KAAM,IAAKgpB,KAAM,CAAC,kBACrC+O,eAAgB,CAAE/3B,KAAM,IAAKgpB,KAAM,CAAC,oBAmFd,IAClBA,KAAM,CACJjS,EAACrb,GAAA,GACIiqD,QAKXhwD,SAAUmwD,IAGNvzC,GAAW,SAAC/L,GAAC,MAAkB,WAAZqB,EAAAA,EAAAA,GAAOrB,IAAuB,OAANA,IAAemE,MAAMC,QAAQpE,EAAE,EAInEygD,GAAiB,SAAC/xD,EAAQgyD,GACrC,GAAIhyD,EAAOiyD,aACT,MAAM,IAAI3lC,MAAM,qDAElB,IAAI4lC,EAAYzxB,KAAKzgC,EAAQ2vD,WACtBuC,EAAU91C,IAgEjB,IA9DA,IAAM+1C,EAAS,SAATA,EAAUpjD,EAAQwJ,EAAM7P,EAAMklB,GAClC,GAAIvQ,GAAStO,GAAS,CAIpB,GAHIwR,EAAWxR,KACbA,EAASoR,EAASpR,IAEJ,UAAZrG,EAAK,KAAmB6P,EAAM,CAChC,IAAM0a,EAAUvqB,EAAKA,EAAKO,OAAS,IAEnCsP,EAAOyyC,GAAkB,CACvBh8B,MAAOpB,EAAKwkC,YACXn/B,EAAS,QAAS,mBAAgB/vB,KAEnC6L,EAAc,MAAIkkB,EAEtB,CACA,QAAa/vB,IAATqV,GAAsB8E,GAAS9E,GACjC,IAAK,IAAI3X,KAAK2X,EACRnM,OAAOkR,UAAU+0C,eAAe90C,KAAKhF,EAAM3X,MACxCwL,OAAOC,KAAK0C,GAAQtH,SAAS7G,SAAoBsC,IAAd6L,EAAOnO,SAAgCsC,IAAZqV,EAAK3X,GAEtEmO,EAAOnO,GAAK,aAEZmO,EAAOnO,GAAKuxD,EAAOpjD,EAAOnO,GAAI2X,EAAK3X,GAAI,GAAFgiB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,IAAIgtB,QACnC1qB,IAAd6L,EAAOnO,WACFmO,EAAOnO,KAMxB,IAAK,IAAIA,KAAKmO,EACZ,GAAI3C,OAAOkR,UAAU+0C,eAAe90C,KAAKxO,EAAQnO,GAAI,CACN,IAAA0xD,EAAxC/5C,GAASnM,OAAOC,KAAKkM,GAAM9Q,SAAS7G,KAEvCmO,EAAOnO,GAAKuxD,EAAOpjD,EAAOnO,GAAQ,QAAN0xD,EAAE/5C,SAAI,IAAA+5C,OAAA,EAAJA,EAAO1xD,GAAI,GAAFgiB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,IAAIgtB,SAEvC1qB,IAAd6L,EAAOnO,WACFmO,EAAOnO,EAElB,CAEiC,IAA/BwL,OAAOC,KAAK0C,GAAQ9F,SACtB8F,OAAS7L,EAEb,MAAWuS,MAAMC,QAAQ3G,IAEvBA,EAAOuT,SAAQ,SAACxT,EAAKqT,GACnBpT,EAAOoT,GAAOgwC,EAAOpjD,EAAOoT,QAAMjf,EAAW,GAAF0f,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAEyZ,IAAMyL,EAC/D,IAGF,QAAa1qB,IAATqV,IAAsB+F,EAAavP,EAAQwJ,GAAM,GAArD,CAIA,GAAsB,mBAAXxJ,EACT,MAAM,IAAIud,MAAM,+BAAD1J,OAAgCla,EAAK7H,KAAK,KAAI,sCAG/D,OAAOkO,CANP,CAOF,EAEAuR,EAAA,EAAAiyC,EAAsB5C,GAAUrvC,EAAAiyC,EAAAtpD,OAAAqX,IAAE,CAA7B,IAAMkyC,EAAOD,EAAAjyC,GAChB,GAAgB,QAAZkyC,QAEG,GAAgB,WAAZA,EAETN,EAAUM,GAAWC,KAAMP,EAAUM,IACrCL,EAAOD,EAAUM,GAAU,CAAC,EAAG,CAACA,SAC3B,GAAgB,UAAZA,EAGT,IAAK,IAAI5xD,KADTsxD,EAAUM,GAAWC,KAAMP,EAAUM,IAAY,CAAC,GACpCN,EAAUM,GACtBL,EAAOD,EAAUM,GAAS5xD,GAAI,KAAM,CAAC4xD,EAAS5xD,GAAI,CAChDwxD,WAAAA,SAKJF,EAAUM,GAAWC,KAAMP,EAAUM,IACrCL,EAAOD,EAAUM,GAAUR,EAAWQ,GAAU,CAACA,GAErD,CAEA,OAAON,CACT,EAGaQ,GAAmB,SAACR,EAAWF,EAAY51C,GACtD,IAAK81C,EAAUzxD,SAASkyD,kBACtB,MAAM,IAAIrmC,MAAM,kFAgElB,IA9DA,IAAIsmC,EAAc,CAAC,EAEbC,EAAa,SAAbA,EAAc9jD,EAAQ+jD,EAAOpqD,GACjC,GAAI2U,GAASy1C,GAIX,IAAK,IAAIlyD,KAHJyc,GAAStO,KACZA,EAAS,CAAC,GAEE+jD,EACR1mD,OAAOkR,UAAU+0C,eAAe90C,KAAKu1C,EAAOlyD,KAC7B,cAAbkyD,EAAMlyD,UACDmO,EAAOnO,GAEdmO,EAAOnO,GAAKiyD,EAAW9jD,EAAOnO,GAAIkyD,EAAMlyD,GAAI,GAAFgiB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,WAM5DmO,EAFS0G,MAAMC,QAAQo9C,GAEdL,KAAMK,GAENA,EAGX,OAAO/jD,CACT,EAEMgkD,EAAuB,SAAvBA,EAAwBhkD,EAAQrG,EAAMklB,GAE1C,IAAIolC,GAAW,EACf,GAAI31C,GAAStO,IAAW3C,OAAOkR,UAAU+0C,eAAe90C,KAAKxO,EAAQ,UAAYA,EAAc,MAAG,CAChG,IAAM4c,EAAOq/B,GAAkB,CAC7Bh8B,MAAOpB,EAAKwkC,YACXrjD,EAAc,MAAG,QAAS,aAC7B,IAAI4c,EAMF,MAAM,IAAIW,MAAM,qDAAD1J,OAAsD7T,EAAc,MAAC,QAAA6T,OAAOla,EAAK7H,KAAK,cAJ9FkO,EAAc,MACrBA,EAAS8jD,EAAWJ,KAAM9mC,GAAO5c,EAAQrG,GACzCsqD,GAAW,CAIf,CAEA,IAAKA,EACH,GAAI31C,GAAStO,GAEX,IAAK,IAAInO,KAAKmO,EACR3C,OAAOkR,UAAU+0C,eAAe90C,KAAKxO,EAAQnO,KAC/CmO,EAAOnO,GAAKmyD,EAAqBhkD,EAAOnO,GAAI,GAAFgiB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,IAAIgtB,SAGzD,GAAInY,MAAMC,QAAQ3G,GAAS,CAChC,IACsBqV,EADtBC,E,65BAAAC,CACgBvV,GAAM,IAAtB,IAAAsV,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAwB,KAAb7jB,EAACwjB,EAAAvkB,MACVkP,EAAOnO,GAAKmyD,EAAqBhkD,EAAOnO,GAAI,GAAFgiB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAE9H,IAAIgtB,EAC5D,CAAC,OAAAlJ,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACH,CAGF,OAAO5V,CACT,EAEAysC,EAAA,EAAAyX,EAAsBtD,GAAUnU,EAAAyX,EAAAhqD,OAAAuyC,IAAE,CAA7B,IAAMgX,EAAOS,EAAAzX,GACA,QAAZgX,EAEFI,EAAYJ,GAAWU,KAAM,CAAC,EAAGlB,EAAW51C,KAAO,CAAC,EAAGA,GAAO,CAAC,GAC1C,UAAZo2C,GAETI,EAAYJ,GAAWC,KAAMP,EAAUM,IAAY,CAAC,GACpDO,EAAqBH,EAAYJ,GAAU,CAACA,GAAU,CACpDJ,WAAAA,KAEmB,WAAZI,EAETI,EAAYJ,GAAWC,KAAMP,EAAUM,IAAY,CAAC,IAGpDI,EAAYJ,GAAWC,KAAMT,EAAWQ,IAAY,CAAC,GACrDK,EAAWD,EAAYJ,GAAUN,EAAUM,IAAY,CAAC,EAAG,CAACA,IAEhE,CAEA,OAAOI,CACT,EAIaO,GAAgB,SAACnzD,GAC5B,OAAIA,EAAOozD,cAWXC,GAPArzD,EAASyyD,KAAMzyD,GAOaA,EALf,CACXoc,IAAKpc,EAAOoc,KAI4Bq1C,GAD7B,IAIbrlD,OAAOknD,eAAetzD,EAAQ,cAAe,CAC3CuzD,YAAY,EACZC,UAAU,EACV3zD,OAAO,KAhBAG,CAoBX,EAEA,SAASqzD,GAAoBrzD,EAAQyzD,EAAWvgC,EAAMtF,EAAM8lC,GAAiB,IAAXhrD,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GACvE,GAAKyqD,EAEL,IAAK,IAAM7yD,KADK8H,EAAKO,OACL2kB,EAAM,CACpB,IAAM+J,EAAU/J,EAAKhtB,GACjB+yD,EAAgB,MAAN/yD,EAAY8H,EAAO,GAAHka,QAAAhP,EAAAA,EAAAA,GAAOlL,GAAI,CAAE9H,IAK3C,GAAqB,MAAjB+2B,EAAQ7sB,KAAc,CACxB,IAAM8oD,EAAYH,EACZ3kD,EAAM8kD,EAAUhzD,GACtB,GAAI+2B,EAAQk4B,MACV,IAAK,IAAM1tC,KAAOrT,EAAK,CACrB,IAAM+kD,EAASC,GAAmBhlD,EAAIqT,GAAM+Q,EAAM,GAAFtQ,QAAAhP,EAAAA,EAAAA,GAAM+/C,GAAO,CAAExxC,KAC3D0xC,IAAW/kD,EAAIqT,KACjBuxC,EAAK5vC,KAAK,YAADlB,OAAa+wC,EAAQ9yD,KAAK,KAAI,KAAA+hB,OAAIT,EAAG,MAC9CrT,EAAIqT,GAAO0xC,EAEf,KACK,CACL,IAAMA,EAASC,GAAmBhlD,EAAKokB,EAAMygC,OAASzwD,GAClD2wD,IAAW/kD,IACb4kD,EAAK5vC,KAAK,cAADlB,OAAe+wC,EAAQ9yD,KAAK,OACrC+yD,EAAUhzD,GAAKizD,EAEnB,CACF,MAAO,GAAqB,OAAjBl8B,EAAQ7sB,KAAe,CAChC,IAAM8oD,EAAYH,EACZ3kD,EAAM8kD,EAAUhzD,GAChBizD,EAASE,GAAsBjlD,EAAKokB,EAAMygC,EAASh8B,EAAQorB,QAC7D8Q,IAAW/kD,IACb4kD,EAAK5vC,KAAK,kBAADlB,OAAmB+wC,EAAQ9yD,KAAK,OACzC+yD,EAAUhzD,GAAKizD,EAEnB,MAAO,GAAqB,MAAjBl8B,EAAQ7sB,KAAc,CAC/B,IAGkEkpD,EAH5DJ,EAAYH,EACZ3kD,EAAM8kD,EAAUhzD,GAClBizD,EAASI,GAAiBnlD,EAAKokB,EAAMygC,EAASh8B,EAAQ7D,KAAM6D,EAAQorB,QACpEprB,EAAQk5B,YAAcgD,GAA4B,mBAAXA,IACzCA,GAASG,EAAAH,GAAOt2C,KAAI+H,MAAA0uC,EAAA,CAAC,MAAIpxC,QAAAhP,EAAAA,EAAAA,GAAK+jB,EAAQk5B,eAEpCgD,IAAW/kD,IACb4kD,EAAK5vC,KAAK,iBAADlB,OAAkB+wC,EAAQ9yD,KAAK,OACxC+yD,EAAUhzD,GAAKizD,EAEnB,MAAO,GAAU,MAANjzD,EACT,IAAK,IAAM4U,KAASi+C,EAAW,CAC7BE,EAAU,GAAH/wC,QAAAhP,EAAAA,EAAAA,GAAOlL,GAAI,CAAE8M,IACpB,IAAM0+C,EAAMT,EAAUj+C,GACtB69C,GAAoBrzD,EAAQk0D,EAAKhhC,EAAMyE,EAAS+7B,EAAMC,GAClDO,EAAIC,WAENd,GAAoBrzD,EAAQk0D,EAAIC,UAAWjhC,EAAMtF,EAAM8lC,EAAMC,EAEjE,MAGAN,GAAoBrzD,EADRyzD,EAAU7yD,GACWsyB,EAAMyE,EAAS+7B,EAAMC,EAE1D,CACF,CAEA,SAASI,GAAsBK,EAAIlhC,EAAMxqB,GACvC,OAAIiY,GAAYyzC,GACP,SAAS50D,EAAO4c,GACrBA,EAAMA,IAAO8W,aAAI,EAAJA,EAAM9W,KACnB,IAGIi4C,EAAK9E,GAAuB6E,EAHnB,CACX50D,MAAAA,EAAO4c,IAAAA,GAEiC1T,GAS1C,MARkB,iBAAP2rD,IACTA,EAAK,CACHvpD,KAAMupD,EACN70D,MAAAA,IAIQs0D,GAAmBO,EAAI,CAACj4C,IAAAA,GAAM1T,EAE5C,EACuB,iBAAP0rD,EACT,SAAS50D,EAAO4c,GACrBA,EAAMA,IAAO8W,aAAI,EAAJA,EAAM9W,KACnB,IAAMgiB,EAAKg2B,EAAGl1D,MAAM,KAAK4iB,QAAO,SAAC+nB,EAAGjpC,GAAC,OAAKipC,aAAC,EAADA,EAAIjpC,EAAE,GAAEwb,GAClD,OAAIgiB,EACKoxB,GAAc8E,KAAMl2B,EAAI,CAAC5+B,EAAO4c,GAAM1T,GAMjCorD,GAJD,CACThpD,KAAMspD,EACN50D,MAAAA,GAEiC,CAAC4c,IAAAA,GAAM1T,EAG9C,EAEK0rD,CACT,CAEA,SAASH,GAAiBG,EAAIlhC,EAAMxqB,EAAM6rD,GAA8B,IAApBxR,EAAM/5C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAC3D,OAAIyd,GAAYyzC,IAAkB,OAAXrR,EACd,WAAkB,QAAA/9B,EAAAhc,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAuP,GAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAAJ+T,EAAI/T,GAAA/W,UAAA+W,GACrB,IAAM3D,EAAMk4C,OAAQphC,aAAI,EAAJA,EAAM9W,KACpBiyC,GAAQkG,GAAY,IAAIzyC,QAAO,SAACC,EAAKnhB,EAAGie,GAAC,OAAArY,GAAAA,GAAA,GAAUub,GAAG,IAAA6D,EAAAA,EAAAA,GAAA,GAAGhlB,EAAIkzB,EAAKjV,IAAE,GAAI,CAC5EiV,KAAAA,EAAM1X,IAAAA,IAGR,OADYmzC,GAAuB6E,EAAI/F,EAAM3lD,EAE/C,EAAE8rD,KAAKthC,aAAI,EAAJA,EAAM9W,KACU,iBAAPg4C,GAA8B,WAAXrR,EAC5B,WACL,IAAM3mC,EAAMk4C,OAAQphC,aAAI,EAAJA,EAAM9W,KACpBgiB,EAAKg2B,EAAGl1D,MAAM,KAAK4iB,QAAO,SAAC+nB,EAAGjpC,GAAC,OAAKipC,aAAC,EAADA,EAAIjpC,EAAE,GAAEwb,GAClD,GAAIgiB,EAAI,SAAA5Y,EAAAxc,UAAAC,OAHS6qB,EAAI,IAAAre,MAAA+P,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJqO,EAAIrO,GAAAzc,UAAAyc,GAInB,OAAO+pC,GAAc8E,KAAMl2B,EAAItK,EAAMprB,EACvC,CACE,MAAM,IAAI4jB,MAAM,GAAD1J,OAAIla,EAAK7H,KAAK,KAAI,iBAAA+hB,OAAgBwxC,EAAE,wBAEvD,EAAEI,KAAKthC,aAAI,EAAJA,EAAM9W,KAERg4C,CACT,CAQA,SAASN,GAAmB1zC,EAAK8S,EAAMxqB,GAAuB,IAJ5B8C,EAAM4Q,EAAKq4C,EAIA1tD,EAAGiC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EACjD,GAAIwd,GAAMN,GAAM,KAAAs0C,EACR5pD,EAAgBsV,EAAhBtV,KAAMtL,EAAU4gB,EAAV5gB,MACZ,GAAoB,iBAATsL,EACT,MAAM,IAAIwhB,MAAM,0BAAD1J,OAA2Bla,EAAK7H,KAAK,KAAI,4BAE1D,IACIoE,EADE0vD,GAVwBnpD,EAUOV,GAThCsR,OAD+BA,EAUO8W,EAAK9W,MAT5B,QAAZq4C,EAAHr4C,EAAKw4C,kBAAU,IAAAH,OAAA,EAAfA,EAAkBjpD,KAAS4Q,EAAIjD,EAAE3N,IAAS4Q,EAAIy4C,EAAErpD,IASGV,EAAKikB,eAU7D,YARY7rB,IAAR6D,IACFvH,EAAKgH,GAAAA,GAAA,GAAQhH,GAAK,IAAEuH,IAAAA,KAEb,QAAT2tD,EAAIl1D,SAAK,IAAAk1D,GAALA,EAAOzvD,WACTA,EAAW6uD,GAAmBt0D,EAAMyF,SAAUiuB,EAAMxqB,GACpDlJ,EAAKgH,GAAAA,GAAA,GAAQhH,GAAK,IAAEyF,SAAAA,KAEViuB,EAAK9W,IAAInD,IAAI07C,EAAKn1D,EAEhC,CAAO,OAAI4gB,aAAe3K,MACjB2K,EAAIzf,KAAI,SAAC0f,EAAIxB,GAAC,OAAKi1C,GAAmBzzC,EAAI6S,EAAMxqB,EAAM,GAAGmW,EAAE,IAE7DuB,CACT,C,2BC3jBa3f,GAAW,CACtB23B,wBAAwB,EACxB08B,oBAAoB,EACpBh3B,YAAa,SAACtoB,EAAOsf,EAAOkf,EAAQrT,EAAiB3gC,EAAQ6xC,GAC3D,OAAIA,EACKmC,EAEAx+B,CACX,EACA8zB,eAAgB,CACdx+B,KAAM,cAERykC,aAAc,CAAC,SACf6U,2BAA2B,EAC3Bj6C,uBAAwB,CAAC,QAAS,OAAQ,WAAY,cACtDzJ,kBAAmB,CAAC,QAAS,SAC7BkmD,iBAAkB,CAChB/mD,MAAO,CAAC,GAEVw0B,eAAgB,IAChBsf,sBAAuB,IACvBohB,YAAY,EACZC,YAAY,EACZC,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,EACxBC,sBAAsB,EACtB3c,yBAAyB,EACzBI,wBAAwB,EACxBF,6BAA6B,EAC7B+H,sCAAsC,EACtCjQ,kBAAkB,EAClB4kB,mBAAoB,CAAC,OAAQ,WAC7B9+B,eAAgB,CAAC,OAAQ,MAAO,QAEhCoC,wBAAyB,MAGzB3gB,OAAQ,CACNrZ,OAAQ,MAEV8sD,WAAY,QACZC,iBAAkB,QAClB4J,WAAY,QACZC,cAAe,WACfC,UAAW,WACXnyD,iBAAkB,eAClBoyD,gBAAiB,kBACjBC,oBAAqB,kBACrBC,UAAW,OACXC,YAAa,SACbC,YAAa,SACbC,cAAe,YACfC,aAAc,gBACdC,oBAAqB,wBACrBC,iBAAkB,WAClBC,aAAc,WACdC,gBAAiB,eACjBC,cAAe,SACflqD,SAAU,MACVmqD,uBAAwB,gBACxBC,uBAAwB,sBACxBC,yBAA0B,KAC1BC,0BAA2B,M,2gCC3D7B,IAEIC,GAFAC,GAAS,EACTC,GAAW,EAETC,GAAQ,CAAC,EAEFC,GAAgB,WAQ3B,OAPKJ,KACHA,GAAaK,GAAiB,CAC5BC,gBAAY7zD,EACZ8zD,QAAS,EACTC,gBAAY/zD,KAGTuzD,EACT,EAEaS,GAA+B,SAACl3D,EAAQm3D,GACnD,IAAIC,EACJ,IAAK,IAAMx2D,KAAKg2D,GAAO,CACrB,IAAM7zB,EAAQ6zB,GAAMh2D,GAAGy2D,mBAAmBr3D,EAAQm3D,GAClD,GAAIp0B,EAAO,CACTq0B,EAAiBr0B,EACjB,KACF,CACF,CACA,OAAOq0B,CACT,EAEaN,GAAmB,WAI1B,IAIAQ,EAR2B1pC,EAAI5kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CACtC+tD,gBAAY7zD,EACZ8zD,QAAS,EACTC,YAAY,GAENM,EAAc,IAAIp5C,IAClB64C,EAAUppC,EAAKopC,SAAW,EAC1BQ,IAAkBd,GAkBlBe,EAAkB,SAACz3D,EAAQ8tB,GAC1BypC,EAAY3wD,KAAO,EAAKowD,GAC3BO,EAAW,OAAQA,EAAYlrD,OAAOkV,OAAO1hB,OAE/C03D,EAAY5mB,IAAI3wC,EAAQ8tB,EAC1B,EAaM4pC,EAAe,SAACC,EAAYR,GAEhC,IAE4C3jC,EAF5CC,EAAAnP,GAE0BizC,EAAYlrD,QAAM,QAM3CurD,EAN2CjyB,EAAA,WAAE,IAAnCkyB,EAAWrkC,EAAA3zB,MAGpB,GAFmB8vD,GAAWt+C,QAAO,SAAAzQ,GAAC,OAAIi3D,EAAYj3D,KAAO+2D,EAAW/2D,EAAE,IACjDqI,SAAW0mD,GAAW1mD,UAAWkuD,GAAoBU,EAAYzE,aAC/E,OAAA9hD,EACFimD,EAAY1xC,IAAIgyC,GAE3B,EANA,IAAApkC,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAAA,GAAAmzC,EAAAjyB,IAAA,OAAAiyB,EAAAtmD,CAMC,OAAAoT,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,KAEgDshB,EAFhDC,EAAA5hB,GAE4BizC,EAAYpsC,UAAQ,QAMhD2sC,EANgDtsB,EAAA,WAAE,IAAxC1d,EAAcmY,EAAApmC,MAGvB,GAFmB8vD,GAAWt+C,QAAO,SAAAzQ,GAAC,OAAIktB,EAAeltB,KAAO+2D,EAAW/2D,EAAE,IACpDqI,SAAW0mD,GAAW1mD,UAAWkuD,GAAoBrpC,EAAeslC,aAClF,OAAA9hD,EACFwc,EAEX,EANA,IAAAoY,EAAA3hB,MAAA0hB,EAAAC,EAAA1hB,KAAAC,MAAA,GAAAqzC,EAAAtsB,IAAA,OAAAssB,EAAAxmD,CAMC,OAAAoT,GAAAwhB,EAAA/4B,EAAAuX,EAAA,SAAAwhB,EAAAvhB,GAAA,CAED,OAAO,IACT,EAiCA,OAlBA2yC,EAAc,CACZS,kBAAmB,SAACv4D,GAAK,OAdN,SAACQ,GACpB,OAAO03D,EAAa13D,IApDC,SAACA,GACtB,IAAM8tB,EAAiBC,GAAa/tB,IAAU22D,GAAU/oC,EAAKqpC,YAE7D,OADAQ,EAAgBz3D,EAAQ8tB,GACjBA,CACT,CAgDiCkqC,CAAeh4D,EAChD,CAYgCi4D,CArEb,SAACz4D,GAClB,OAAOihC,KAAKjhC,EAAOmwD,GACrB,CAmE6CuI,CAAW14D,GAAO,EAC7D63D,mBAAoBK,EACpBS,eAlDgB,SAACR,GAAe,IACYvzC,EADZC,EAAAC,GACNizC,EAAYlrD,QAAM,QAM3CghC,EAN2C7H,EAAA,WAAE,IAAnC4yB,EAAWh0C,EAAAvkB,MACdw4D,EAAYd,EAAY1xC,IAAIuyC,GAElC,GAD6F,IAA/EzI,GAAWhvD,KAAI,SAAAC,GAAC,OAAIy3D,EAAUz3D,KAAO+2D,EAAW/2D,EAAE,IAAEyQ,QAAO,SAAAC,GAAC,OAAKA,CAAC,IAAErI,OACvE,OAAAqI,EACF8mD,EAEX,EANA,IAAA/zC,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAA,GAAA4oB,EAAA7H,IAAA,OAAA6H,EAAA/7B,CAMC,OAAAoT,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACD,OAAOgzC,CACT,EA0CEW,gBAbsB,WAEtBf,EAAYgB,eACL3B,GAAMY,GACTf,KAAea,IACjBb,QAAavzD,EAEjB,EAOEyzD,SAAAA,GACAc,gBAAAA,EACA15B,QAjEc,WACd,OAAOw5B,EAAY3wD,IACrB,EAgEE2wD,YAAAA,EACAb,OAAQc,EACR5pC,KAAAA,QAGsB1qB,IAApB0qB,EAAKmpC,aACPN,GAAaa,GAEfV,GAAMY,GAAiBF,EAEhBA,CACT,E,olDCvHO,IAAMvpC,GAAe,SAAC/tB,EAAQ22D,GAAgC,IAAtBM,IAAUjuD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAOvD,GAHAiuD,EAAaA,GAAcj3D,EAAOS,SAASkyD,kBAGvC3yD,EAAOw4D,WACT,OAAOx4D,EAIT,IAAMy4D,EAAkBvB,GAA6Bl3D,EAAQi3D,GAC7D,GAAIwB,EACF,OAAOA,EAGT,IAAMC,EAAa14D,GAMfA,EAHAi3D,EACEj3D,EAAOozD,YAEAX,KAAMzyD,GAGNmzD,GAAcnzD,GAGhByyD,KAAMzyD,IAGVS,SAAWk4D,KAAU,CAAC,EAAGC,GAAiB54D,EAAOS,SAAUmf,GAElE5f,EAAO+sD,kBAAoB,CAAC,EAC5B/sD,EAAOitD,iBAAmB,CAAC,EAC3BjtD,EAAOiyD,aAAe,CAAC,EAiCzB,SAA2B4G,EAAa74D,GACtC,IAAK,IAAI8K,KAAQ+tD,EAEfC,GAAiBhuD,EADA+tD,EAAY/tD,GACM9K,EAEvC,CApCE+4D,CAAkB/4D,EAAOmc,MAAOnc,GAChCg5D,GAAmBh5D,EAAOuV,OAAQvV,GAClCi5D,GAAkBj5D,EAAOgvB,MAAOhvB,GAEhC,IAAQspC,EAAmBtpC,EAAOS,SAA1B6oC,eACJA,GACF4vB,GAAkB5vB,EAAgBtpC,EAAQ,IAAI,GAAO,GAGvD,IAAMiY,EAAejY,EAAOS,SAASuX,OAAOrZ,OAmB5C,OAlBIsZ,GACFtZ,KAAAA,OAAcsZ,GAGhB7L,OAAOknD,eAAetzD,EAAQ,aAAc,CAC1CuzD,YAAY,EACZC,UAAU,EACV3zD,MAAO82D,GAAY5vC,MAGrB/mB,EAAOm5D,QAAU,CAAC,EAElB92C,GAAWriB,GAGE62D,KACRY,gBAAgBiB,EAAY14D,GAE1BA,CACT,EASA,SAAS84D,GAAiBhuD,EAAMsuD,EAAYp5D,GAC1C,IAAIquB,EAAY,KAAMshB,EAAkB,KACxCypB,EAAWxnC,WAAawnC,EAAWxnC,YAAcxlB,OAAOC,KAAK+sD,EAAW3+C,SAASpJ,QAAO,SAAA+0B,GAAC,MAAS,SAALA,GAAqB,QAALA,CAAW,IAAE,GAC1H,IAAMizB,EAAmBD,EAAWC,kBAAoB,GACxD,IAAK,IAAI1oC,KAAUyoC,EAAW3+C,QAAS,CACrC,IAAM6+C,EAAmBF,EAAW3+C,QAAQkW,GACtC4oC,EAAQD,EAAiB3pB,gBAC3B2pB,EAAiBjrC,YAEnBA,EAAYnN,GAAiBmN,EADDirC,EAAiBjrC,UAAUhd,QAAO,SAAAgQ,GAAE,OAAKg4C,EAAiB5xD,SAAS4Z,EAAG,MAGhGk4C,IAAUF,EAAiB5xD,SAAS8xD,KACjC5pB,GAAmBhf,IAAWyoC,EAAWxnC,aAC5C+d,EAAkB4pB,IAGlB5oC,GAAUyoC,EAAWxnC,aACvB0nC,EAAiB/I,YAAW/pD,GAAAA,GAAA,GACtB4yD,EAAWzI,iBAAmB,CAAC,GAC/B2I,EAAiB/I,aAAe,CAAC,IAGzC6I,EAAW3+C,QAAQkW,GAAU2oC,CAC/B,CACKF,EAAWhsD,eACdgsD,EAAWhsD,aAAehB,OAAOC,KAAKrM,EAAOS,SAASmmD,mBAAkB,IAC9BxiC,EAD8BC,EAAAC,GACrD80C,EAAWhsD,cAAY,IAA5C,IAAAiX,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8C,KAArC1X,EAAQqX,EAAAvkB,MACC,SAAZkN,GAAwBqsD,EAAW3+C,QAAQ1N,KAC7CqsD,EAAW3+C,QAAQ1N,GAAY,CAC/B,EAEJ,CAAC,OAAA2X,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,EACIy0C,EAAW/qC,WAAaA,IAC3B+qC,EAAW/qC,UAAY5Y,MAAMmf,KAAK,IAAIC,IAAIxG,MACvC+qC,EAAWzpB,iBAAmBA,IACjCypB,EAAWzpB,gBAAkBA,EACjC,CAEA,SAASqpB,GAAmBvF,EAAWzzD,GAAmB,IAAX0I,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GACpD,IAAK,IAAIwM,KAASi+C,EAAW,CAC3B,IAAM+F,EAAe,GAAH52C,QAAAhP,EAAAA,EAAAA,GAAOlL,GAAI,CAAE8M,IAC/B0jD,GAAkBzF,EAAUj+C,GAAQxV,EAAQw5D,GACxC/F,EAAUj+C,GAAO2+C,WACnB6E,GAAmBvF,EAAUj+C,GAAO2+C,UAAWn0D,EAAQw5D,EAE3D,CACF,CAEA,SAASP,GAAkBxF,EAAWzzD,GAAmB,IAAAmC,EAAXuG,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GACnD,GAAKyqD,EAAL,CACA,IAAMp/B,GAAiBr0B,SAAgB,QAAVmC,EAANnC,EAAQS,gBAAQ,IAAA0B,OAAA,EAAhBA,EAAkBkyB,iBAAkB,IAC3D,IAAK,IAAIpB,KAAWwgC,EAAW,CAC7B,IAAMgG,EAAc,GAAH72C,QAAAhP,EAAAA,EAAAA,GAAOlL,GAAI,CAAEuqB,IACxBymC,EAAcD,EAAY54D,KAAKwzB,GAC/BslC,EAAUlG,EAAUxgC,GAS1B,GARI0mC,EAAQtmC,aACVsmC,EAAQ7uD,KAAO6uD,EAAQtmC,WAClBrzB,EAAOitD,iBAAiB0M,EAAQtmC,cACnCrzB,EAAOitD,iBAAiB0M,EAAQtmC,YAAc,GAChDrzB,EAAOitD,iBAAiB0M,EAAQtmC,eAElC6lC,GAAkBS,EAAS35D,EAAQy5D,GAAa,GAE5CE,EAAQ7lC,KAAM,CAChB,IAAK,IAAIG,KAAU0lC,EAAQ7lC,KACzBolC,GAAkBS,EAAQ7lC,KAAKG,GAASj0B,EAAQ,GAAF4iB,QAAAhP,EAAAA,EAAAA,GAAM6lD,GAAW,CAAExlC,KAAS,GAG5E,IAEsCT,EADlComC,GAAgB,EAAKnmC,EAAAnP,GADTlY,OAAOC,KAAKstD,EAAQ7lC,MAEPpS,WAAS,IAAtC,IAAA+R,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAAwC,KAA7BwP,EAAMT,EAAA3zB,MACTwiD,EAASsX,EAAQ7lC,KAAKG,IACvB2lC,GAAiBvX,EAAOjuB,aAC3B9Q,GAAOpW,KAAK,OAAD0V,OAAQqR,EAAM,cAAArR,OAAa82C,EAAW,8BAC1CrX,EAAOjuB,YAEXiuB,EAAOjuB,aACVwlC,GAAgB,EACpB,CAAC,OAAAl1C,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACH,CAEIg1C,EAAQxF,WACV8E,GAAkBU,EAAQxF,UAAWn0D,EAAQ,GAAF4iB,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAEuqB,IAE3D,CAnCsB,CAoCxB,CAiCA,SAASimC,GAAkBxoC,EAAa1wB,GAA2D,IAAA65D,EAAnDnxD,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GAAIyjB,EAASzjB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU8wD,EAAW9wD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACvFm7C,EAAqCnkD,EAAOS,SAAtCs5D,EAAU5V,EAAV4V,WAAY1lC,EAAc8vB,EAAd9vB,eAClBA,EAA+B,QAAjBwlC,EAAGxlC,SAAc,IAAAwlC,EAAAA,EAAI,IACnC,IAAM5lC,EAASvrB,EAAKA,EAAKO,OAAS,GAC5BgqB,EAAUxG,EAAY/jB,EAAK8Y,MAAM,EAAG9Y,EAAKO,OAAO,GAAGpI,KAAKwzB,GAAkB3rB,EAAK7H,KAAKwzB,GACpF2lC,IAAWtpC,EAAY2C,WACvBvoB,EAAO4lB,EAAY5lB,MAAQ4lB,EAAY2C,WAEvC+lC,EAAap5D,EAAOmc,MAAMrR,GAC1BmvD,EAA2BvpC,EAAY2oC,kBAAoB,GAC7DhrC,GAAaqC,EAAYrC,YAAa+qC,aAAU,EAAVA,EAAY/qC,YAAa,IAAIhd,QAAO,SAAAgQ,GAAE,OAAK44C,EAAyBxyD,SAAS4Z,EAAG,IACtHsuB,EAAkBjf,EAAYif,kBAAmBypB,aAAU,EAAVA,EAAYzpB,iBAC7DsqB,EAAyBxyD,SAASkoC,KACpCA,OAAkBzsC,GACpB,IAAMg3D,IAA0BvqB,GAAmBA,GAAmBjf,EAAYif,gBAKlF,GAJIuqB,IACFxpC,EAAYof,mBAAqBpf,EAAYif,iBAG1CypB,EAAL,CAMK3sC,GAAcutC,GAAWF,IACvB95D,EAAO+sD,kBAAkBjiD,KAC5B9K,EAAO+sD,kBAAkBjiD,GAAQ,GACnC9K,EAAO+sD,kBAAkBjiD,MAGvB2hB,IACFiE,EAAYixB,YAAa,EACzBjxB,EAAYypC,QAAUlmC,EACtBvD,EAAY0pC,SAAWnnC,GAErB+mC,IACFtpC,EAAY2pC,SAAU,EACtB3pC,EAAY0pC,SAAWnnC,GAErB6mC,IACFppC,EAAY4pC,cAAe,GAxE/B,SAAgC5pC,EAAa1wB,EAAQ8K,GAEnD,IAFyD,IAAA4mB,EAAA6oC,EAEzDj6C,EAAA,EAAAk6C,EADiC,CAAC,aAAc,aAAc,oBAAqB,iBAC3Cl6C,EAAAk6C,EAAAvxD,OAAAqX,IAAE,CAArC,IAAM1f,EAAC45D,EAAAl6C,GACNoQ,EAAY9vB,KACT8vB,EAAY8B,gBACf9B,EAAY8B,cAAgB,CAAC,GAC/B9B,EAAY8B,cAAc5xB,GAAK8vB,EAAY9vB,UACpC8vB,EAAY9vB,GAEvB,CAG6B,QAA7B8wB,EAAIhB,EAAY8B,qBAAa,IAAAd,GAAzBA,EAA2BxnB,YACzBlK,EAAOS,SAASswD,sBAClBrgC,EAAY8B,cAActoB,WAAalK,EAAOS,SAASswD,oBAAoBxzC,KACzEvd,EAAOoc,IACPsU,EAAY8B,cAActoB,WAAYY,EAAM4lB,EAAY8B,gBAKjC,QAA7B+nC,EAAI7pC,EAAY8B,qBAAa,IAAA+nC,GAAzBA,EAA2Bna,YACzBpgD,EAAOS,SAASswD,sBAClBrgC,EAAY8B,cAAc4tB,WAAapgD,EAAOS,SAASswD,oBAAoBxzC,KACzEvd,EAAOoc,IACPsU,EAAY8B,cAAc4tB,WAAYt1C,EAAM4lB,EAAY8B,eAIhE,CA8CEioC,CAAuB/pC,EAAa1wB,EAAQ8K,GAG5C,IAAM4vD,EAAsB,CAAC,UAAW,YAAa,mBACrDtuD,OAAOC,KAAK+sD,GAAY/nD,QAAO,SAACzQ,GAAC,OAAM85D,EAAoBjzD,SAAS7G,EAAE,IAAED,KAAI,SAACC,GACtE8vB,EAAY9vB,KACf8vB,EAAY9vB,GAAK4c,EAAY47C,EAAWx4D,IAE5C,IAGA,IAAI+5D,EAA2BvB,EAAWC,kBAAoB,GAC1D3oC,EAAYrC,YAEdssC,EAA0BA,EAAwBtpD,QAAO,SAAAgQ,GAAE,OAAKqP,EAAYrC,UAAU5mB,SAAS4Z,EAAG,KAE/FqP,EAAYjW,UACfiW,EAAYjW,QAAU,CAAC,GAAE,IAAA+qB,EAAA,WAEzB,IAAI8lB,EAAiB9kD,GAAA,GAASkqB,EAAYjW,QAAQkW,IAAW,CAAC,GACxD2oC,EAAmBF,EAAW3+C,QAAQkW,IAAW,CAAC,EAGxD,IAAKlE,EAAW,CACd,IAAM8sC,EAAQjO,EAAkB3b,gBAC1B0pB,EAAmB,GAAHz2C,QAAAhP,EAAAA,EAAAA,GAAOqmD,IAAwBrmD,EAAAA,EAAAA,GAAK+mD,IACpDC,EAAyBlqC,EAAY87B,gBAC1B,UAAX77B,GAAsBD,EAAY87B,cAAc/kD,SAASkpB,KAC1D0oC,EAAiBpwD,OAAS,EAC/B,GAAIqiD,EAAkBj9B,UAAW,CAC/B,IAAMwsC,EAAevP,EAAkBj9B,UAAUhd,QAAO,SAAAgQ,GAAE,OAAKg4C,EAAiB5xD,SAAS4Z,EAAG,IAC5FiqC,EAAkBj9B,UAAYwsC,EAE9BxsC,EAAYnN,GAAiBmN,EAAWwsC,EAC1C,MAAO,GAAID,GAA0BtB,EAAiBjrC,UAAW,CAC/D,IAAMwsC,EAAevB,EAAiBjrC,UAAUhd,QAAO,SAAAgQ,GAAE,OAAKg4C,EAAiB5xD,SAAS4Z,EAAG,IAC3FiqC,EAAkBj9B,UAAYwsC,EAE9BxsC,EAAYnN,GAAiBmN,EAAWwsC,EAC1C,CACItB,IAAUF,EAAiB5xD,SAAS8xD,KACjC5pB,IAAoBuqB,GAAyBvpC,IAAWD,EAAYkB,cAEvE+d,EAAkB4pB,GAGxB,CAGI5oC,IAAWD,EAAYkB,WACzB05B,EAAkBiF,YAAW/pD,GAAAA,GAAAA,GAAA,GACvB8yD,EAAiB/I,aAAe,CAAC,GACjC7/B,EAAYigC,iBAAmB,CAAC,GAChCrF,EAAkBiF,aAAe,CAAC,GAGxCjF,EAAkBiF,YAAW/pD,GAAAA,GAAA,GACvB8yD,EAAiB/I,aAAe,CAAC,GACjCjF,EAAkBiF,aAAe,CAAC,GAK1C,IAAM/5B,EAAS/gB,MAAMmf,KAAK,IAAIC,IAAI,GAADjS,QAAAhP,EAAAA,EAAAA,GAC5BxH,OAAOC,KAAKitD,EAAiB9I,SAAW,CAAC,KAAE58C,EAAAA,EAAAA,GAC3CxH,OAAOC,KAAKi/C,EAAkBkF,SAAW,CAAC,OAE/C,GAAIh6B,EAAOvtB,OAAQ,CACjB,IACqBg9B,EADfuqB,EAAU,CAAC,EAAEtqB,EAAA5hB,GACJkS,GAAM,IAArB,IAAA0P,EAAA3hB,MAAA0hB,EAAAC,EAAA1hB,KAAAC,MAAuB,KAAAq2C,EAAAC,EAAd15C,EAAE4kB,EAAApmC,MACT2wD,EAAQnvC,GAAG7a,GAAAA,GAAA,IACmB,QAAxBs0D,EAAAxB,EAAiB9I,eAAO,IAAAsK,OAAA,EAAxBA,EAA2Bz5C,KAAO,CAAC,IACV,QAAzB05C,EAAAzP,EAAkBkF,eAAO,IAAAuK,OAAA,EAAzBA,EAA4B15C,KAAO,CAAC,EAE5C,CAAC,OAAAqD,GAAAwhB,EAAA/4B,EAAAuX,EAAA,SAAAwhB,EAAAvhB,GAAA,CACD2mC,EAAkBkF,QAAUA,CAC9B,CAGA,IAAAwK,EAAuC1P,EAAjCG,EAAUuP,EAAVvP,WAAYC,EAAgBsP,EAAhBtP,iBACdj/B,IACGg/B,IACHH,EAAkBG,WAAa/6B,EAAY9sB,OAASqwB,GACjDy3B,GAAqBqO,IACxBzO,EAAkBI,iBAAmBh7B,EAAY9sB,OAASqwB,IAI9Dq3B,EAAiB9kD,GAAAA,GAAA,GACZ8yD,GACAhO,GAGL56B,EAAYjW,QAAQkW,GAAU26B,CAChC,EA5EA,IAAK,IAAI36B,KAAUyoC,EAAW3+C,QAAO+qB,IAuFrC,GATK/Y,IACEiE,EAAYrC,YACfqC,EAAYrC,UAAY5Y,MAAMmf,KAAK,IAAIC,IAAIxG,KAExCqC,EAAYif,kBACfjf,EAAYif,gBAAkBA,KAI7BljB,IAAcutC,IAAWF,EAAa,CACzC,IAAAmB,EAUJ,SAA0Bj7D,EAAQ0I,GAChC,IAAKA,EACH,MAAO,CAAC,EACV,IAAM2rB,EAAiBr0B,EAAOS,SAAS4zB,eACvC6mC,GAA0CtnD,EAAAA,EAAAA,GAAIlL,GAAMoZ,QAAO,SAAAzf,EAAoCsiB,EAAG9F,EAAGwE,GAAQ,IAAhD83C,EAAY94D,EAAZ84D,aAAcC,EAAQ/4D,EAAR+4D,SAAUC,EAAOh5D,EAAPg5D,QAC7EC,EAAW,GAAH14C,QAAAhP,EAAAA,EAAAA,GAAOyP,EAAI7B,MAAM,EAAG3C,IAAE,CAAE8F,IAChC42C,EAAUvQ,GAAkBhrD,EAAQs7D,GAY1C,MAXsB,YAAlBC,aAAO,EAAPA,EAASzwD,OAAqB+T,EAAIwE,EAAIpa,OAAO,GAE/CoyD,EAAUC,EAASz6D,KAAKwzB,GACxB8mC,EAAe,IACNI,SAAAA,EAASt6B,WAElBm6B,GAAW,EACXD,EAAe,CAACI,EAAQt6B,YAExBk6B,EAAe,GAAHv4C,QAAAhP,EAAAA,EAAAA,GAAOunD,GAAY,CAAEx2C,IAE5B,CAACw2C,aAAAA,EAAcC,SAAAA,EAAUC,QAAAA,EAClC,GAAG,CAACF,aAAc,GAAIC,UAAU,EAAOC,aAASn4D,IAfzCi4D,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SAAUC,EAAOH,EAAPG,QAgB/B,OAAOD,EAAW,CAChBn6B,UAAWk6B,EAAat6D,KAAKwzB,GAC7BgnC,QAAAA,GACE,CAAC,CACP,CAlCmCG,CAAiBx7D,EAAQ0I,GAAhDu4B,EAASg6B,EAATh6B,UAAWo6B,EAAOJ,EAAPI,QACfp6B,IACFvQ,EAAYuQ,UAAYA,EACnBjhC,EAAOiyD,aAAahxB,KACvBjhC,EAAOiyD,aAAahxB,GAAa,IACnCjhC,EAAOiyD,aAAahxB,GAAWnd,KAAK,CAACw3C,SAAU5yD,EAAM2yD,QAAAA,IAEzD,CAtIA,MAFE3qC,EAAYlrB,UAAW,CAyI3B,C,0lBCjWiBypB,IAAYwsC,GAAAC,KAAAA,KAIZC,IANJC,GAAuBz+C,EAE7B,SAAU8R,GAAajvB,GAAM,OAAA07D,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAApxC,KAAAoxC,EAAAt6C,MAAA,OAClC,OAAAs6C,EAAAC,cAAOC,GAAe/7D,EAAQA,EAAOgvB,OAAS,CAAC,EAAG,IAAG,gCAAA6sC,EAAAG,OAAA,GAAAC,GAAA,CAGhD,SAAUN,GAAc37D,GAAM,OAAA07D,KAAAA,MAAA,SAAAQ,GAAA,cAAAA,EAAAzxC,KAAAyxC,EAAA36C,MAAA,OACnC,OAAA26C,EAAAJ,cAAOC,GAAe/7D,EAAQA,EAAOuV,QAAU,CAAC,EAAG,IAAG,gCAAA2mD,EAAAF,OAAA,GAAAP,GAAA,CAGxD,SAAUM,GAAe/7D,EAAQm0D,EAAWzrD,GAAI,IAAEmiD,EAAY7hD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,YAAW,OAAA0yD,KAAAA,MAAA,SAAAS,EAAAh6D,GAAA,IAAAkyB,EAAAxe,EAAA6a,EAAA,OAAAgrC,KAAAA,MAAA,SAAAU,GAAA,cAAAA,EAAA3xC,KAAA2xC,EAAA76C,MAAA,OACpE8S,GAAiBr0B,SAAgB,QAAVmC,EAANnC,EAAQS,gBAAQ,IAAA0B,OAAA,EAAhBA,EAAkBkyB,iBAAkB,IAAG+nC,EAAAC,GAAAX,KAAAA,KACvCvH,GAAS,WAAAiI,EAAAE,GAAAF,EAAAC,MAAA53C,KAAE,CAAF23C,EAAA76C,KAAA,SACS,GAD9B1L,EAAQumD,EAAAE,GAAAz8D,QACX6wB,EAAcyjC,EAAUt+C,IACdg1C,GAAe,CAAFuR,EAAA76C,KAAA,QAC3B,OAAA66C,EAAAN,cAAOC,GAAe/7D,EAAQ0wB,EAAYm6B,GAAe,GAAFjoC,QAAAhP,EAAAA,EAAAA,GAAMlL,GAAI,CAAEmN,IAAWg1C,GAAa,eAAAuR,EAAA76C,KAAA,gBAE3F,OAF2F66C,EAAA76C,KAAA,GAErF,CACJ,GAAAqB,QAAAhP,EAAAA,EAAAA,GAAIlL,GAAI,CAAEmN,IAAUhV,KAAKwzB,GACzB3D,GACD,QAAA0rC,EAAA76C,KAAA,iCAAA66C,EAAAJ,OAAA,GAAAG,EAAA,GAVqET,EAUrE,CAKA,IAAM1Q,GAAoB,SAAChrD,EAAQwV,GAA4D,IAAA+mD,EAGvEpY,EAHkByG,EAAS5hD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,SAAU6hD,EAAY7hD,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,YACpF,IAAKwM,EACH,OAAO,KACT,GAAc,gBAAVA,EACF,OAAOxV,SAAgB,QAAVmkD,EAANnkD,EAAQS,gBAAQ,IAAA0jD,OAAA,EAAhBA,EAAkB7a,eAE3B,IAAMjV,GAAiBr0B,SAAgB,QAAVu8D,EAANv8D,EAAQS,gBAAQ,IAAA87D,OAAA,EAAhBA,EAAkBloC,iBAAkB,IACrDS,EAAQU,GAAchgB,EAAOxV,GAC7Bw8D,EAAex8D,EAAO4qD,GAC5B,IAAK4R,EACH,OAAO,KAKT,IAHA,IAAIjnD,EAASinD,EACT9rC,EAAc,KACdhoB,EAAO,GACFmW,EAAI,EAAIA,EAAIiW,EAAM7rB,OAAS4V,IAAK,CACvC,IAAM2c,EAAO1G,EAAMjW,GACnBnW,EAAKob,KAAK0X,GAEV9K,EAAcnb,EADE7M,EAAK7H,KAAKwzB,IAEtBxV,EAAIiW,EAAM7rB,OAAO,IACfynB,GAAeA,EAAYm6B,IAC7Bt1C,EAASmb,EAAYm6B,GACrBniD,EAAO,IAEPgoB,EAAc,KAGpB,CAEA,OAAOA,CACT,EAIaoC,GAAiB,SAAC9yB,EAAQwV,GAA8B,IAAAinD,EAAAC,EAAvB9rC,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAEpDqrB,EAAiBr0B,EAAOS,SAAS4zB,eACjC3rB,EAAO,CACXkoB,GAAWhO,QAAAhP,EAAAA,EAAAA,GACR4B,EAAMtW,MAAMm1B,KACfhjB,QAAO,SAAAsT,GAAC,OAAS,MAALA,CAAS,IACjBg4C,EAAUnnD,EAMhB,QALmD,QAA/BinD,EAAGz8D,EAAOiyD,aAAa0K,UAAQ,IAAAF,GAAM,QAANC,EAA5BD,EAA8B96C,YAAI,IAAA+6C,GAIvD,QAJuDA,EAAlCA,EAAAn/C,KAAAk/C,GAAqC,SAAAp6D,GAAe,IAAbg5D,EAAOh5D,EAAPg5D,QAC5D,OAAIA,IACKzqC,aAAW,EAAXA,EAAavE,WAAWgvC,GAEnC,WAAE,IAAAqB,OAAA,EAJqBA,EAInBpB,WACsB5yD,GAAM7H,KAAKwzB,EACvC,EAEag1B,GAAmB,SAACrpD,EAAQ2rB,GACvC,IAAKA,EACH,OAAO,KACT,IAAMyD,EAAa47B,GAAkBhrD,EAAQ2rB,EAAM,QAAS,aAC5D,IAAKyD,EACH,OAAO,KACT,IACEiE,EAEEjE,EAFFiE,WACAS,EACE1E,EADF0E,KAqBF,MAJkB,CAChBT,WAAAA,EACAS,KAjBoB1nB,OAAOsR,YAAYtR,OAAOuR,QAAQmW,GAAQ,CAAC,GAAGnzB,KAAI,SAAAmF,GAAY,IAAAE,GAAAwH,EAAAA,EAAAA,GAAA1H,EAAA,GAAVlF,EAACoF,EAAA,GAAEsL,EAACtL,EAAA,GAa5E,MAAO,CAACpF,EAZa6/B,KAAKnvB,EAAG,CAC3B,OACA,eACA,eACA,gBAEA,aAEA,WACA,UACA,eAGJ,KAMF,EAEaiiB,GAAgB,SAACvzB,EAAQ2rB,GACpC,OAAKA,GAEcq/B,GAAkBhrD,EAAQ2rB,EAAM,QAAS,cADnD,IAKX,EAEaixC,GAAmB,SAAC58D,EAAQizB,EAASgB,GAChD,IAAM7E,EAAamE,GAAcvzB,EAAQizB,GACzC,OAAK7D,IAEaA,EAAW0E,MAAQ1E,EAAW0E,KAAKG,IAAW,OADvD,IAKX,EAEak3B,GAA2B,SAAC31C,EAAOob,GAA+B,IAAAisC,EAAlB78D,EAAMgJ,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACpE,IAAK4nB,EAAa,OAAO,EACzB,IAAMyD,GAAiBr0B,SAAgB,QAAV68D,EAAN78D,EAAQS,gBAAQ,IAAAo8D,OAAA,EAAhBA,EAAkBxoC,iBAAkB,IACrD3rB,EAAOo0D,GAAatnD,EAAOxV,GAC3B+8D,EAAaD,GAAalsC,EAAa5wB,GAC7C,OAAO0I,EAAK2jB,WAAW0wC,EAAa1oC,EACtC,EAEayoC,GAAe,SAACtnD,GAAyB,IAAAwnD,EAAlBh9D,EAAMgJ,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC3C,GAAqB,iBAAVwM,EACT,OAAOA,EACT,IAAM6e,GAAiBr0B,SAAgB,QAAVg9D,EAANh9D,EAAQS,gBAAQ,IAAAu8D,OAAA,EAAhBA,EAAkB3oC,iBAAkB,IAC3D,OAAOmB,GAAchgB,EAAOxV,GAAQa,KAAKwzB,EAC3C,EAEamB,GAAgB,SAAChgB,GAAyB,IAAAynD,EAAA/kB,EAAAglB,EAAlBl9D,EAAMgJ,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5C,IAAKwM,EACH,MAAO,GACT,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EACT,IAI0B2iC,EAJpB9jB,GAAiBr0B,SAAgB,QAAVi9D,EAANj9D,EAAQS,gBAAQ,IAAAw8D,OAAA,EAAhBA,EAAkB5oC,iBAAkB,IAC3D,OAAI7e,SAAAA,EAAOmW,KACFlW,MAAMC,QAAQF,EAAMmW,MAAQnW,EAAMmW,KAAOnW,EAAMmW,KAAKzsB,MAAMm1B,GAE/D7e,SAAU,QAAL0iC,EAAL1iC,EAAOqQ,WAAG,IAAAqyB,GAAVA,EAAA36B,KAAA/H,EAAa,QACRA,SAAU,QAAL2iC,EAAL3iC,EAAOqQ,WAAG,IAAAsyB,OAAA,EAAVA,EAAA56B,KAAA/H,EAAa,QAAQtW,MAAMm1B,IAE7B7e,SAAY,QAAP0nD,EAAL1nD,EAAOtW,aAAK,IAAAg+D,OAAA,EAAZA,EAAA3/C,KAAA/H,EAAe6e,KAAmB,EAC3C,EAEa8oC,GAAoB,SAAC3nD,EAAOxV,GAA6B,IAArBo9D,EAAQp0D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACvD,IAAKwM,EACH,OAAO,KACT,IAAM6e,EAAiBr0B,EAAOS,SAAS4zB,eACjCS,EAAQU,GAAchgB,EAAOxV,GACnC,OAAIo9D,EACKtoC,EAEAA,EACJn0B,KAAI,SAACoqD,EAAO5oC,EAAKkB,GAAG,OAAKA,EAAI7B,MAAM,EAAGW,EAAI,EAAE,IAC5CxhB,KAAI,SAACm0B,GAAK,OAAKA,EAAMj0B,KAAKwzB,EAAe,GAChD,EAEaw3B,GAAa,SAACr2C,GAAU,IAAA6nD,EACnC,GAAqB,iBAAV7nD,GAAsBC,MAAMC,QAAQF,GAC7C,MAAO,SAAPoN,OAAgBk6C,GAAatnD,IAE/B,GAAqB,YAAjB7C,EAAAA,EAAAA,GAAO6C,IAAsBA,EAAO,CACtC,GAAIA,EAAM4kD,UAAY5kD,EAAM2kD,QAE1B,MAAO,OAAPv3C,OAAck6C,GAAatnD,EAAM4kD,UAAS,MAAAx3C,OAAKpN,EAAM2kD,SAEvD,GAAI3kD,EAAM4kD,SAER,MAAO,QAAPx3C,OAAek6C,GAAatnD,EAAM4kD,WAEpC,GAAI5kD,EAAMmW,MAAQnW,EAAMwb,IAEtB,MAAO,OAAPpO,OAAck6C,GAAatnD,EAAMmW,MAAK,MAAA/I,OAAKpN,EAAMwb,KAEnD,GAAIxb,EAAMmW,KAER,MAAO,QAAP/I,OAAek6C,GAAatnD,EAAMmW,OAEpC,GAAInW,EAAM1K,KAER,OAAO,IAEX,CACA,OAAI0K,SAAU,QAAL6nD,EAAL7nD,EAAOqQ,WAAG,IAAAw3C,GAAVA,EAAA9/C,KAAA/H,EAAa,QACXA,SAAAA,EAAOqQ,IAAI,OAEN,OAAPjD,OAAck6C,GAAatnD,EAAMqQ,IAAI,SAAQ,MAAAjD,OAAKpN,EAAMqQ,IAAI,QAGrD,QAAPjD,OAAek6C,GAAatnD,EAAMqQ,IAAI,UAGnC,IACT,EAEammC,GAAsB,SAAChsD,EAAQs9D,EAAWxR,GAAa,IAAAyR,EAClE,OAAqB,QAArBA,EAAOv9D,EAAOm5D,eAAO,IAAAoE,GAAa,QAAbA,EAAdA,EAAiBD,UAAU,IAAAC,OAAA,EAA3BA,EAA8BzR,EACvC,EAEac,GAAqB,SAAC5sD,EAAQs9D,EAAWxR,EAAUjsD,GACzDG,EAAOm5D,SAAYrN,IAGnB9rD,EAAOm5D,QAAQmE,KAClBt9D,EAAOm5D,QAAQmE,GAAa,CAAC,GAE/Bt9D,EAAOm5D,QAAQmE,GAAWxR,GAAYjsD,EACxC,EAEaw9C,GAAc,SAAC7nC,GAAU,IAAAgoD,EACpC,IAAKhoD,EACH,OAAO,KACT,GAAqB,YAAjB7C,EAAAA,EAAAA,GAAO6C,GAAoB,CAC7B,IAAKA,EAAMmW,MAAUnW,EAAM1K,KAEzB,MAAO,QAET,GAAI0K,EAAMmW,KACR,OAAInW,EAAMmW,MAAQnW,EAAMwb,IAEf,KAGA,MAGb,CACA,OAAIxb,SAAU,QAALgoD,EAALhoD,EAAOqQ,WAAG,IAAA23C,GAAVA,EAAAjgD,KAAA/H,EAAa,QACXA,SAAAA,EAAOqQ,IAAI,OAEN,KAGA,OAGJ,OACT,EAEakN,GAAiB,SAAC/yB,EAAQwV,GAAU,IAAAioD,EAC/C,IAAKjoD,EACH,OAAO,KACT,GAAoB,WAAhB7C,EAAAA,EAAAA,GAAO6C,GAAmB,CAC5B,IAAKA,EAAMmW,MAAUnW,EAAM1K,KAEzB,OAAO0K,EAET,GAAIA,EAAMmW,KACR,OAAInW,EAAMmW,MAAQnW,EAAMwb,IAEf4rC,GAAiB58D,EAAQwV,EAAMmW,KAAMnW,EAAMwb,KAG3CuC,GAAcvzB,EAAQwV,EAAMmW,KAGzC,CACA,OAAInW,SAAU,QAALioD,EAALjoD,EAAOqQ,WAAG,IAAA43C,GAAVA,EAAAlgD,KAAA/H,EAAa,QACXA,SAAAA,EAAOqQ,IAAI,OAEN+2C,GAAiB58D,EAAQwV,EAAMqQ,IAAI,QAASrQ,EAAMqQ,IAAI,QAGtD0N,GAAcvzB,EAAQwV,EAAMqQ,IAAI,SAIvBmlC,GAAkBhrD,EAAQwV,IAErC,IAEX,EAEagoB,GAAoB,SAACx9B,EAAQ64B,GAA2B,IAAjBrjB,EAAKxM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC1D,IAAK6vB,EACH,OAAO,KACT,IAAMrK,EAAWxuB,EAAOquB,UAAUwK,GAClC,GAAIrjB,EAAO,KAAAkoD,EAAA3C,EACHnP,EAAgBC,GAAWr2C,GAC3Bs2C,EAAWF,EAAgB,GAAHhpC,OAAMgpC,EAAa,MAAAhpC,OAAKiW,GAAa,KAC7DkzB,EAASC,GAAoBhsD,EAAQ,oBAAqB8rD,GAChE,GAAIC,EACF,OAAOA,EACT,IAAMr7B,EAAcqC,GAAe/yB,EAAQwV,GACrCmb,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU,MACtDhH,EAAe7xB,EAAOya,QAAQkW,IAAW,CAAC,EAC1C26B,GAAqB56B,GAAeA,EAAYjW,QAAUiW,EAAYjW,QAAQkW,GAAU,CAAC,IAAM,CAAC,EAChGgtC,GAAoC,QAApBD,EAAA7rC,EAAa2+B,eAAO,IAAAkN,OAAA,EAApBA,EAAuB7kC,KAAa,CAAC,EACrD+kC,GAA8C,QAAzB7C,EAAAzP,EAAkBkF,eAAO,IAAAuK,OAAA,EAAzBA,EAA4BliC,KAAa,CAAC,EAC/DglC,EAAYr3D,GAAAA,GAAAA,GAAA,GACbgoB,GACAmvC,GACAC,GAGL,OADAhR,GAAmB5sD,EAAQ,oBAAqB8rD,EAAU+R,GACnDA,CACT,CACE,OAAOrvC,CAEX,EAEayR,GAAuB,SAACjgC,EAAQwV,GAAsE,IAAAsoD,EAA/DjlC,EAAQ7vB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM2nB,EAAM3nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM+D,EAAQ/D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM4kB,EAAI5kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3G,IAAKwM,EACH,OAAO,KACT,IAAMkb,EAAcqC,GAAe/yB,EAAQwV,GACrCo2C,EAAgBC,GAAWr2C,GAC5Bmb,IACHA,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,IAExD,IAAM++C,EAAWF,EAAgB,GAAHhpC,OAAMgpC,EAAa,MAAAhpC,OAAKiW,EAAQ,MAAAjW,OAAK+N,EAAM,MAAA/N,OAAK7V,GAAa,KACrFg/C,EAASC,GAAoBhsD,EAAQ,uBAAwB8rD,GACnE,GAAIC,EACF,OAAOA,EACT,IAAMl6B,EAAe7xB,EAAOya,QAAQkW,IAAW,CAAC,EAC1C26B,GAAoB56B,SAAoB,QAATotC,EAAXptC,EAAajW,eAAO,IAAAqjD,OAAA,EAApBA,EAAuBntC,KAAW,CAAC,EACvDotC,EAAmBzS,EAAkBiF,aAAe,CAAC,EACrDyN,EAAmC,UAAbjxD,GAAyBA,EAAyC,CAAC,EAA9B2jB,aAAW,EAAXA,EAAa8B,cAC1EqrC,EAAYr3D,GAAAA,GAAAA,GAAAA,GAAA,GACXqrB,GACAy5B,GACAyS,GACAC,GAML,OAJApR,GAAmB5sD,EAAQ,uBAAwB8rD,EAAU+R,GACzDjwC,EAAKsS,YACP29B,EAAeh7D,EAAKg7D,EAAc,YAE7BA,CACT,EAEa1uB,GAAgB,SAACnvC,GAAuC,IAA/BgvC,EAAmBhmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACpDqrB,EAAiBr0B,EAAOS,SAAS4zB,eACjC4pC,EAAgBzoC,GAAcwZ,EAAqBhvC,GAGrDk+D,EAFgBlvB,EAAsBgc,GAAkBhrD,EAAQgvC,GAAuBhvC,EAE7D+G,EAAM,KAAMo3D,EAAW,GACrD,EAAG,KAAAC,EACKjK,EAAY+J,IAAel+D,EAASA,EAAOuV,OAAmB,QAAb6oD,EAAGF,SAAU,IAAAE,OAAA,EAAVA,EAAYjK,UACtE,IAAKA,IAAc/nD,OAAOC,KAAK8nD,GAAWlrD,OAAQ,CAChDi1D,EAAan3D,EAAM,KACnB,KACF,CACAA,EAAMqF,OAAOC,KAAK8nD,GAAW,GAC7BgK,EAASr6C,KAAK/c,GACdm3D,EAAa/J,EAAUptD,EACzB,OAA4B,WAAnBm3D,EAAWpzD,MAAwC,UAAnBozD,EAAWpzD,MACpD,OAAQmzD,GAAiB,IAAIr7C,OAAOu7C,GAAUt9D,KAAKwzB,EACrD,E,ykBCjUO,IAAMgqC,GAAqB,SAACn1D,EAAMlJ,GAEvC,IAAI4tB,EAAO,CACT0wC,WAAY,IAERp5D,EAAM+2B,GAAW/yB,EAAMlJ,EAAQ4tB,GACrC,GAAK1oB,EAEL,OAAAsB,GAAAA,GAAA,GACKtB,GACA0oB,EAEP,EAGMqO,GAAa,SAAC/yB,EAAMlJ,EAAQ4tB,GAChC,GAAK1kB,EAAL,CAEA,IAAM4B,EAAO5B,EAAK2c,IAAI,QAChB5gB,EAAWiE,EAAK2c,IAAI,aAE1B,OAAc,UAAT/a,GAA6B,eAATA,IAA0B7F,GAAYA,EAAS2B,KAC/Ds1B,GAAYhzB,EAAMlJ,EAAQ4tB,GACf,SAAT9iB,EACFqxB,GAAWjzB,EAAMlJ,EAAQ4tB,QAD3B,CAPoB,CAW7B,EAGMsO,GAAc,SAAChzB,EAAMlJ,EAAQ4tB,GACjC,IAAM3C,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3ClZ,EAAWiE,EAAK2c,IAAI,aACpBta,EAAKrC,EAAK2c,IAAI,MAEdT,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAWS,EAAc18B,EAAQ4tB,EAAK,IAC5Dvc,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAC/D,GAAKtX,EAAKxe,KAAV,CAGA,IAAIquB,EAAchK,EAAWpF,IAAI,eAC5BoP,IACHA,EAAcc,GAAmB/1B,IACnC,IAAM8L,EAAMmf,EAAWpF,IAAI,OAQ3B,MANoB,CAClBta,GAAAA,EACAgzD,MAAOn5C,EAAK2H,SACZyxC,UAAWvpC,EAAYq6B,cACvBxjD,IAAAA,EAXgB,CAcpB,EAGMqwB,GAAa,SAACjzB,EAAMlJ,EAAQ4tB,GAAS,IAAA6wC,EACnCxzC,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C5S,EAAKrC,EAAK2c,IAAI,MAEdgT,EAAW5N,EAAWpF,IAAI,YAC1BpkB,EAAUwpB,EAAWpF,IAAI,mBAC3BrQ,EAAQyV,EAAWpF,IAAI,SACvBhmB,EAAQorB,EAAWpF,IAAI,SACvB9Y,EAAWke,EAAWpF,IAAI,YAC1B+M,EAAY3H,EAAWpF,IAAI,aACzBwa,EAAqBxgC,EAAMwR,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,EAErE,GAAa,MAAT4O,GAA6B,MAAZqjB,IAAoBwH,EAAzC,CAGA,IAAMM,EAAkB5N,GAAe/yB,EAAQwV,IAAU,CAAC,EACpD8oB,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACpEsc,EAAY6O,EAAgB71B,MAAQ,YACpCiT,EAAcH,EAAiB0gB,GAC/B86B,EAAap5D,EAAOmc,MAAMwkB,EAAgB71B,OAAS,CAAC,EACpDm2B,EAAYC,GAAgB1rB,EAAOxV,EAAQ4tB,GAEjD,KAAI/tB,EAAM+G,KAAOmX,GAAjB,EAGuC,GAAnC6P,EAAK0wC,WAAW1tD,QAAQ4E,IAC1BoY,EAAK0wC,WAAWx6C,KAAKtO,GACvB3V,EAAQA,EAAM0oB,UACdxb,EAAWA,EAASwb,UACpBqK,GAAqB,QAAT6rC,EAAA7rC,SAAS,IAAA6rC,OAAA,EAATA,EAAWl2C,YAAa,GAEpC,IADA,IAAI4C,EAAS,GACJtM,EAAI,EAAIA,EAAIhf,EAAMoJ,OAAS4V,IAAK,CACvC,IAAM/P,EAAM,CACVhE,KAAM8nB,EAAU/T,GAChBhf,MAAOA,EAAMgf,IAGf,GADAsM,EAAOrH,KAAKhV,GACO,SAAf/B,EAAS8R,GAAe,CAC1B,IAAM6/C,EAAc7+D,EAAMgf,IACmB,GAAzC+O,EAAK0wC,WAAW1tD,QAAQ8tD,IAC1B9wC,EAAK0wC,WAAWx6C,KAAK46C,EACzB,CACF,CACA,IAAIxzC,EAAkBzpB,EAAUA,EAAQ4d,OAAS,KAC7C6L,IAAoB9e,OAAOC,KAAK6e,GAAiBjiB,SACnDiiB,EAAkB,MAEpB,IAAIyzC,EAAY,CACdpzD,GAAAA,EACA01B,UAAAA,EACAn2B,KAAMgnB,EACNlvB,MAAOw2D,EAAWxnC,WAClBiH,SAAAA,GAKF,OAHI3N,IACFyzC,EAAUzzC,gBAAkBA,GAC9ByzC,EAAUxzC,OAASA,EACZwzC,CAlCW,CAVA,CA6CpB,E,olDCrJO,IAAMC,GAAkB,SAAC11D,EAAMlJ,GAEpC,IAYyBokB,EAZrBwJ,EAAO,CACT0wC,WAAY,GACZ/wC,OAAQ,IAGJO,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjD0d,EAAQqb,GAAW/yB,EAAM4kB,EAAgBF,GAAM,GAAO,GAGrDL,EAAsBK,EAAtBL,OAAQ+wC,EAAc1wC,EAAd0wC,WAEXjQ,GADqBvgC,EAAertB,SAAjC4zB,eACI,CAAC,GAAEhQ,EAAAC,GACCg6C,GAAU,IAAzB,IAAAj6C,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAKE,IALyB,IAAlBo6C,EAAEz6C,EAAAvkB,MAEHi1B,EAAQU,GAAcqpC,EAAI7+D,GAE5B8+D,GADQ/rC,GAAejF,EAAgB+wC,GACjCxQ,GACDxvC,EAAI,EAAIA,EAAIiW,EAAM7rB,OAAS4V,IAAK,CACvC,IAAMvQ,EAAIwmB,EAAMjW,GACVkgD,EAAOhsC,GAAejF,EAAgBgH,EAAMtT,MAAM,EAAG3C,EAAI,KAAO,CAAC,EACnEA,GAAKiW,EAAM7rB,OAAS,EACL,UAAb81D,EAAKj0D,MAAiC,UAAbi0D,EAAKlpC,MAC3BipC,EAAIxwD,KACPwwD,EAAIxwD,GAAK,CAAC,CAAC,IACbwwD,EAAMA,EAAIxwD,GAAG,KAERwwD,EAAIxwD,KACPwwD,EAAIxwD,GAAK,CAAC,GACZwwD,EAAMA,EAAIxwD,IAGPwwD,EAAIxwD,KACPwwD,EAAIxwD,GAAK,KAEf,CACD,OAAAoW,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CAED,MAAO,CACL4I,OAAAA,EACA3M,MAAAA,EACAytC,KAAAA,EAEJ,EAGMpyB,GAAa,SAAC/yB,EAAMlJ,EAAQ4tB,GAA2D,IAArDoxC,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUkf,EAAMlf,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU4nB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAClF,GAAKE,EAAL,CACA,IAIIka,EAJEtY,EAAO5B,EAAK2c,IAAI,QAEhBO,GADald,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,IACrB0H,IAAI,YACzBiL,EAAY9wB,EAAOS,SAASguB,UAA5BqC,SAcP,MAZa,UAAThmB,GAA6B,eAATA,EACtBsY,EAAM8Y,GAAYhzB,EAAMlJ,EAAQ4tB,EAAMoxC,EAAM92C,EAAQ0I,GAClC,SAAT9lB,EACTsY,EAAM+Y,GAAWjzB,EAAMlJ,EAAQ4tB,EAAMoxC,EAAMpuC,GAC1B,gBAAR9lB,EACTsY,EAAMgZ,GAAalzB,EAAMlJ,EAAQ4tB,EAAMoxC,GACtB,cAARl0D,IACTsY,EAAMiZ,GAAWnzB,EAAMlJ,EAAQ4tB,EAAMoxC,EAAMpuC,IAEzCxK,GAAYhD,GAAO0N,IACrB1N,GAAGwC,EAAAA,EAAAA,GAAA,GAAMkL,EAAY1N,IAEhBA,CAlBoB,CAmB7B,EAEM8Y,GAAc,SAAChzB,EAAMlJ,EAAQ4tB,GAA2D,IAAAqxC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArDN,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUkf,EAAMlf,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU4nB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC7E8B,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C0X,EAAO5K,EAAWpF,IAAI,QACtB5gB,EAAWiE,EAAK2c,IAAI,cAAgB,IAAIkX,EAAAA,GACxCvnB,EAAQyV,EAAWpF,IAAI,SACvB8a,EAAkB5N,GAAe/yB,EAAQwV,GAE3Cyf,EAAchK,EAAWpF,IAAI,eAC5BoP,IACHA,EAAcc,GAAmB/1B,IACnC,IACM63B,EADwB73B,EAAO6uB,aAAaoG,GACfnG,eAAiBmG,EAAYlG,cAC1DwwC,IAAYt0C,EAAWpF,IAAI,OAE3B2C,EAAwB,eAAT1d,IAA0Bod,EACzC+U,EAAmBzU,GAAuB,UAARqN,EAClCR,EAAa4H,EAAmBznB,EAAQob,EAC1CuM,EAAgBlS,EAAWpF,IAAI,YAC/B25C,EAAmBriC,GAAiBK,GAAkBx9B,EAAQm9B,EAAe3nB,IAAU,KACrFinB,EAAiBF,GAAgBv8B,EAAQirB,EAAY2C,EAAMuP,EAAevM,GAC1E0F,EAAW9N,KAAiB2U,GAAkD,IAAjB,QAAhB8hC,EAAAO,SAAgB,IAAAP,OAAA,EAAhBA,EAAkBlhD,cAC/D0hD,EAA0Bj3C,IAAevjB,aAAQ,EAARA,EAAU2B,MAAO,EAI5DkF,GAH+B0c,GAAgBvjB,SAAAA,EAAU2B,KAGnD24D,GACNG,GAAY,EACZD,GAEFC,EAAYH,EACZzzD,EAAMkzD,GAEFA,IACFlzD,GAAOA,GAGX,IAAI6zD,GAAc,EACdC,EAAkC,QAAnBV,EAAGM,SAAgB,IAAAN,OAAA,EAAhBA,EAAkBjnC,WACpC4nC,EAAqBriC,GAAkBx9B,EAAQ4/D,EAAiBpqD,GAC9DsqD,IAAuC,QAAjBX,EAACK,SAAgB,IAAAL,GAAhBA,EAAkB1wC,WAAiC,QAAnB2wC,EAACS,SAAkB,IAAAT,IAAlBA,EAAoB3wC,WAC5EsxC,IAAwC,QAAnBV,EAACQ,SAAkB,IAAAR,IAAlBA,EAAoB5wC,WAC1CuxC,EAA4C,QAAhCV,EAAGnR,GAAwBjlD,UAAK,IAAAo2D,OAAA,EAA7BA,EAA+Bz5C,IAAI,QAYxD,KAXyB7lB,EAAOS,SAAS23B,0BAClC5P,GAAe1c,GAAwB,SAAjBk0D,GAA2BN,GAAgC,KAAnBz6D,aAAQ,EAARA,EAAU2B,SAEzE64D,EACFC,GAAaA,EAEb5zD,GAAOA,EAET6zD,GAAc,GAEI7zD,GAAO0c,GAAeu3C,IAAwB//D,EAAOS,SAAS23B,wBAA0B0nC,GACzF,CACjBh0D,GAAOA,EAAI,IAAAzJ,EACwB,CAACu9D,EAAiBziC,GAApDA,EAAa96B,EAAA,GAAEu9D,EAAev9D,EAAA,OAAAyD,EACU,CAAC+5D,EAAoBL,GAA7DA,EAAgB15D,EAAA,GAAE+5D,EAAkB/5D,EAAA,EACvC,CAEA,IAAMsf,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAWS,EAAc18B,EAAQ4tB,EAAM+xC,GAAa,EAAOtqC,EAAW,IAC5FhkB,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAGzDujC,IAAyBjgE,EAAOS,SAAS20D,qBAC/C,GAAIn4B,IAAqB3G,GAEvB,GAAsBpzB,MAAlBu5B,EACF,YAEF,IAAKrX,EAAKxe,OAASq5D,EACjB,OAIJ,IAAIC,EAA0Bh4C,GAAU+3C,GAAqC,GAAb76C,EAAKxe,KAIhEs5D,IAA2BX,GAAYI,IAI1CO,EAA0Bj7D,EAAS0Q,MAAK,SAAC+mB,GAAiB,IAAAyjC,EAAAC,EAAAC,EAAAC,EAClDj/C,EAAmC,QAAjC8+C,EAAGzjC,EAAa7W,IAAI,qBAAa,IAAAs6C,OAAA,EAA9BA,EAAgCt6C,IAAI,YACzC06C,EAA4B,QAAvBH,EAAIpgE,EAAkB,iBAAC,IAAAogE,GAAM,QAANA,EAAnBA,EAAsB/+C,UAAG,IAAA++C,OAAA,EAAzBA,EAA2BnoC,WAC1C,OAA2D,QAA3DooC,EAAuB,QAAvBC,EAAOtgE,EAAOquB,iBAAS,IAAAiyC,GAAS,QAATA,EAAhBA,EAAmBC,UAAM,IAAAD,OAAA,EAAzBA,EAA2B1xC,iCAAyB,IAAAyxC,GAAAA,CAC7D,KAGF,IAAIG,EAAc,CAAC,EAYnB,GAXIN,EACFM,EAAY3oC,GAAQzS,EAAK2H,SAAS1N,OAElCmhD,EAAcp7C,EAAKkb,QAGjBo/B,IACFc,EAAc,CAAE,IAAKA,IAInBvjC,EAAkB,CACpB,IAAMY,EAAiBC,GAAYlQ,EAAM5tB,EAAQwV,EAAOob,GACxD,GAAI0F,EAAU,CAEZ,IAAMjV,EAAK8b,GAAiB,OAC5BqjC,GAAW56C,EAAAA,EAAAA,GAAA,GACRvE,EAAK,CACJwc,EACA2iC,GAGN,KAAO,CAEL,IAAMnvD,EAAU+T,EAAKxe,KAEjB,CACA,OAAU,CACRi3B,EACA2iC,IAJF3iC,EAcJ2iC,EAAcC,GAAYzgE,EAAQirB,EAPpB,CACZ,OAAU,CACR5Z,EACA,CAAE,IAAK,CAAC,EAAG,CAAEqvD,IAAK,iBAClB,IAGiDjkC,EAAgBU,EAAe,KAAMwD,EAC5F,CACF,CAOA,OAJI70B,IACF00D,EAAc,CAAE,IAAKA,IAGhBA,CACT,EAGMrkC,GAAa,SAACjzB,EAAMlJ,EAAQ4tB,GAA2C,IAAA+yC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArChC,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU4nB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5DiiB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C3I,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAE5BgT,EAAW5N,EAAWpF,IAAI,YAC1BqF,EAAkBD,EAAWpF,IAAI,mBAKrC,IAJAqF,EAAkBA,EAAkBA,EAAgB7L,OAAS,QACrCjT,OAAOC,KAAK6e,GAAiBjiB,SACnDiiB,EAAkB,MAEP,MAAT1V,GAA6B,MAAZqjB,EAArB,CAGA,IAAM8H,EAAkB5N,GAAe/yB,EAAQwV,GAC3C8oB,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,GACzDyiB,EAA+B,QAArB0oC,EAAGriC,SAAkB,IAAAqiC,OAAA,EAAlBA,EAAoB1oC,WACjCgpC,EAAwBzjC,GAAkBx9B,EAAQi4B,EAAYziB,GAGlE,GAAuB,QAAnBorD,EAACtiC,SAAkB,IAAAsiC,GAAlBA,EAAoBnyC,WAAmC,QAAtBoyC,EAACI,SAAqB,IAAAJ,GAArBA,EAAuBpyC,UAA9D,CAMA,IAAI3iB,EAAMkzD,EACJv2B,IAAoC,QAAnBq4B,EAACxiC,SAAkB,IAAAwiC,GAAlBA,EAAoBryC,WAAoC,QAAtBsyC,EAACE,SAAqB,IAAAF,IAArBA,EAAuBtyC,WAE9E0J,IADwC,QAAtB6oC,EAACC,SAAqB,IAAAD,IAArBA,EAAuBvyC,eACdzuB,EAAOS,SAAS23B,wBAA0BqQ,GAE1E,GADgB38B,GAAOqsB,GAAUsQ,EACpB,CACX38B,GAAOA,EAAI,IAAA9F,EACc,CAACiyB,EAAYY,GAArCA,EAAQ7yB,EAAA,GAAEiyB,EAAUjyB,EAAA,OAAAvC,EACyB,CAACw9D,EAAuB3iC,GAArEA,EAAkB76B,EAAA,GAAEw9D,EAAqBx9D,EAAA,EAC5C,CAEA,IAAMg5B,EAAiBF,GAAgBv8B,EAAQirB,EAAY2C,EAAMiL,EAAUjI,GAC3E,QAAuB1tB,IAAnBu5B,EAAJ,CAGA,IAAMoB,EACW,SAAbpJ,EACE4K,GAAWzR,EAAM5tB,EAAQwV,EAAOob,GAChCkN,GAAYlQ,EAAM5tB,EAAQwV,EAAOob,GACvC,QAAuB1tB,IAAnB26B,EAGJ,OAAO4iC,GAAYzgE,EAAQirB,EAAY4S,EAAgBpB,EAAgB5D,EAAU3N,EAAiByV,EAAiB70B,EATjG,CAhBlB,MAFE8hB,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBATrB,CAqCpB,EAEMuD,GAAe,SAAClzB,EAAMlJ,EAAQ4tB,GAAuB,IAAjBoxC,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACtC/D,EAAWiE,EAAK2c,IAAI,aAC1B,GAAK5gB,EAAL,CAQA,IANA,IAAMsiB,EAAQtiB,EACXtE,KAAI,SAAC+7B,GAAY,OAAKL,GAAWK,EAAc18B,EAAQ4tB,EAAMoxC,EAAM,KAAK,IACxE3tD,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAC5DpU,WAAWC,UAEVoU,EAAgB,GACX9d,EAAI,EAAIA,EAAI0I,EAAMte,OAAS4V,IAC9BA,IAAO0I,EAAMte,OAAS,GAAOse,EAAM1I,GAAG,IAGxC8d,EAAc7Y,KAAKyD,EAAM1I,IACrBA,IAAO0I,EAAMte,OAAS,GAAMse,EAAM1I,GAAG,IAEvC8d,EAAc7Y,KAAK,MAAC5gB,EAAW,QALjC0qB,EAAKL,OAAOzJ,KAAK,yBAADlB,OAA0B/D,IAU9C,GAAK8d,EAAc1zB,OAAnB,CAGA,GAA6B,IAAzB0zB,EAAc1zB,OAAc,CAE9B,IAAAi4D,GAAA1zD,EAAAA,EAAAA,GAAsBmvB,EAAc,GAAE,GAA1BwkC,GAAFD,EAAA,GAAQA,EAAA,IAGlB,OAFch+D,MAAVi+D,IACFA,EAAS,MACJA,CACT,CAKA,IAHA,IAAM/9C,EAAM,CAAEg+C,GAAI,IACdC,EAASj+C,EAAG,GAChBk+C,GAAA9zD,EAAAA,EAAAA,GAAoBmvB,EAAcA,EAAc1zB,OAAS,GAAE,GAAjDk4D,GAAFG,EAAA,GAAQA,EAAA,IACPziD,EAAI,EAAIA,EAAI8d,EAAc1zB,OAAS,EAAI4V,IAAK,CACnD,IAAM0iD,EAAW1iD,IAAO8d,EAAc1zB,OAAS,EAC/C6zB,GAAAtvB,EAAAA,EAAAA,GAAoBmvB,EAAc9d,GAAE,GAA/Bma,EAAI8D,EAAA,GAAEj9B,EAAKi9B,EAAA,GACH55B,MAATrD,IACFA,EAAQ,MACEqD,MAAR81B,IACFA,GAAO,GACTqoC,EAAOv9C,KAAKkV,GACZqoC,EAAOv9C,KAAKjkB,GACR0hE,EACFF,EAAOv9C,KAAKq9C,IAGZE,EAAOv9C,KAAK,CAAEs9C,GAAI,KAClBC,EAASA,EAAOA,EAAOp4D,OAAS,GAAE,GAEtC,CACA,OAAOma,CA9BW,CApBA,CAmDpB,EAEMiZ,GAAa,SAACnzB,EAAMlJ,EAAQ4tB,GAA2C,IAArCoxC,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAU4nB,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC5D8B,EAAO5B,EAAK2c,IAAI,QACtB,GAAY,cAAR/a,EAAJ,CAIA,IAAMmgB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAOjD,MAAO,CALM+d,GAAYhzB,EAAMlJ,EAAQ4tB,EAAMoxC,EAAMpuC,GAE7B2L,GACpBv8B,EAAQirB,EAAY2C,EAAM,KAAMgD,EAAa,eAN/C,CAFEhD,EAAKL,OAAOzJ,KAAK,4BAADlB,OAA6B9X,EAAI,kBAWrD,EAEMyxB,GAAkB,SAACv8B,EAAQirB,EAAY2C,EAAMiL,EAAUjI,GAA0C,IAA7B0O,EAAiBt2B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACxFwM,EAAQyV,EAAWpF,IAAI,SACrB0Z,EAAYtU,EAAWpF,IAAI,YAC3B2Z,EAAavU,EAAWpF,IAAI,cACT,eAArByZ,GAAsCE,GAAmC,cAArBA,EAAW3Z,IAAI,MACrErQ,EAAQ,eAEV,IAAMmrB,EAAkB5N,GAAe/yB,EAAQwV,GACzC8oB,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,GACzDuI,EAAcH,EAAiB0gB,GAC/BmB,EAASxU,EAAWpF,IAAI,SACxB0M,EAAkBtH,EAAWpF,IAAI,mBACvC,GAAc3iB,MAAVu8B,EAAJ,CAGA,IAAIC,EAAY,GACZC,EAAa,GACb6hC,EAAgB5zC,EAAK0wC,WACnB1+B,EAASH,EAAO9+B,KAAI,SAACk/B,EAAc1d,GACvC,IAAMpV,EAAWwyB,EAAYA,EAAU1Z,IAAI1D,GAAO,KAC5CyQ,EAAY4M,EAAaA,EAAW3Z,IAAI1D,GAAO,KAC/C2d,EAASC,GAAcF,EAAc9yB,EAAU/M,GAC/C2wB,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtDizB,EAAiBC,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,EAAU,CAAEmzB,WAAW,IAC9FC,EAAKC,GACTxS,EAAM5tB,EAAQ8/B,EAAQ/yB,EAAU6lB,EAAWoN,EAAgBW,EAAiB9H,EAAUyF,EAAoB1N,EAAa2B,GAMzH,YAJWrvB,IAAPi9B,IACFT,EAAU5b,KAAK/W,GACf4yB,EAAW7b,KAAK8O,IAEXuN,CACT,IACME,EAAqBT,EAAOvuB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,EACtE,KAAIg5B,EAAOh5B,KAAOmX,GAAesiB,GAIjC,OAAOtiB,EAAc,EAAI6hB,EAAOrX,UAA4B,GAAfxK,EAAmB6hB,EAAOU,QAAU,KAH/E1S,EAAK0wC,WAAakD,CAtBF,CA0BpB,EAGMphC,GAAc,SAACxS,EAAM5tB,EAAQ6/B,EAAc9yB,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAU0H,GAAqD,IAAxC3P,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMupB,EAAevpB,UAAAC,OAAA,GAAAD,UAAA,SAAA9F,EACxJ,QAAqBA,IAAjB28B,EAAJ,CAEA,IAAIzc,EACJ,GAAgB,SAAZrW,EACFqW,EAAM0a,GAAYlQ,EAAM5tB,EAAQ6/B,EAAcjP,QACzC,GAAgB,QAAZ7jB,EACTqW,EAAMic,GAAWzR,EAAM5tB,EAAQ6/B,EAAcjP,QACxC,GAAyC,mBAA9BoP,aAAc,EAAdA,EAAgBvR,WAA0B,CAC1D,IAAM2P,EAAK4B,EAAevR,UACpBqF,EAAO,CACX+L,EAAYr5B,GAAAA,GAAA,GAENg0B,EAAWiG,KAAKjG,EAAU,CAAC,gBAAiB,eAAiB,CAAC,GAAC,IACnEjI,gBAAAA,IAGF1vB,EAAKm9B,EAAgB7iB,IAEnB0b,IACF/E,EAAKhQ,KAAK+U,GACV/E,EAAKhQ,KAAKyc,IAEZnd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MACE1Q,EAAMyc,EAER,OAAOzc,CAzBW,CA0BpB,EAGMic,GAAa,SAACzR,EAAM5tB,EAAQ6/B,GAAqC,IAAA4B,EAAAC,EAAvB9Q,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACtDiqB,EAA0B,QAAnBwO,EAAG5B,EAAaha,WAAG,IAAA4b,OAAA,EAAhBA,EAAAlkB,KAAAsiB,EAAmB,QAC7B/L,EAAuB,QAAnB4N,EAAG7B,EAAaha,WAAG,IAAA6b,OAAA,EAAhBA,EAAAnkB,KAAAsiB,EAAmB,QAC1BzQ,EAAamE,GAAcvzB,EAAQizB,GACnCshB,EAAY/e,GAAcvC,EAASjzB,GACnCw0C,EAAcD,EAAUA,EAAUtrC,OAAO,GAC/C,GAAKmmB,EAIL,GAAKA,SAAAA,EAAYX,UAAjB,CAKA,IAAIkT,EAAgB,CAAC,EACjBC,EAAO,GACPC,EAAiB,GACrB,IAAK,IAAM5N,KAAU7E,EAAW0E,KAAM,KAAAgO,EAC9B5N,EAAY9E,EAAW0E,KAAKG,GAC5BuG,EAAWzH,GAAe/yB,EAAQk0B,GACjCvC,EAA4BuC,EAA5BvC,aAAcyC,EAAcF,EAAdE,WACf4N,EAAkBrQ,SAAAA,EAAchG,KAAO,OAAS,QAChDqI,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACrC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EACxCg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EAClC,SAAhBg/B,GAAkC,QAAZJ,EAAIG,SAAQ,IAAAH,GAARA,EAAUziB,OAEtC4iB,EAAWA,EAAS5iB,QAEtB,IAAMwZ,EAAW,KACXlI,EAAS6H,GAAoBx4B,EAAQk0B,EAAW2E,EAAUqJ,GAC1DlC,EAAiBC,GAAqBjgC,EAAQk0B,EAAW2E,EAAUlI,EAAQuR,EAAa,CAAEhC,WAAW,IACrGoC,EAAkBlC,GACtBxS,EAAM5tB,EAAQiiC,EAAUC,EAAahO,EAAUppB,KAAMk1B,EAAgBxF,EAAU,KAAM,KAAM5J,GAE7F,GAAgB1tB,MAAZ++B,QAA6C/+B,IAApBo/B,EAG3B,YAFmB,QAAfJ,GACFtU,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8BqR,EAAM,cAAArR,OAAaqQ,KAGrE,IAAIsP,OAAmB,EACvB,QAAwBr/B,IAApBo/B,IAAkClO,GAA8BlxB,MAAhByuB,EAA2B,CAC7E,IAAM6Q,EAAgBhK,GAAoBx4B,EAAQk0B,EAAW2E,EAAUmJ,GACjES,EAAwBxC,GAAqBjgC,EAAQk0B,EAAW2E,EAAU2J,EAAeR,EAAiB,CAAE9B,WAAW,IAI7H,QAA4Bh9B,KAH5Bq/B,EAAsBnC,GACpBxS,EAAM5tB,EAAQ2xB,EAAcqQ,EAAiB9N,EAAUppB,KAAM23B,EAAuBjI,EAAU,KAAM,KAAM5J,IAK1G,YAFuB,QAAnBoR,GACFpU,EAAKL,OAAOzJ,KAAK,qCAADlB,OAAsCqR,EAAM,cAAArR,OAAaqQ,IAG/E,CAEA,IAAMyP,EAAoBJ,QAAAA,EAAmBC,EAC7C,QAA0Br/B,IAAtBw/B,EAAiC,CACnC,GAAId,EAAK34B,OAAQ,KACgBuqB,EADhBC,EAAAnP,GACYsd,GAAI,IAA/B,IAAAnO,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MACEkd,EADqBnO,EAAA3zB,YACSqD,CAC/B,OAAAwhB,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACDid,EAAO,EACT,CACAD,EAAc1N,GAAUyO,CAC1B,MACOtO,GACHyN,EAAe/d,KAAKmQ,GACtB2N,EAAK9d,KAAKmQ,EAEd,CACA,IAAI4N,EAAe54B,OAAnB,CAKA,IACIma,EADEq+C,EAAmBr1D,OAAO+e,OAAOwW,GAEvC,GAAoC,mBAAzBvS,EAAWX,UAA0B,CAC9C,IAAM2P,EAAKhP,EAAWX,UAChBqF,EAAO,CACX6N,GAEFve,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,KAAO,CACL,IAAM2gB,EAAWrlB,EAAWX,WAAa+lB,EAEzC,GADmBplB,EAAWE,kBAChB,CACZ,IAAO7R,EAAkBgkD,EAAgB,GAA1B57D,EAAU47D,EAAgBjgD,MAAA,GAEvC4B,EADEvd,EAAOoD,OACH,CAAE,OAAU,CAAEwU,EAAKg3B,EAAU5uC,IAE7B,CAAE,OAAU,CAAE4X,EAAKg3B,GAE7B,MACErxB,GAAGwC,EAAAA,EAAAA,GAAA,GAAM6uB,EAAWgtB,EAExB,CACA,OAAOr+C,CAxBP,CA5DA,MAFEwK,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,2BAJhCrF,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,6BA2FpC,EAGM6K,GAAc,SAAClQ,EAAM5tB,EAAQwV,GAA8B,IAG3D4N,EAHoCwN,EAAW5nB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACtD7G,EAAoCnC,EAAOS,SAApC4zB,EAAclyB,EAAdkyB,eAAgB5F,EAAStsB,EAATssB,UAGvB,GAAIjZ,EAAO,CACLC,MAAMC,QAAQF,KAChBA,EAAQA,EAAM3U,KAAKwzB,IACrB,IAAMmG,EAAWzH,GAAe/yB,EAAQwV,IAAU,CAAC,EAC7CyrB,EAAYC,GAAgB1rB,EAAOxV,EAAQ4tB,EAAMgD,GAEnD8wC,EAAUlnC,EAASmnC,eAAkC,UAAjBnnC,EAAS1vB,KAAmB2jB,EAAUgB,YAAc,OAC5FrM,GAAGwC,EAAAA,EAAAA,GAAA,GAAM87C,EAAWzgC,IACmB,GAAnCrT,EAAK0wC,WAAW1tD,QAAQ4E,IAC1BoY,EAAK0wC,WAAWx6C,KAAKtO,EACzB,CACA,OAAO4N,CACT,EAwBMq9C,GAAc,SAACzgE,EAAQirB,EAAY4S,EAAgBpB,EAAgB5D,GAA4E,IAAlE3N,EAAeliB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM23B,EAAe33B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMm1B,EAAKn1B,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAChIwM,EAAQyV,EAAWpF,IAAI,SAEvByY,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACtE4oB,EAA4C,mBAAhCE,EAAmB7P,UAC/B6P,EAAmB7P,UA3BC,SAACoK,EAAUyF,EAAoBT,EAAgBpB,GACvE,IAAImlC,EAAa/oC,EACX9a,EAAcH,EAAiB0gB,GACM,iBAAhCA,EAAmB7P,YAC5BmzC,EAAatjC,EAAmB7P,WAClC,IAAMozC,EAAW,CAAC,IAAK,KAAM,IAAK,MAC5BC,EAAQ,CAAC,KAAM,MAarB,OAZW,SAACtsD,EAAO6L,EAAIvS,EAAK+O,EAAOkkD,GACjC,OAAmB,GAAfhkD,GAAoB+jD,EAAMr6D,SAASm6D,IACrCh8C,EAAAA,EAAAA,GAAA,GAAUg8C,EAAa,CAAC/jC,EAAgB,OAClB,GAAf9f,GACP6H,EAAAA,EAAAA,GAAA,GAAUg8C,EAAa/jC,GACD,GAAf9f,GACP6H,EAAAA,EAAAA,GAAA,GAAUg8C,EAAa,CAAC/jC,EAAgBpB,IAClB,GAAf1e,GAAoB8jD,EAASp6D,SAASm6D,IAC7Ch8C,EAAAA,EAAAA,GAAA,GAAUg8C,EAAa,CAACnlC,EAAe,GAAIoB,EAAgBpB,EAAe,MAE1E7W,EAAAA,EAAAA,GAAA,GAAUg8C,EAAU,CAAI/jC,GAAcjb,QAAAhP,EAAAA,EAAAA,GAAK6oB,IAC/C,CAEF,CAQMmC,CAAkB/F,EAAUyF,EAAoBT,EAAgBpB,GAC9D3I,EAAO,CACX+J,EACAhF,EACA4D,EACA55B,EAAKy7B,EAAoBlhB,GACzB8N,EACAyV,GAEEg+B,EAAYvgC,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,IAMvC,OAJIqK,IACFwgC,EAAY,CAAE,IAAKA,IAGdA,CACT,E,olDC7jBA,IAAMthD,GAAW,SAAC/L,GAAC,MAAkB,WAAZqB,EAAAA,EAAAA,GAAOrB,IAAuB,OAANA,IAAemE,MAAMC,QAAQpE,EAAE,EAEnE0wD,GAAgB,SAACr8C,EAAM3lB,GAClC,OAAOiiE,GAAet8C,EAAM3lB,GAAQ,EACtC,EAEaiiE,GAAiB,SAACt8C,EAAM3lB,GAAgC,IAAxB2tB,IAAY3kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAEnD4kB,EAAO,CACTL,OAAQ,IAGJO,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDgC,EAAM+2B,GAAW,GAAItW,EAAMmI,EAAgBF,GAEjD,OAAID,EACK,CAACzoB,EAAK0oB,EAAKL,SAEdK,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,qCAAsC2K,EAAKL,QACnDroB,EAEX,EAGM+2B,GAAa,SAACimC,EAASh5D,EAAMlJ,EAAQ4tB,GAA8F,IAAxFoxC,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUm5D,IAAYn5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASo5D,EAAgBp5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAWm/D,EAAMr5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EACzH,GAAKgG,EAAL,CAEA,IAAM4B,EAAO5B,EAAK2c,IAAI,QAEtB,MAAc,UAAT/a,GAA6B,eAATA,EAChBoxB,GAAYgmC,EAASh5D,EAAMlJ,EAAQ4tB,EAAMoxC,EAAMmD,EAAcC,EAAkBC,GACpE,SAATv3D,EACFqxB,GAAW+lC,EAASh5D,EAAMlJ,EAAQ4tB,EAAMoxC,EAAMmD,EAAcC,EAAkBC,QADhF,CANoB,CAU7B,EAGMnmC,GAAc,SAACgmC,EAASh5D,EAAMlJ,EAAQ4tB,GAA8F,IAAA00C,EAAArD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiD,EAAxFvD,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC9C8B,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3CohD,IAAYt0C,EAAWpF,IAAI,OAC3B5gB,EAAWiE,EAAK2c,IAAI,cAAgB,IAAIkX,EAAAA,GAC9C56B,EAA6CnC,EAAOS,SAA7Cq0D,EAAkB3yD,EAAlB2yD,mBACD0N,EADmCrgE,EAAdkyB,eAGrBouC,EAAqBP,EAAQ7wD,QAAO,SAAA4S,GAAE,MAAsB,cAAlBA,EAAG4B,IAAI,OAAuB,IAAE5c,OAAS,EACnF8zD,EAAamF,EAChB7wD,QAAO,SAAA4S,GAAE,MAAsB,cAAlBA,EAAG4B,IAAI,OAAuB,IAC3CllB,KAAI,SAAAsjB,GAAE,OAAIA,EAAG4B,IAAI,cAAcA,IAAI,QAAQ,IAC3CrE,OAAO,GAAG5L,MACP8sD,EAAiBD,GAAsB1F,EAEvCv0C,EAAwB,eAAT1d,EACfuqB,EAAa7M,EAAcyC,EAAWpF,IAAI,SAAW,KACvDsX,EAAgB3U,EAAcyC,EAAWpF,IAAI,YAAc,KAC3D25C,EAAmBriC,GAAiBK,GAAkBx9B,EAAQm9B,EAAe9H,IAAe,KAC1F4c,EAA2B9U,EAA6C,QAAhCmlC,EAAmB,QAAnBrD,EAAGO,SAAgB,IAAAP,OAAA,EAAhBA,EAAkBlhD,mBAAW,IAAAukD,EAAAA,EAAI,OAAIp/D,EAChFy/D,EAAiBzhC,GAAgB7L,EAAYr1B,EAAQ4tB,EAAM80C,GAE3D7sC,GADgB9C,GAAe/yB,EAAQq1B,IAAe,CAAC,GAClCQ,KACrBqc,EAAuB7c,GAAuB,UAATQ,GAAoBoc,GAA4B,EAErFwtB,EAA0Bj3C,IAAevjB,aAAQ,EAARA,EAAU2B,MAAO,EAI5D+4D,GAH+Bn3C,GAAgBvjB,SAAAA,EAAU2B,MAG3C,GACdkF,EAAMyzD,EACNG,GAAY,EACZD,GAEFC,EAAYH,EACZzzD,EAAMkzD,GAEFA,IACFlzD,GAAOA,GAGX,IAAI8zD,EAAkC,QAAnBV,EAAGM,SAAgB,IAAAN,OAAA,EAAhBA,EAAkBjnC,WACpC4nC,EAAqBriC,GAAkBx9B,EAAQ4/D,EAAiBvqC,GAC9DyqC,IAAuC,QAAjBX,EAACK,SAAgB,IAAAL,GAAhBA,EAAkBhP,eAAqC,QAAnBiP,EAACS,SAAkB,IAAAT,IAAlBA,EAAoBjP,eAChF4P,IAAwC,QAAnBV,EAACQ,SAAkB,IAAAR,IAAlBA,EAAoBlP,eAC1C6P,EAA4C,QAAhCV,EAAGnR,GAAwBjlD,UAAK,IAAAo2D,OAAA,EAA7BA,EAA+Bz5C,IAAI,QAYxD,KAXyB7lB,EAAOS,SAAS23B,0BAClC5P,GAAe1c,GAAwB,SAAjBk0D,GAA2BN,GAAgC,KAAnBz6D,aAAQ,EAARA,EAAU2B,SAEzE64D,EACFC,GAAaA,EAEb5zD,GAAOA,EAET6zD,GAAc,GAEI7zD,GAAO0c,GAAeu3C,IAAwB//D,EAAOS,SAAS23B,wBAA0B0nC,GACzF,CACjBh0D,GAAOA,EAAI,IAAAzJ,EACwB,CAACu9D,EAAiBziC,GAApDA,EAAa96B,EAAA,GAAEu9D,EAAev9D,EAAA,OAAAyD,EACU,CAAC+5D,EAAoBL,GAA7DA,EAAgB15D,EAAA,GAAE+5D,EAAkB/5D,EAAA,EACvC,CAGA,IAAImvB,EAAchK,EAAWpF,IAAI,eAC5BoP,IACHA,EAAcc,GAAmB/1B,IACnC,IAAIg9B,EAAwBh9B,EAAO6uB,aAAaoG,GAChD,GAAK+H,EAAL,CAGA,IAAM4lC,EAAe5lC,EAAsB4lC,aAC5B92D,GAAsC,QAApB,QAAXy2D,EAAAttC,SAAW,IAAAstC,OAAA,EAAXA,EAAaxzC,gBAA0B6zC,IAAiBp6C,GACvExoB,EAAOS,SAASq0D,oBAAwB90D,EAAOS,SAAS23B,yBAE7DnD,EAAc2tC,EACd5lC,EAAwBh9B,EAAO6uB,aAAaoG,GAC5CnpB,GAAOA,EACP6zD,GAAc,GAGhB,IAAMkD,EAAY7lC,EAAsB6lC,UAElCz9C,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAW,GAADrZ,QAAAhP,EAAAA,EAAAA,GAC3BsuD,GAAO,CAAEh5D,IAAOwzB,EAAc18B,EAAQ4tB,EAAM+xC,EAAqB,SAAR9pC,EAAyB,SAARA,EAAmB,SAAAlR,GAAC,aAAA/B,OAAW4/C,GAAG5/C,OAAG+B,EAAC,OAAMzhB,EAAU,IAErImO,QAAO,SAACyxD,GAAc,YAA+B,IAAnBA,CAA8B,IACnE,GAAK5wB,GAAyB9sB,EAAKxe,KAAnC,CAIA,IAAI45D,EACJ,GAAiB,GAAbp7C,EAAKxe,KACP45D,EAAcp7C,EAAKkb,aACd,GAAIlb,EAAKxe,KAAO,EAAG,CACxB,IAAM23D,EAAQn5C,EAAK2H,SAAS1N,OACXy1C,GAAoC,QAAb+N,IAEtCrC,EAAcjC,EAAMz8C,QAAO,SAACC,EAAK+T,GAC/B,GAAK/T,EAAL,CACA,IAAK,IAAInhB,KAAKk1B,EAAM,CAClB,GAAY,KAARl1B,EAAE,GAAW,CACfmhB,OAAM7e,EACN,KACF,CACA,GAAcA,MAAV6e,EAAInhB,GACNmhB,EAAInhB,GAAKk1B,EAAKl1B,OACT,CAEL,IAAI6pB,EAAO1I,EAAInhB,GAAI2gB,EAAOuU,EAAKl1B,GAQ/B,GAPKyc,GAASoN,KACZA,EAAO,CAAC,IAAOA,IAEZpN,GAASkE,KACZA,EAAO,CAAC,IAAOA,IAEFnV,OAAOC,KAAKoe,GAAM,IAAare,OAAOC,KAAKkV,GAAM,GAC1C,CACpBQ,OAAM7e,EACN,KACF,CACA6e,EAAInhB,GAAKwL,OAAOke,OAAO,CAAC,EAAGG,EAAMlJ,EACnC,CACF,CACA,OAAOQ,CAzBmB,CA0B5B,GAAG,CAAC,IAEDy+C,IAEHA,GAAW56C,EAAAA,EAAAA,GAAA,GAAMi9C,EAAatE,GAElC,CAEA,GAAIlpC,EACF,GAAY,SAARQ,EAAiB,CACnB,IAAMktC,EAAa,CACjB,MAAS,CACP,QAAW,CACT,IAAMJ,EACN,MAIAK,EAAcxC,EAAc,CAChC,MAAS,CACP,QAAW,CACT,CACE,QAAW,CACT59D,MAAO,IAAM+/D,EACbM,GAAI,KACJjqC,KAAMwnC,IAGV,MAGFuC,EAIJvC,EAAc,CAAE,MAHhBA,EAAcvkC,GACZimC,EAASh5D,EAAKynC,IAAI,OAAQ,QAAS3wC,EAAQ4tB,EAAM8xC,GAAW,GAAQ,SAAAwD,GAAE,OAAIF,CAAW,GAAGD,GAG5F,MACEvC,GAAW56C,EAAAA,EAAAA,GAAA,GAAM+8C,EAAiB,CAAC,WAAcnC,IAQrD,OAJI10D,IACF00D,EAAc,CAAE,KAAQA,IAGnBA,CAjFP,CArBkB,CAuGpB,EAGMrkC,GAAa,SAAC+lC,EAASh5D,EAAMlJ,EAAQ4tB,GAA8F,IAAA+yC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAmC,EAAxFnE,EAAIh2D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUm5D,IAAYn5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAASo5D,EAAgBp5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAWm/D,EAAMr5D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EACnH+nB,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAE3CskD,EAAqBP,EAAQ7wD,QAAO,SAAA4S,GAAE,MAAsB,cAAlBA,EAAG4B,IAAI,OAAuB,IAAE5c,OAAS,EACnF8zD,EAAamF,EAChB7wD,QAAO,SAAA4S,GAAE,MAAsB,cAAlBA,EAAG4B,IAAI,OAAuB,IAC3CllB,KAAI,SAAAsjB,GAAE,OAAIA,EAAG4B,IAAI,cAAcA,IAAI,QAAQ,IAC3CrE,OAAO,GAAG5L,MACP8sD,EAAiBD,GAAsB1F,EAEzClkC,EAAW5N,EAAWpF,IAAI,YACxBqF,EAAkBD,EAAWpF,IAAI,mBACjCrQ,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAC1B4Z,EAASxU,EAAWpF,IAAI,SACxB0Z,EAAYtU,EAAWpF,IAAI,YAC3B2Z,EAAavU,EAAWpF,IAAI,aAC5B0M,EAAkBtH,EAAWpF,IAAI,mBAEvC,GAAa,MAATrQ,GAA6B,MAAZqjB,QAA+B31B,IAAXu8B,EAAzC,CAGA,IAAMjF,EAAWzH,GAAe/yB,EAAQwV,GAGpC8oB,EAAqBd,GAAkBx9B,EAAQ64B,EAAUrjB,GACzDyiB,EAA+B,QAArB0oC,EAAGriC,SAAkB,IAAAqiC,OAAA,EAAlBA,EAAoB1oC,WACjCgpC,EAAwBzjC,GAAkBx9B,EAAQi4B,EAAYziB,GAC5DuI,EAAcH,EAAiB0gB,GACrC,GAAuB,QAAnBsiC,EAACtiC,SAAkB,IAAAsiC,GAAlBA,EAAoBzQ,eAAuC,QAAtB0Q,EAACI,SAAqB,IAAAJ,GAArBA,EAAuB1Q,cAAlE,CAMA,IAaItyB,EAbA/xB,EAAMkzD,EACJv2B,IAAoC,QAAnBq4B,EAACxiC,SAAkB,IAAAwiC,GAAlBA,EAAoB3Q,eAAwC,QAAtB4Q,EAACE,SAAqB,IAAAF,IAArBA,EAAuB5Q,eAKtF,GAJ4C,QAAtB6Q,EAACC,SAAqB,IAAAD,GAArBA,EAAuB7Q,gBACdnwD,EAAOS,SAAS23B,wBAA0BqQ,IAChD38B,GAAO28B,EAEpB,KAAAziC,EACc,CAACiyB,EAAYY,GAArCA,EAAQ7yB,EAAA,GAAEiyB,EAAUjyB,EAAA,OAAAvC,EACyB,CAACw9D,EAAuB3iC,GAArEA,EAAkB76B,EAAA,GAAEw9D,EAAqBx9D,EAAA,GAC1CqI,GAAOA,CAET,CAGA,IAAIs3D,GAAU,EACd,GAAgB,QAAZ3uC,EAAoB,KAAA4uC,EACMhkC,GAAWzR,EAAM5tB,EAAQwV,EAAOktD,GAAeY,GAAA91D,EAAAA,EAAAA,GAAA61D,EAAA,GAA1ExlC,EAAcylC,EAAA,GAAEF,EAAOE,EAAA,EAC1B,MACEzlC,EAAiBqD,GAAgB1rB,EAAOxV,EAAQ4tB,EAAM80C,GAClDN,IACFgB,GAAU,EACVvlC,EAAiBukC,EAAiBvkC,IAGtC,GAAsB36B,MAAlB26B,EAAJ,CAIA,IAEIpB,EAFAiD,EAAY,GACZC,EAAa,GAEjB,GAAcz8B,MAAVu8B,EAAqB,CACvB,IAAMG,EAASH,EAAO9+B,KAAI,SAACk/B,EAAc1d,GACvC,IAAMpV,EAAWwyB,EAAYA,EAAU1Z,IAAI1D,GAAO,KAC5CyQ,EAAY4M,EAAaA,EAAW3Z,IAAI1D,GAAO,KAC/C2d,EAASC,GAAcF,EAAc9yB,EAAU/M,GAC/C2wB,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtDizB,EAAiBC,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,EAAU,CAAEmzB,WAAW,IACpGqjC,EAAwBnjC,GACtBxS,EAAM5tB,EAAQ8/B,EAAQ/yB,EAAU6lB,EAAWoN,EAAgBxF,EAAUkoC,EAAiB7pC,EAAUyF,EAAoB/L,GACrHixC,GAAAh2D,EAAAA,EAAAA,GAAA+1D,EAAA,GAFMpjC,EAAEqjC,EAAA,GAAEC,EAASD,EAAA,GAQpB,YALWtgE,IAAPi9B,IACFijC,EAAUA,GAAWK,EACrB/jC,EAAU5b,KAAK/W,GACf4yB,EAAW7b,KAAK8O,IAEXuN,CACT,IACME,EAAqBT,EAAOvuB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,EACtE,GAAIg5B,EAAOh5B,KAAOmX,GAAesiB,EAC/B,OACF5D,EAAiB1e,EAAc,EAAI6hB,EAAOrX,UAA4B,GAAfxK,EAAmB6hB,EAAOU,QAAU,IAC7F,CACA,IAAMojC,EAAWN,GAAWjB,EAGtB/jC,EAAuB,QAArB+kC,EAAG7kC,SAAkB,IAAA6kC,OAAA,EAAlBA,EAAoBhT,cACzBr8B,EAAO,CACX+J,EACAhF,OACW31B,IAAXm/D,GAA0C,MAAlB5lC,EAAyB4lC,EAAS5lC,EAC1D2mC,EACC1jC,EAAUz2B,OAAS,EAAIy2B,EAAYA,EAAU,GAC7CC,EAAW12B,OAAS,EAAI02B,EAAaA,EAAW,GACjD98B,EAAKy7B,EAAoBlhB,GACzB8N,EACAsP,GAEEmkC,EAAYvgC,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,IAOvC,OANI4vC,IACF/E,EAAY,CAAE,MAASA,IAErB7yD,IACF6yD,EAAY,CAAE,KAAQA,IAEjBA,CAlDW,CA5BlB,MAFE/wC,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBAVrB,CA2FpB,EAGMuH,GAAc,SAACxS,EAAM5tB,EAAQ6/B,EAAc9yB,EAAU6lB,EAAWoN,EAAgBxF,EAAUuiC,EAAYlkC,EAAU0H,EAAahO,GACjI,QAAqBrvB,IAAjB28B,EACF,MAAO,MAAC38B,GAAW,GAErB,IAAIkgB,EACAggD,GAAU,EAEd,GAAgB,SAAZr2D,EAAqB,KAAA42D,EACNC,GAAiBh2C,EAAM5tB,EAAQ6/B,EAAck9B,GAAW8G,GAAAr2D,EAAAA,EAAAA,GAAAm2D,EAAA,GAAxEvgD,EAAGygD,EAAA,GAAET,EAAOS,EAAA,EACf,MAAO,GAAgB,QAAZ92D,EAAoB,KAAA+2D,EACZzkC,GAAWzR,EAAM5tB,EAAQ6/B,EAAck9B,GAAWgH,GAAAv2D,EAAAA,EAAAA,GAAAs2D,EAAA,GAAlE1gD,EAAG2gD,EAAA,GAAEX,EAAOW,EAAA,EACf,MACE,GAAgD,mBAArC/jC,aAAc,EAAdA,EAAgBgwB,kBAAiC,CAC1D,IAAM5xB,EAAK4B,EAAegwB,iBACpBl8B,EAAO,CACX+L,EAAYr5B,GAAAA,GAAA,GAENg0B,EAAWiG,KAAKjG,EAAU,CAAC,gBAAiB,eAAiB,CAAC,GAAC,IACnEjI,gBAAAA,IAGF1vB,EAAKm9B,EAAgB7iB,IAEnB0b,IACF/E,EAAKhQ,KAAK+U,GACV/E,EAAKhQ,KAAKyc,IAEZnd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MACE1Q,EAAMyc,EAIV,MAAO,CAACzc,EAAKggD,EACf,EAGMQ,GAAmB,SAACh2C,EAAM5tB,EAAQiiD,EAAY8a,GAClD,IACI35C,EADGiR,EAAkBr0B,EAAOS,SAAzB4zB,eAIP,GAAI4tB,EAAY,CACd,IAAMtC,EAAuB5sB,GAAe/yB,EAAQiiD,IAAe,CAAC,EAC9DrhB,EAAapL,GAAcysB,EAAYjiD,GACvC4zC,EAAmBC,GAAmBoO,EAAYjiD,GAClD8zC,EAAiBF,EAAmBA,EAAiB/yC,KAAKwzB,GAAkB,KAIlFjR,EAAM,KADiB2d,EAFD/gC,EAAOS,SAASq9B,aACfoD,GAAgB+gB,EAAYjiD,EAAQ4tB,EAAMmvC,GACZn8B,EAAYkT,EAAgB6L,EAAsB3/C,GAAQ,EAEjH,CAEA,MAAO,CAACojB,GAbQ,EAclB,EAGMic,GAAa,SAACzR,EAAM5tB,EAAQ6/B,EAAck9B,GAAe,IAAAt7B,EAAAC,EAEzDte,EAEE6P,EAA0B,QAAnBwO,EAAG5B,EAAaha,WAAG,IAAA4b,OAAA,EAAhBA,EAAAlkB,KAAAsiB,EAAmB,QAC7B/L,EAAuB,QAAnB4N,EAAG7B,EAAaha,WAAG,IAAA6b,OAAA,EAAhBA,EAAAnkB,KAAAsiB,EAAmB,QAC1BzQ,EAAamE,GAAcvzB,EAAQizB,GACzC,IAAK7D,EAEH,OADAxB,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,8BACzB,MAAC/vB,GAAW,GAErB,IAAMqxC,EAAY/e,GAAcvC,EAASjzB,GACnCw0C,EAAcD,EAAUA,EAAUtrC,OAAO,GACzCwrC,EAAWrlB,EAAW40C,WAAaxvB,EACnCyvB,EAAoB70C,EAAW60C,kBAEjCtiC,EAAgB,CAAC,EACjBuiC,EAAU,EACVC,OAAUjhE,EACV0+B,EAAO,GACPC,EAAiB,GACrB,IAAK,IAAM5N,KAAU7E,EAAW0E,KAAM,KAAAgO,EACpCoiC,IACA,IAAMhwC,EAAY9E,EAAW0E,KAAKG,GAC5BuG,EAAWzH,GAAe/yB,EAAQk0B,GACjCvC,EAA4BuC,EAA5BvC,aAAcyC,EAAcF,EAAdE,WACf4N,EAAkBrQ,SAAAA,EAAchG,KAAO,OAAS,QAChDqI,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACrC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EACxCg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EAClC,SAAhBg/B,GAAkC,QAAZJ,EAAIG,SAAQ,IAAAH,GAARA,EAAUziB,OAEtC4iB,EAAWA,EAAS5iB,QAEtB,IAAM8iB,EAAqBnO,EAASA,EAAOnO,IAAI,wBAAqB3iB,EAC9D21B,EAAW,KACXlI,EAAS6H,GAAoBx4B,EAAQk0B,EAAW2E,EAAUqJ,GAC1DlC,EAAiBC,GAAqBjgC,EAAQk0B,EAAW2E,EAAUlI,EAAQuR,EAAa,CAAEhC,WAAW,IAC3GkkC,EAAuChkC,GACrCxS,EAAM5tB,EAAQiiC,EAAUC,EAAahO,EAAUppB,KAAMk1B,EAAgBxF,EAAUuiC,EAAY,KAAM,KAAM56B,GACxGkiC,GAAA72D,EAAAA,EAAAA,GAAA42D,EAAA,GAFM9hC,EAAe+hC,EAAA,GAGtB,GAHmCA,EAAA,GAGnBnhE,MAAZ++B,QAA6C/+B,IAApBo/B,EAG3B,MAFmB,QAAfJ,GACFtU,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8BqR,EAAM,cAAArR,OAAaqQ,IAC5D,MAAC/vB,GAAW,GAErB,IAAIq/B,OAAmB,EACvB,QAAwBr/B,IAApBo/B,IAAkClO,GAA8BlxB,MAAhByuB,EAA2B,CAC7E,IAAM6Q,EAAgBhK,GAAoBx4B,EAAQk0B,EAAW2E,EAAUmJ,GACjES,EAAwBxC,GAAqBjgC,EAAQk0B,EAAW2E,EAAU2J,EAAeR,EAAiB,CAAE9B,WAAW,IACvHokC,EACsBlkC,GAC1BxS,EAAM5tB,EAAQ2xB,EAAcqQ,EAAiB9N,EAAUppB,KAAM23B,EAAuBjI,EAAUuiC,EAAY,KAAM,KAAM56B,GACvHoiC,GAAA/2D,EAAAA,EAAAA,GAAA82D,EAAA,GACD,GAHE/hC,EAAmBgiC,EAAA,GAAGA,EAAA,QAGIrhE,IAAxBq/B,EAGF,MAFuB,QAAnBP,GACFpU,EAAKL,OAAOzJ,KAAK,qCAADlB,OAAsCqR,EAAM,cAAArR,OAAaqQ,IACpE,MAAC/vB,GAAW,EAEvB,CAEA,IAAMw/B,EAAoBJ,QAAAA,EAAmBC,EAC7C,QAA0Br/B,IAAtBw/B,EAAiC,CACnC,GAAId,EAAK34B,OAAQ,KACgBmb,EADhBC,EAAAC,GACYsd,GAAI,IAA/B,IAAAvd,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACEkd,EADqBvd,EAAAvkB,YACSqD,CAC/B,OAAAwhB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACDid,EAAO,EACT,CACAD,EAAc1N,GAAUyO,EACxByhC,EAAUzhC,CACZ,MACOtO,GACHyN,EAAe/d,KAAKmQ,GACtB2N,EAAK9d,KAAKmQ,EAEd,CACA,GAAI4N,EAAe54B,OAEjB,MAAO,MAAC/F,GAAW,GAGrB,GAA0C,mBAA/BksB,EAAW0iC,gBAAgC,CACpD,IAAM1zB,EAAKhP,EAAW0iC,gBAChBh+B,EAAO,CACX6N,GAEFve,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,KAAO,IAAmC,OAA/B1E,EAAW0iC,gBAEpB,OADAlkC,EAAKL,OAAOzJ,KAAK,WAADlB,OAAY6xB,EAAQ,sBAC7B,MAACvxC,GAAW,GAGjBkgB,EADE6gD,GACCr+C,EAAAA,EAAAA,GAAA,GAAM6uB,EAAW9S,GACF,GAAXuiC,QAA4BhhE,IAAZihE,GACpBv+C,EAAAA,EAAAA,GAAA,GAAM6uB,EAAW0vB,IAEjBv+C,EAAAA,EAAAA,GAAA,GAAM6uB,EAAWroC,OAAO+e,OAAOwW,GACtC,CAEA,MAAO,CAACve,GAnGQ,EAoGlB,E,olDCreO,IAAMohD,GAAY,SAAC7+C,EAAM3lB,GAC9B,OAAOykE,GAAW9+C,EAAM3lB,GAAQ,EAClC,EAEaykE,GAAa,SAAC9+C,EAAM3lB,GAAgC,IAAxB2tB,IAAY3kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAE/C4kB,EAAO,CACTL,OAAQ,IAGJO,EAAiBC,GAAa/tB,OAAQkD,GAAW,GACjDgC,EAAM+2B,GAAWtW,EAAMmI,EAAgBF,GAE7C,OAAID,EACK,CAACzoB,EAAK0oB,EAAKL,SAEdK,EAAKL,OAAOtkB,QACd8Z,QAAQE,KAAK,iCAAkC2K,EAAKL,QAC/CroB,EAEX,EAGM+2B,GAAa,SAAC/yB,EAAMlJ,EAAQ4tB,GAChC,GAAK1kB,EAAL,CACA,IAAM4B,EAAO5B,EAAK2c,IAAI,QAGtB,OAFiB3c,EAAK2c,IAAI,aAEZ,UAAT/a,GAA6B,eAATA,EAChBoxB,GAAYhzB,EAAMlJ,EAAQ4tB,GACf,SAAT9iB,EACFqxB,GAAWjzB,EAAMlJ,EAAQ4tB,QAD3B,CANoB,CAW7B,EAGMsO,GAAc,SAAChzB,EAAMlJ,EAAQ4tB,GACjC,IAAM9iB,EAAO5B,EAAK2c,IAAI,QAChBoF,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3ClZ,EAAWiE,EAAK2c,IAAI,cAAgB,IAAIkX,EAAAA,GAGxC1H,EADwB,eAATvqB,EACYmgB,EAAWpF,IAAI,SAAW,KAG/C,UAFUkN,GAAe/yB,EAAQq1B,IAAe,CAAC,GAClCQ,MAEzBjI,EAAKL,OAAOzJ,KAAK,oCAADlB,OAAqCyS,IAGvD,IAAMvpB,EAAMmf,EAAWpF,IAAI,OAErBT,EAAOngB,EACVtE,KAAI,SAAC+7B,GAAY,OAAKT,GAAWS,EAAc18B,EAAQ4tB,EAAK,IAC5Dvc,QAAO,SAACqrB,GAAY,YAA6B,IAAjBA,CAA4B,IAC/D,GAA8BtX,EAAKxe,KAAnC,CAGA,IAAIquB,EAAchK,EAAWpF,IAAI,eAKjC,OAJKoP,IACHA,EAAcc,GAAmB/1B,IACLA,EAAO6uB,aAAaoG,GAErBy8B,cAAcn0C,KAAKvd,EAAOoc,IAAKgJ,EAAM6P,EAAanpB,EAP7D,CAQpB,EAyBMqwB,GAAa,SAACjzB,EAAMlJ,EAAQ4tB,GAChC,IAAM3C,EAAa/hB,EAAK2c,IAAI,eAAiB,IAAI1H,EAAAA,GAC3C3I,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAC5BgT,EAAW5N,EAAWpF,IAAI,YACxBqF,EAAkBD,EAAWpF,IAAI,mBACjC0Z,EAAYtU,EAAWpF,IAAI,YAC3B2Z,EAAavU,EAAWpF,IAAI,aAC5B4Z,EAASxU,EAAWpF,IAAI,SACxB0M,EAAkBtH,EAAWpF,IAAI,mBACvC,GAAa,MAATrQ,GAA6B,MAAZqjB,EAArB,CAGA,IAAM8H,EAAkB5N,GAAe/yB,EAAQwV,IAAU,CAAC,EACtDqI,EAAQ2f,GAAkBx9B,EAAQ64B,EAAUrjB,IAAU,CAAC,EACvDyiB,EAAapa,EAAMoa,WACnB6G,EAAWtB,GAAkBx9B,EAAQi4B,EAAYziB,IAAU,CAAC,EAC1DuI,EAAcH,EAAiBC,GAGjCsgB,GAAQ,EACNY,EAAclhB,EAAM6mD,OAAS7mD,EAAMuyC,YACnCpxB,EAAiBF,EAAS4lC,OAAS5lC,EAASsxB,YAClD,GAAKrxB,GAAgBC,EAArB,CAIA,IAAKD,GAAeC,EAAgB,CAClCb,GAAQ,EAAK,IAAA97B,EACY,CAAC41B,EAAYY,GAArCA,EAAQx2B,EAAA,GAAE41B,EAAU51B,EAAA,OAAAyD,EACD,CAACg5B,EAAUjhB,GAA9BA,EAAK/X,EAAA,GAAEg5B,EAAQh5B,EAAA,EAClB,CAGA,IAEI22B,EAFAiD,EAAY,GACZC,EAAa,GAEjB,GAAcz8B,MAAVu8B,EAAqB,CACvB,IAAMG,EAASH,EAAO9+B,KAAI,SAACk/B,EAAc1d,GACvC,IAAMpV,EAAWwyB,EAAYA,EAAU1Z,IAAI1D,GAAO,KAC5CyQ,EAAY4M,EAAaA,EAAW3Z,IAAI1D,GAAO,KAC/C2d,EAASC,GAAcF,EAAc9yB,EAAU/M,GAC/C2wB,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtD2yC,EAAwBzf,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,EAAU,CAAEmzB,WAAW,IACvGC,EAAKC,GACPxS,EAAM5tB,EAAQ8/B,EAAQ/yB,EAAU6lB,EAAW8sB,EAAuB/e,EAAiB9H,EAAUhb,EAAO0U,GAMtG,YAJWrvB,IAAPi9B,IACFT,EAAU5b,KAAK/W,GACf4yB,EAAW7b,KAAK8O,IAEXuN,CACT,IAEA,GAD2BP,EAAOvuB,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IAAE1K,KAAO,GAC5Cg5B,EAAOh5B,KAAOmX,EACtC,OACF0e,EAAiC,GAAf1e,EAAmB6hB,EAAOU,QAAUV,CACxD,CAGA,IAAMxB,EAAKvgB,EAAMuyC,aAnFO,SAACv3B,EAAUyF,GACnC,IAEIF,EAFEsmC,EAAQpmC,EAAmBomC,OAAS7rC,EACpC9a,EAAcH,EAAiB0gB,GAkBrC,OAhBmB,GAAfvgB,EACFqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACpE,MAAO,GAAP5X,OAAUpN,EAAK,KAAAoN,OAAI8hD,EACrB,EACwB,GAAf3mD,EACTqgB,EAAK,SAAC5oB,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACnE,MAAO,GAAP5X,OAAUpN,EAAK,KAAAoN,OAAI8hD,EAAK,KAAA9hD,OAAI/iB,EAC9B,EACwB,GAAfke,IAETqgB,EAAK,SAAC5oB,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAAa,IAAAuY,EAAAC,EAC3EC,EAAU9nB,SAAa,QAAP4nB,EAAN5nB,EAAQmV,aAAK,IAAAyS,OAAA,EAAbA,EAAAx1B,KAAA4N,GACV+nB,EAAQ/nB,SAAW,QAAL6nB,EAAN7nB,EAAQtF,WAAG,IAAAmtB,OAAA,EAAXA,EAAAz1B,KAAA4N,EAAc,GAC5B,MAAO,GAAPvI,OAAUpN,EAAK,KAAAoN,OAAI8hD,EAAK,KAAA9hD,OAAIqwB,EAAO,SAAArwB,OAAQswB,EAC7C,GAEK9U,CACT,CA8DkCQ,CAAkB/F,EAAUhb,GAC5D,GAAKugB,EAAL,CAMA,IAAMP,EAA6B,QAAZpJ,EACnB4K,GAAWzR,EAAM5tB,EAAQwV,GACzBsoB,GAAYlQ,EAAM5tB,EAAQwV,GAC9B,GAAsBtS,MAAlB26B,EAAJ,CAIA,IAWIza,EAXE0Q,EAAO,CACX+J,EACAhF,EACA4D,EACCiD,EAAUz2B,OAAS,EAAIy2B,EAAYA,EAAU,GAC7CC,EAAW12B,OAAS,EAAI02B,EAAaA,EAAW,GACjD98B,EAAKgb,EAAOT,GACZ8N,EACAyV,GAQF,GAJAvd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,IACzBqK,IACF/a,EAAMpjB,EAAOS,SAASqwD,iBAAiBvzC,KAAKvd,EAAOoc,IAAKgH,SAE9ClgB,IAARkgB,EAIJ,OAAOA,EAHLwK,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,uCAAAjW,OAAsC8c,EAAU7+B,KAAK,OApB1E,CAPlB,MAFE+sB,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBApCvC,MAFEjL,EAAKL,OAAOzJ,KAAK,YAADlB,OAAaiW,EAAQ,qBAbrB,CAoFpB,EAGMuH,GAAc,SAACxS,EAAM5tB,EAAQ6/B,EAAc9yB,EAAU6lB,EAAWoN,EAAgBxF,EAAU3B,EAAU0H,EAAahO,GACrH,QAAqBrvB,IAAjB28B,EAAJ,CAEA,IAAIzc,EACJ,GAAgB,SAAZrW,EACFqW,EAAM0a,GAAYlQ,EAAM5tB,EAAQ6/B,QAC3B,GAAgB,QAAZ9yB,EACTqW,EAAMic,GAAWzR,EAAM5tB,EAAQ6/B,QAE/B,GAA8C,mBAAnCG,aAAc,EAAdA,EAAgB+vB,gBAA+B,CACxD,IAAM3xB,EAAK4B,EAAe+vB,eACpBj8B,EAAO,CACX+L,EAAYr5B,GAAAA,GAAA,GAEPi6B,KAAKjG,EAAU,CAAC,gBAAiB,gBAAc,IAClDjI,gBAAAA,IAGF1vB,EAAKm9B,EAAgB7iB,IAMvB,GAJI0b,IACF/E,EAAKhQ,KAAK+U,GACV/E,EAAKhQ,KAAKyc,IAEI,SAAZxzB,EAAqB,CACvB,IAAM2zB,EAAqB3N,GAAe/yB,EAAQ6/B,IAAiB,CAAC,EACpE/L,EAAKhQ,KAAK4c,EACZ,CACAtd,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,MAEI1Q,EADE3N,MAAMC,QAAQmqB,GACVA,EAAal/B,KAAI,SAAA2Q,GAAC,OAAIwoB,GAAUQ,OAAOhpB,EAAE,IAEzCwoB,GAAUQ,OAAOuF,GAI7B,OAAOzc,CAnCW,CAoCpB,EAEM0a,GAAc,SAAClQ,EAAM5tB,EAAQwV,GACjC,GAAKA,EAAL,CACA,IAAO6e,EAAkBr0B,EAAOS,SAAzB4zB,eACDsM,EAAkB5N,GAAe/yB,EAAQwV,IAAU,CAAC,EACpDorB,EAAapL,GAAchgB,EAAOxV,GAClC4zC,EAAmBC,GAAmBr+B,EAAOxV,GAC7C8zC,EAAiBF,EAAmBA,EAAiB/yC,KAAKwzB,GAAkB,KAIlF,OADuB0M,EAFD/gC,EAAOS,SAASq9B,aACpBoD,GAAgB1rB,EAAOxV,EAAQ4tB,EAAM,KAAM,CAACqmB,cAAc,IAC5BrT,EAAYkT,EAAgBnT,EAAiB3gC,EAR3E,CAUpB,EAGMq/B,GAAa,SAACzR,EAAM5tB,EAAQ6/B,GAAiB,IAAA4B,EAAAC,EAC3CzO,EAA0B,QAAnBwO,EAAG5B,EAAaha,WAAG,IAAA4b,OAAA,EAAhBA,EAAAlkB,KAAAsiB,EAAmB,QAC7B/L,EAAuB,QAAnB4N,EAAG7B,EAAaha,WAAG,IAAA6b,OAAA,EAAhBA,EAAAnkB,KAAAsiB,EAAmB,QAC1BzQ,EAAamE,GAAcvzB,EAAQizB,GACzC,GAAK7D,EAAL,CAIA,IAAMmlB,EAAY/e,GAAcvC,EAASjzB,GACnCw0C,EAAcD,EAAUA,EAAUtrC,OAAO,GACzCwrC,EAAWrlB,EAAWu1C,SAAWnwB,EAEnC7S,EAAgB,CAAC,EACjBC,EAAO,GACPC,EAAiB,GACrB,IAAK,IAAM5N,KAAU7E,EAAW0E,KAAM,KAAAgO,EAC9B5N,EAAY9E,EAAW0E,KAAKG,GAC5BuG,EAAWzH,GAAe/yB,EAAQk0B,GACjCvC,EAA4BuC,EAA5BvC,aAAcyC,EAAcF,EAAdE,WACf4N,EAAkBrQ,SAAAA,EAAchG,KAAO,OAAS,QAChDqI,EAASF,EAAOA,EAAKjO,IAAIoO,QAAU/wB,EACrC++B,EAAWjO,EAASA,EAAOnO,IAAI,cAAW3iB,EACxCg/B,EAAclO,EAASA,EAAOnO,IAAI,iBAAc3iB,EAClC,SAAhBg/B,GAAkC,QAAZJ,EAAIG,SAAQ,IAAAH,GAARA,EAAUziB,OAEtC4iB,EAAWA,EAAS5iB,QAEtB,IAAM8iB,EAAqBnO,EAASA,EAAOnO,IAAI,wBAAqB3iB,EAC9Do/B,EAAkBlC,GACtBxS,EAAM5tB,EAAQiiC,EAAUC,EAAahO,EAAUppB,KAAM0vB,EAAUtG,EAAW,KAAM,KAAMiO,GAExF,GAAgBj/B,MAAZ++B,QAA6C/+B,IAApBo/B,EAG3B,YAFmB,QAAfJ,GACFtU,EAAKL,OAAOzJ,KAAK,6BAADlB,OAA8BqR,EAAM,cAAArR,OAAaqQ,KAGrE,IAAIsP,OAAmB,EACvB,QAAwBr/B,IAApBo/B,IAAkClO,GAA8BlxB,MAAhByuB,QAItBzuB,KAH5Bq/B,EAAsBnC,GACpBxS,EAAM5tB,EAAQ2xB,EAAcqQ,EAAiB9N,EAAUppB,KAAM0vB,EAAUtG,EAAW,KAAM,KAAMiO,IAK9F,YAFuB,QAAnBH,GACFpU,EAAKL,OAAOzJ,KAAK,qCAADlB,OAAsCqR,EAAM,cAAArR,OAAaqQ,KAK/E,IAAMyP,EAAoBJ,QAAAA,EAAmBC,EAC7C,QAA0Br/B,IAAtBw/B,EAAiC,CACnC,GAAId,EAAK34B,OAAQ,KACkBmb,EADlBC,EAAAC,GACY2P,GAAM,IAAjC,IAAA5P,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACEkd,EADqBvd,EAAAvkB,YACSqD,CAC/B,OAAAwhB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACDid,EAAO,EACT,CACAD,EAAc1N,GAAUyO,CAC1B,MACOtO,GACHyN,EAAe/d,KAAKmQ,GACtB2N,EAAK9d,KAAKmQ,EAEd,CACA,IAAI4N,EAAe54B,OAAnB,CAKA,IAAIma,EACJ,GAAwC,mBAA7BgM,EAAWyiC,cAA8B,CAClD,IAAMzzB,EAAKhP,EAAWyiC,cAChB/9B,EAAO,CACX6N,GAEFve,EAAMgb,EAAG7gB,KAAI+H,MAAP8Y,EAAE,CAAMp+B,EAAOoc,KAAGwG,OAAKkR,GAC/B,KAAO,CACL,IAAM+gB,EAAUzoC,OAAOuR,QAAQgkB,GAC5BhhC,KAAI,SAAAqF,GAAA,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAM,OAAHvC,EAAA,GAAGA,EAAA,EAAO,IACjB5C,KAAK,MACRuiB,EAAM,GAAHR,OAAM6xB,EAAQ,KAAA7xB,OAAIiyB,EAAO,IAC9B,CACA,OAAOzxB,CAfP,CA3DA,MAFEwK,EAAKL,OAAOzJ,KAAK,QAADlB,OAASqQ,EAAO,6BA6EpC,E,ykBCjHA,SAAS2xC,GAAY3jC,EAAWphC,EAAOg5B,EAAU74B,EAAQ+M,EAAU83D,GACjE,GAAK5jC,GAAcpI,GAAqB31B,MAATrD,EAA/B,CAEA,IAAIwhB,EAAKwX,EACLrK,EAAWxuB,EAAOquB,UAAUhN,GAChC,GAAKmN,EAAL,CAEA,IAAM6hC,EAA2B7hC,EAA3B6hC,uBAGFvkD,GAAM,GACLukD,GAA0B7hC,EAASyJ,aACtCnsB,GAAM,EACNuV,EAAKmN,EAASyJ,WAEXo4B,GADH7hC,EAAWxuB,EAAOquB,UAAUhN,IACzBgvC,wBAIL,IAAM1/B,EAAS6H,GAAoBx4B,EAAQihC,EAAW5f,EAAItU,GACpD8kB,EAAe7xB,EAAOya,QAAQkW,GACpC,GAAKkB,EAAL,CAEA,IAIIizC,EAcAC,EAlBI9U,EAA6Bp+B,EAA7Bo+B,yBAWR,GALE6U,EADoC,mBAA3BzU,EACGA,EAAuB1/B,GAEvB0/B,EAiBd,OALE0U,EADsC,mBAA7B9U,EACIA,EAAyB6U,EAAWjlE,EAAOwhB,EAAI4f,EAAWjhC,GA7F3E,SAAyB8kE,EAAWjlE,EAAOg5B,EAAUoI,EAAWjhC,EAAQ6kE,GACtE,IAAMl1D,EAPR,SAAwBsxB,EAAWjhC,GAGjC,OAAOihC,CACT,CAGoB+jC,CAAe/jC,GACjC,OAAQ6jC,GACR,IAAK,SAEH,MAAO,CACLG,OAAQjlE,EAAOquB,UAAUwK,GAAUqsC,oBAAoBjkC,EAAWphC,IAGtE,IAAK,SACH,MAAO,CAAE2V,MAAOyrB,GAElB,IAAK,QACH,OAAArb,EAAAA,EAAAA,GAAA,GAAUjW,EAAY9P,EAAM,IAE9B,IAAK,OACH,OAAOglE,IAAWM,IAAWv/C,EAAAA,EAAAA,GAAA,GACtBqb,EAAY,CACfphC,MAAOA,EAAM,MACd+lB,EAAAA,EAAAA,GAAA,GAAOqb,EAAYphC,EAAM,IAI9B,IAAK,mBACH,OAAA+lB,EAAAA,EAAAA,GAAA,GAAUqb,EAxLd,SAAyBmkC,GACvB,GAAsB,MAAlBA,EACF,OAAO,KAGT,IAAMC,EAAoBD,EAAelmE,MAAM,KAAKyB,IAAIoR,QACxD,MAAO,CACLuzD,SAAU,CACRC,IAAKF,EAAkB,GACvBG,IAAKH,EAAkB,IAEzBI,aAAc,CACZF,IAAKF,EAAkB,GACvBG,IAAKH,EAAkB,IAG7B,CAwK0BK,CAAgB7lE,EAAM,KAE9C,IAAK,QACH,OAAA+lB,EAAAA,EAAAA,GAAA,GAAUqb,EAhKd,SAAgCphC,EAAOg5B,GAErC,GAAIh5B,EAAMoJ,OAAS,EACjB,MAAO,CACL08D,IAAK,GAAG/iD,OAAO/iB,EAAM,IACrB+lE,IAAK,GAAGhjD,OAAO/iB,EAAM,KAIzB,IAAMgmE,EAAWhmE,EAAM,GAGvB,OAAQg5B,GACR,IAAK,UACL,IAAK,cACL,IAAK,QACL,IAAK,gBACL,IAAK,YACH,MAAO,CACL8sC,IAAK,GAAG/iD,OAAOijD,EAAU,QACzBD,IAAK,GAAGhjD,OAAOijD,EAAU,UAG7B,IAAK,gBACH,MAAO,CACLD,IAAK,GAAGhjD,OAAOijD,IAGnB,IAAK,mBACH,MAAO,CACLF,IAAK,GAAG/iD,OAAOijD,IAGnB,IAAK,OACH,MAAO,CACLC,GAAI,GAAGljD,OAAOijD,IAGlB,IAAK,UACH,MAAO,CACLE,GAAI,GAAGnjD,OAAOijD,IAGlB,QACE,OAEJ,CAkH0BG,CAAuBnmE,EAAOg5B,IAEtD,IAAK,WACH,OAAAjT,EAAAA,EAAAA,GAAA,GAAUqb,EA5Gd,SAAmCphC,GACjC,MAAO,CACLA,MAAO,IAAMA,EAAQ,IAEzB,CAwG0BomE,CAA0BpmE,EAAM,KAExD,IAAK,SACH,OAAA+lB,EAAAA,EAAAA,GAAA,GAAUqb,EA7Cd,SAA+BphC,GAC7B,MAAO,CACLA,MAAOA,EAEX,CAyC0BqmE,CAAsBrmE,EAAM,KAEpD,QACE,OAEJ,CAyDiBsmE,CAAgBrB,EAAWjlE,EAAOwhB,EAAI4f,EAAWjhC,EAAQ6kE,GAGpE/4D,EACK,CACLs6D,KAAM,CACJC,UAAQzgD,EAAAA,EAAAA,GAAA,GACLk/C,EAASt+D,GAAA,GAAOu+D,OAKvBn/C,EAAAA,EAAAA,GAAA,GACGk/C,EAASt+D,GAAA,GAAOu+D,GApCH,CAhBA,CAJA,CA2DpB,CA4BO,IAAMI,GAAc,cACdmB,GAAc,cAEpB,SAASC,GAAoB5gD,EAAM3lB,GAA8B,IAAtB6kE,EAAM77D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAGs9D,GACnDx4C,EAAiBC,GAAa/tB,OAAQkD,GAAW,GAEvD,GAAKyiB,EAAL,CACA,IAAM7a,EAAO6a,EAAKE,IAAI,QAChBoF,EAAatF,EAAKE,IAAI,eAAiB,IAAI1H,IAEjD,GAAa,SAATrT,GAAmBmgB,EAAWpF,IAAI,SAAU,KAAAm2B,EAAAwqB,EAAAC,EAExC5tC,EAAW5N,EAAWpF,IAAI,YAC1BrQ,EAAQyV,EAAWpF,IAAI,SACvB4O,EAAWxJ,EAAWpF,IAAI,YAC1BhmB,EAA+B,QAA1Bm8C,EAAG/wB,EAAWpF,IAAI,gBAAQ,IAAAm2B,OAAA,EAAvBA,EAAyB38B,OAEjCtS,GADwC,QAA9By5D,EAAGv7C,EAAWpF,IAAI,oBAAY,IAAA2gD,GAA3BA,EAA6B3gD,IAAI,GACT,QAA7B4gD,EAAGx7C,EAAWpF,IAAI,mBAAW,IAAA4gD,OAAA,EAA1BA,EAA4B5gD,IAAI,IAEjD,GAAiB,SAAb9Y,GAAmC,QAAZ0nB,EAEzB,OAGF,OAAI50B,GAAS4V,MAAMC,QAAQ7V,EAAM,IAExBA,EAAM,GAAGc,KAAI,SAACmO,GAAG,OACtB81D,GAAYpvD,EAAO,CAAC1G,GAAM+pB,EAAU/K,EAAgB/gB,EAAU83D,EAAO,IAGhED,GAAYpvD,EAAO3V,EAAOg5B,EAAU/K,EAAgB/gB,EAAU83D,EAEzE,CAEA,GAAa,UAAT/5D,GAA6B,eAATA,EAAuB,CAC7C,IAAMgB,EAAMmf,EAAWpF,IAAI,OACvBoP,EAAchK,EAAWpF,IAAI,eAIjC,OAHKoP,IACHA,EAAcc,GAAmBjI,IAtDvC,SAAsB7oB,EAAUgwB,EAAanpB,EAAK46D,EAAc1mE,EAAQ6kE,GACtE,GAAK5/D,GAAaA,EAAS2B,KAA3B,CAEA,IAAM+/D,EAAgB1hE,EAASqjB,WAAWC,UACpCq+C,EA9LR,SAA6BC,EAAY/6D,GAEvC,OAAQ+6D,GACR,IAAK,MACH,OAAO/6D,EAAM,WAAa,OAG5B,IAAK,KACH,OAAOA,EAAM,aAAe,SAG9B,IAAK,MACH,OAAOA,EAAM,OAAS,WAGxB,QACE,OAEJ,CA4KqBg7D,CAAoB7xC,EAAanpB,GAC9Ci7D,EAASJ,EAAchmE,KAAI,SAACmc,GAAC,OAAK4pD,EAAa5pD,EAAG9c,EAAQ6kE,EAAO,IAAExzD,QAAO,SAAAC,GAAC,YAAUpO,IAANoO,CAAe,IACpG,GAAKy1D,EAAO99D,OAAZ,CAEA,IAAM+9D,EAAaD,EAAOv9D,KAAKC,KAC/B,MAAO,CACL28D,MAAIxgD,EAAAA,EAAAA,GAAA,GACDghD,EAAaI,GAJA,CALA,CAYpB,CA0CWC,CADUthD,EAAKE,IAAI,aACIoP,EAAanpB,EAAKy6D,GAAqBz4C,EAAgB+2C,EACvF,CAnC2B,CAoC7B,C,i0BC9VA,IASaqC,GAAqB,SAACC,GAAG,IAAEC,EAASp+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,EAAG8X,EAAK9X,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,IAAI,sBAAA3G,GAAAglE,EAAAA,GAAAA,GAAA3L,KAAAA,MAAK,SAAAS,EAAOt3C,EAAQyiD,EAAQ15C,GAAI,IAAA25C,EAAAj/D,EAAAk/D,EAAAr8C,EAAAs8C,EAAAC,EAAA,OAAAhM,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAApxC,KAAAoxC,EAAAt6C,MAAA,OAYjC,GAX1DgmD,EAA6BrkE,OAAlB0qB,aAAI,EAAJA,EAAM25C,UAAwB35C,EAAK25C,SAAWH,EACzD9+D,EAAWqb,GAAkBwjD,GAChC91D,QAAO,SAAAvL,GAAA,IAAE1B,EAAK0B,EAAL1B,MAAOvE,EAAKiG,EAALjG,MAAK,OAAgB,MAAVglB,IAC4B,GAAtDzgB,EAAMkrD,cAAc1+C,QAAQiU,EAAOyqC,iBAC2B,GAA3D,GAAA1sC,OAAG/iB,GAAQyvD,cAAc1+C,QAAQiU,EAAOyqC,cAC5C,IACWiY,GAAWvqD,KAAK2qD,KAAKr/D,EAASW,OAASs+D,GAC/CC,EAAgBF,GAAU,EACZC,GAAWvqD,KAAK2qD,KAAKH,EAAgBD,GACnDp8C,EAASo8C,EAAWj/D,EAASkZ,MAAMgmD,EAAeA,EAAgBD,GAAYj/D,EAC9Em/D,EAAYF,EAAWC,EAAgBr8C,EAAOliB,OAAS,KACvDy+D,IAAUH,GAAYE,EAAYn/D,EAASW,QAC7C6X,EAAO,CAAF+6C,EAAAt6C,KAAA,gBAAAs6C,EAAAt6C,KAAA,GAIDV,GAAMC,GAAM,eAAA+6C,EAAA+L,OAAA,SAEb,CACLz8C,OAAAA,EACAu8C,QAAAA,IACD,yBAAA7L,EAAAG,OAAA,GAAAG,EAAA,KACF,gBAAA0L,EAAAC,EAAAC,GAAA,OAAA1lE,EAAAijB,MAAA,KAAAtc,UAAA,EAvBkE,EAuBlE,EAEYg/D,GAAkB,SAAC78C,EAAQjX,GAAsD,IAA3C+zD,EAAOj/D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAAUk/D,EAAal/D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC/E,IAAKkL,EACH,OAAOiX,EACT,IAAMg9C,EAAMh9C,GAAU,GAChBi9C,EAAcl0D,EACjB7C,QAAO,SAAAC,GAAC,OAAiDpO,MAA7CilE,EAAIxmD,MAAK,SAAA0mD,GAAE,MAAI,GAAGA,EAAGxoE,OAAS,GAAGyR,EAAEzR,KAAK,GAAc,IAClEc,KAAI,SAAA2Q,GAAC,OAAK42D,EAAa1hE,GAAAA,GAAA,GAAO8K,GAAC,IAAEhK,UAAU,IAAQgK,CAAC,IAEvD,OADe22D,EAAU,GAAHrlD,QAAAhP,EAAAA,EAAAA,GAAOw0D,IAAWx0D,EAAAA,EAAAA,GAAKu0D,IAAG,GAAAvlD,QAAAhP,EAAAA,EAAAA,GAAQu0D,IAAGv0D,EAAAA,EAAAA,GAAKw0D,GAElE,EAEaE,GAAoB,SAACx5D,EAAK5E,EAAYzK,GAAsB,IAAA8oE,EACjEj3D,EAAW,MAAPxC,GAAsB,IAAPA,OAAY5L,EAAuB,QAAdqlE,EAAIz5D,aAAG,EAAHA,EAAKjP,aAAK,IAAA0oE,EAAAA,EAAIz5D,EAC1D5F,EAAO4b,GAAaxT,EAAGpH,GACvBs+D,EAAa/oE,IAAsByJ,EAAOsa,GAAoBlS,QAAKpO,EACnEulE,EAAYv/D,GAAQs/D,EAE1B,MAAO,CAACl3D,EADIm3D,EAAY,CAACA,QAAavlE,EAExC,EAEawlE,GAAsB,SAACr9C,EAAMnhB,EAAYzK,GACpD,IAAMkpE,EAAwBt9C,EAAK1qB,KAAI,SAACmO,EAAKwR,GAAO,IAAAsoD,EAC5Ct3D,EAAW,MAAPxC,GAAsB,IAAPA,OAAY5L,EAAuB,QAAd0lE,EAAI95D,aAAG,EAAHA,EAAKjP,aAAK,IAAA+oE,EAAAA,EAAI95D,EAC1D5F,EAAO4b,GAAaxT,EAAGpH,GACvBs+D,EAAa/oE,IAAsByJ,EAAOsa,GAAoBlS,QAAKpO,EAEzE,OADkBgG,GAAQs/D,CAE5B,IAAGn3D,QAAO,SAAAw4B,GAAC,OAAS3mC,MAAL2mC,CAAc,IACzBg/B,EAAoBF,EACrBhoE,KAAI,SAAAkpC,GAAC,IAAAi/B,EAAA,OAAa,QAAbA,EAAKj/B,aAAC,EAADA,EAAGhqC,aAAK,IAAAipE,EAAAA,EAAIj/B,CAAC,IAG1B,OAFKg/B,EAAkB5/D,SACrB4/D,OAAoB3lE,GACf,CAAC2lE,EAAmBF,EAC7B,EAEaI,GAAoB,SAACtlD,GAChC,GAAU,MAANA,EAAY,OAAO,KACvB,IACErf,EAEEqf,EAFFrf,MAAOvE,EAEL4jB,EAFK5jB,MAAO2F,EAEZie,EAFYje,SAAUG,EAEtB8d,EAFsB9d,WAAYiD,EAElC6a,EAFkC7a,WAAYvB,EAE9Coc,EAF8Cpc,YAAapC,EAE3Dwe,EAF2Dxe,SAAUrB,EAErE6f,EAFqE7f,MAAO8f,EAE5ED,EAF4EC,SAAUpc,EAEtFmc,EAFsFnc,SACrF9E,GAAIC,EAAAA,GAAAA,GACLghB,EAAE/gB,IACFlC,EAAS,CACXX,MAAAA,EACAuE,MAAOA,GAASR,GAASqB,GAkB3B,OAhBIO,IACFhF,EAAOgF,SAAWA,GAChBke,IACFljB,EAAOkjB,SAAWA,GAChBpc,IACF9G,EAAO8G,SAAWA,IAEhB3B,GAAciD,KAChBpI,EAAOmF,WAAaA,GAAciD,GAEhCvB,IACF7G,EAAO6G,YAAcA,GACjBb,GAAAA,GAAA,GACDhG,GACAgC,EAGP,EAEawmE,GAA0B,SAAC9+D,GACtC,IAEyBka,EAFrBlQ,EAAY,GACZ+0D,EAAc,GAAG5kD,E,65BAAAC,CACNpa,GAAU,QAAAs7B,EAAA,WAAE,IAAlB/hB,EAAEW,EAAAvkB,MACHgf,EAtGY,SAACwE,EAAK+a,GAC1B,GAAI/a,EAAI6lD,cACN,OAAO7lD,EAAI6lD,cAAc9qC,GAEzB,IAAMjc,GAAMvO,EAAAA,EAAAA,GAAIyP,GAAK3B,UAAUynD,UAAU/qC,GACzC,OAAe,GAARjc,GAAa,EAAKkB,EAAIpa,OAAO,EAAIkZ,CAE5C,CA+Fc+mD,CAAch1D,GAAW,SAAAk1D,GAAO,IAAAC,EAAAC,EACxC,OAAsB,QAAfD,EAACD,EAAIzjE,kBAAU,IAAA0jE,EAAAA,EAAI,MAAqB,QAAnBC,EAAM7lD,EAAG9d,kBAAU,IAAA2jE,EAAAA,EAAI,GACrD,IACqBpmE,MAAjBugB,EAAG9d,YAA4BsjE,EAAYxhE,SAASgc,EAAG9d,cACzDsjE,EAAYnlD,KAAKL,EAAG9d,YACO,IAAvBsjE,EAAYhgE,SAEdiL,EAAYA,EAAUvT,KAAI,SAAA4oE,GAAE,OAAA/iE,GAAAA,GAAA,GAAS+iE,GAAE,IAAE5jE,WAAY,IAAE,MAGtCzC,MAAjBugB,EAAG9d,YAA2BsjE,EAAYhgE,SAE5Cwa,EAAEjd,GAAAA,GAAA,GAAOid,GAAE,IAAE9d,WAAY,OAEjB,GAANkZ,EACF3K,EAAUkO,OAAOvD,EAAE,EAAG,EAAG4E,GAEzBvP,EAAU4P,KAAKL,EAEnB,EApBA,IAAAY,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAA+gB,GAoBC,OAAA9gB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACD,OAAOzQ,CACT,EC3HMs1D,GAAM,CACV5lE,MAAO,MACPyvB,WAAY,WACZ5E,UAAW,MACXg7C,mBAAoB,CAClBxa,IAAK,CAAC,GAGRnsB,SAAU,mCACV+uB,cAAe,iBAAM,OAAO,EAC5BC,gBAAiB,kBAAM,IAAIp1C,IAAM,EACjC2iB,WAAY,iBAAM,KAAK,GAGnBqqC,GAAoB,CACxB9lE,MAAO,WACPyvB,WAAY,WACZs+B,eAAgB,CAAC,GAAI,IACrBC,WAAY,CAAC,GAAI,GAAI,IACrB/uB,eAAgB,SAAAxgC,GAA0B,IAAxBsZ,EAAItZ,EAAJsZ,KAAM0F,EAAEhf,EAAFgf,GAAIvS,EAAGzM,EAAHyM,IAAKqgD,EAAG9sD,EAAH8sD,IAEzBwa,EAAStoD,GADG8tC,EAAIl1B,OAAO,GAAGq1B,cAAgBH,EAAI3tC,MAAM,GAAK,KAE/D,MAAO,GAAPoB,OAAUjH,EAAI,KAAAiH,OAAI+mD,EAAM,KAAA/mD,OAAI9T,EAAG,IACjC,EACA+8B,WAAY,SAACnF,GAAS,IAAAkjC,EACVvoD,EAAIvS,EAAKqgD,EACb0a,EAA0B,QAAlBD,EAAGljC,EAAKlC,kBAAU,IAAAolC,OAAA,EAAfA,EAAiBx5C,MAAM,wBACxC,GAAIy5C,IACF1a,EAAM0a,EAAS,GAAG96C,cAClB1N,EAAKwoD,EAAS,GACV,CAAC,QAAS,QAAQpiE,SAAS4Z,IACzB,CAAC,MAAO,OAAQ,QAAS,QAAQ5Z,SAAS0nD,IAK5C,OAJA9tC,EAAK,CAACvW,KAAM,SAAUgE,IAAKuS,GAC3B8tC,EAAM,CAACrkD,KAAM,SAAUgE,IAAKqgD,GAC5BrgD,EAAM43B,EAAK5S,KAAK,GAET,CAACnY,KADD+qB,EAAKjpB,IACE4D,GAAAA,EAAIvS,IAAAA,EAAKqgD,IAAAA,EAI/B,EACA1gC,UAAW,SAAA3oB,GAAA,IAAE6V,EAAI7V,EAAJ6V,KAAM0F,EAAEvb,EAAFub,GAAY,MAAO,CACpC,SAAY,CACV1F,EAFsB7V,EAAHgJ,KAGN,SAANuS,GAAiB,EAAI,GAHDvb,EAAHqpD,KAM3B,EACD18B,gBAAiB,SAACnhB,GAChB,IAAMqK,EAAOrK,EAAY,SAAE,GACrBxC,EAAMkO,KAAK8sD,IAAIx4D,EAAY,SAAE,IAGnC,MAAO,CAACqK,EAFGrK,EAAY,SAAE,IAAM,EAAI,OAAS,QAE1BxC,EADNwC,EAAY,SAAE,GAE5B,EACAm4D,mBAAoB,CAClBva,SAAU,CAAC,GAIb2C,cAAe,SAAA7rD,GAAA,IAAE2V,EAAI3V,EAAJ2V,KAAM0F,EAAErb,EAAFqb,GAAIvS,EAAG9I,EAAH8I,IAAKqgD,EAAGnpD,EAAHmpD,IAAG,kBAAAvsC,OAAkBjH,EAAI,eAAAiH,OAAc9jB,SAASgQ,IAAc,SAANuS,GAAiB,EAAI,GAAG,KAAAuB,OAAIusC,EAAItyC,QAAQ,SAAU,IAAG,MAC7Ii1C,gBAAiB,KACjBzyB,WAAY,SAAA57B,GAAA,IAAEkY,EAAIlY,EAAJkY,KAAM0F,EAAE5d,EAAF4d,GAAIvS,EAAGrL,EAAHqL,IAAKqgD,EAAG1rD,EAAH0rD,IAAG,OAAQrgD,EAAa,GAAH8T,OAAMjH,EAAI,KAAAiH,OAAU,SAANvB,EAAgB,IAAM,IAAG,KAAAuB,OAAI9T,EAAG,KAAA8T,OAAIusC,GAAtDxzC,CAA2D,EACzGmY,KAAM,CACJnY,KAAM,CACJ/X,MAAO,OACPkH,KAAM,WACN6mB,aAAc,CAAChG,KAAM,MAAOmI,KAAM,IAClC1mB,aAAc,CAAC,OAAQ,QAAS,SAChCi1B,qBAAqB,GAEvBhhB,GAAI,CACFzd,MAAO,KACPkH,KAAM,SACN6mB,aAAc,OACdvkB,aAAc,CAAC,SACfujD,gBAAiB,CACf7wD,YAAa,CACXsZ,YAAY,IAGhBoZ,cAAe,CACbtoB,WAAY,CACV6/D,KAAM,IACNC,MAAO,MAGX3nC,qBAAqB,GAEvBvzB,IAAK,CACHlL,MAAO,QACPkH,KAAM,SACN0nB,cAAe,CACb9gB,IAAK,GAEPigB,aAAc,EACdvkB,aAAc,CAAC,SACfi1B,qBAAqB,GAEvB8sB,IAAK,CACHvrD,MAAO,YACPkH,KAAM,SACN6mB,aAAc,MACdvkB,aAAc,CAAC,SACfujD,gBAAiB,CACf7wD,YAAa,CACXsZ,YAAY,IAGhBoZ,cAAe,CACbtoB,WAAY,CACV+/D,IAAK,MACLC,KAAM,OACNC,MAAO,QACPC,KAAM,SAGV/nC,qBAAqB,KAKrBgoC,GAAQ,CACZzmE,MAAO,YACPogE,UAAW,WACXv1C,UAAW,cACXqU,SAAU,uBAEV2mC,mBAAoB,CAClB16C,YAAa,CAAC,GAEhBsE,WAAY,OACZS,KAAM,CACJ8jB,IAAK,CACHh0C,MAAO,SACPkH,KAAM,OACNsC,aAAc,CAAC,QAAS,QAAS,WAKjCk9D,GAAQ,CACZ1mE,MAAO,YACPogE,UAAW,WACXv1C,UAAW,cACXqU,SAAU,uBAEV2mC,mBAAoB,CAClBna,YAAa,CAAC,GAEhBj8B,WAAY,OACZS,KAAM,CACJ8jB,IAAK,CACHh0C,MAAO,SACPkH,KAAM,OACNsC,aAAc,CAAC,QAAS,QAAS,WAKjCm9D,GAAoB,CACxB3mE,MAAO,oBACPyvB,WAAY,SACZgM,WAAY,SAAAr6B,EAAoBjB,GAAC,IAAnBymE,EAAIxlE,EAAJwlE,KAAMC,EAAIzlE,EAAJylE,KAAM37D,EAAG9J,EAAH8J,IAAG,UAAA8T,OAAa4nD,EAAI,OAAA5nD,OAAM9T,EAAG,OAAA8T,OAAM6nD,EAAI,MACjE5Y,cAAe,SAAAj4C,GAAA,IAAE4wD,EAAI5wD,EAAJ4wD,KAAMC,EAAI7wD,EAAJ6wD,KAAM37D,EAAG8K,EAAH9K,IAAG,UAAA8T,OAAU4nD,EAAI,OAAA5nD,OAAM9T,EAAG,OAAA8T,OAAM6nD,EAAI,MACjE5nC,eAAgB,SAAAhpB,GAAA,IAAE2wD,EAAI3wD,EAAJ2wD,KAAMC,EAAI5wD,EAAJ4wD,KAAM37D,EAAG+K,EAAH/K,IAAG,UAAA8T,OAAU4nD,EAAI,OAAA5nD,OAAM9T,EAAG,OAAA8T,OAAM6nD,EAAI,MAClE5+B,WAAY,SAACnF,GACX,IAAe+jC,EAAMlsD,EACrB,GAAkB,YAAdmoB,EAAK57B,KAAoB,KAAAq+B,GAAA37B,EAAAA,EAAAA,GACfk5B,EAAKzhC,SAAQ,GACzB,GADCsZ,EAAC4qB,EAAA,GAAEshC,EAAIthC,EAAA,GACO,gBAAX5qB,EAAEzT,KAAwB,KAAA4/D,GAAAl9D,EAAAA,EAAAA,GACd+Q,EAAEtZ,SAAQ,GACxB,MAAO,CAACulE,KADHE,EAAA,GACS57D,IADJ47D,EAAA,GACSD,KAAAA,EACrB,CACF,CACF,EACA3Y,gBAAiB,SAAA/3C,GAAA,IAAEywD,EAAIzwD,EAAJywD,KAAMC,EAAI1wD,EAAJ0wD,KAAS,MAAO,CAAC,KAAQ,CAAC,CAAC,UAAa,CAACD,EAAhCzwD,EAAHjL,MAAgD27D,GAAM,EACrFh8C,UAAW,SAAAxU,GAAA,IAAEuwD,EAAIvwD,EAAJuwD,KAAMC,EAAIxwD,EAAJwwD,KAAS,MAAO,CAAE,IAAK,CAAE,CAAC,IAAK,CAACD,EAAvBvwD,EAAHnL,MAAuC27D,GAAQ,EACxEh4C,gBAAiB,SAACnhB,GAIhB,MAAO,CAHMA,EAAE,KAAK,GAAG,KAAK,GAChBA,EAAE,KAAK,GAAG,KAAK,GACdA,EAAE,KAAK,GAEtB,EACAqgD,eAAgB,CAAC,GAAI,IACrBC,WAAY,CAAC,MAAO,OACpB99B,KAAM,CACJ02C,KAAM,CACJ5mE,MAAO,OACPkH,KAAM,SACN6mB,aAAc,EACdvkB,aAAc,CAAC,UAEjB0B,IAAK,CACHlL,MAAO,QACPkH,KAAM,SACNsC,aAAc,CAAC,QAAS,UAE1Bq9D,KAAM,CACJ7mE,MAAO,OACPkH,KAAM,SACN6mB,aAAc,EACdvkB,aAAc,CAAC,YC3IrB,SAjBY,CACVu9D,MAAO,CACL7wC,UAAAA,GACAn7B,OAAAA,KACAisE,eA7C0B,SAACC,EAAKC,EAAIh/D,EAAM0J,EAAOu1D,EAAKlrE,EAAOujE,EAASr2D,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACrH,IAAMwwC,EAAyB,iBAATx1D,GAAsBA,EAAM6W,WAAW,KAAmB7W,EAAZ,IAAIA,EAClEy1D,EAAKH,EAAGjrE,EAAO26B,GACrB,QAAWt3B,IAAP+nE,EAEJ,OAAIn/D,EACGs3D,GAAayH,GAAc,OAAPA,EAEjBzH,EAEJ,CAAE,MAAMx9C,EAAAA,EAAAA,GAAA,GAAKilD,EAAM,CAACG,EAAQC,MAFjBrlD,EAAAA,EAAAA,GAAA,GACRpQ,EAAQ,CAAE,MAAMoQ,EAAAA,EAAAA,GAAA,GAAKilD,EAAMI,MAFhCrlD,EAAAA,EAAAA,GAAA,GAAUpQ,EAAQ,CAAE,IAAOy1D,IAKxB7H,GAAayH,GAAc,OAAPA,EAEjBzH,GACkBx9C,EAAAA,EAAAA,GAAA,GACnBilD,EAAM,CAACG,EAAQC,KAFPrlD,EAAAA,EAAAA,GAAA,GACRpQ,GAAKoQ,EAAAA,EAAAA,GAAA,GAAMilD,EAAMI,KAFtBrlD,EAAAA,EAAAA,GAAA,GAAUpQ,EAAQy1D,EAKxB,EA4BIC,eA1B0B,SAACC,EAAMr/D,EAAM0J,EAAOu1D,EAAK5/C,EAAQi4C,EAAS1jC,EAAWC,EAAY9hB,EAAOqN,EAAiBsP,GACrH,IAAMwwC,EAAyB,iBAATx1D,GAAsBA,EAAM6W,WAAW,KAAmB7W,EAAZ,IAAIA,EACxE,OAAI1J,EACMs3D,EAEJ,CAAC,KACO,CAAC,KAAQ,EAAAx9C,EAAAA,EAAAA,GAAA,GACJulD,EAAK,GAAK,CAAEH,EAAQ7/C,EAAO,MAAIvF,EAAAA,EAAAA,GAAA,GAC/BulD,EAAK,GAAK,CAAEH,EAAQ7/C,EAAO,SAL7BvF,EAAAA,EAAAA,GAAA,GACRpQ,EAAQ,CAAE,MAAMoQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKulD,EAAK,GAAKhgD,EAAO,IAAKggD,EAAK,GAAKhgD,EAAO,MAQ3Di4C,EAEJ,CAAC,KAAQ,EAAAx9C,EAAAA,EAAAA,GAAA,GACNulD,EAAK,GAAK,CAAEH,EAAQ7/C,EAAO,MAAIvF,EAAAA,EAAAA,GAAA,GAC/BulD,EAAK,GAAK,CAAEH,EAAQ7/C,EAAO,QAJnBvF,EAAAA,EAAAA,GAAA,GACRpQ,GAAKoQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMulD,EAAK,GAAKhgD,EAAO,IAAKggD,EAAK,GAAKhgD,EAAO,IAM7D,EAQIsP,gBAAAA,GACA/a,aAAAA,EACA6a,cAAAA,GACAoB,oBAAAA,GACA3X,qBAAAA,GACA2W,WAAAA,GACAD,YAAAA,GACAkB,iBAAAA,K,orBCxDJ,IAwEMvN,GAAY,CAChB+8C,MAAO,CACLxnE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,IACPnmC,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChBxN,WAAY,YACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAO6/B,EAAWC,EAAY9hB,EAAOqN,EAAiB2mB,EAAcrX,GACxF,IAAM6wC,EAAQx5B,EAAe,IAAMh0B,EAAMja,MACzC,MAAkB,WAAd+7B,GAA2BkS,EACb,MAAThyC,EAAgB,OAAH+iB,OAAUpN,GAAK,GAAAoN,OAAQpN,GAEpC,GAAPoN,OAAUpN,EAAK,KAAAoN,OAAIyoD,EAAK,KAAAzoD,OAAI/iB,EAChC,EACAswD,cAAe,WAAkB,QAAAmb,EAAAtmD,EAAAhc,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAuP,GAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAAJ+T,EAAI/T,GAAA/W,UAAA+W,GAAI,OAAOurD,EAAAhX,KAAKqW,OAAMC,eAActlD,MAAAgmD,EAAA,CAAC,MAAO,SAAAh6D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGrF,UAAW,KACX4hC,uBAAwB,QAE1Bkb,UAAW,CACTC,SAAS,EACT5nE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,KACPnmC,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChBxN,WAAY,QACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAO6/B,EAAWC,EAAY9hB,EAAOqN,EAAiB2mB,EAAcrX,GACxF,MAAkB,WAAdmF,GAA2BkS,EACb,MAAThyC,EAAgB,GAAH+iB,OAAMpN,GAAK,OAAAoN,OAAYpN,GAEpC,GAAPoN,OAAUpN,EAAK,KAAAoN,OAAI/E,EAAMja,MAAK,KAAAgf,OAAI/iB,EACtC,EACAswD,cAAe,WAAkB,QAAAsb,EAAAjmD,EAAAxc,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA+P,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJqO,EAAIrO,GAAAzc,UAAAyc,GAAI,OAAOgmD,EAAAnX,KAAKqW,OAAMC,eAActlD,MAAAmmD,EAAA,CAAC,MAAO,SAAAn6D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGrF,UAAW,MAEbi9C,KAAM,CACJ9nE,MAAO,IACPkvC,eAAgB,IAChB4xB,MAAO,IACPnmC,OAAQ,IACRkH,QAAS,CAAC,IAAK,MACfxN,WAAY,mBACZk4B,cAAe,WAAkB,QAAAwb,EAAAC,EAAA5iE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAm2D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/3C,EAAI+3C,GAAA7iE,UAAA6iE,GAAI,OAAOF,EAAArX,KAAKqW,OAAMC,eAActlD,MAAAqmD,EAAA,CAAC,MAAO,SAAAr6D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGrF,UAAW,IACX4hC,uBAAwB,SAE1Byb,cAAe,CACbloE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,KACPnmC,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChBxN,WAAY,UACZk4B,cAAe,WAAkB,QAAA4b,EAAAC,EAAAhjE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAu2D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn4C,EAAIm4C,GAAAjjE,UAAAijE,GAAI,OAAOF,EAAAzX,KAAKqW,OAAMC,eAActlD,MAAAymD,EAAA,CAAC,OAAQ,SAAAz6D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACrGrF,UAAW,KACX4hC,uBAAwB,SAE1B6b,QAAS,CACPtoE,MAAO,IACPkvC,eAAgB,IAChB4xB,MAAO,IACPnmC,OAAQ,IACRkH,QAAS,CAAC,IAAK,MACfxN,WAAY,gBACZk4B,cAAe,WAAkB,QAAAgc,EAAAC,EAAApjE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA22D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJv4C,EAAIu4C,GAAArjE,UAAAqjE,GAAI,OAAOF,EAAA7X,KAAKqW,OAAMC,eAActlD,MAAA6mD,EAAA,CAAC,MAAO,SAAA76D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGrF,UAAW,IACX4hC,uBAAwB,SAE1Bic,iBAAkB,CAChB1oE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,KACPnmC,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChBxN,WAAY,OACZk4B,cAAe,WAAkB,QAAAoc,EAAAC,EAAAxjE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA+2D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ34C,EAAI24C,GAAAzjE,UAAAyjE,GAAI,OAAOF,EAAAjY,KAAKqW,OAAMC,eAActlD,MAAAinD,EAAA,CAAC,OAAQ,SAAAj7D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACrGrF,UAAW,KACX4hC,uBAAwB,SAE1Bqc,KAAM,CACJ9oE,MAAO,WACPkvC,eAAgB,WAChB7a,WAAY,WACZysC,MAAO,OACPnmC,OAAQ,sBACRoB,WAAY,CAAC,QACbwwB,cAAe,WAAkB,QAAAwc,EAAAld,EAAA,KAAAmd,EAAA5jE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAm3D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/4C,EAAI+4C,GAAA7jE,UAAA6jE,GAAI,OAAOF,EAAArY,KAAKqW,OAAMC,eAActlD,MAAAqnD,EAAA,CAAC,SAAU,SAAAr7D,GAAC,MAAiB,iBAALA,EAAgBm+C,EAAKkb,MAAMjrD,aAAapO,QAAKpO,CAAS,GAAG,GAAK0f,OAAKkR,GAAO,EACrKrF,UAAW,SAACjZ,EAAO6L,EAAIvS,GAAG,MAAM,CAAE,GAAM,CAACA,EAAK0G,GAAQ,EACtDmZ,WAAY,MACZvhB,aAAc,CAAC,SACfijD,uBAAwB,UAE1Byc,SAAU,CACRtB,SAAS,EACT5nE,MAAO,eACPq0B,WAAY,OACZ6a,eAAgB,eAChB4xB,MAAO,WACPvU,cAAe,WAAkB,QAAA4c,EAAAC,EAAA,KAAAC,EAAAjkE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAw3D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJp5C,EAAIo5C,GAAAlkE,UAAAkkE,GAAI,OAAOH,EAAAzY,KAAKqW,OAAMC,eAActlD,MAAAynD,EAAA,CAAC,SAAU,SAAAz7D,GAAC,MAAiB,iBAALA,EAAgB07D,EAAKrC,MAAMjrD,aAAapO,QAAKpO,CAAS,GAAG,GAAI0f,OAAKkR,GAAO,EACpKrF,UAAW,SAACjZ,EAAO6L,EAAIvS,GAAG,MAAM,CAAC,IAAK,CAAE,GAAM,CAACA,EAAK0G,IAAS,EAC7DmZ,WAAY,OACZC,2BAA2B,EAC3BxhB,aAAc,CAAC,UAEjB+/D,YAAa,CACXvpE,MAAO,cACPkvC,eAAgB,cAChB4xB,MAAO,OACPnmC,OAAQ,wBACR4xB,cAAe,WAAkB,QAAAid,EAAAC,EAAA,KAAAC,EAAAtkE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA63D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJz5C,EAAIy5C,GAAAvkE,UAAAukE,GAAI,OAAOH,EAAA9Y,KAAKqW,OAAMC,eAActlD,MAAA8nD,EAAA,CAAC,SAAU,SAAA97D,GAAC,MAAiB,iBAALA,EAAgB,IAAM+7D,EAAK1C,MAAMjrD,aAAapO,QAAKpO,CAAS,GAAG,GAAK0f,OAAKkR,GAAO,EAC3KrF,eAAWvrB,EACXkK,aAAc,CAAC,UAEjBogE,UAAW,CACT5pE,MAAO,YACPkvC,eAAgB,YAChB4xB,MAAO,OACPnmC,OAAQ,sBACR4xB,cAAe,WAAkB,QAAAsd,EAAAC,EAAA,KAAAC,EAAA3kE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAk4D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ95C,EAAI85C,GAAA5kE,UAAA4kE,GAAI,OAAOH,EAAAnZ,KAAKqW,OAAMC,eAActlD,MAAAmoD,EAAA,CAAC,SAAU,SAAAn8D,GAAC,MAAiB,iBAALA,EAAgBo8D,EAAK/C,MAAMjrD,aAAapO,GAAK,SAAMpO,CAAS,GAAG,GAAK0f,OAAKkR,GAAO,EAC3KrF,eAAWvrB,EACXkK,aAAc,CAAC,UAEjBygE,QAAS,CACPjqE,MAAO,UACPkvC,eAAgB,UAChB4xB,MAAO,UACP3mD,YAAa,EACb60B,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQuU,EAAWC,EAAY9hB,EAAOqN,EAAiB2mB,GAC3E,IAAIoB,EAAU9nB,EAAOmV,QACjB4S,EAAQ/nB,EAAOtF,IAAI,GACvB,OAAIgsB,EACK,GAAPjvB,OAAUpN,EAAK,aAAAoN,OAAYqwB,EAAO,SAAArwB,OAAQswB,GAEnC,GAAPtwB,OAAUpN,EAAK,QAAAoN,OAAOqwB,EAAO,QAAArwB,OAAOpN,EAAK,QAAAoN,OAAOswB,EACpD,EACA7U,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAC9E,IAAMyY,EAAU9nB,EAAO,GACjB+nB,EAAQ/nB,EAAO,GACrB,MAAO,GAAPvI,OAAUpN,EAAK,QAAAoN,OAAOqwB,EAAO,QAAArwB,OAAOpN,EAAK,QAAAoN,OAAOswB,EAClD,EACAid,cAAe,WAAkB,QAAA2d,EAAAC,EAAA/kE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAs4D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJl6C,EAAIk6C,GAAAhlE,UAAAglE,GAAI,OAAOF,EAAAxZ,KAAKqW,OAAMO,eAAc5lD,MAAAwoD,EAAA,CAAC,CAAC,OAAQ,SAAS,GAAKlrD,OAAKkR,GAAO,EACvG03B,YAAa,CACX,aACA,YAEF93C,eAAgB,CACd,KACA,OAEFukB,WAAY,cACZxJ,UAAW,KACXg1B,eAAgB,SAACt4B,GACf,OAAiBjoB,MAAbioB,EAAO,IAAgCjoB,MAAbioB,EAAO,GAC5BA,EAAO,IAAMA,EAAO,GAEtB,IACT,EACAklC,uBAAwB,SAAgCvlD,GACtD,MAAgB,SAATA,EAAkB,SAAW,OACtC,GAEFmjE,YAAa,CACXzC,SAAS,EACT5nE,MAAO,cACPkvC,eAAgB,cAChB4xB,MAAO,cACP3mD,YAAa,EACb60B,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQuU,EAAWC,EAAY9hB,EAAOqN,EAAiB2mB,GAC3E,IAAIoB,EAAU9nB,EAAOmV,QACjB4S,EAAQ/nB,EAAOtF,IAAI,GACvB,OAAIgsB,EACK,GAAPjvB,OAAUpN,EAAK,iBAAAoN,OAAgBqwB,EAAO,SAAArwB,OAAQswB,GAEvC,IAAPtwB,OAAWpN,EAAK,OAAAoN,OAAMqwB,EAAO,QAAArwB,OAAOpN,EAAK,OAAAoN,OAAMswB,EAAK,IACxD,EACA7U,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAC9E,IAAMyY,EAAU9nB,EAAO,GACjB+nB,EAAQ/nB,EAAO,GACrB,MAAO,IAAPvI,OAAWpN,EAAK,OAAAoN,OAAMqwB,EAAO,QAAArwB,OAAOpN,EAAK,OAAAoN,OAAMswB,EAAK,IACtD,EACAid,cAAe,WAAkB,QAAA+d,EAAAC,EAAAnlE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA04D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJt6C,EAAIs6C,GAAAplE,UAAAolE,GAAI,OAAOF,EAAA5Z,KAAKqW,OAAMO,eAAc5lD,MAAA4oD,EAAA,CAAC,CAAC,OAAQ,SAAS,GAAItrD,OAAKkR,GAAO,EACtG03B,YAAa,CACX,aACA,YAEF93C,eAAgB,CACd,KACA,OAEFukB,WAAY,UACZxJ,UAAY,SAACjZ,EAAO6L,EAAIvS,GAAG,MAAM,CAAC,IAAK,CAAE,KAAM,CAAC2G,MAAMC,QAAQ5G,GAAOA,EAAI,GAAKA,EAAK0G,EAAOC,MAAMC,QAAQ5G,GAAOA,EAAI,GAAKA,IAAO,EAC/H6f,WAAY,MACZC,2BAA2B,EAC3B60B,eAAgB,SAACt4B,GACf,OAAiBjoB,MAAbioB,EAAO,IAAgCjoB,MAAbioB,EAAO,GAC5BA,EAAO,IAAMA,EAAO,GAEtB,IACT,GAEFkjD,SAAU,CACRzqE,MAAO,WACPkvC,eAAgB,WAChB/0B,YAAa,EACbka,WAAY,eACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,OAAOA,EAAe,GAAHjvB,OAAMpN,EAAK,iBAAAoN,OAAkBpN,EAClD,EACA46C,YAAa,SAAU56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACrF,IAAM8zC,EAAQha,KAAKqW,MAAMpwC,cAAcC,GACvC,MAAO,YAAP5X,OAAmBpN,EAAK,MAAAoN,OAAK0rD,EAAK,QAAA1rD,OAAO0rD,EAC3C,EACAjwC,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAE9E,MAAO,GAAP5X,OAAUpN,EAAK,SACjB,EACA26C,cAAe,WAAkB,QAAAoe,EAAAC,EAAA,KAAAC,EAAAzlE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAg5D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ56C,EAAI46C,GAAA1lE,UAAA0lE,GAAI,OAAOH,EAAAja,KAAKqW,OAAMC,eAActlD,MAAAipD,EAAA,CAAC,MAAO,SAACj9D,EAAGkpB,GAAQ,MAAK,CAACg0C,EAAK7D,MAAMlwC,gBAAgBD,GAAW,KAAK,GAAE,GAAK5X,OAAKkR,GAAO,EAC3JrF,UAAW,KAEbkgD,aAAc,CACZnD,SAAS,EACT5nE,MAAO,eACPkvC,eAAgB,eAChB/0B,YAAa,EACbka,WAAY,WACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,OAAOA,EAAe,GAAHjvB,OAAMpN,EAAK,sBAAAoN,OAAuBpN,EACvD,EACA46C,YAAa,SAAU56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GACrF,IAAM8zC,EAAQha,KAAKqW,MAAMpwC,cAAcC,GACvC,MAAO,YAAP5X,OAAmBpN,EAAK,MAAAoN,OAAK0rD,EAAK,SAAA1rD,OAAQ0rD,EAC5C,EACAjwC,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAE9E,MAAO,GAAP5X,OAAUpN,EAAK,QACjB,EACA26C,cAAe,WAAkB,QAAAye,EAAAC,EAAA,KAAAC,EAAA9lE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAq5D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJj7C,EAAIi7C,GAAA/lE,UAAA+lE,GAAI,OAAOH,EAAAta,KAAKqW,OAAMC,eAActlD,MAAAspD,EAAA,CAAC,OAAQ,SAACt9D,EAAGkpB,GAAQ,MAAK,CAACq0C,EAAKlE,MAAMlwC,gBAAgBD,GAAW,KAAK,GAAE,GAAK5X,OAAKkR,GAAO,EAC5JrF,UAAW,KACX4hC,uBAAwB,UAE1B2e,QAAS,CACPprE,MAAO,UACPkvC,eAAgB,UAChB4xB,MAAO,UACP3mD,YAAa,EACbka,WAAY,cACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,OAAOA,EAAe,GAAHjvB,OAAMpN,EAAK,gBAAAoN,OAAiBpN,EACjD,EACA6oB,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAC9E,MAAO,GAAP5X,OAAUpN,EAAK,WACjB,EAEA26C,cAAe,WAAkB,QAAA8e,EAAAC,EAAAlmE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAy5D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJr7C,EAAIq7C,GAAAnmE,UAAAmmE,GAAI,OAAOF,EAAA3a,KAAKqW,OAAMC,eAActlD,MAAA2pD,EAAA,CAAC,MAAO,SAAA39D,GAAC,OAAI,IAAI,GAAE,GAAKsR,OAAKkR,GAAO,EACvGrF,UAAW,MAEb2gD,YAAa,CACXxrE,MAAO,cACPkvC,eAAgB,cAChB4xB,MAAO,cACP3mD,YAAa,EACbka,WAAY,UACZ2a,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,OAAOA,EAAe,GAAHjvB,OAAMpN,EAAK,qBAAAoN,OAAsBpN,EACtD,EACA6oB,aAAc,SAAC7oB,EAAO6L,EAAI8J,EAAQpe,EAAU4yB,EAAY9hB,EAAOqN,EAAiBsP,GAC9E,MAAO,GAAP5X,OAAUpN,EAAK,WACjB,EAEA26C,cAAe,WAAkB,QAAAkf,EAAAC,EAAAtmE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA65D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJz7C,EAAIy7C,GAAAvmE,UAAAumE,GAAI,OAAOF,EAAA/a,KAAKqW,OAAMC,eAActlD,MAAA+pD,EAAA,CAAC,MAAO,SAAA/9D,GAAC,OAAI,IAAI,GAAE,GAAKsR,OAAKkR,GAAO,EACvGrF,UAAW,KACX4hC,uBAAwB,UAE1Bmf,cAAe,CACb5rE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,IACP9xB,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,IAAMw5B,EAAQx5B,EAAe,IAAM,KACnC,MAAO,GAAPjvB,OAAUpN,EAAK,KAAAoN,OAAIyoD,EAAK,KAAAzoD,OAAI/iB,EAC9B,EACA0+B,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChB0qB,cAAe,WAAkB,QAAAsf,EAAAC,EAAA1mE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAi6D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ77C,EAAI67C,GAAA3mE,UAAA2mE,GAAI,OAAOF,EAAAnb,KAAKqW,OAAMC,eAActlD,MAAAmqD,EAAA,CAAC,MAAO,SAAAn+D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGmE,WAAY,oBACZxJ,UAAW,KACX4hC,uBAAwB,QAE1Buf,kBAAmB,CACjBpE,SAAS,EACT5nE,MAAO,KACPkvC,eAAgB,KAChB4xB,MAAO,KACP9xB,SAAU,SAACp9B,EAAO6L,EAAIxhB,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACxE,MAAO,GAAPjvB,OAAUpN,EAAK,QAAAoN,OAAO/iB,EACxB,EACA0+B,OAAQ,KACRkH,QAAS,CAAC,KAAM,MAChB0qB,cAAe,WAAkB,QAAA0f,EAAAC,EAAA9mE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAq6D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJj8C,EAAIi8C,GAAA/mE,UAAA+mE,GAAI,OAAOF,EAAAvb,KAAKqW,OAAMC,eAActlD,MAAAuqD,EAAA,CAAC,MAAO,SAAAv+D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGmE,WAAY,gBACZxJ,UAAW,MAEbuhD,cAAe,CACbpsE,MAAO,SACPkvC,eAAgB,KAChB4xB,MAAO,KACP9xB,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,SAAAoN,OAAQuI,EAAOtqB,KAAK,MAAK,KAEjC,GAAP+hB,OAAUpN,EAAK,SAAAoN,OAAQuI,EAAM,IACjC,EACAilC,YAAa,SAAC56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAC5E,MAAgB,SAAZztB,EACK,GAAP6V,OAAUpN,EAAK,SAAAoN,OAAQuI,EAAOtqB,KAAK,MAAK,UACnC,CACT,EACA8+B,WAAY,CAAC,eACbpB,OAAQ,sBACR4xB,cAAe,WAAkB,QAAA8f,EAAAC,EAAAlnE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAy6D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJr8C,EAAIq8C,GAAAnnE,UAAAmnE,GAAI,OAAOF,EAAA3b,KAAKqW,OAAMC,eAActlD,MAAA2qD,EAAA,CAAC,MAAO,SAAA3+D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGmE,WAAY,oBACZxJ,UAAW,KACX4hC,uBAAwB,QAE1B+f,kBAAmB,CACjB5E,SAAS,EACT5nE,MAAO,SACPkvC,eAAgB,SAChB4xB,MAAO,SACP9xB,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,aAAAoN,OAAYuI,EAAOtqB,KAAK,MAAK,KAErC,GAAP+hB,OAAUpN,EAAK,aAAAoN,OAAYuI,EAAM,IACrC,EACAilC,YAAa,SAAC56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAC5E,MAAgB,SAAZztB,EACK,GAAP6V,OAAUpN,EAAK,aAAAoN,OAAYuI,EAAOtqB,KAAK,MAAK,UACvC,CACT,EACAsvD,cAAe,WAAkB,QAAAkgB,EAAAC,EAAAtnE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA66D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJz8C,EAAIy8C,GAAAvnE,UAAAunE,GAAI,OAAOF,EAAA/b,KAAKqW,OAAMC,eAActlD,MAAA+qD,EAAA,CAAC,OAAQ,SAAA/+D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACrGmE,WAAY,gBACZxJ,UAAW,SAACjZ,EAAO6L,EAAIvS,GAAG,MAAM,CAAC,IAAK,CAAE,GAAM,CAAC0G,EAAO1G,IAAO,EAC7D6f,WAAY,MACZC,2BAA2B,GAG7B4hD,qBAAsB,CACpB5sE,MAAO,WACPkvC,eAAgB,WAChBF,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,eAAAoN,OAAcuI,EAAOtqB,KAAK,MAAK,KAEvC,GAAP+hB,OAAUpN,EAAK,cAAAoN,OAAauI,EAChC,EACA8M,WAAY,2BACZtJ,WAAY,UACZF,UAAW,SAACjZ,EAAO6L,EAAIgK,GAAI,MAAM,CAC/B,KAAQ,CAAE7V,EAAO,CAAC,GAAM,CAAC,CAAC,IAAO,IAAK6V,KACvC,EAEDkT,OAAQ,6CACR8xB,uBAAwB,OACxBF,cAAe,WAAkB,QAAAsgB,EAAAC,EAAA1nE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAi7D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ78C,EAAI68C,GAAA3nE,UAAA2nE,GAAI,OAAOF,EAAAnc,KAAKqW,OAAMC,eAActlD,MAAAmrD,EAAA,CAAC,MAAO,SAAAn/D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,GAEtG88C,yBAA0B,CACxBpF,SAAS,EACT5nE,MAAO,eACPkvC,eAAgB,eAChBF,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,mBAAAoN,OAAkBuI,EAAOtqB,KAAK,MAAK,KAE3C,GAAP+hB,OAAUpN,EAAK,kBAAAoN,OAAiBuI,EACpC,EACA8M,WAAY,uBACZtJ,WAAY,WACZF,UAAW,SAACjZ,EAAO6L,EAAIgK,GAAI,MAAM,CAC/B,IAAK,CAAE,KAAQ,CAAE7V,EAAO,CAAC,GAAM,CAAC,CAAC,IAAO,IAAK6V,MAC9C,EACDuD,2BAA2B,GAE7BiiD,mBAAoB,CAClBjtE,MAAO,SACPkvC,eAAgB,KAChB4xB,MAAO,IACP9xB,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,IAAMw5B,EAAQx5B,EAAe,IAAM,KACnC,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,KAAAoN,OAAIyoD,EAAK,MAAAzoD,OAAKuI,EAAOtqB,KAAK,MAAK,KAEvC,GAAP+hB,OAAUpN,EAAK,KAAAoN,OAAIyoD,EAAK,KAAAzoD,OAAIuI,EAChC,EACAilC,YAAa,SAAU56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAAU,IAAAs2C,EAAA,KAC/F,MAAgB,SAAZ/jE,EAEK,GAAP6V,OAAUpN,EAAK,QAAAoN,OAAOuI,EAAOxqB,KAAI,SAAA2Q,GAAC,OAAIw/D,EAAKnG,MAAM7wC,UAAUE,KAAK1oB,EAAE,IAAEzQ,KAAK,KAAI,UAE7E,CACJ,EACA09B,OAAQ,oBACR4xB,cAAe,WAAkB,QAAA4gB,EAAAC,EAAAhoE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAu7D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn9C,EAAIm9C,GAAAjoE,UAAAioE,GAAI,OAAOF,EAAAzc,KAAKqW,OAAMC,eAActlD,MAAAyrD,EAAA,CAAC,MAAO,SAAAz/D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGmE,WAAY,yBACZtJ,WAAY,SACZF,UAAW,SAACjZ,EAAO6L,EAAIgK,GAAI,MAAM,CAE/B,IAAO,CAAE7V,EAAO,CAAC,GAAM,CAAC,CAAC,IAAO,IAAK6V,KACtC,EACDglC,uBAAwB,QAE1B6gB,uBAAwB,CACtB1F,SAAS,EACT5nE,MAAO,aACPkvC,eAAgB,KAChB4xB,MAAO,KACP9xB,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,MAAgB,SAAZ9kC,EACK,GAAP6V,OAAUpN,EAAK,SAAAoN,OAAQuI,EAAOtqB,KAAK,MAAK,KAEjC,GAAP+hB,OAAUpN,EAAK,QAAAoN,OAAOuI,EAC1B,EACAilC,YAAa,SAAU56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAAU,IAAA22C,EAAA,KAC/F,MAAgB,SAAZpkE,EAEK,GAAP6V,OAAUpN,EAAK,SAAAoN,OAAQuI,EAAOxqB,KAAI,SAAA2Q,GAAC,OAAI6/D,EAAKxG,MAAM7wC,UAAUE,KAAK1oB,EAAE,IAAEzQ,KAAK,KAAI,UAE9E,CACJ,EACAsvD,cAAe,WAAkB,QAAAihB,EAAAC,EAAAroE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA47D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJx9C,EAAIw9C,GAAAtoE,UAAAsoE,GAAI,OAAOF,EAAA9c,KAAKqW,OAAMC,eAActlD,MAAA8rD,EAAA,CAAC,MAAO,SAAA9/D,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,EACpGmE,WAAY,qBACZtJ,WAAY,UACZF,UAAW,SAACjZ,EAAO6L,EAAIgK,GAAI,MAAM,CAE/B,IAAK,CAAE,IAAO,CAAE7V,EAAO,CAAC,GAAM,CAAC,CAAC,IAAO,IAAK6V,MAC7C,EACDuD,2BAA2B,GAE7B2iD,UAAW,CACT3tE,MAAO,mBACPma,YAAa,EACbytC,YAAa,CACX,CAAE5nD,MAAO,SAAUT,YAAa,oBAChC,CAAES,MAAO,SAAUT,YAAa,sBAElCuQ,eAAgB,GAIhBk/B,SAAU,SAACp9B,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,GACzE,IAAM2/B,EAAOrmD,EAAOmV,QACdmxC,EAAOtmD,EAAOtF,IAAI,GAClB6rD,EAAOxmD,aAAe,EAAfA,EAAiBrF,IAAI,aAClC,MAAO,GAAPjD,OAAUpN,EAAK,KAAAoN,OAAI4uD,EAAI,UAAA5uD,OAAS8uD,EAAI,KAAA9uD,OAAI6uD,EAC1C,EACArhB,YAAa,SAAU56C,EAAO6L,EAAI8J,EAAQpe,EAAU6lB,EAAW/U,EAAOqN,EAAiBsP,GAErF,IAAMg3C,EAAOrmD,EAAOmV,QACdmxC,EAAOtmD,EAAOtF,IAAI,GAClB8rD,EAAQrd,KAAKqW,MAAM7wC,UAAUE,KAAKw3C,GAClCI,EAAQtd,KAAKqW,MAAM7wC,UAAUE,KAAKy3C,GAClCC,EAAOxmD,aAAe,EAAfA,EAAiBrF,IAAI,aAClC,MAAO,YAAPjD,OAAmBpN,EAAK,aAAAoN,OAAY+uD,EAAK,MAAA/uD,OAAKgvD,EAAK,OAAAhvD,OAAM8uD,EAAI,MAC/D,EACAvhB,mBAAejtD,EACfurB,eAAWvrB,EACXzB,QAAS,CACPowE,YAAa,OACbC,iBAAkB,OAClBC,kBAAmB,uBACnBC,aAAc,EACdC,aAAc,GACd9hC,SAAU,CACRohC,UAAW,KAIjB57D,KAAM,CACJ/R,MAAO,OACPkvC,eAAgB,OAChB/0B,YAAa,EACb0Q,UAAW,OACX4P,aAAc,SAACJ,GAAY,SAAArb,OAAQqb,EAAY,SAC/CkyB,cAAe,WAAkB,QAAA+hB,EAAAC,EAAAnpE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA08D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJt+C,EAAIs+C,GAAAppE,UAAAopE,GAAI,OAAOF,EAAA5d,KAAKqW,OAAMC,eAActlD,MAAA4sD,EAAA,CAAC,MAAO,SAAA5gE,GAAC,OAAI,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,GAGtGqzC,IAAK,CACHvjE,MAAO,MACPkvC,eAAgB,MAChB/0B,YAAa,EACb0Q,UAAW,MACX4P,aAAc,SAACJ,EAAc5c,EAAI2c,GAAQ,SAAApb,OAAQqb,EAAY,QAAArb,OAAOob,EAAQ,EAC5EmyB,cAAe,WAAkB,QAAAkiB,EAAAC,EAAAtpE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAA68D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJz+C,EAAIy+C,GAAAvpE,UAAAupE,GAAI,OAAOF,EAAA/d,KAAKqW,OAAMC,eAActlD,MAAA+sD,EAAA,CAAC,MAAO,SAAA/gE,GAAC,OAAIA,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,GAGtG0+C,KAAM,CACJ5uE,MAAO,OACPkvC,eAAgB,OAChB/0B,YAAa,EACb0Q,UAAW,OACX4P,aAAc,SAACJ,GAAY,SAAArb,OAAQqb,EAAY,UAC/CkyB,cAAe,WAAkB,QAAAsiB,EAAAC,EAAA1pE,UAAAC,OAAN6qB,EAAI,IAAAre,MAAAi9D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7+C,EAAI6+C,GAAA3pE,UAAA2pE,GAAI,OAAOF,EAAAne,KAAKqW,OAAMC,eAActlD,MAAAmtD,EAAA,CAAC,MAAO,SAAAnhE,GAAC,OAAI,CAAC,GAAE,GAAKsR,OAAKkR,GAAO,IAQlGrZ,GAAU,CACdC,KAAM,CACJ5P,KAAM,OACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,SACZC,iBAAkB,eAClBtrB,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,OAAOA,EAAeyiB,KAAKqW,MAAMhvC,oBAAoB7sB,GAAOjL,KAAKvD,UAAUwO,EAC7E,EACA0xB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACpD,OAAOy2C,KAAKqW,MAAMhwC,WAAW7rB,EAC/B,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,MAAmB,QAAfA,EAAM6mD,OAAkC,YAAf7mD,EAAM6mD,MAC1BpQ,KAAKqW,MAAM7wC,UAAUK,WAAWrrB,EAAW,eAANuS,EAA2B,aAANA,GAE1DizC,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EAEvC,EACAuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnD+L,SAAU,CACR/P,KAAM,OACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,OACZC,iBAAkB,aAClBtrB,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,OAAOA,EAAeyiB,KAAKqW,MAAMhvC,oBAAoB7sB,GAAOjL,KAAKvD,UAAUwO,EAC7E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,MAAmB,QAAfA,EAAM6mD,OAAkC,YAAf7mD,EAAM6mD,MAC1BpQ,KAAKqW,MAAM7wC,UAAUK,WAAWrrB,EAAW,eAANuS,EAA2B,aAANA,GAE1DizC,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EAEvC,EACA0xB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,EACjD/L,WAAW,GAEbgY,OAAQ,CACNjQ,KAAM,SACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,SACZC,iBAAkB,eAClBF,YAAa,CACX,CAAE5nD,MAAO,cAAeT,YAAa,qBACrC,CAAES,MAAO,YAAaT,YAAa,oBAErCi9B,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,OAAOA,EAAeyiB,KAAKqW,MAAMhvC,oBAAoB7sB,GAAOjL,KAAKvD,UAAUwO,EAC7E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,GACxC,IAAMC,EAAUD,EAAOhhE,OAASG,OAAOipB,UAAU43C,EAAOhhE,MACxD,OAAO0iD,KAAKqW,MAAMhwC,WAAW7rB,EAAK+jE,EACpC,EACAxzD,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnD0D,OAAQ,CACN1H,KAAM,SACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,SACZC,iBAAkB,8BAClBtrB,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,OAAOA,EAAeyiB,KAAKqW,MAAMhvC,oBAAoB7sB,GAAOjL,KAAKvD,UAAUwO,EAC7E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnDuM,OAAQ,CACNvQ,KAAM,SACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,QACZC,iBAAkB,eAClBtrB,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,IAAIihC,EAAWxe,KAAKqW,MAAM3mD,qBAAqBwW,EAAShI,cAActoB,YAAcswB,EAASjI,gBAAiBzjB,GAC9G,OAAO+iC,EAAeyiB,KAAKqW,MAAMhvC,oBAAoBm3C,GAAYjvE,KAAKvD,UAAUwO,EAClF,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnDmM,YAAa,CACXnQ,KAAM,cACN0oC,OAAQ,QACRzmC,SAAU,QACV0+C,WAAY,SACZC,iBAAkB,gBAClBtrB,YAAa,SAAU/U,EAAMmP,EAAUo4C,EAAQ/gC,GAAc,IAAAkhC,EAAA,KACvDC,EAAa3nD,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAIyhE,EAAKpI,MAAM3mD,qBAAqBwW,EAAShI,cAActoB,YAAcswB,EAASjI,gBAAiBjhB,EAAE,IAChI,OAAOugC,EAAemhC,EAAWryE,IAAI2zD,KAAKqW,MAAMhvC,qBAAuBtQ,EAAK1qB,IAAIkD,KAAKvD,UACvF,EACAyvD,eAAgB,SAAU1kC,EAAMmP,EAAUo4C,EAAQvxD,EAAIxD,GAAO,IAAAo1D,EAAA,KAC3D,OAAO5nD,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAI2hE,EAAKtI,MAAM7wC,UAAUQ,OAAOhpB,EAAE,GACrD,EACAkvB,gBAAiB,SAAUnV,EAAMmP,EAAUo4C,EAAQvxD,EAAIxD,GACrD,IAAMq1D,EAAar1D,GAASA,EAAM0gB,QAAU1gB,EAAM0gB,OAAOlS,WAAW,QAChEnnB,EAAMovD,KAAKqW,MAAMhwC,WAAWtP,GAMhC,OALI6nD,IAGFhuE,EAAMovD,KAAKqW,MAAMjwC,YAAYx1B,IAExBA,CACT,EACAma,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnD6M,KAAM,CACJ7Q,KAAM,OACN0oC,OAAQ,SACRzmC,SAAU,QACVuC,WAAY,aACZC,YAAa,aACbk8C,WAAY,OACZC,iBAAkB,aAClBF,YAAa,CACX,CAAE5nD,MAAO,YAAaT,YAAa,mBACnC,CAAES,MAAO,UAAWT,YAAa,kBAEnCi9B,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,IAAM5f,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAOsiC,EAAe5f,EAAQxiB,OAAOmjE,EAAOtjE,YAAczL,KAAKvD,UAAUwO,EAC3E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,IAAMoU,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAO+kD,KAAKqW,MAAM7wC,UAAUQ,OAAOrI,EAAQxiB,OAAO,cACpD,EACA+wB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACpD,IACMvM,EADUgjD,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC5BE,OAAO,cAGzB,MAAO,iCAAPmT,OAAwCtR,EAAC,wDAAAsR,OAF7B,aAEuF,MACrG,EACAyjB,gBAAiB,CAEf,CACE5oB,IAAK,CACH4nB,IAAK,CAAC,OAAQ,OAAQ,cAExBb,WAAY,QACZ1Q,KAAM,CACJ,CAAC4sC,IAAK,KACN,CACEjjD,IAAK,CACH4nB,IAAK,CAAC,OAAQ,OAAQ,SAAU,sBAElCb,WAAY,YACZ1Q,KAAM,CACJ,CAAC4sC,IAAK,YAMhB7zB,gBAAiB,SAAU/9B,EAAK8jE,EAAQ9+C,GAAM,IAAAq/C,EAAAC,EAAAC,EAAAC,EAC5C,IAAKV,EACH,MAAO,MAAC1vE,EAAW,qCACrB,GAAI4wB,SAAS,QAALq/C,EAAJr/C,EAAMy/C,WAAG,IAAAJ,GAAO,QAAPA,EAATA,EAAWtzE,aAAK,IAAAszE,GAAU,QAAVC,EAAhBD,EAAkB1rE,gBAAQ,IAAA2rE,GAA1BA,EAAA71D,KAAA41D,EAA6B,MAAgB,QAAZE,EAAIv/C,EAAKy/C,WAAG,IAAAF,GAAO,QAAPA,EAARA,EAAUxzE,aAAK,IAAAwzE,GAAa,QAAbC,EAAfD,EAAiBtkD,mBAAW,IAAAukD,GAA5BA,EAAA/1D,KAAA81D,GAAiC5rE,SAAS,SACjF,MAAO,MAACvE,EAAW,uBAAF0f,OAAyB/e,KAAKvD,UAAUwzB,EAAKy/C,OAChE,IAAMthD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAIjP,MAAOy0D,KAAKqW,MAAMhsE,OAAO60E,UAC/D,OAAIvhD,EAAQ/hB,UACH,CAAC+hB,EAAQxiB,OAAOmjE,aAAM,EAANA,EAAQrjE,aAAc,IAEtC,MAACrM,EAAW,eAEvB,EACAurB,UAAW,SAAU3f,EAAK0rB,EAAUo4C,GAClC,OAAOte,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAAa8/C,QACpD,EACAhwC,KAAM,SAAUvQ,EAAK0jB,GACnB,IAAMP,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK0jB,EAAcjjB,aACrD,OAAO0iB,EAAQ/hB,UAAY+hB,EAAQo9B,cAAWnsD,CAChD,EACA8sD,iBAAkB,SAAUlhD,EAAK0rB,EAAUo4C,GACzC,IAAM3gD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAO0iB,EAAQ/hB,UAAY+hB,EAAQo9B,cAAWnsD,CAChD,GAEF2Y,KAAM,CACJ/Q,KAAM,OACN0oC,OAAQ,SACRzmC,SAAU,QACVuD,WAAY,QACZf,YAAa,WACbc,YAAY,EACZo7C,WAAY,OACZC,iBAAkB,aAClBF,YAAa,CACX,CAAE5nD,MAAO,YAAaT,YAAa,mBACnC,CAAES,MAAO,UAAWT,YAAa,kBAEnCi9B,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,IAAM5f,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAOsiC,EAAe5f,EAAQxiB,OAAOmjE,EAAOtiE,YAAczM,KAAKvD,UAAUwO,EAC3E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,IAAMoU,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAO+kD,KAAKqW,MAAM7wC,UAAUQ,OAAOrI,EAAQxiB,OAAO,YACpD,EACA+wB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACpD,IAEMvM,EAFUgjD,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAE5BE,OAAO,YACzB,MAAO,iCAAPmT,OAAwCtR,EAAC,KAE3C,EACA+0B,gBAAiB,CACf,sCAGFwG,gBAAiB,SAAU/9B,EAAK8jE,EAAQ9+C,GAAM,IAAA2/C,EAAAC,EAAAC,EAC5C,IAAKf,EACH,MAAO,MAAC1vE,EAAW,qCACrB,GAAI4wB,SAAAA,EAAMy/C,MAAiB,QAATE,EAAC3/C,EAAKy/C,WAAG,IAAAE,GAAO,QAAPA,EAARA,EAAU5zE,aAAK,IAAA4zE,GAAa,QAAbC,EAAfD,EAAiB1kD,mBAAW,IAAA2kD,IAA5BA,EAAAn2D,KAAAk2D,GAAiChsE,SAAS,UAAoB,QAAZksE,EAAI7/C,EAAKy/C,WAAG,IAAAI,GAAO,QAAPA,EAARA,EAAU9zE,aAAK,IAAA8zE,GAAfA,EAAiBlsE,SAAS,MACjG,MAAO,MAACvE,EAAW,uBAAF0f,OAAyB/e,KAAKvD,UAAUwzB,EAAKy/C,OAChE,IAAMthD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAIjP,MAAO,YAC7C,OAAIoyB,EAAQ/hB,UACH,CAAC+hB,EAAQxiB,OAAOmjE,aAAM,EAANA,EAAQrjE,aAAc,IAEtC,MAACrM,EAAW,eAEvB,EACAurB,UAAW,SAAU3f,EAAK0rB,EAAUo4C,GAElC,IAAM3gD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAA6B,GAAtB0iB,EAAQpM,IAAI,QAAe,GAA6B,GAAxBoM,EAAQpM,IAAI,UAAiBoM,EAAQpM,IAAI,SAClF,EACAxG,KAAM,SAAUvQ,EAAK0jB,GAEnB,IAAMP,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK0jB,EAAcjjB,aACrD,OAAO0iB,EAAQ/hB,UAAkC,GAAtB+hB,EAAQpM,IAAI,QAAe,GAA6B,GAAxBoM,EAAQpM,IAAI,UAAiBoM,EAAQpM,IAAI,eAAY3iB,CAClH,EACA8sD,iBAAkB,SAAUlhD,EAAK0rB,EAAUo4C,GAEzC,IAAM3gD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAA6B,GAAtB0iB,EAAQpM,IAAI,QAAe,GAA6B,GAAxBoM,EAAQpM,IAAI,UAAiBoM,EAAQpM,IAAI,SAClF,EACAoqC,yBAA0B,SAAkC6U,EAAWjlE,EAAOg5B,EAAUoI,GACtF,MAAO,CACLgkC,OAAQ,CACNA,OAAQ,CACNtgC,OAAQ,OAAO/hB,OAAOqe,EAAW,yCAAyCre,OAAOqe,EAAW,iCAC5Fp7B,OAAQ,CACN6L,IAAK7R,EAAM,GACX8R,IAAK9R,EAAM,MAKrB,GAEFkc,SAAU,CACRjR,KAAM,WACN0oC,OAAQ,SACRzmC,SAAU,QACVuD,WAAY,QACZhB,WAAY,aACZC,YAAa,sBACbc,YAAY,EACZo7C,WAAY,WACZC,iBAAkB,iBAClBF,YAAa,CACX,CAAE5nD,MAAO,gBAAiBT,YAAa,uBACvC,CAAES,MAAO,cAAeT,YAAa,sBAEvCi9B,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,IAAM5f,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAOsiC,EAAe5f,EAAQxiB,OAAOmjE,EAAOtjE,WAAa,IAAMsjE,EAAOtiE,YAAczM,KAAKvD,UAAUwO,EACrG,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,IAAMoU,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAO+kD,KAAKqW,MAAM7wC,UAAUQ,OAAOrI,EAAQo9B,SAC7C,EACA7uB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACpD,IACMvM,EADUgjD,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC5BE,OAAO,uBAGzB,MAAO,qCAAPmT,OAA4CtR,EAAC,wDAAAsR,OAFjC,sBAE2F,MACzG,EACAyjB,gBAAiB,CAEf,CACE5oB,IAAK,CACH4nB,IAAK,CAAC,OAAQ,OAAQ,kBAExBb,WAAY,QACZ1Q,KAAM,CACJ,CAAC4sC,IAAK,KACN,CACEjjD,IAAK,CACH4nB,IAAK,CAAC,OAAQ,OAAQ,SAAU,sBAElCb,WAAY,YACZ1Q,KAAM,CACJ,CAAC4sC,IAAK,YAMhB7zB,gBAAiB,SAAU/9B,EAAK8jE,EAAQ9+C,GAAM,IAAA8/C,EAAAC,EAC5C,IAAKjB,EACH,MAAO,MAAC1vE,EAAW,qCACrB,GAAK4wB,SAAS,QAAL8/C,EAAJ9/C,EAAMy/C,WAAG,IAAAK,GAAO,QAAPA,EAATA,EAAW/zE,aAAK,IAAA+zE,GAAU,QAAVC,EAAhBD,EAAkBnsE,gBAAQ,IAAAosE,IAA1BA,EAAAt2D,KAAAq2D,EAA6B,KAChC,MAAO,MAAC1wE,EAAW,2BAAF0f,OAA6B/e,KAAKvD,UAAUwzB,EAAKy/C,OACpE,IAAMthD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAIjP,MAAOy0D,KAAKqW,MAAMhsE,OAAO60E,UAC/D,OAAIvhD,EAAQ/hB,UACH,CAAC+hB,EAAQxiB,OAAOmjE,aAAM,EAANA,EAAQrjE,aAAc,IAEtC,MAACrM,EAAW,eAEvB,EACAurB,UAAW,SAAU3f,EAAK0rB,EAAUo4C,GAClC,OAAOte,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAAa8/C,QACpD,EACAhwC,KAAM,SAAUvQ,EAAK0jB,GACnB,IAAMP,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK0jB,EAAcjjB,aACrD,OAAO0iB,EAAQ/hB,UAAY+hB,EAAQo9B,cAAWnsD,CAChD,EACA8sD,iBAAkB,SAAUlhD,EAAK0rB,EAAUo4C,GACzC,IAAM3gD,EAAUqiC,KAAKqW,MAAMhsE,OAAOmQ,EAAK8jE,EAAOrjE,aAC9C,OAAO0iB,EAAQ/hB,UAAY+hB,EAAQo9B,cAAWnsD,CAChD,GAEFuY,QAAS,CACP3Q,KAAM,UACN0oC,OAAQ,UACRzmC,SAAU,QACVsH,SAAU,MACVC,QAAS,KACT8rB,YAAa,SAACtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GACnC,OAAOA,EAAgB/iC,EAAM,MAAQ,KAAQjL,KAAKvD,YAAYwO,EAChE,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACpD,OAAOy2C,KAAKqW,MAAMhwC,WAAW7rB,EAC/B,EACA6iB,cAAc,EACdtS,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,EAClCkhD,iBAAkB,SAAClhD,EAAK0rB,EAAUo4C,GAAM,OAAM9jE,CAAG,GAEnD0G,MAAO,CACLzI,SAAU,QACVqzB,YAAa,SAACtxB,EAAK0rB,EAAUo4C,EAAQ/gC,EAAcxwB,EAAIxD,EAAOi2D,GAC5D,OAAOjiC,GAAgBiiC,EAAclwE,OAAgBkL,CACvD,EACAihD,eAAgB,SAACjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,EAAOi2D,GACjD,OAAOhlE,CACT,EACA0xB,gBAAiB,SAAC1xB,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GAC3C,OAAO/O,CACT,EACA28C,WAAY,mBACZC,iBAAkB,2BAEpB//B,KAAM,CACJ5e,SAAU,OACV0+C,WAAY,WACZC,iBAAkB,mBAKpBqoB,WAAY,CACVhnE,SAAU,QACVjC,KAAM,aACN01B,gBAAiB,SAAU1xB,GACzB,OAAOwlD,KAAKqW,MAAMhwC,WAAmB,KAAR7rB,EAAa,KAAOA,EACnD,EACA+9B,gBAAiB,SAAC/9B,GAChB,MAAO,CAACA,EAAIjP,MAAO,GACrB,EACA4uB,UAAW,SAAU3f,GACnB,MAAe,KAARA,EAAa,KAAOA,CAC7B,IAgSErO,GAAQ+F,GAAAA,GAAA,GACToyD,IAAe,IAElBvU,mBAAoB,CAClB,OAAU,CAAC,SAAU,eACrB,OAAU,CAAC,SAAU,eACrB,YAAe,CAAC,SAAU,UAC1B,KAAQ,CAAC,YACT,SAAY,CAAC,SAGfrjB,gBAAiB,SAAUxrB,EAAOob,EAAakE,EAAOk/C,EAAUrzC,EAAiB3gC,GAAQ,IAAAi0E,EAAA,KACnFhzC,EAAY+yC,EAASrzE,KAAI,SAAA0B,EAAqC8f,GAAQ,IAA3Cpb,EAAG1E,EAAH0E,IAAKwiB,EAAMlnB,EAANknB,OAAwBi5C,EAAGngE,EAAnBgyB,eAC1C,OAAW,GAAPlS,EACY,SAAVoH,EACK,SAAP3G,OAAgBqxD,EAAKtJ,MAAMhwC,WAAW5zB,GAAI,KAEnCA,EAIK,OAAVwiB,GAA6B,SAAVA,EACd,IAAP3G,OAAWqxD,EAAKtJ,MAAMhwC,WAAW5zB,GAAI,KAE9B,GAAP6b,OAAU4/C,GAAG5/C,OAAG7b,EAItB,IAAGlG,KAAK,IAOR,OANI8/B,EAAgBM,YAClBA,EAAYzrB,GAEVmrB,EAAgBa,iBAClBP,EAAY,IAAMA,GAEbA,CACT,EACA6vB,iBAAkB,SAAUojB,GAC1B,GAAShxE,MAALgxE,EACJ,MAAO,MAAQ5f,KAAKqW,MAAM/uC,iBAAiBs4C,EAC7C,EACAr1C,kBAAmB,SAAUq1C,GAC3B,GAAShxE,MAALgxE,EACJ,MAAO,IAAM5f,KAAKqW,MAAM/uC,iBAAiBs4C,EAC3C,EACA1hC,cAAe,SAAU0hC,EAAGr7C,EAAUZ,EAAYqG,EAAoB2iC,EAAuBpvB,GAC3F,GAAS3uC,MAALgxE,EACJ,OAAIriC,EACK,OAASyiB,KAAKqW,MAAM/uC,iBAAiBs4C,GAErC,IAAM5f,KAAKqW,MAAM/uC,iBAAiBs4C,EAC7C,EACA3hC,WAAY,SAAC4hC,EAAUC,EAAWv7C,EAAUh5B,EAAOkN,EAAU6lB,EAAW/U,EAAOqN,EAAiB2mB,EAAcwiC,GAC5G,IAAOvhC,EAA+Bj1B,EAA/Bi1B,eAAgB/0B,EAAeF,EAAfE,YACvB,GAAmB,GAAfA,EAAkB,CACpB,IAAMib,EAAOm7C,EAAW,SAAHvxD,OAAYuxD,GAAa,GAC9C,MAAO,GAAPvxD,OAAUkwB,EAAc,QAAAlwB,OAAOwxD,GAASxxD,OAAGoW,EAC7C,CAAO,GAAmB91B,MAAf6a,GAA2C,GAAfA,EAAkB,CACvD,IAAMib,EAAOm7C,EAAW,UAAHvxD,OAAauxD,GAAa,GAC/C,MAAO,YAAPvxD,OAAmBwxD,GAASxxD,OAAGoW,EAAI,KAAApW,OAAIkwB,EAAc,KAAAlwB,OAAI/iB,EAC3D,CAAO,GAAmB,GAAfke,EAAkB,CAC3B,IAAMib,EAAOm7C,EAAW,UAAHvxD,OAAauxD,GAAa,GAC3ClhC,EAAUpzC,EAAMygC,QAChB4S,EAAQrzC,EAAMgmB,IAAI,GACtB,MAAO,YAAPjD,OAAmBwxD,GAASxxD,OAAGoW,EAAI,KAAApW,OAAIkwB,EAAc,KAAAlwB,OAAIqwB,EAAO,SAAArwB,OAAQswB,EAC1E,CACF,EACAzkB,UAAW,CACTgB,YAAa,MACbC,UAAW,MACXoB,SAAU,UAGZ4wB,yBAA0B,SAAClD,EAAWqD,EAAiBI,EAAYF,GAEjE,OAAO,CACT,EAGA6E,iBAAkB,CAChB/mD,MAAO,CACL+D,MAAO,SAET4R,MAAO,CACL5R,MAAO,QACP+sB,OAAQ,SAEVhF,KAAM,CACJ/nB,MAAO,WACP+sB,OAAQ,WAQR2jD,GAAa,SAACt0E,EAAQu0E,GAAyB,IAOvBnwD,EAPMowD,IAAKxrE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACjCyrE,EAAa,CACjBx4D,YAAay4D,GACbC,WAAYC,GACZC,gBAAiBC,GACjBC,gBAAiBC,GAAqB,OAAQ,SAC9C3wD,E,65BAAAC,CACoBiwD,GAAM,IAA5B,IAAAlwD,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,KAAnBwwD,EAAO7wD,EAAAvkB,MACVq1E,EAAYT,EAAWQ,GAC7B,IAAIC,EAGF,MAAM,IAAI5oD,MAAM,SAAD1J,OAAU4xD,EAAQ,MAAO,SAAQ,WAAA5xD,OAAUqyD,IAF1Dj1E,EAASk1E,EAAUl1E,EAAQw0E,EAI/B,CAAC,OAAA9vD,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACD,OAAO3kB,CACT,EAEMuc,GAAY,SAACvc,EAAQu0E,GACzB,OAAOD,GAAWt0E,EAAQu0E,GAAQ,EACpC,EAKMS,GAAuB,SAAClqE,EAAM6lB,GAAM,OAAK,SAAC3wB,GAA4B,IAApBm1E,IAAQnsE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACxDmT,EAAUnc,EAAVmc,MA8BN,OA5BAA,EAAK3V,GAAAA,GAAA,GACA2V,GAAK,IAAAyJ,EAAAA,EAAAA,GAAA,GACP9a,EAAItE,GAAAA,GAAA,GACA2V,EAAMrR,IAAK,IACd2P,QAAOjU,GAAA,GACF2V,EAAMrR,GAAM2P,aAKjB06D,EACFh5D,EAAMrR,GAAM2P,QAAQkW,GAAOnqB,GAAA,CACzBgqD,QAAS,CACPqd,QAAS,CACPxiB,gBAAgB,EAChB33C,eAAgB,CAAC,KAAM,OAEzBu6D,YAAa,CACX5iB,gBAAgB,EAChB33C,eAAgB,CAAC,KAAM,SAGxByI,EAAMrR,GAAM2P,QAAQkW,WAGlBxU,EAAMrR,GAAM2P,QAAQkW,GAG7BnqB,GAAAA,GAAA,GACKxG,GAAM,IACTmc,MAAAA,GAEJ,CAAC,EAEKu4D,GAAyB,SAAC10E,GAA4B,IAApBm1E,IAAQnsE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACxCyR,EAAmBza,EAAnBya,QAAS0B,EAAUnc,EAAVmc,MAkEf,OAhEA1B,EAAOjU,GAAA,GACFiU,GAGD06D,EACF16D,EAAQwB,YAAWzV,GAAA,CACjBsE,KAAM,SACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,QACZC,iBAAkB,eAClBF,YAAa,CACX,CAAE5nD,MAAO,cAAeT,YAAa,qBACrC,CAAES,MAAO,YAAaT,YAAa,oBAErCi9B,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,OAAOA,EAAeyiB,KAAKqW,MAAMhvC,oBAAoB7sB,GAAOjL,KAAKvD,UAAUwO,EAC7E,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEsmE,aAAc,SACd/1D,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,GAC/B2L,EAAQwB,oBAGNxB,EAAQwB,YAGjBE,EAAK3V,GAAAA,GAAA,GACA2V,GAAK,IACRpB,OAAMvU,GAAAA,GAAA,GACD2V,EAAMpB,QAAM,IACfN,QAAOjU,GAAA,GACF2V,EAAMpB,OAAON,aAKlB06D,EACFh5D,EAAMpB,OAAON,QAAQwB,YAAWzV,GAAA,CAC9BgqD,QAAS,CACPqd,QAAS,CACPxiB,gBAAgB,GAElB4iB,YAAa,CACX5iB,gBAAgB,IAGpBh9B,UAAW,CACT,UACA,cAGA,UACA,gBAEClS,EAAMpB,OAAON,QAAQwB,oBAGnBE,EAAMpB,OAAON,QAAQwB,YAG9BzV,GAAAA,GAAA,GACKxG,GAAM,IACTya,QAAAA,EACA0B,MAAAA,GAEJ,EAEMy4D,GAAwB,SAAC50E,GAA4B,IAApBm1E,IAAQnsE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACvCyR,EAAmBza,EAAnBya,QAAS0B,EAAUnc,EAAVmc,MAyDf,OAvDA1B,EAAOjU,GAAA,GACFiU,GAGD06D,EACF16D,EAAQk6D,WAAUnuE,GAAA,CAChBsE,KAAM,aACN0oC,OAAQ,SACRzmC,SAAU,QACV0+C,WAAY,QACZC,iBAAkB,eAClBtrB,YAAa,SAAUtxB,EAAK0rB,EAAUo4C,EAAQ/gC,GAC5C,IAAMwjC,EAAW76C,EAAShI,cAAc4tB,YAAc5lB,EAAShI,cAActoB,YAAcswB,EAASjI,gBAChGugD,EAAWxe,KAAKqW,MAAM3mD,qBAAqBqxD,EAAUvmE,GACzD,OAAO+iC,EAAeyiB,KAAKqW,MAAMhvC,oBAAoBm3C,GAAYjvE,KAAKvD,UAAUwO,EAClF,EACAihD,eAAgB,SAAUjhD,EAAK0rB,EAAUo4C,EAAQvxD,EAAIxD,GACnD,OAAOy2C,KAAKqW,MAAM7wC,UAAUQ,OAAOxrB,EACrC,EACA0xB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,GAC/B2L,EAAQk6D,mBAGNl6D,EAAQk6D,WAGjBx4D,EAAK3V,GAAA,GACA2V,GAGDg5D,EACFh5D,EAAMw4D,WAAUnuE,GAAA,CACdorB,WAAY,aACZ+d,gBAAiB,gBACjBl1B,QAAS,CACPk6D,WAAY,CACVtmD,UAAW,CACT,gBACA,sBAGJwmD,gBAAiB,CACfxmD,UAAW,CACT,gBACA,wBAIHlS,EAAMw4D,mBAGJx4D,EAAMw4D,WAGfnuE,GAAAA,GAAA,GACKxG,GAAM,IACTya,QAAAA,EACA0B,MAAAA,GAEJ,EAEM24D,GAA6B,SAAC90E,GAA4B,IAApBm1E,IAAQnsE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GAC5CyR,EAAmBza,EAAnBya,QAAS0B,EAAUnc,EAAVmc,MAkDf,OAhDA1B,EAAOjU,GAAA,GACFiU,GAGD06D,EACF16D,EAAQo6D,gBAAeruE,GAAA,CACrBsE,KAAM,kBACN0oC,OAAQ,QACRzmC,SAAU,QACV0+C,WAAY,SACZC,iBAAkB,gBAClBtrB,YAAa,SAAU/U,EAAMmP,EAAUo4C,EAAQ/gC,GAAc,IAAAyjC,EAAA,KACrDD,EAAW76C,EAAShI,cAAc4tB,YAAc5lB,EAAShI,cAActoB,YAAcswB,EAASjI,gBAChGygD,EAAa3nD,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAIgkE,EAAK3K,MAAM3mD,qBAAqBqxD,EAAU/jE,EAAE,IAC3E,OAAOugC,EAAemhC,EAAWryE,IAAI2zD,KAAKqW,MAAMhvC,qBAAuBtQ,EAAK1qB,IAAIkD,KAAKvD,UACvF,EACAyvD,eAAgB,SAAU1kC,EAAMmP,EAAUo4C,EAAQvxD,EAAIxD,GAAO,IAAA03D,EAAA,KAC3D,OAAOlqD,EAAK1qB,KAAI,SAAA2Q,GAAC,OAAIikE,EAAK5K,MAAM7wC,UAAUQ,OAAOhpB,EAAE,GACrD,EACAkvB,gBAAiB,SAAU1xB,GAAO,OAAOwlD,KAAKqW,MAAMhwC,WAAW7rB,EAAM,EACrEuQ,KAAM,SAACvQ,EAAK0jB,GAAa,OAAM1jB,CAAG,GAC/B2L,EAAQo6D,wBAGNp6D,EAAQo6D,gBAGjB14D,EAAK3V,GAAA,GACA2V,GAGDg5D,EACFh5D,EAAM04D,gBAAeruE,GAAA,CACnBmpC,gBAAiB,qBACjBl1B,QAAS,CACPo6D,gBAAiB,CACfxmD,UAAW,CACT,qBACA,6BAIHlS,EAAM04D,wBAGJ14D,EAAM04D,gBAGfruE,GAAAA,GAAA,GACKxG,GAAM,IACTya,QAAAA,EACA0B,MAAAA,GAEJ,EAEaG,GAAe,CAC1BC,UAAAA,GACAi5D,aAhPmB,SAACx1E,EAAQu0E,GAC5B,OAAOD,GAAWt0E,EAAQu0E,GAAQ,EACpC,GAmPIv0E,GAAS,CACX6uB,aA/lDmB,CACnB4mD,IAAK,CACH7xE,MAAO,MACPi/D,UAAW,OACX/zC,cAAe,MACf4mD,QAAS,MACThwC,SAAU,MACViwC,UAAW,CAAC,MAAO,MACnB/S,aAAc,KACdxwB,WAAY,SAAUntC,EAAU4yB,EAAM/rB,EAAK+lC,GACzC,IAAIzuB,EAAMne,EAAS2B,KAAO,EAAI3B,EAASpE,KAAK,KAAOgxC,EAAe,MAAQ,MAAQ,KAAO5sC,EAASq7B,QAOlG,OANIr7B,EAAS2B,KAAO,GAAKkF,KACvBsX,EAAMkxC,KAAKqW,MAAM/uC,iBAAiBxY,IAEhCtX,IACFsX,EAAM,OAASA,GAEVA,CACT,EACAsuC,cAAe,SAAUzsD,EAAU4yB,EAAM/rB,GACvC,IAAIsX,EAAMne,EAAS2B,KAAO,EAAI3B,EAASpE,KAAK,SAAqBoE,EAASq7B,QAO1E,OANIr7B,EAAS2B,KAAO,GAAKkF,KACvBsX,EAAMkxC,KAAKqW,MAAM/uC,iBAAiBxY,IAEhCtX,IACFsX,EAAM,OAASA,GAEVA,CACT,EACAwa,eAAgB,SAAU34B,EAAU4yB,EAAM/rB,EAAK6xB,GACzC7xB,IAAK6xB,GAAe,GACxB,IAAIva,EAAMne,EAAS2B,KAAO,EAAI3B,EAASpE,KAAK,QAAoBoE,EAASq7B,QAOzE,OANKr7B,EAAS2B,KAAO,GAAKkF,KAAS6xB,IACjCva,EAAMkxC,KAAKqW,MAAM/uC,iBAAiBxY,IAEhCtX,IACFsX,EAAM,IAAMA,GAEPA,CACT,GAEFwyD,GAAI,CACFhyE,MAAO,KACPi/D,UAAW,MACX/zC,cAAe,KACf4mD,QAAS,KACThwC,SAAU,KACViwC,UAAW,CAAC,KAAM,MAClB/S,aAAc,MACdxwB,WAAY,SAACntC,EAAU4yB,EAAM/rB,EAAK+lC,GAChC,OAAO5sC,EAAS2B,KAAO,GAClBkF,EAAM,OAAS,IAAM,IAAM7G,EAASpE,KAAK,KAAOgxC,EAAe,KAAO,MAAQ,KAAO,KACrF/lC,EAAM,QAAU,IAAM7G,EAASq7B,SAAWx0B,EAAM,IAAM,GAC7D,EACA4lD,cAAe,SAACzsD,EAAU4yB,EAAM/rB,GAC9B,OAAO7G,EAAS2B,KAAO,GAClBkF,EAAM,OAAS,IAAM,IAAM7G,EAASpE,KAAK,QAAoB,KAC7DiL,EAAM,QAAU,IAAM7G,EAASq7B,SAAWx0B,EAAM,IAAM,GAC7D,EACA8xB,eAAgB,SAAC34B,EAAU4yB,EAAM/rB,EAAK6xB,GAEpC,OADI7xB,IAAK6xB,GAAe,GACjB14B,EAAS2B,KAAO,GAClBkF,EAAM,IAAM,KAAO6xB,EAAe,GAAK,KAAO14B,EAASpE,KAAK,SAAqB88B,EAAe,GAAK,MACrG7xB,EAAM,KAAO,IAAM7G,EAASq7B,SAAWx0B,EAAM,IAAM,GAC1D,IAgiDFuiB,UAAAA,GACA5T,QAAAA,GACA0B,MAzoBY,CACZzB,KAAM,CACJi1B,gBAAiB,QACjB/d,WAAY,OACZnX,QAAS,CACPC,KAAM,CACJ2T,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,YACA,WACA,eACA,UACA,eAEFkiC,YAAa,CAAC,EACdC,QAAS,CAAC,GAEZ31C,SAAU,CACRwT,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFkiC,YAAa,CAAC,EACdC,QAAS,CAAC,GAEZh7C,MAAO,CACL6Y,UAAW,CAET,QACA,YACA,gBAKRtT,OAAQ,CACN40B,gBAAiB,QACjB/d,WAAY,SACZnX,QAAS,CACPM,OAAQ,CACNsT,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJ7b,OAAQ,CACN6b,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKR1S,KAAM,CACJg0B,gBAAiB,QACjBl1B,QAAS,CACPkB,KAAM,CACJ0S,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRxS,KAAM,CACJ8zB,gBAAiB,QACjBl1B,QAAS,CACPoB,KAAM,CACJwS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRtS,SAAU,CACR4zB,gBAAiB,QACjBl1B,QAAS,CACPsB,SAAU,CACRsS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRhT,OAAQ,CACNuW,WAAY,SACZ+d,gBAAiB,gBACjBl1B,QAAS,CACPY,OAAQ,CACNgT,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJpT,YAAa,CACXoT,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRpT,YAAa,CACX00B,gBAAiB,qBACjBl1B,QAAS,CACPQ,YAAa,CACXoT,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKR5S,QAAS,CACPk0B,gBAAiB,QACjBl1B,QAAS,CACPgB,QAAS,CACP4S,UAAW,CACT,QACA,YACA,UACA,eAEFkiC,YAAa,CAGX,GAGJ/6C,MAAO,CACL6Y,UAAW,CACT,QACA,gBAKR,SAAU,CACRshB,gBAAiB,OACjB/d,WAAY,SACZnX,QAAS,CACPM,OAAQ,CACNw1C,YAAa,CACX7+C,IAAK,GAEP2c,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEFmiC,QAAS,CACP4a,MAAO,CACLxnE,MAAO,YAET2nE,UAAW,CACT3nE,MAAO,YAET8nE,KAAM,CACJ9nE,MAAO,WAETkoE,cAAe,CACbloE,MAAO,YAETsoE,QAAS,CACPtoE,MAAO,WAET0oE,iBAAkB,CAChB1oE,MAAO,YAETiqE,QAAS,CACPjqE,MAAO,iBAETqqE,YAAa,CACXrqE,MAAO,yBASjB,WAAc,CACZguB,WAAY,aACZnX,QAAS,CACPs5D,WAAY,CACVxjB,YAAa,CAAC,MAwXpB9vD,SAAAA,GACA2b,IAAAA,IASF,SANApc,GAASuc,GAAUvc,GAAQ,CACzB,cACA,aACA,oBCjnDK,IAAM61E,GAAY,YACZC,GAAiB,iBACjBC,GAAe,eACfC,GAAkB,kBAClBC,GAAU,UACVC,GAAW,WACXC,GAAc,cACdC,GAAY,YACZC,GAAgB,gBAChBC,GAAe,eACfC,GAAY,YACZC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAsB,sBACtBC,GAAW,WAEXC,GAAW,WAEXC,GAAY,YAEZC,GAAkB,QAClBC,GAAmB,SACnBC,GAAmB,SACnBC,GAAoB,UAEpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAe,e,2mDCI5B,IAAMC,GAAc,SAACC,EAAO5uE,EAAMoC,EAAMysE,EAAatsD,EAAYjrB,GAAuC,IAAAg8C,EAA/B/2C,EAAQ+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAM4kB,EAAI5kB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEhG,IADmBsuE,EAAMjxD,MAAMtB,GAAerc,IAG5C,OAAO4uE,EAGT,IAAME,GAAYvsD,SAAe,QAAL+wB,EAAV/wB,EAAYpF,WAAG,IAAAm2B,OAAA,EAAfA,EAAAz+B,KAAA0N,EAAkB,QAASssD,EACtCpiB,EAA0Bn1D,EAAOS,SAAjC00D,uBACD1/B,EAAY/sB,EAAKob,KAAK0zD,GACtBC,GAAiBtiB,EACjBzrC,IAAkBkE,UAAAA,EAAMlE,eAExBguD,EAAYJ,EAelB,OAdAA,EAAQK,GAAQL,EAAO5uE,EAAMoC,EAAM0sE,EAAWrmC,GAAuBnxC,GAAQkzD,OAAM3mC,EAAAA,EAAAA,IAAOtB,IAAe,CAAC,GAAIjrB,EAAQiF,MACxGyyE,IACPzyE,GAAaykB,IAChB4tD,EAAQA,EAAMtwD,MAAMjC,GAAe0Q,EAAW,aAAc,IAAIlW,EAAAA,GAAAA,YAG5Dk4D,IACFH,EAAQK,GAAQL,EAAO7hD,EAAW,OAAQ1O,IAAQqpB,GAAsBpwC,GAASA,KAIrFs3E,EAAQ7wD,GAAe6wD,IAGlBA,CACT,EAkJMK,GAAU,SAACL,EAAO5uE,EAAMoC,EAAMysE,EAAatsD,EAAYjrB,GAA4B,IAAAwmE,EAApBvhE,EAAQ+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC9E,GAAa,iBAAT8B,EACF,MAAM,IAAIwhB,MAAM,2CAClB,IAAMsrD,EAAaN,EAAMjxD,MAAMtB,GAAerc,IAC9C,IAAKkvE,EAEH,OAAON,EAET,IASIO,EAAeC,EATbvsE,GAAK0f,SAAe,QAALu7C,EAAVv7C,EAAYpF,WAAG,IAAA2gD,OAAA,EAAfA,EAAAjpD,KAAA0N,EAAkB,QAASssD,EACtCp1E,EAA2DnC,EAAOS,SAA1Ds3E,EAAgB51E,EAAhB41E,iBAAkBC,EAAgB71E,EAAhB61E,iBAAkBC,EAAU91E,EAAV81E,WAEtCC,EAAyB,iBADdZ,EAAMzxD,IAAI,QAErBsyD,EAAYD,EAAYZ,EAAMjxD,MAAMtB,GAAerc,EAAK0vE,KAAK,KAAO,KACpEC,EAAetzD,GAAerc,EAAM,aACpC4vE,EAAiBhB,EAAMjxD,MAAMgyD,GAC7BxvD,IAAgByvD,GAAkBA,EAAe1xE,KACjD2xE,EAAqB1vD,EAAcyvD,EAAe1xE,KAAO,KAElD,eAATkE,GACF+sE,EAAgBU,EAChBT,EAAYC,GACM,UAATjtE,GACT+sE,EAAgBnvE,EAAK9B,KACrBkxE,EAAYG,GACyB,gBAA5BL,aAAU,EAAVA,EAAY/xD,IAAI,WAGzBgyD,EAA4BhtD,GAAZqtD,EAAqCC,EAAsCb,GAC3FQ,EAAYE,GAEd,IAAM9rB,GAAS4rB,IAAaD,GAAiBA,EAAgBC,EAEvD5uE,EAAO,CAAC4B,KAAAA,EAAMS,GAAAA,EAAI0f,WAAAA,GACxButD,GAAcx4E,EAAQkJ,EAAMjE,GAE5B,IAAMwzE,EAA6B,eAAT3tE,GAAyB+d,GAAyD,MAA1CyvD,EAAertB,OAAOplC,IAAI,aAE5F,GAAIqmC,EAAQ,CACV,IAAMlkB,EAAc,IAAIzoB,EAAAA,GAAAA,YAAoBqG,EAAAA,EAAAA,GAAC,CAAC,EAC3Cra,EAAK,IAAIgU,EAAAA,GAAAA,IAAcrW,KAE1B,GAAK2f,EAEE,GAAI4vD,EAAmB,CAC5B,IAAMxtB,EAAOqtB,EAAertB,OACtBytB,EAAsB,IAAIn5D,EAAAA,GAAAA,YAAoBqG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACnDra,EAAK,IAAIgU,EAAAA,GAAAA,IAAcrW,IACvB+hD,EAAKplC,IAAI,MAAQolC,IAGpBqsB,GADAA,EAAQA,EAAMhxD,SAASvB,GAAeszD,EAAc,YAAaptB,EAAKplC,IAAI,SAC5D8yD,QAAQN,EAAcK,EACtC,MACEpB,EAAQA,EAAMqB,QAAQN,EAAcrwC,QAVpCsvC,EAAQA,EAAMtwD,MAAMqxD,EAAcrwC,GAYpCsvC,EAAQ7wD,GAAe6wD,EACzB,CACA,OAAOA,CACT,EAMMsB,GAAa,SAACtB,EAAO5uE,GAGzB,OAFA4uE,EAAQA,EAAMhxD,SAASvB,GAAerc,IAC9B+d,GAAe6wD,EAEzB,EAmNM1tE,GAAW,SAAC0tE,EAAO5uE,EAAMs7C,EAAUhkD,EAAQuyB,GAAgC,IAAAsmD,EAAAh1B,EAAAC,EAAAC,EAAf+0B,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnE+vE,EAAczB,EAAMjxD,MAAMtB,GAAerc,IAC/C,IAAKqwE,EAEH,MAAO,CAACzB,MAAAA,GAEV,IAAQ74B,EAA4Bq6B,EAA5Br6B,WAAYC,EAAgBo6B,EAAhBp6B,YACpB,IAAKsF,EAEH,MAAO,CAACszB,MADRA,EAAQsB,GAAWtB,EAAO5uE,IAI5B,IAAAy7C,EAA+DnkD,EAAOS,SAA/D4zB,EAAc8vB,EAAd9vB,eAAgBghC,EAAkBlR,EAAlBkR,mBAAoB5kB,EAAgB0T,EAAhB1T,iBACvCh7B,MAAMC,QAAQsuC,KAChBA,EAAWA,EAASnjD,KAAKwzB,IAE3B,IAAMixB,EAAcyzB,EAAYlzD,IAAI,QAC9BmzD,EAAoBD,EAAYlzD,IAAI,cACpCozD,EAA8B,cAAf3zB,EACfZ,EAAkBs0B,aAAiB,EAAjBA,EAAmBnzD,IAAI,YAEzCu/B,EAAiBryB,GAAe/yB,EAAQgkD,GAC9C,IAAKoB,EAEH,OADAriC,QAAQE,KAAK,qBAADL,OAAsBohC,IAC3B,CAACszB,MAAAA,GAEV,IAAIxlD,EAAYszB,EAAet6C,KACb,WAAdgnB,GAAwC,YAAdA,IAC5BA,EAAY,MAGd,IAAM6yB,EAAkBq0B,aAAiB,EAAjBA,EAAmBnzD,IAAI,YACzCqzD,EAAyBF,aAAiB,EAAjBA,EAAmBnzD,IAAI,mBAChD2+B,EAAew0B,aAAiB,EAAjBA,EAAmBnzD,IAAI,SAMtC2C,EAAqC,UAAvB48B,EAAet6C,KAC7BquE,EAAiB3wD,GAAsC,SAAvB48B,EAAevvB,KAC/CujD,EAAwBH,GAAgBzwD,EAKxC6wD,EAASj0B,IAA0E,KAAhC,QAAxByzB,EAAAzzB,EAAe/2B,iBAAS,IAAAwqD,OAAA,EAAxBA,EAA0BjoE,QAAQ+zC,IAA0BA,EAAkB,KAEzG20B,EADiC,SAApB50B,IAA8BF,SAAiB,QAALX,EAAZW,EAAc3+B,WAAG,IAAAg+B,OAAA,EAAjBA,EAAAtmC,KAAAinC,EAAoB,YAAoB,QAAbV,EAAKE,SAAQ,IAAAF,GAAK,QAALC,EAARD,EAAUj+B,WAAG,IAAAk+B,OAAA,EAAbA,EAAAxmC,KAAAumC,EAAgB,YAC7Du1B,EAChCp1B,EAAc,KACZ3G,EAA+B,SAApBoH,EACb2F,GAAoBrqD,EAAQ8xB,GAC5ByrB,GAAqBv9C,EAAQgkD,GACjC,GAAI1G,GAA+B,GAAnBA,EAASr0C,OACvBg7C,EAAc3G,EAAS,QACpB,GAAIg8B,EACPr1B,EAAco1B,OACX,GAAI/7B,GAAYA,EAASr0C,OAAS,EAAG,KACDg9B,EADCC,EAAA5hB,GACnB+wC,GAAkB,IAAvC,IAAAnvB,EAAA3hB,MAAA0hB,EAAAC,EAAA1hB,KAAAC,MAAyC,KAAhC80D,EAAQtzC,EAAApmC,MAOf,GANgB,QAAZ05E,GAAuBH,EAEN,WAAZG,EACPt1B,EAAczU,GAAmBxvC,EAAQgkD,GAAU,GAChC,SAAZu1B,IACPt1B,EAAcjU,GAAiBhwC,EAAQgkD,IAJvCC,EAAco1B,EAKZp1B,EACF,KACJ,CAAC,OAAAv/B,GAAAwhB,EAAA/4B,EAAAuX,EAAA,SAAAwhB,EAAAvhB,GAAA,CACH,CAEA,IAAK6D,IAAgB48B,EAAe/2B,UAElC,OADAtL,QAAQE,KAAK,QAADL,OAASwiC,EAAet6C,KAAI,sBACjC,CAACwsE,MAAAA,GAGN2B,IAAiBzwD,IAGnB8uD,GADAA,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,QAAS,SACpC4d,SAASvB,GAAerc,EAAM,eAC9Bse,MAAMjC,GAAerc,EAAM,cAAe,IAAI6W,EAAAA,GAAAA,aAGzDy5D,IACH1B,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,cAAe,IAAI6W,EAAAA,GAAAA,aAG9D,IAAMw9B,GAAUtM,EAChB,GAAIjoB,EAAa,CACf8uD,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,QAAS,cAClD,IAAAkoC,EAAkFC,GAChF7wC,EAAQA,EAAQg5E,EAAmBh1B,EAAUC,EAAa,QAASlH,EAAQ0B,EAAYC,GADnEtsC,GAAFw+B,EAAbiV,cAAuBjV,EAARx+B,UAAU0+B,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAAcqS,EAAmBxS,EAAnBwS,oBAGvDo2B,EAAkBroC,GAAuBnxC,EAAQolD,GAAgB8N,MAAM,CACzE19C,MAAOwuC,EACPvvB,SAAU,QACVoB,KAAMuvB,EAAevvB,OAEnBsjD,IACFK,EAAkBA,EAAgBtmB,MAAM,CACtCr6B,SAAUorB,EACVpkD,MAAOuS,EACPrF,SAAU+jC,EACVle,UAAWme,KAIfumC,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,IAAI6W,EAAAA,GAAAA,aAC7CyH,MAAMjC,GAAerc,EAAM,cAAe8wE,GACpDp0B,EAAeq0B,mBAA4C,GAAvBr2B,IAGtCk0B,EAAQK,GAAQL,EAAO5uE,EAAM,OAAQqe,IAAQqpB,GAAsBpwC,EAAQgkD,GAAWhkD,IAExFs3E,EAAQ7wD,GAAe6wD,EACzB,MACEA,EAAQA,EAAMoC,SAAS30D,GAAerc,EAAM,eAAe,SAAC/H,GAAG,OAAKA,EAAIwkB,eAAc,SAACurB,GACrF,IAAAipC,EAEI9oC,GACF7wC,EAAQA,EAAQ0wC,EAASsT,EAAUC,EAAa,QAASlH,EAAQ0B,EAAYC,GAF7EmH,EAAa8zB,EAAb9zB,cAAezzC,EAAQunE,EAARvnE,SAAU0+B,EAAW6oC,EAAX7oC,YAAaC,EAAY4oC,EAAZ5oC,aAAcC,EAAa2oC,EAAb3oC,cAAeC,EAAa0oC,EAAb1oC,cAAewM,EAAUk8B,EAAVl8B,WAKhFm8B,EAAkB51B,EACAvG,IAAeuG,IAEnC41B,EAAkBn8B,GAQhBhN,IAEFC,GADAA,EAAUA,EAAQC,IAAI,aAAcM,IAClBN,IAAI,aAAcK,IAEtC,IAAM6oC,EAAqBh0B,EAAgBqzB,EAAyBjpC,GAAuBjwC,EAAQikD,EAAa21B,GAahH,OAZAlpC,EAAUA,EACPC,IAAI,QAASipC,GAAgB,OACtB,aACPjpC,IAAI,WAAY+T,GAChB/T,IAAI,WAAYsT,GAChBtT,IAAI,kBAAmBkpC,GACvBlpC,IAAI,QAASv+B,GACbu+B,IAAI,WAAYG,GAChBH,IAAI,YAAaI,GACf8U,IACHnV,EAAUA,EAAO,OAAQ,oBAEpBA,CACT,GAAE,IAGJ,MAAO,CAAC4mC,MAAAA,EACV,EAsEMltE,GAAW,SAACktE,EAAO5uE,EAAMi/C,EAAO9nD,EAAO+yB,EAAW5yB,EAAQuyB,GAAgC,IAAfumD,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAExF,IADoBsuE,EAAMjxD,MAAMtB,GAAerc,IAG7C,MAAO,CAAC4uE,MAAAA,GAEV,IAAQ54B,EAA4Bo6B,EAA5Bp6B,YAAaD,EAAeq6B,EAAfr6B,WACrB8d,EAA2Cv8D,EAAOS,SAA3C4zB,EAAckoC,EAAdloC,eAAgBoc,EAAgB8rB,EAAhB9rB,iBACjB1jC,EAAWuqE,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAYi/C,EAAQ,MAAQ,KAC3E,UAAb56C,GAAwB0I,MAAMC,QAAQ7V,KACxCA,EAAQA,EAAMgB,KAAKwzB,IAErB,IAAM7e,EAAQ8hE,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAa,KAEpEmwB,EAAWy+C,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,cAAgB,KAC1EwnC,EAAiB1S,GAAkBx9B,EAAQ64B,EAAUrjB,GACrD4tC,EAAsBvqB,EAAWjb,EAAiBsyB,GAAkB,KAEpEwa,EAAsB93B,GAAa63B,GAAmB5qD,EAAOkN,EAAU/M,GAE7EsiD,EAAgC/D,GAC9Bv+C,EAAQwV,EAAOA,EAAOqjB,EAAUh5B,EAAO6qD,EAAqB39C,EAAUwlB,GAFxDke,EAEiFgO,EAAYC,GAC5G6D,GAAA/0C,EAAAA,EAAAA,GAAA80C,EAAA,GAFM3D,EAAU4D,EAAA,GAAErJ,EAASqJ,EAAA,GAGtBO,EAAa5J,aAAS,EAATA,EAAWv3B,MAAK,SAAAxU,GAAC,OAAKA,EAAEyuC,QAAUzuC,EAAE41C,MAAM,IACvD+2B,EAAkBh3B,EAAanL,GAAoBmL,GAAc,KAGnEJ,EAAU/D,IAAe9+C,EACzB6iD,IACF7iD,EAAQ8+C,GAIV24B,EAAQyC,GAAoBzC,EAAO5uE,EAAM1I,EAAQojD,GAGjD,IAAMj4B,EAAS1V,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,SAACr/C,EAAG8a,GAAC,OAC3DA,GAAK8oC,EAAQ9nD,EAAQy3E,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,QAASmW,EAAI,MAAQ,IAAI,IAC1F6gB,EAAYjqB,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAsB,SAACr/C,EAAG8a,GAAC,OAC9Dy4D,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAYmW,EAAI,MAAQ,IAAI,IACxEupC,EAAgBlF,GAAcljD,EAAQwV,EAAOqjB,EAAU1N,EAAQuU,GAC/D2oB,EAAuBD,EAAgBzQ,GAAoByQ,GAAiB,KAyClF,SAtCoB3X,IADHqpC,IAAoBzxB,GACoB3F,KAWvD40B,EAAQA,EAAMhxD,SAASvB,GAAerc,EAAM,aAAc,yBACrC,IAAV7I,EAETy3E,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,QAASi/C,QAAQzkD,IAC1D8jB,MAAMjC,GAAerc,EAAM,aAAc,YAAai/C,GAAQ,OAExEp1B,IACF+kD,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,mBAAoB6pB,IAG7E+kD,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,QAASi/C,GAAQ9nD,IAC1DmnB,MAAMjC,GAAerc,EAAM,aAAc,YAAai/C,GAAQ+C,KAG5Eja,IAEwB6mC,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,iBAEvE4uE,EAAQA,EACLtwD,MAAMjC,GAAerc,EAAM,aAAc,cAAe,IAAI6W,EAAAA,GAAAA,KAAe,IAAI9J,MAAM2tC,MAG1Fk0B,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,aAAci/C,GAAQmyB,GAEzE12B,GAAuB,IACzBk0B,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,aAAc06C,GAAsBiF,KAIxF,CAACivB,MAAAA,EACV,EAyFMyC,GAAsB,SAACzC,EAAO5uE,EAAM1I,EAAQojD,GAChD,IAAKA,EAAqB,CACxB,IAAM5tC,EAAQ8hE,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAa,KACpEmwB,EAAWy+C,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,cAAgB,KAC1EwnC,EAAiB1S,GAAkBx9B,EAAQ64B,EAAUrjB,GAC3D4tC,EAAsBvqB,EAAWjb,EAAiBsyB,GAAkB,IACtE,CAEA,IAAK,IAAL5vB,EAAA,EAAAg7B,EAAgB,CAAC,QAAS,YAAa,aAAc,YAAWh7B,EAAAg7B,EAAAryC,OAAAqX,IAAE,CAA7D,IAAM1f,EAAC06C,EAAAh7B,GACLg3D,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc9H,MAClD02E,EAAQA,EACLtwD,MAAMjC,GAAerc,EAAM,aAAc9H,GAAI,IAAI2e,EAAAA,GAAAA,KAChD6jC,EAAsB3tC,MAAMmf,KAAK,CAAC3rB,OAAQm6C,IAAwB,KAG1E,CAEA,OAAOk0B,CACT,EAGMkB,GAAgB,SAAhBA,EAAiBx4E,EAAQkJ,EAAMjE,GAC/BA,GAAYwQ,MAAMC,QAAQzQ,KAC5BiE,EAAK0hB,UAAY,IAAIrL,EAAAA,GAAAA,WACnBta,EAAS6c,QAAO,SAACnhB,EAAKsjB,GAAO,IAAA+1D,EACrBC,EAAW,QAARD,EAAG/1D,EAAG1Y,UAAE,IAAAyuE,EAAAA,EAAIjzD,IACfmzD,EAAG1zE,GAAAA,GAAA,GACJyd,GAAE,IACLgH,WAAYmmB,GAAsBpxC,EAAQikB,GAAIivC,OAAM3mC,EAAAA,EAAAA,IAAOtI,EAAGgH,aAAe,CAAC,GAC9E1f,GAAI0uE,IAIN,OAFAzB,EAAcx4E,EAAQk6E,EAAKA,EAAItvD,WAE/BpkB,GAAAA,GAAA,GACK7F,GAAG,IAAAilB,EAAAA,EAAAA,GAAA,GACLq0D,EAAM,IAAI16D,EAAAA,GAAAA,IAAc26D,IAE7B,GAAG,CAAC,IAGV,EAOMC,GAAY,CAChBC,SAAU,CACR7uE,GAAI,KACJsW,EAAG,KACHw4D,EAAG,KACHj0C,EAAG,KACHrU,EAAG,MAELuoD,SAAU,CAAC,EACXC,UAAW,CACThvE,GAAI,OC75BKivE,GAAU,SAACx6E,EAAQ2lB,GAAI,MAAM,CACxC7a,KAAMqsC,GACNxxB,KAAMA,EACN3lB,OAAQA,EACT,EAOYy6E,GAAU,SAACz6E,EAAQ0I,EAAMuiB,GAAU,IAAsC+jB,EAAmBhmC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACpH8B,KAAMqsC,GACNujC,SAFwD1xE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,OAG3D/D,SAH2E+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAI9EN,KAAM8W,EAAgB9W,GACtB6C,GAAIwb,IACJkE,WAAYmlB,GAAsBpwC,EAAQgvC,GAAqBkkB,OAAM3mC,EAAAA,EAAAA,IAAOtB,IAAe,CAAC,GAC5FjrB,OAAQA,EACT,EAMY26E,GAAa,SAAC36E,EAAQ0I,GAAI,MAAM,CAC3CoC,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtB1I,OAAQA,EACT,EAOY46E,GAAsB,SAAC56E,EAAQ0I,EAAMuiB,GAAU,IAAEhmB,EAAQ+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACjF8B,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBzD,SAAUA,EACVsG,GAAIwb,IACJkE,WAAYkmB,GAAuBnxC,GAAQkzD,OAAM3mC,EAAAA,EAAAA,IAAOtB,IAAe,CAAC,GACxEjrB,OAAQA,EACR4tB,KAAM,CACJlE,eAAe,GAElB,EAOYmxD,GAAe,SAAC76E,EAAQ0I,EAAMuiB,GAAU,IAAEhmB,EAAQ+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CAC1E8B,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBzD,SAAUA,EACVsG,GAAIwb,IACJkE,WAAYkmB,GAAuBnxC,GAAQkzD,OAAM3mC,EAAAA,EAAAA,IAAOtB,IAAe,CAAC,GACxEjrB,OAAQA,EACT,EAOY86E,GAAW,SAAC96E,EAAQ0I,EAAMuiB,GAAU,IAAEhmB,EAAQ+D,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACtE8B,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBzD,SAAUA,EACVsG,GAAIwb,IACJkE,WAAYkmB,GAAuBnxC,GAAQkzD,OAAM3mC,EAAAA,EAAAA,IAAOtB,IAAe,CAAC,GACxEjrB,OAAQA,EACT,EAMY+6E,GAAc,SAAC/6E,EAAQ0I,GAAI,MAAM,CAC5CoC,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtB1I,OAAQA,EACT,EAQYg7E,GAAW,SAACh7E,EAAQi7E,EAAUC,EAAQ72E,GAAS,MAAM,CAChEyG,KAAMqsC,GACN8jC,SAAUz7D,EAAgBy7D,GAC1BC,OAAQ17D,EAAgB07D,GACxB72E,UAAWA,EACXrE,OAAQA,EACT,ECrGY0L,GAAiB,SAAC1L,EAAQ0I,EAAMusB,GAAW,MAAM,CAC5DnqB,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBusB,YAAaA,EACd,EAOYlpB,GAAS,SAAC/L,EAAQ0I,EAAMoD,GAAG,MAAM,CAC5ChB,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBoD,IAAKA,EACN,EAOYqvE,GAAU,SAACn7E,EAAQ0I,EAAM0yE,GAAI,MAAM,CAC9CtwE,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtB0yE,KAAMA,EACP,EC1BYxxE,GAAW,SAAC5J,EAAQ0I,EAAM8M,EAAO+c,EAAiBumD,GAAK,MAAM,CACxEhuE,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtB8M,MAAAA,EACAxV,OAAAA,EACAuyB,gBAAAA,EACAumD,MAAAA,EACD,EAOYuC,GAAc,SAACr7E,EAAQ0I,EAAMsE,GAAM,MAAM,CACpDlC,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBsE,OAAQA,EACRhN,OAAQA,EACT,EAOYs7E,GAAc,SAACt7E,EAAQ0I,EAAMmwB,GAAQ,MAAM,CACtD/tB,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBmwB,SAAUA,EACV74B,OAAQA,EACT,EAUYoK,GAAW,SAACpK,EAAQ0I,EAAMi/C,EAAO9nD,EAAO+yB,EAAWL,EAAiBumD,GAAK,MAAM,CAC1FhuE,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBi/C,MAAAA,EACA9nD,MAAAA,EACA+yB,UAAAA,EACAL,gBAAAA,EACAvyB,OAAAA,EACA84E,MAAAA,EACD,EAQYzrE,GAAc,SAACrN,EAAQ0I,EAAMi/C,EAAO36C,EAAQ8rE,GAAK,MAAM,CAClEhuE,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBi/C,MAAAA,EACA36C,OAAAA,EACAhN,OAAAA,EACA84E,MAAAA,EACD,EAYYyC,GAAe,SAACv7E,EAAQ0I,EAAMi/C,EAAO6zB,EAAavnD,EAAQp0B,EAAO+yB,EAAWL,EAAiBumD,GAAK,MAAM,CACnHhuE,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtBi/C,MAAAA,EACA6zB,YAAAA,EACAvnD,OAAAA,EACAp0B,MAAAA,EACA+yB,UAAAA,EACAL,gBAAAA,EACAvyB,OAAAA,EACA84E,MAAAA,EACD,EAQY2C,GAAoB,SAACz7E,EAAQ0I,EAAM8C,EAAM3L,GAAK,MAAM,CAC/DiL,KAAMqsC,GACNzuC,KAAM8W,EAAgB9W,GACtB8C,KAAMA,EACN3L,MAAOA,EACPG,OAAQA,EACT,E,ykBCrGD,IAAMpB,GAAK4H,GAAAA,GAAAA,GAAA,GACNk1E,GAAU,IACbC,OAAAA,EAAQC,OAAAA,EAERt/D,aAAAA,IAEGq/D,GAAWC,G,sBCdhB,SLu8BA,SAAgBC,EAAel2D,EAAMm2D,EAAiBC,EAAaC,GACjE,IACMC,EAAUz1E,GAAA,CACdmf,KAFeA,GAGZw0D,IAGL,OAAO,WAAgC,IAAAn0E,EAAAk2E,EAA/B5E,EAAKtuE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAGizE,EAAYE,EAAMnzE,UAAAC,OAAA,EAAAD,UAAA,QAAA9F,EAC1BlD,EAA4C,QAAtCgG,EAAoB,QAApBk2E,EAAGF,aAAa,EAAbA,WAAiB,IAAAE,EAAAA,EAAIC,aAAM,EAANA,EAAQn8E,cAAM,IAAAgG,EAAAA,EAAI61E,EAElDlrC,EAAM,CAAC,EACPyrC,EAvCc,SAACD,EAAQ7E,GAC7B,IAAK6E,IAAWA,EAAOrxE,KACrB,OAAO,KACT,IAWmBuxE,EARbC,EAAsB,CAC1BnlC,GACAA,GACAA,GACAA,IAEEvpB,EAAO2uD,KAAU15E,KAAKs5E,EATD,CACvB,SAAU,oBAQyC18D,GACjD+8D,EAAgBL,EAAOzzE,MAhCZ,SAAC4uE,EAAO5uE,GAEvB,OADc4uE,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAa,IAE5E,CA6BqC+zE,CAASnF,EAAM3xD,KAAMw2D,EAAOzzE,OAASyzE,EAAO3mE,MAQ/E,OAPIgnE,IACe,QAAjBH,EAAIG,SAAa,IAAAH,GAAbA,EAAeh9D,OACjBm9D,EAAgBA,EAAcn9D,QAChCuO,EAAK4uD,cAAgBA,IAEnBF,EAAoB70E,SAAS00E,EAAOrxE,OAA2C,GAAlCqxE,EAAOrxE,KAAK8F,QAAQ,cACnEgd,EAAO,MACFA,CACT,CAiBqB8uD,CAAcP,EAAQ7E,GAEvC,OAAQ6E,aAAM,EAANA,EAAQrxE,MAChB,KAAKqsC,GACH,IAAMwlC,EAAgBb,EAAgB97E,EAAQm8E,EAAOx2D,MACrDgrB,EAAIhrB,KAAOg3D,EACX,MAGF,KAAKxlC,GACHxG,EAAIhrB,KAAO0xD,GAAYC,EAAM3xD,KAAMw2D,EAAOzzE,KAAM,aAAcyzE,EAAO5wE,GAAI4wE,EAAOlxD,WAAYjrB,EAASm8E,EAAOl3E,SAAUk3E,EAAOvuD,MAC7H,MAGF,KAAKupB,GACHxG,EAAIhrB,KAAO0xD,GAAYC,EAAM3xD,KAAMw2D,EAAOzzE,KAAM,QAASyzE,EAAO5wE,GAAI4wE,EAAOlxD,WAAYjrB,EAASm8E,EAAOl3E,SAAUk3E,EAAOvuD,MACxH,MAGF,KAAKupB,GACHxG,EAAIhrB,KAp6BU,SAAC2xD,EAAO5uE,EAAM1I,GAEhC,IADmBs3E,EAAMjxD,MAAMtB,GAAerc,IAG5C,OAAO4uE,EAGTA,EAAQsB,GAAWtB,EAAO5uE,GAE1B,IAAOwsD,EAAsBl1D,EAAOS,SAA7By0D,mBACD6H,EAAar0D,EAAK8Y,MAAM,GAAI,GAkBlC,OAjB4BqH,GAAYyuD,EAAOva,IACpB7H,IAEzBoiB,EAAQnwD,GAAqBmwD,IAEzB/rD,GAAY+rD,IAAWpiB,KAIzBoiB,EAAQK,GACNL,EAAO,IAAI/3D,EAAAA,GAAAA,KAAkB,OAAQwH,IACrCqpB,GAAsBpwC,OAAQkD,OAAWA,GAJX,GACZ,GAIlBlD,IAIEymB,GAAe6wD,EAEzB,CAu4BiByD,CAAYzD,EAAM3xD,KAAMw2D,EAAOzzE,KAAM1I,GAChD,MAGF,KAAKm3C,GACHxG,EAAIhrB,KAAOgyD,GAAQL,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOzB,SAAUyB,EAAO5wE,GAAI4wE,EAAOlxD,WAAYjrB,EAAQm8E,EAAOl3E,UAC1G,MAGF,KAAKkyC,GACHxG,EAAIhrB,KA34BS,SAAC2xD,EAAO5uE,EAAM1I,GAE/B,IADmBs3E,EAAMjxD,MAAMtB,GAAerc,IAG5C,OAAO4uE,EAGTA,EAAQsB,GAAWtB,EAAO5uE,GAE1B,IAAOwsD,EAAsBl1D,EAAOS,SAA7By0D,mBACD6H,EAAar0D,EAAKkN,MAClB2T,EAAS+tD,EAAMjxD,MAAMtB,GAAeg4C,IAEpCnsC,EAAcrH,EAAOlD,MAAM,CAAC,aAAc,UAC1Cu2D,EAAiBrzD,EAAOlD,MAAM,CAAC,aAAc,aAE7C0R,EAAoBnH,EAAcmC,GAAe/yB,EAAQ4wB,GAAe,KACxEisD,EAAuBD,EAAiBp/C,GAAkBx9B,EAAQ48E,EAAgBhsD,GAAe,KACjGksD,EAAoBlsD,GAAegsD,GAAsD,GAApCC,EAAqB9+D,YAE1Eg/D,EAA0C,cAAtBxzD,EAAO1D,IAAI,QAC/Bm3D,GAAsBn0D,GAAYyuD,EAAOva,GACzCkgB,EAAgBF,EAClBD,GAAqB/kD,EAAkB0hD,kBACvCvkB,EAuBJ,OArBI8nB,IAAuBC,IACrBF,IAEFzF,EAAQA,EAAMhxD,SAASvB,GAAeg4C,KAIxCua,EAAQnwD,GAAqBmwD,GAEzB/rD,GAAY+rD,KAAWpiB,KAIzBoiB,EAAQK,GACNL,EAAO,IAAI/3D,EAAAA,GAAAA,KAAkB,OAAQwH,IACrCqpB,GAAsBpwC,OAAQkD,OAAWA,GAJX,GACZ,GAIlBlD,IAIEymB,GAAe6wD,EAEzB,CA21BiBqD,CAAWrD,EAAM3xD,KAAMw2D,EAAOzzE,KAAM1I,GAC/C,MAGF,KAAKm3C,GACHxG,EAAIhrB,KA3zBa,SAAC2xD,EAAO5uE,EAAMusB,GAEnC,OADmBqiD,EAAMjxD,MAAMtB,GAAerc,IAK9C4uE,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,eAAgBusB,GAF9DqiD,CAIX,CAmzBiB5rE,CAAe4rE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOlnD,aAC1D,MAGF,KAAKkiB,GACHxG,EAAIhrB,KA91BK,SAAC2xD,EAAO5uE,EAAMoD,GAE3B,OADmBwrE,EAAMjxD,MAAMtB,GAAerc,IAK9C4uE,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,OAAQoD,GAFtDwrE,CAIX,CAs1BiBvrE,CAAOurE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOrwE,KAClD,MAGF,KAAKqrC,GACH,IAAcnxB,EAAWpc,GACvB0tE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAO3mE,MAAOxV,EACvCm8E,EAAO5pD,gBAAiB4pD,EAAOrD,OAF1BxB,MAIP3mC,EAAIhrB,KAAOK,EACX,MAGF,KAAKmxB,GACHxG,EAAIhrB,KA/pBU,SAAC2xD,EAAO5uE,EAAMsE,EAAQhN,GACxC,IAAM+4E,EAAczB,EAAMjxD,MAAMtB,GAAerc,IAC/C,IAAKqwE,EAEH,OAAOzB,EAGT,IAAOlzB,EAA6BpkD,EAAOS,SAApC2jD,0BACD40B,EAAoBD,EAAYlzD,IAAI,cACpC2+B,EAAew0B,aAAiB,EAAjBA,EAAmBnzD,IAAI,SACtCq3D,EAAkBlE,aAAiB,EAAjBA,EAAmBnzD,IAAI,aACzCs/B,EAAqBpyB,GAAe/yB,EAAQwkD,GAK9C1yB,GAAYqzB,aAAkB,EAAlBA,EAAoBr6C,OAAQoyE,EACvCprD,GAA2B,WAAdA,GAAwC,YAAdA,IAC1CA,EAAY,MAEd,IAAM+zB,GAAiBC,GAAYr+C,SAASqqB,GAoB5C,OANEwlD,EAbgBlzB,IAA8BiJ,GAAY0rB,EAAa/4E,IAAW6lD,GAWlFyxB,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,SAAU,OACnD4d,SAASvB,GAAerc,EAAM,aAAc,gBAE5Cse,MAAMjC,GAAerc,EAAM,aAAc,aAAcopB,GAT7DwlD,EAAMtwD,MACZjC,GAAerc,EAAM,cACrB0nC,GAAsBpwC,EAAQ,KAAM,MAAM,KAWhCgnB,MAAMjC,GAAerc,EAAM,aAAc,YAAasE,EAGtE,CAsnBiBquE,CAAY/D,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOnvE,OAAQhN,GAC/D,MAGF,KAAKm3C,GACHxG,EAAIhrB,KAl2BM,SAAC2xD,EAAO5uE,EAAM0yE,GAE5B,OADmB9D,EAAMjxD,MAAMtB,GAAerc,IAK9C4uE,EAAQvxD,GAAqBuxD,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,YAAa0yE,IAFhF9D,CAIX,CA01BiB6D,CAAQ7D,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOf,MACnD,MAGF,KAAKjkC,GACHxG,EAAIhrB,KA/YU,SAAC2xD,EAAO5uE,EAAMu7C,EAAajkD,GAC7C,IAAM+4E,EAAczB,EAAMjxD,MAAMtB,GAAerc,IAC/C,IAAKqwE,EAEH,OAAOzB,EAET,IAAO7mC,EAAoBzwC,EAAOS,SAA3BgwC,iBACDxlB,EAAa8tD,EAAYlzD,IAAI,cAC7B5gB,EAAW8zE,EAAYlzD,IAAI,aAC3B2+B,EAAev5B,EAAWpF,IAAI,SAE9B6K,GADkBzF,EAAWpF,IAAI,YACnBkN,GAAe/yB,EAAQwkD,IACrCh8B,EAAmC,WAArBkI,aAAW,EAAXA,EAAa5lB,MAC3BolC,EAAiB1S,GAAkBx9B,EAAQikD,EAAaO,GACxDpB,EAAsBlT,EAAiBtyB,EAAiBsyB,GAAkB,KAsChF,OAnCAonC,EAAQA,EAAMoC,SAAS30D,GAAerc,EAAM,eAAe,SAAC/H,GAAG,OAAKA,EAAIwkB,eAAc,SAACurB,GACrF,IAAM8T,EAAe9T,EAAQ7qB,IAAI,SAC3BqzD,EAAyBxoC,EAAQ7qB,IAAI,mBAK3Cs3D,GAJsBzsC,EAAQ7qB,IAAI,QAAS,IAAItG,EAAAA,GAAAA,MACtBmxB,EAAQ7qB,IAAI,WAAY,IAAItG,EAAAA,GAAAA,MAC5BmxB,EAAQ7qB,IAAI,YAEuCgrB,GAC1E7wC,EAAQA,EAAQ0wC,EAAS8T,EAAcP,EAAa,YAVzC,IASN4B,EAAas3B,EAAbt3B,cAAezzC,EAAQ+qE,EAAR/qE,SAAU0+B,EAAWqsC,EAAXrsC,YAAaC,EAAYosC,EAAZpsC,aAAcC,EAAamsC,EAAbnsC,cAGvDP,IACFC,EAAUA,EACPC,IAAI,aAAcK,IAEvB,IAAM6oC,EAAqBh0B,EAAgBqzB,EAAyBjpC,GAAuBjwC,EAAQikD,EAAaO,GAOhH,OALKqB,IACHnV,EAAUA,EAAO,OACP,oBAGLA,EACJC,IAAI,WAAYsT,GAChBtT,IAAI,kBAAmBkpC,GACvBlpC,IAAI,QAASv+B,GACbu+B,IAAI,WAAYG,GAChBH,IAAI,YAAaI,EACtB,GAAE,IAEEvoB,GACyB,GAAvB46B,GAA6C,GAAjBn+C,EAAS2B,OACvC0wE,EAAQK,GAAQL,EAAO5uE,EAAM,OAAQqe,IAAQqpB,GAAsBpwC,EAAQwkD,GAAexkD,IAIvFs3E,CACT,CA0ViBgE,CAAYhE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOtjD,SAAU74B,GACjE,MAGF,KAAKm3C,GACH,IAAcnxB,EAAW5b,GACvBktE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOx0B,MAAOw0B,EAAOt8E,MAAOs8E,EAAOvpD,UAAY5yB,EACxEm8E,EAAO5pD,gBAAiB4pD,EAAOrD,OAF1BxB,MAIP3mC,EAAIhrB,KAAOK,EACX,MAGF,KAAKmxB,GACH,IAAAimC,EAloBe,SAACp9E,EAAQs3E,EAAO5uE,EAAMi/C,EAAO6zB,EAAavnD,EAAQgO,EAAUrP,EAAWL,GAAgC,IAAfumD,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9G+vE,EAAczB,EAAMjxD,MAAMtB,GAAerc,IAC/C,IAAKqwE,EAEH,OAAOzB,EAET,IAS6C9jD,EATvC6pD,GAAmB,IAAX11B,EACRqxB,EAAoBD,EAAYlzD,IAAI,cACpC2+B,EAAew0B,EAAkBnzD,IAAI,SACrCga,EAAem5C,EAAkBnzD,IAAI,SAIvCy3D,EAAY,GACZC,EAJaF,EAAQ74B,EAAe3kB,EAAaxZ,MAAM,CAACshC,IAIpCl0B,EAAAnP,GACIk3D,GAAe,IAAE,IAA7C,IAAA/nD,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAC,MAA+C,KAAAiP,GAAAlmB,EAAAA,EAAAA,GAAAgmB,EAAA3zB,MAAA,GAAnC29E,EAAK9pD,EAAA,GAAE+pD,EAAI/pD,EAAA,GAErB,GADA4pD,EAAUx5D,KAAK,CAAC05D,EAAOC,EAAMF,IACzBC,IAAUD,EAAS13D,IAAI,QAAS,CAClC,IAAMsJ,EAAWmuD,EAAU38E,KAAI,SAAA0B,GAAA,IAAAyD,GAAA0H,EAAAA,EAAAA,GAAAnL,EAAA,GAAEsiB,EAAC7e,EAAA,GAAEyY,EAACzY,EAAA,YAAA8c,OAAS+B,EAAC,KAAA/B,OAAIrE,EAAC,QAAK1d,KAAK,MAAQ,OACtE,MAAM,IAAIyrB,MAAM,MAAD1J,OACPy6D,EAAQ,MAAQ,MAAK,cAAAz6D,OAAauM,EAAQ,uBAAAvM,OAAsB46D,EAAK,aAAA56D,OAAY2G,OAAO1D,IAAI,SAEtG,CACA03D,EAAWA,EAASl3D,MAAM,CAAC,OAAQo3D,EAAM,SAC3C,CAEA,OAAA/4D,GAAA+O,EAAAtmB,EAAAuX,EAAA,SAAA+O,EAAA9O,GAAA,CACA,GAAKsP,EAOE,CACL,IAAMhB,EAAUsqD,EAAS13D,IAAI,QAGvB63D,EAFiBnqD,GAAcvzB,EAAQizB,GACtCa,KACoBG,GAGzBspD,EADgB,cAAd3qD,EACS+2B,GAAe4zB,EAAUtpD,EAAQgO,EAAUy7C,EAAe19E,GAE1D0pD,GAAY6zB,EAAUtpD,EAAQgO,EAAUy7C,EAAe19E,EAEtE,MAfEu9E,EAAWv0B,GAAQu0B,EAFAt7C,EAEsBjiC,GADtB,GAInB84E,EAAMp6B,aAAc,EAgBtB,IADA,IAAIi/B,EAAOJ,EACJD,EAAUr0E,QAAQ,CACvB,IAAA20E,EAAgCN,EAAU1nE,MAAKioE,GAAArwE,EAAAA,EAAAA,GAAAowE,EAAA,GAAxCJ,EAAKK,EAAA,GAAEJ,EAAII,EAAA,GAAEC,EAAQD,EAAA,GAGtBH,EAFiBnqD,GAAcvzB,EAAQw9E,GACtC1pD,KACoB2pD,GAC3BE,EAAOj0B,GAAYo0B,EAAUL,EAAME,EAAMD,EAAe19E,EAC1D,CAEA,OAAIq9E,EACKzzE,GAAS0tE,EAAO5uE,EAAMi1E,EAAM39E,EAAQuyB,EAAiBumD,GAErD1uE,GAASktE,EAAO5uE,EAAMi/C,EAAOg2B,OAAMz6E,EAAWlD,EAAQuyB,EAAiBumD,EAElF,CAokB+ByC,CACvBv7E,EAAQs3E,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOx0B,MAAOw0B,EAAOX,YACtDW,EAAOloD,OAAQkoD,EAAOt8E,MAAOs8E,EAAOvpD,UACpCupD,EAAO5pD,gBAAiB4pD,EAAOrD,OAHnB9yD,EAAOo3D,EAAd9F,MAKP3mC,EAAIhrB,KAAOK,EACX,MAGF,KAAKmxB,GACHxG,EAAIhrB,KA7QU,SAAC2xD,EAAO5uE,EAAMi/C,EAAO36C,EAAQhN,GAE/C,IADoBs3E,EAAMjxD,MAAMtB,GAAerc,IAG7C,OAAO4uE,EAGT,IAAO7mC,EAAoBzwC,EAAOS,SAA3BgwC,iBACDj7B,EAAQ8hE,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,WAAa,KAEpEmwB,EAAWy+C,EAAMjxD,MAAMtB,GAAerc,EAAM,aAAc,cAAgB,KAC1EwnC,EAAiB1S,GAAkBx9B,EAAQ64B,EAAUrjB,GACrD4tC,EAAsBvqB,EAAWjb,EAAiBsyB,GAAkB,KA2B1E,GApBAonC,GADAA,GADAA,GAFAA,EAAQyC,GAAoBzC,EAAO5uE,EAAM1I,EAAQojD,IAEnCp8B,MAAMjC,GAAerc,EAAM,aAAc,QAASi/C,EAAQ,SAAKzkD,IAC/D8jB,MAAMjC,GAAerc,EAAM,aAAc,YAAai/C,EAAQ,IAAK,OACnErhC,SAASvB,GAAerc,EAAM,aAAc,oBAEtD+nC,IAEF6mC,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,aAAci/C,GAAQ,MAGzEzX,EAAeuT,iBACjB6zB,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,aAAc06C,GAAsB,QAM7Fk0B,OADoB,IAAXtqE,EACDsqE,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,WAAYi/C,EAAQ,IAAK,MAExE2vB,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,WAAYi/C,EAAQ,IAAK36C,GAI9EA,EAAQ,CACV,IAAMie,EAAaqsD,EAAMjxD,MAAMtB,GAAerc,EAAM,eAGpDq1E,EAA4EltC,GAC1E7wC,EAAQA,EAAQirB,EAAYzV,EAAOqjB,EAAU,YAFhC,GACRgtB,EAAak4B,EAAbl4B,cAAezzC,EAAQ2rE,EAAR3rE,SAAU0+B,EAAWitC,EAAXjtC,YAAaC,EAAYgtC,EAAZhtC,aAA2BgtC,EAAb/sC,cAGtD6U,GAAiB/U,EAAYjrB,IAAI8hC,IAAU36C,IAE9CsqE,GADAA,EAAQA,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,QAASi/C,EAAQ,IAAKv1C,EAASyT,IAAI8hC,KAC5E3gC,MAAMjC,GAAerc,EAAM,aAAc,YAAai/C,EAAQ,IAAK5W,EAAalrB,IAAI8hC,IAEtG,CAEA,OAAO2vB,CACT,CAwNiBjqE,CAAYiqE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAOx0B,MAAOw0B,EAAOnvE,OAAQhN,EAAQm8E,EAAOrD,OAC5F,MAGF,KAAK3hC,GACHxG,EAAIhrB,KArNgB,SAAC2xD,EAAO5uE,EAAM8C,EAAM3L,GAE5C,OADoBy3E,EAAMjxD,MAAMtB,GAAerc,IAKxC4uE,EAAMtwD,MAAMjC,GAAerc,EAAM,aAAc,kBAAmB8C,GAAO3L,GAFvEy3E,CAGX,CA8MiBmE,CAAkBnE,EAAM3xD,KAAMw2D,EAAOzzE,KAAMyzE,EAAO3wE,KAAM2wE,EAAOt8E,OAC1E,MAGF,KAAKs3C,GACHxG,EAAIhrB,KA3xBO,SAAC2xD,EAAO2D,EAAUC,EAAQ72E,EAAWrE,GACpD,IAAM40B,EAAOlP,GAAc4xD,EAAO2D,GAC5B+C,EAAa/C,EAASrlE,MACtB+uB,EAASs2C,EAASr0E,KAAO,EAAI8e,GAAc4xD,EAAO0G,GAAc,KAChEC,EAAiBt5C,EAASA,EAAO9e,IAAI,aAAe,KAEpD8hB,EAAKjiB,GAAc4xD,EAAO4D,GAC1BgD,EAAc75E,GAAa8yC,IAA8B9yC,GAAa8yC,GAA+B+jC,EAASA,EAAOtlE,MACrH7G,EAAU1K,GAAa8yC,IAA8B9yC,GAAa8yC,GACpExP,EACAuzC,EAAOt0E,KAAO,EAAI8e,GAAc4xD,EAAO4G,GAAc,KACnD5F,EAAiBvpE,EAASA,EAAO8W,IAAI,aAAe,KAE1D,IAAK8e,IAAW51B,IAAW6lB,EAEzB,OAAO0iD,EAGT,IAAM6G,EAAgBx5C,EAAO9e,IAAI,OAAS9W,EAAO8W,IAAI,MAC/Cu4D,EAAuBF,EAAWt3E,KAAOo3E,EAAWp3E,MACjDoX,EAAUkgE,EAAW31D,UAAWy1D,EAAWz1D,UAAU/G,MAAM,EAAG08D,EAAWt3E,OAC5Ey3E,EAAuBH,EAAWt3E,KAAOo3E,EAAWp3E,MACjDoX,EAAUggE,EAAWz1D,UAAW21D,EAAW31D,UAAU/G,MAAM,EAAGw8D,EAAWp3E,OAC9E03E,EAA0B,KAC1BC,EAA0B,KAC1BH,EACFE,EAA0B/+D,EAAAA,GAAAA,KAAey+D,EAAWz1D,UAAU/G,MAAM08D,EAAWt3E,OACtEy3E,IACTE,EAA0Bh/D,EAAAA,GAAAA,KAAe2+D,EAAW31D,UAAU/G,MAAMw8D,EAAWp3E,QAGjF,IAAI43E,EAAoBlG,EAAgBmG,EAAoBR,EAwC5D,OAvCKI,IACHI,EAAoBA,EAAiB,OAAQ7pD,EAAK/O,IAAI,QACpDs4D,EACFK,EAAoBC,EACXL,IACTI,EAAoBA,EAAkB9E,SAASn0D,GAAkB+4D,EAAyB,cAAc,SAACI,GAAY,OAAKD,CAAiB,KAGzIp6E,GAAa8yC,IAA8B9yC,GAAa8yC,GAC1DqnC,EAAoBj/D,EAAAA,GAAAA,aAAuB4F,eAAc,SAAApI,GAAK,IACNqH,EADMC,EAAAC,GACjCk6D,EAAkB7gE,WAAS,IAAtD,IAAA0G,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAwD,KAAAyK,GAAA1hB,EAAAA,EAAAA,GAAA4W,EAAAvkB,MAAA,GAA9CinB,EAAMoI,EAAA,GAAEhmB,EAAIgmB,EAAA,GAChBpI,IAAU6gB,aAAE,EAAFA,EAAI9hB,IAAI,QAASxhB,GAAa8yC,IAC1Cp6B,EAAE4zB,IAAI/b,EAAK/O,IAAI,MAAO+O,GAGxB7X,EAAE4zB,IAAI7pB,EAAQ5d,GAEV4d,IAAU6gB,aAAE,EAAFA,EAAI9hB,IAAI,QAASxhB,GAAa8yC,IAC1Cp6B,EAAE4zB,IAAI/b,EAAK/O,IAAI,MAAO+O,EAE1B,CAAC,OAAAlQ,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACH,IACStgB,GAAa8yC,GACtBqnC,EAAoBA,EAAkBtrB,MAAM3zC,EAAAA,GAAAA,YAAoBqG,EAAAA,EAAAA,GAAC,CAAC,EAACgP,EAAK/O,IAAI,MAAQ+O,KAC3EvwB,GAAa8yC,KACtBqnC,EAAoBj/D,EAAAA,GAAAA,YAAoBqG,EAAAA,EAAAA,GAAC,CAAC,EAACgP,EAAK/O,IAAI,MAAQ+O,IAAOs+B,MAAMsrB,IAGvEH,IAEFI,GADAA,EAAoBA,EAAkB/E,SAASn0D,GAAkBg5D,EAAyB,cAAc,SAACG,GAAY,OAAKF,CAAiB,KACtG,OAAQ5pD,EAAK/O,IAAI,QAGnDs4D,GAAiBC,IACpB9G,EAAQA,EAAMoC,SAAS30D,GAAei5D,EAAY,cAAc,SAACU,GAAY,OAAKD,CAAiB,KAChGJ,IACH/G,EAAQA,EAAMoC,SAAS30D,GAAem5D,EAAY,cAAc,SAACQ,GAAY,OAAKF,CAAiB,KAE7F/3D,GAAe6wD,EAEzB,CAmtBiB0D,CAAS1D,EAAM3xD,KAAMw2D,EAAOlB,SAAUkB,EAAOjB,OAAQiB,EAAO93E,WACvE,MAGF,KAAK8yC,GACHxG,EAAI4pC,UAAY4B,EAAO5B,UACvB5pC,EAAIypC,SAAW+B,EAAO/B,SACtBzpC,EAAI2pC,SAAW6B,EAAO7B,SACtB,MAGF,KAAKnjC,GACHxG,EAAI2pC,SAAW6B,EAAO7B,SACtB3pC,EAAIypC,SAAW+B,EAAO/B,SACtB,MAGF,KAAKjjC,GACHxG,EAAIhrB,KAhOe,SAAC2xD,EAAOt3E,GAK/B,OAJ6BA,EAAOS,SAA7By0D,qBAELoiB,EAAQnwD,GAAqBmwD,IAExBA,CACT,CA0NiBqH,CAAiBrH,EAAM3xD,KAAM3lB,GACxC2wC,EAAGnqC,GAAAA,GAAA,GAAQmqC,GAAQwpC,IAiBrB,OARIiC,IACFzrC,EAAIiuC,aAAexC,GAGjBL,GAAeprC,EAAIhrB,MAAQ2xD,EAAM3xD,MACnCo2D,EAAYzE,EAAM3xD,MAGpBnf,GAAAA,GAAAA,GAAA,GAAW8wE,GAxIG,CAACsH,kBAAc17E,IAwIEytC,EACjC,CAED,EM1lCD,GAAezsC,EAAAA,gB,4BCiBF4yE,GAAkB,QAClBC,GAAmB,SACnBC,GAAmB,SACnBC,GAAoB,UCfpB4H,GAAkB,SAACvE,EAAUF,GAAQ,MAAM,CACtDtvE,KDgB+B,oBCf/BwvE,SAAUA,EACVF,SAAUA,EACX,EAOY0E,GAAe,SAACvE,EAAWH,EAAUE,GAAQ,MAAM,CAC9DxvE,KDM4B,iBCL5ByvE,UAAWA,EACXH,SAAUA,EACVE,SAAUA,EACX,EAKYyE,GAAa,WAAH,MAAU,CAC/Bj0E,KDH0B,eCI3B,EC5BO6a,GAAsBq5D,EAAhBr7E,GAAgBq7E,EAATlpD,GAASkpD,ECGjBC,I,QAAiB,SAACrnC,EAAKpzB,EAAG06D,GACrC,IAAK16D,IAAMozB,GAAOA,EAAI3uC,QAAUub,EAAK,OAAOozB,EAC5C,IAAIunC,EAAYvnC,EAAIh7B,OAAO,EAAG4H,EAAE,GAChC,OAAQ06D,EACJC,EAAUviE,OAAO,EAAGuiE,EAAUC,YAAY,MAC1CD,GAAa,KACnB,GAEaE,GAAiB,SAASphE,EAAIC,GACzC,OAAID,IAAOC,IAGFD,aAAE,EAAFA,EAAII,OAAOH,GAEtB,EAaaI,GAAe,SAACC,EAAGC,GAAoB,IAAjBC,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACrC,OAAIuV,IAAMC,IAEC/I,MAAMC,QAAQ6I,GAU3B,SAA4BG,EAAMC,GAAoB,IAAdF,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1C,GAAI0V,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAMF,EAAKzV,OAEf,GAAI0V,EAAK1V,SAAW2V,EAClB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAEvB,KADcJ,EAAOH,GAAaI,EAAKG,GAAIF,EAAKE,GAAIJ,GAAQC,EAAKG,KAAOF,EAAKE,IAE3E,OAAO,EAIX,OAAO,CACT,CAhCWC,CAAmBP,EAAGC,EAAGC,GACzBF,GAAyB,mBAAbA,EAAEF,OACdE,EAAEF,OAAOG,GACI,YAAb7L,EAAAA,EAAAA,GAAO4L,GA+BlB,SAA6BQ,EAAMC,GAAoB,IAAdP,EAAIzV,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC3C,GAAI+V,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAQ7S,OAAOC,KAAK0S,GACpBG,EAAQ9S,OAAOC,KAAK2S,GACpBJ,EAAMK,EAAMhW,OAEhB,GAAIiW,EAAMjW,SAAW2V,EACnB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAI9X,EAAMkY,EAAMJ,GAEhB,KADcJ,EAAOH,GAAaS,EAAKhY,GAAMiY,EAAKjY,GAAM0X,GAAQM,EAAKhY,KAASiY,EAAKjY,IAEjF,OAAO,CAEX,CAEA,OAAO,CACT,CAxDWoY,CAAoBZ,EAAGC,EAAGC,GAE1BF,IAAMC,EACjB,EAsEa8E,GAZY,WAAqB,IAApBR,EAAO9Z,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAE/B,OAD2B9F,MAAX4f,GAAuBA,EACtBC,QAAU,CACzBlc,MAAO,WAAO,EACdmc,IAAK,WAAO,EACZC,KAAM,WAAO,EACbC,MAAO,WAAO,EACdhW,KAAM,WAAO,EAEjB,CAGsB2V,GC/Gd62B,GAAuB96C,GAAM0gF,WAA7B5lC,mBCYF6lC,GAAuB,SAAvBA,EAAwBj2D,GAC5B,GAAKA,EAAL,CAGA,IAd6BjJ,EAcvBvV,GAduBuV,EAcMiJ,GAb5Bk2D,oBACE,OAELpzE,OAAOqzE,oBAAoBp/D,GAAIhP,QAAO,SAAAzQ,GAAC,OAAIA,EAAEyrB,WAAW,mBAAmB,IAAEpjB,OAAS,EACjF,iBADT,EAWA,YAAa/F,IAAT4H,EACKA,EAEAy0E,EAAqBj2D,EAAKo2D,WALnC,CAOF,EAEaC,GAA8B,SAACr2D,GAC1C,MAAsC,SAA/Bi2D,GAAqBj2D,EAC9B,EAGas2D,GAA4B,SAACC,EAAM7/E,GAAM,OAAK,SAAC8/E,EAAWC,GACrE,IAAMC,EAAYH,EAAKrgF,MACjBygF,EAAYJ,EAAKvI,MAEnB4I,EAASJ,GAAaE,GAAaD,GAAaE,EACpD,GAAIC,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IAAIK,EAAM,GACV,IAAK,IAAIv/E,KAAKk/E,EAAW,CACvB,IAAIM,EAAWN,EAAUl/E,IAAMo/E,EAAUp/E,GACrCw/E,IACe,UAAbpgF,EAAOY,GACTw/E,GAAU,EACU,gBAAbpgF,EAAOY,GACdw/E,GAAW9hE,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IAAI,GAChC,WAAbZ,EAAOY,GACdw/E,GAAW9hE,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IACrB,mBAAbZ,EAAOY,KACrBw/E,EAAUpgF,EAAOY,GAAGk/E,EAAUl/E,GAAIo/E,EAAUp/E,GAAIk/E,EAAWE,KAE3DI,GACFD,EAAIr8D,KAAKljB,EACb,CACKu/E,EAAIl3E,SACPi3E,GAAS,EACb,CAEF,OAAOA,CACT,CAAC,EAEYG,GAA4B,SAACR,GAAI,OAAK,SAASC,EAAWC,GACrE,OACGzhE,GAAauhE,EAAKrgF,MAAOsgF,KACtBxhE,GAAauhE,EAAKvI,MAAOyI,EAEjC,CAAC,EAOYO,GAAoB,SAAC7iE,GAShC,GAJKA,EAAI8iE,wBACP9iE,EAAI8iE,sBAAwBF,GAA0B5iE,IATzC,KADTnM,EAAIpN,EAAAA,QAAchF,MAAM,KAAKyB,IAAI7B,SAAS01D,KAAK,KAAM,MAClD,IAAYljD,EAAE,GAAK,GAAKA,EAAE,GAAK,GActCmM,EAAI+iE,0BAA4B,SAACV,GAC/BriE,EAAIgjE,eAAeX,EACrB,MACK,CAEL,IAAMY,EAA4BjjE,EAAI8iE,sBAStC9iE,EAAI8iE,sBAR6B,SAAST,EAAWC,GAMnD,OALsBzhE,GAAab,EAAIje,MAAOsgF,IAE5CriE,EAAIgjE,eAAeX,GAEAY,EAA0BnjE,KAAKE,EAAKqiE,EAAWC,EAEtE,EACqDvrB,KAAK/2C,EAC5D,CA/ByC,IACnCnM,CA+BR,EAEaqvE,GAAqB,SAACC,EAAgB5gF,EAAQ6gF,GAAQ,OACjEtE,KAAUqE,GAAgB,SAACE,GAAa,OACtC,mBAAA97D,EAAAhc,UAAAC,OAAI6qB,EAAI,IAAAre,MAAAuP,GAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAAJ+T,EAAI/T,GAAA/W,UAAA+W,GAAA,OAAK8gE,EAASC,EAAax7D,WAAC,EAAD,CAACtlB,GAAM4iB,OAAKkR,IAAM,IACtD,E,k1BClGkG,IAG/FitD,GAAK,SAAAC,GAcT,SAAAD,EAAYvhF,GAAO,IAAAiwD,GAAAwxB,EAAAA,EAAAA,GAAA,KAAAF,IACjBtxB,EAAAyxB,GAAA,KAAAH,EAAA,CAAMvhF,KAoBR+gF,sBAAwBX,GAAyBnwB,EAAO,CACtD9pC,KAAM,SAACw7D,GACL,OAAIA,IAAc1xB,EAAK2xB,kBAAoB3xB,EAAK2xB,mBAAqB3xB,EAAKktB,aAM5E,IA3BA2D,GAAiB7wB,GAEjBA,EAAK4xB,eAAe7hF,GAKpBiwD,EAAKktB,cAAgBn9E,EAAMs8E,gBAAgBt8E,EAAMQ,OAAQR,EAAMmmB,UAAMziB,EAAW1D,EAAM85C,cACtFmW,EAAK2xB,iBAAmB3xB,EAAKktB,cAE7B,IAAMvkB,EAAc54D,EAAM24D,eAAe34D,EAAMQ,QACwC,OAAvFR,EAAM8hF,QAAU9hF,EAAM8hF,OAAO7xB,EAAKktB,cAAevkB,OAAal1D,EAAWusD,EAAK8xB,SAAS9xB,CACzF,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAT,EAAAC,IAAAS,EAAAA,EAAAA,GAAAV,EAAA,EAAAh6E,IAAA,iBAAAlH,MAED,SAAgBL,GACd,IAAOQ,EAAoBR,EAApBQ,OAAQ6gF,EAAYrhF,EAAZqhF,SACfvsB,KAAKitB,QAAUZ,GAAkBn6E,GAAAA,GAAAA,GAAC,CAAC,EAAG+6E,IAAiBA,IAAkBA,IAAevhF,EAAQ6gF,EAClG,GAAC,CAAA95E,IAAA,iBAAAlH,MAaD,SAAeigF,GACb,IAAOx+E,EAAYw+E,EAAZx+E,SACDu4C,EAAYya,KAAK90D,MAAMQ,OACvBgmB,EAAU85D,EAAUn6D,KAEpBi0B,GADU0a,KAAK90D,MAAMmmB,KACTm6D,EAAU9/E,QAU5B,GARAs0D,KAAK8sB,iBAAmB9sB,KAAKqoB,cAC7BroB,KAAKqoB,cAAgB32D,EACjB6zB,IAAcD,IAChB0a,KAAK+sB,eAAevB,GACpBxrB,KAAKqoB,cAAgBmD,EAAUhE,gBAAgBliC,EAAW5zB,EAAS6zB,KAGvCwlC,GAAe/qB,KAAKqoB,cAAeroB,KAAK8sB,kBAC5C,CACxB,IAAMM,EAAiB5B,EAAU3nB,eAAeve,GAChDt4C,GAAYA,EAASgzD,KAAKqoB,cAAe+E,EAAgB5B,EAAUlB,aAActqB,KAAKitB,QACxF,CACF,GAAC,CAAAx6E,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAA0CrtB,KAAK90D,MAAxCQ,EAAM2hF,EAAN3hF,OAAQ4hF,EAAaD,EAAbC,cAAef,EAAQc,EAARd,SAQ9B,OAAOe,EAPc,CACnBj8D,KAAM2uC,KAAKqoB,cACX4E,QAASjtB,KAAKitB,QACdvhF,OAAQA,EACR6gF,SAAUA,GAId,IAAC,CA7EQ,CAASgB,EAAAA,WAAdd,GACGe,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzB1gF,SAAUygF,KAAAA,KACVT,OAAQS,KAAAA,KACRH,cAAeG,KAAAA,KACfp8D,KAAMo8D,KAAAA,KA2EV,IAAME,IAAiBC,EAAAA,GAAAA,KACrB,SAAC5K,GACC,MAAO,CACL3xD,KAAM2xD,EAAM3xD,KACZi5D,aAActH,EAAMsH,aAExB,GACA,KACA,KACA,CACEp9B,QAAAA,IAVmB0gC,CAYrBnB,IACFkB,GAAeE,YAAc,iBAG7B,Y,yQC/FA,IAAO5wC,GAAe3yC,GAAMwjF,aAArB7wC,YACAulB,GAAoBl4D,GAAMyjF,YAA1BvrB,iBAGcwrB,GAAc,SAAAtB,GAiBjC,SAAAsB,EAAY9iF,EAAOgiD,GAAS,IAAA+gC,EAAAC,EAAA/yB,GAAAwxB,EAAAA,EAAAA,GAAA,KAAAqB,IAC1B7yB,EAAAyxB,GAAA,KAAAoB,EAAA,CAAM9iF,EAAOgiD,KAmCfu6B,YAAc,SAAC0G,GACThzB,EAAKizB,WACPjzB,EAAKkzB,aAAelzB,EAAKizB,UAE3BjzB,EAAKizB,SAAWD,CAClB,EAAChzB,EAEDmzB,UAAY,WACV,OAAOnzB,EAAKzvD,MACd,EAACyvD,EAED8wB,sBAAwBX,GAAyBnwB,EAAO,CACtD5vD,MAAO,SAACshF,EAAW0B,GAAgB,OAAO,CAAO,IA9CjDvC,GAAiB7wB,GAEjB,IAAAqzB,EAA+DhsB,GAAiB,CAC9EC,WAAuC,QAA7BwrB,EAAsB,QAAtBC,EAAE/yB,EAAKszB,uBAAe,IAAAP,OAAA,EAApBA,EAAsBt7E,aAAK,IAAAq7E,EAAAA,GAAK,EAC5CvrB,QAAS,EACTC,YAAY,IAHNc,EAAiB+qB,EAAjB/qB,kBAAmBI,EAAc2qB,EAAd3qB,eAAgBG,EAAewqB,EAAfxqB,gBAK3C7I,EAAKuzB,kBAAoBjrB,EACzBtI,EAAK0I,eAAiBA,EACtB1I,EAAK6I,gBAAkBA,EACvB7I,EAAKqsB,gBHzC2B,WAClC,IAAImH,EACAtG,EACAhmB,EAEJ,OAAO,SAAC32D,EAAQ2lB,GAAqD,IAA/Ck0B,EAAS7wC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAWo2C,IAAYtwC,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACvD,OAAK2c,EAGD3lB,EAAOw4D,aAAe7B,IAAa0oB,GAAe15D,EAAMs9D,IAAiB5D,GAAe15D,EAAMg3D,IACzFA,GAEPhmB,EAAW32D,EAAOw4D,WAClByqB,EAAet9D,EAEbg3D,GADmB,IAAjBrjC,EACcI,GAAmB/zB,EAAM,KAAM3lB,EAAQ65C,GAAa75C,GAAQ,GAAO,GAAO,GAE1E05C,GAAmB/zB,EAAM,KAAM3lB,EAAQ65C,GAAa75C,IAV/D,IAcX,CACF,CGmB2BkjF,GAEvB,IAAMljF,EAASyvD,EAAKuzB,kBAAkBxjF,GAC/B21D,EAA0Bn1D,EAAOS,SAAjC00D,uBAEDguB,EAAY5xC,GAAYvxC,GADHm1D,GAErB7b,IAAiB95C,EAAMK,MACvB8lB,EAAOnmB,EAAMK,OAASsjF,EACtBxG,EAAgBltB,EAAKqsB,gBAAgB97E,EAAQ2lB,OAAMziB,EAAWo2C,GAE9D8pC,EAAUC,GAAiBrjF,EAAQ28E,EAAeltB,EAAKqsB,gBAAiBrsB,EAAKssB,YAAatsB,EAAKmzB,WAC/FU,GAAQC,EAAAA,GAAAA,IAAYH,GAMiD,OAJ3E3zB,EAAKzvD,OAASA,EACdyvD,EAAK6nB,MAAQ,CACXgM,MAAAA,GAEF7zB,EAAK+zB,aAAe,SAACC,GAAE,OAAKzjF,EAAOS,SAAS2Z,eAAeqpE,EAAIzjF,EAAOoc,IAAI,EAACqzC,CAC7E,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAc,EAAAtB,IAAAS,EAAAA,EAAAA,GAAAa,EAAA,EAAAv7E,IAAA,uBAAAlH,MAED,WACEy0D,KAAKgE,iBACP,GAAC,CAAAvxD,IAAA,iBAAAlH,MAiBD,SAAeigF,GAEb,IAAME,EAAY1rB,KAAK90D,MACjBq6C,EAAYya,KAAKt0D,OACjB0jF,EAAapvB,KAAK0uB,kBAAkBlD,GACpC6D,EAAkB9pC,IAAc6pC,EAGhCE,EAAatvB,KAAKgjB,MAAMgM,MAAMO,WAAWl+D,KACzCm+D,GAAiBzE,GAAeS,EAAUjgF,MAAOy0D,KAAK90D,MAAMK,SAAWw/E,GAAeS,EAAUjgF,MAAO+jF,GACvGG,EAAcD,EAAiBhE,EAAUjgF,OAAS0xC,GAAYuuC,GAAc8D,EAC5EI,EAAqBF,IAAkBzE,GAAeS,EAAUjgF,MAAOy0D,KAAKouB,YAAcrD,GAAeS,EAAUjgF,MAAOy0D,KAAKquB,cAUrI,GATAruB,KAAKhb,aAAe0qC,GAAsBL,EAEtCA,IACE3D,EAAUv/E,SAAS2Z,iBAAmB0lE,EAAUr/E,SAAS2Z,iBAC3Dk6C,KAAKkvB,aAAe,SAAChkF,GAAK,OAAKkkF,EAAWjjF,SAAS2Z,eAAe5a,EAAOkkF,EAAWtnE,IAAI,GAE1Fk4C,KAAKt0D,OAAS0jF,GAGZI,GAAiBH,EAAiB,CACpC,IAAMhH,EAAgBroB,KAAKwnB,gBAAgB4H,EAAYK,EAAalqC,EAAWya,KAAKhb,cAEpFgb,KAAKgjB,MAAMgM,MAAMzC,SACfU,GAAa/G,QAAQkJ,EAAY/G,GAGrC,CACF,GAAC,CAAA51E,IAAA,SAAAlH,MAED,WAEE,IAAA8hF,EAAwDrtB,KAAK90D,MAAtDoiF,EAAaD,EAAbC,cAAeqC,EAAYtC,EAAZsC,aAAc3iF,EAAQqgF,EAARrgF,SAAUggF,EAAMK,EAANL,OACvCgC,EAAShvB,KAAKgjB,MAAdgM,MACDtjF,EAASs0D,KAAKt0D,OACdwjF,EAAelvB,KAAKkvB,aAE1B,OACEt/E,EAAAA,cAACs/E,EAAY,CAACxjF,OAAQA,GACpBkE,EAAAA,cAACggF,GAAAA,GAAQ,CAACZ,MAAOA,EAAO9hC,QAASA,IAC/Bt9C,EAAAA,cAAC+9E,GAAc,CACbjiF,OAAQA,EACR87E,gBAAiBxnB,KAAKwnB,gBACtB3jB,eAAgB7D,KAAK6D,eACrB7e,aAAcgb,KAAKhb,aACnBh4C,SAAUA,EACVggF,OAAQA,EACRM,cAAeA,GAAiBqC,KAK1C,IAAC,CAzHgC,CAASpC,EAAAA,WAAvBS,GACZR,UAAY,CAEjBjzD,aAAckzD,KAAAA,OAAiBC,WAC/BzsE,OAAQwsE,KAAAA,OAAiBC,WACzB7lE,MAAO4lE,KAAAA,OAAiBC,WACxB3zD,UAAW0zD,KAAAA,OAAiBC,WAC5BvnE,QAASsnE,KAAAA,OAAiBC,WAC1BvhF,SAAUshF,KAAAA,OAAiBC,WAC3B5lE,IAAK2lE,KAAAA,OAAiBC,WAEtB1gF,SAAUygF,KAAAA,KACVT,OAAQS,KAAAA,KACRH,cAAeG,KAAAA,KACfliF,MAAOkiF,KAAAA,K,gTCvBX,IAAOhvD,GAAkBn0B,GAAMyjF,YAAxBtvD,e,yQCEP,IAAO0/B,GAAS7zD,GAAT6zD,MACAnrC,GAAe1oB,GAAMulF,UAArB78D,YAEH88D,IAAoB,E,0TCNxB,kBAAgB18E,GAAS,OAAK,SAAC28E,GAAW,IAAAC,EAAA,OAAAA,EAAA,SAAAC,GAWtC,SAAAC,EAAYhlF,GAAO,IAAAiwD,EAEgB,OAFhBwxB,EAAAA,EAAAA,GAAA,KAAAuD,IACjB/0B,EAAAyxB,GAAA,KAAAsD,EAAA,CAAMhlF,KAIRilF,uBAAyB,SAACt3E,GACxB,IAAIwZ,EAAS8oC,EAAKjwD,MAAM+L,GACpBm5E,EAAMj1B,EAAKk1B,QAAQj0C,QAEnB+e,EAAKjwD,MAAMolF,aACbn1B,EAAKjwD,MAAMolF,YAAYj+D,EAAQ+9D,EAAKv3E,EAExC,EAVEsiD,EAAKk1B,QAAUzgF,EAAAA,YAAkBurD,CACnC,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAgD,EAAAD,IAAA9C,EAAAA,EAAAA,GAAA+C,EAAA,EAAAz9E,IAAA,SAAAlH,MAWD,WACE,IAAA8hF,EAKIrtB,KAAK90D,MAJPqlF,EAAelD,EAAfkD,gBACAC,EAAYnD,EAAZmD,aACA1K,EAAQuH,EAARvH,SACG2K,GAAUtiF,EAAAA,GAAAA,GAAAk/E,EAAAj/E,IAGbsiF,EACED,EADFC,aAGEC,EAAS,CAAC,EACVH,GAAgBD,IACdT,KAGFa,EAAS,CACP1gF,IAAK61E,EAASC,EACdz9C,KAAMw9C,EAASv4D,EACftf,MAAO63E,EAASh0C,KAKtB,IAAM8+C,EAAKC,KAAWz9E,EAAW,gBAC/Bo9E,GAAgBD,EAAkB,eAAiB,KACnDC,IAAiBD,EAAkB,iBAAmB,KACtDG,EAAe,SAAW,MAG5B,OACE9gF,EAAAA,cAAA,OACEwD,UAAWw9E,EACXjiF,MAAOgiF,EACPG,IAAK9wB,KAAKqwB,QACV,UAASrwB,KAAK90D,MAAM+L,IAEpBrH,EAAAA,cAACmgF,GAAWj/E,EAAAA,GAAAA,GAAA,CACVq/E,uBAAwBnwB,KAAKmwB,uBAC7BK,aAAcA,EACdD,gBAAiBA,GACbE,IAIZ,IAAC,CAtEqC,CAChBM,EAAAA,eAAaf,EAC5BxC,UAAY,CACjB+C,gBAAiB9C,KAAAA,KACjB+C,aAAc/C,KAAAA,KACd6C,YAAa7C,KAAAA,KACb3H,SAAU2H,KAAAA,OACV37D,SAAU27D,KAAAA,KACViD,aAAcjD,KAAAA,MACfuC,CAAA,CA+DF,E,whBCvEH,IAAAgB,GAA4C1mF,GAAMyjF,YAA3CtvD,GAAcuyD,GAAdvyD,eAAgByK,GAAiB8nD,GAAjB9nD,kBAGF+nD,GAAQ,SAAAvE,GAgB3B,SAAAuE,EAAY/lF,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAAsE,IACjB91B,EAAAyxB,GAAA,KAAAqE,EAAA,CAAM/lF,KAgBR+gF,sBAAwBX,GAAyBnwB,EAAO,CAEtD+1B,cAAe,SAACrE,EAAW0B,GAAgB,OAAO,CAAO,IAjBzDvC,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAA+D,EAAAvE,IAAAS,EAAAA,EAAAA,GAAA8D,EAAA,EAAAx+E,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,QAEC80D,KAAK1mC,MADT,CAAC,SAAU,gBAAiB,mBAAoB,oBAAqB,oBACxCjtB,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAGnHqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,GAE7B,GAAC,CAAA/4E,IAAA,UAAAlH,MAOD,SAAAwC,GAAsE,IAAAqjF,EAA7D1lF,EAAMqC,EAANrC,OAAQwlF,EAAanjF,EAAbmjF,cAAeG,EAAiBtjF,EAAjBsjF,kBAAmBC,EAAgBvjF,EAAhBujF,iBAC3Cl1D,EAAcqC,GAAe/yB,EAAQwlF,GACvCn3D,GAASza,EAAAA,EAAAA,IAAQ8c,aAAW,EAAXA,EAAarC,aAA4C,QAAnCq3D,EAAI1lF,EAAOmc,MAAMwpE,UAAkB,IAAAD,OAAA,EAA/BA,EAAiCr3D,YAAa,IACxFm3D,GAAkBn3D,EAAU5mB,SAASm+E,IAGxCv3D,EAAUvK,KAAK8hE,GAGjB,IAAMC,EACFtJ,KACAuJ,KACE9lF,EAAOquB,WACP,SAACnlB,EAAMnC,GAAG,OAAkC,KAA7BsnB,aAAS,EAATA,EAAWzd,QAAQ7J,GAAW,KAE/C,SAACg/E,EAAO1kE,GAAE,OAAKmc,GAAkBx9B,EAAQqhB,EAAImkE,EAAc,IAGzD18E,EAAQwrD,KAAK0xB,aAAahmF,EAAQ6lF,EAAkBx3D,GAEpDrkB,EAAe67E,EAAiBD,IAAqB,CAAC,EAGtDK,EADcL,EACe,CADfA,GAC+B,KAMnD,MAAO,CACLziF,YATkBmxD,KAAK90D,MAAMQ,OAAOS,SAASi1D,oBAShC5sD,MAAAA,EACba,YATkBi8E,EASLK,aAAAA,EAAcC,aAPRD,EAOsBn8E,cANrBE,EAAapG,MAMuBmG,iBAJjCC,EAAagqC,QAAUhqC,EAAa/F,QAIe+F,aAAAA,EAAc0mB,YAAAA,EAE5F,GAAC,CAAA3pB,IAAA,eAAAlH,MAED,SAAaG,EAAQuV,EAAQ4wE,GAC3B,OAAK5wE,GAAW4wE,EAGT95E,KAAKkJ,GAAQk3C,MAAK,SAACluC,EAAGC,GAAC,OAAM2nE,EAAIv1E,QAAQ2N,GAAK4nE,EAAIv1E,QAAQ4N,EAAE,IAAG7d,KAAI,SAAAkV,GACxE,IAAML,EAAQD,EAAOM,GAIrB,MAAO,CACL9O,IAAK8O,EACLnN,KAAMmN,EACNjS,MANY4R,EAAM5R,MAOlB+E,SANe6M,EAAMw+B,OAOrB/vC,QANcuR,EAAMvR,QAQxB,IAdS,IAeX,GAAC,CAAA8C,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAAkErtB,KAAK90D,MAAhEQ,EAAM2hF,EAAN3hF,OAAQF,EAAW6hF,EAAX7hF,YAAaw7E,EAAWqG,EAAXrG,YAAav7E,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAChDvc,EAAkBrZ,EAAOS,SAAzB4Y,eACD+sE,E,uWAAW5/E,CAAA,CACf+E,GAAAA,EACAqqB,QAAAA,EACA51B,OAAAA,EACAF,YAAAA,EACAC,SAAAA,EACA6J,SAAU0xE,GACPhnB,KAAK1mC,MAEV,OAAKw4D,EAAYt9E,MAEVuQ,EAAe+sE,EAAapmF,EAAOoc,KADjC,IAEX,IAAC,CA3G0B,CAASylE,EAAAA,WAAjB0D,GACZzD,UAAY,CACjBv2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OACT/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBwD,cAAezD,KAAAA,IACfsE,gBAAiBtE,KAAAA,OACjB4D,kBAAmB5D,KAAAA,OACnBuE,iBAAkBvE,KAAAA,OAClB6D,iBAAkB7D,KAAAA,OAClBhiF,SAAUgiF,KAAAA,KACVjiF,YAAaiiF,KAAAA,OAEbzG,YAAayG,KAAAA,KAAeC,Y,oBCrB1BuE,GAAM,SAAHlkF,GAAA,IAAK4C,EAAQ5C,EAAR4C,SAAazF,GAAKiD,EAAAA,GAAAA,GAAAJ,EAAAK,IAAA,OAAOwB,EAAAA,cAAA,MAAS1E,EAAQyF,EAAe,EAEjEuhF,GAAU,WAAO,EAEjBl8E,GAAW,WAAH,OACZpG,EAAAA,cAAA,OAAKuiF,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,OAAOpkF,MAAM,OAAOunB,OAAO,QAC1F5lB,EAAAA,cAAA,QAAM0iF,EAAE,kBAAkBD,KAAK,SAC/BziF,EAAAA,cAAA,QAAM0iF,EAAE,kDACJ,EAGFC,GAAgB,SAAClyB,GAAG,OACxB,SAAAn1D,GACE,IAAOoY,EAAcpY,EAAMQ,OAAOS,SAA3BmX,WACDN,EAAYM,EAAaA,EAAW2F,KAAK/d,EAAMQ,OAAOoc,IAAK5c,EAAMQ,OAAOoc,KAAO,KACrF,OAAOlY,EAAAA,cAACywD,GAAGvvD,EAAAA,GAAAA,GAAA,GAAK5F,EAAK,CAAE8X,UAAWA,IACpC,CAAC,EAGGwvE,GAAc,SAAHhhF,GAEX,IADJyF,EAAEzF,EAAFyF,GAAI8xE,EAAKv3E,EAALu3E,MAAO11B,EAAK7hD,EAAL6hD,MAEX,MAAO,CACLp8C,EACA8xE,EAAQ,IAAM,IACdA,GAAS,EAAK11B,GAAS,GALI7hD,EAAX01E,aAMA,IAAI76E,KAAI,SAAAqF,GAAA,IAAAvC,GAAA+J,EAAAA,EAAAA,GAAAxH,EAAA,GAAE2e,EAAClhB,EAAA,GAAE8a,EAAC9a,EAAA,YAAAmf,OAAS+B,EAAC,KAAA/B,OAAIrE,EAAC,QAAK1d,KAAK,MACvDA,KAAK,IACT,EAEMkmF,GAAsB,SAAC/mF,EAAQgnF,GACnC,IAAIryB,EAOJ,MANwB,mBAAbqyB,GACTryB,EAAM,SAAC8uB,GAAE,OAAKuD,aAAQ,EAARA,EAAWvD,EAAIzjF,EAAOoc,IAAI,GACpC+lE,YAAc6E,EAASx7E,KAE3BmpD,EAAMqyB,EAEDryB,CACT,E,yQCvC6B,IAGRsyB,GAAe,SAAA1C,GAAA,SAAA0C,IAAA,OAAAhG,EAAAA,EAAAA,GAAA,KAAAgG,GAAA/F,GAAA,KAAA+F,EAAAj+E,UAAA,QAAAw4E,EAAAA,EAAAA,GAAAyF,EAAA1C,IAAA9C,EAAAA,EAAAA,GAAAwF,EAAA,EAAAlgF,IAAA,SAAAlH,MAClC,WACE,IAAA8hF,EAGIrtB,KAAK90D,MAFPQ,EAAM2hF,EAAN3hF,OAAQwlF,EAAa7D,EAAb6D,cAAec,EAAgB3E,EAAhB2E,iBAAkBX,EAAiBhE,EAAjBgE,kBAAmBC,EAAgBjE,EAAhBiE,iBAAkBtK,EAAWqG,EAAXrG,YAC9E+K,EAAe1E,EAAf0E,gBAAiBa,EAAYvF,EAAZuF,aAAcC,EAAiBxF,EAAjBwF,kBAAmBC,EAAyBzF,EAAzByF,0BAA2BrnF,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAiC7F,MAAO,CA/BUsxD,GACNhjF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,iBAAiBs/E,EAAiB3+E,UAAU,kBACrD1H,EAAOS,SAASs5D,YACT71D,EAAAA,cAAA,SAAOwD,UAAU,eAAe1H,EAAOS,SAAS80D,eAEzDrxD,EAAAA,cAACqhF,GAAQ,CACPx+E,IAAI,WACJ/G,OAAQA,EACRwlF,cAAeA,EACfc,iBAAkBA,EAClBX,kBAAmBA,EACnBU,gBAAiBA,EACjBT,iBAAkBA,EAClBtK,YAAaA,EACbx7E,YAAaE,EAAOS,SAAS4mF,0BAC7BtnF,SAAUA,EACVwL,GAAIA,EACJqqB,QAASA,KAGEuxD,GACZjjF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,iBAAiBs/E,EAAiB3+E,UAAU,kBACvDxD,EAAAA,cAAA,OAAKwD,UAAU,0BACZ1H,EAAOS,SAASs5D,WACb71D,EAAAA,cAAA,SAAOwD,UAAU,eAAc,KAC/B,KACJxD,EAAAA,cAAA,OAAKwD,UAAU,+BACbxD,EAAAA,cAAA,QAAMwD,UAAU,uBAAuB0/E,EAA0BE,wBAQjF,IAAC,CAzCiC,CAASjC,EAAAA,e,weCE7C,IAAOxxC,GAAsBj1C,GAAM2oF,UAA5B1zC,mBACPyxC,GAA2D1mF,GAAMyjF,YAA1DtvD,GAAcuyD,GAAdvyD,eAAgByC,GAAa8vD,GAAb9vD,cAAe2nC,GAAiBmoB,GAAjBnoB,kBAGjBqqB,GAAK,SAAAxG,GAgBxB,SAAAwG,EAAYhoF,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAAuG,IACjB/3B,EAAAyxB,GAAA,KAAAsG,EAAA,CAAMhoF,KAkIRoK,SAAW,SAAC4L,EAAO+c,GAAgC,IAAfumD,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpCuC,EAAMkkD,EAAKjwD,MAAX+L,GACP,IAAKutE,EAAM2O,SAAU,CACnB,IAAMA,EAAW,CACfl8E,EACA,KACC,GACD1K,KAAK,KACPi4E,EAAM2O,SAAWA,CACnB,CACAh4B,EAAKjwD,MAAMoK,SAAS4L,EAAO+c,EAAiBumD,EAC9C,EA5IEwH,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAgG,EAAAxG,IAAAS,EAAAA,EAAAA,GAAA+F,EAAA,EAAAzgF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,QAEC80D,KAAK1mC,MADT,CAAC,gBAAiB,mBAAoB,oBAAqB,SAAU,eACxCjtB,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAGnHqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,GAE7B,GAAC,CAAA/4E,IAAA,UAAAlH,MAED,SAAAwC,GAAiE,IAAxDmjF,EAAanjF,EAAbmjF,cAAeG,EAAiBtjF,EAAjBsjF,kBAAmB3lF,EAAMqC,EAANrC,OAAQ4wB,EAAWvuB,EAAXuuB,YAC7CjnB,EAAc67E,EAClBrjF,EAAmFnC,EAAOS,SAAnFinF,EAAevlF,EAAfulF,gBAAiB/zC,EAAqBxxC,EAArBwxC,sBAAuBtwC,EAAgBlB,EAAhBkB,iBACzCskF,GADyExlF,EAAdkyB,iBACvCmxD,GACpBriF,EAAewkF,EAAsE,KAApD1I,GAAe57E,EAAkBqkF,GAClEE,EAAYD,EAAkB50D,GAAe/yB,EAAQ2J,GAAe,KACpEK,EAAe49E,GAAa,CAAC,EAE7B3B,EAAe9oB,GAAkBxzD,EAAa3J,GAC9CkmF,EAAe/oB,GAAkBxzD,EAAa3J,GAAQ,GACtD8J,EAAgBwqD,KAAKuzB,cAAcD,EAAWj+E,EAAa3J,GAC3D8nF,EAAcj0C,GAAmBlqC,EAAa3J,GAChDiK,EAAoB69E,EAAcA,EAAYjnF,KAAK8yC,GAAyB,MAC5E1pC,GAAqBH,GAAiB8mB,KACxC3mB,EAAoB,MACtB,IAAMF,EAAmBC,EAAagqC,QAAUhqC,EAAa/F,QAEvD8jF,EAAkBvyD,GAAc5E,EAAa5wB,GAC7C+3B,EAAoBnH,EAAcmC,GAAe/yB,EAAQ4wB,GAAe,KACxEo3D,EAAep3D,EAAcmH,GAAqBA,EAAkBo8B,UAAYn0D,EAAOuV,OACvF0yE,GAAuBN,GAAmBhC,EAC1C78E,EAAQwrD,KAAK0xB,aAAa+B,EAAiB/nF,EAAQgoF,EAAcC,EAAqBF,GAGtF7nF,EAAY+nF,EAAsB,sBAAwB,KAOhE,OALIt+E,GAAsC,YAAvBgJ,EAAAA,EAAAA,GAAOhJ,KAExBA,OAAczG,GAGT,CACLC,YAAAA,EAAa2F,MAAAA,EAAO8nB,YAAAA,EACpBjnB,YAAAA,EAAas8E,aAAAA,EAAcC,aAAAA,EAAcp8E,cAAAA,EAAeE,aAAAA,EAAcD,iBAAAA,EAAkBE,kBAAAA,EACxF/J,UAAAA,EAEJ,GAAC,CAAA6G,IAAA,gBAAAlH,MAED,SAAcqoF,EAAWryE,EAAU7V,GACjC,IAAK6V,EAAU,OAAO,KACtB,IAAI6xE,EAAkB1nF,EAAOS,SAASinF,gBAClC9mD,EAAapL,GAAc3f,EAAU7V,GACrC4D,GAAQskF,aAAS,EAATA,EAAWtkF,QAASqnD,KAAKrqB,GAErC,OADQq+C,GAAer7E,EAAO8jF,EAEhC,GAAC,CAAA3gF,IAAA,eAAAlH,MAED,SAAakoF,EAAiB/nF,EAAQuV,GAA6D,IAAAy3D,EAAA,KAArDl7C,EAAS9oB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAWwF,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMm/E,EAAQn/E,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC3F,IAAKuM,EACH,OAAO,KACT,IAAA4uC,EAAgDnkD,EAAOS,SAAhD4zB,EAAc8vB,EAAd9vB,eAAgBsf,EAAqBwQ,EAArBxQ,sBACjBvqC,EAASV,SAAAA,EAAMO,OAASP,EAAK7H,KAAKwzB,GAAkBA,EAAiB,GAErE+zD,EAAyB,SAAzBA,EAA0B7yE,GAC9B,OAAOnJ,OAAOC,KAAKkJ,GAAU,CAAC,GAAGuM,QAAO,SAACC,EAAKlM,GAC5C,IAAML,EAAQD,EAAOM,GACrB,MAAmB,YAAfL,EAAM1K,KACDiX,EAAMqmE,EAAuB5yE,EAAM2+C,WAEnCpyC,GAAOvM,EAAM1K,OAASgnB,EAAY,EAAI,EAEjD,GAAG,EACL,EAEA,OAAOzlB,KAAKkJ,GAAQ5U,KAAI,SAAAkV,GACtB,IAAMwyE,EAAgB,GAAHzlE,QAAAhP,EAAAA,EAAAA,GAAQlL,QAAAA,EAAQ,IAAK,CAAAmN,IAClCL,EAAQD,EAAOM,GACfjS,EAAQopE,EAAK6a,cAAcryE,EAAO6yE,EAAeroF,GAEnDsoF,EADgBz0C,GAAmBw0C,EAAeroF,GAC1Ba,KAAK8yC,IAC7B20C,GAAa1kF,GAASmkF,SAAAA,EAAiB9+E,UACzCq/E,EAAY,MACd,IAAM3/E,EAAW6M,EAAMw+B,OACjB/vC,EAAUuR,EAAMvR,QAChBuB,EAAWgQ,EAAMhQ,SAEvB,IAAIgQ,EAAM+yE,cAAV,CAGA,GAAkB,WAAd/yE,EAAM1K,KAAmB,CAC3B,IAAMhC,EAAQkkE,EAAKgZ,aAAa+B,EAAiB/nF,EAAQwV,EAAM2+C,UAAWriC,EAAWu2D,EAAe,CAClGzkF,MAAAA,EACAK,QAAAA,IAEIukF,EAAsBJ,EAAuB5yE,EAAM2+C,WAAa,EACtE,MAAO,CACL3uD,SAAAA,EACAuB,IAAK8O,EACLnN,KAAMU,EAAOyM,EACbjS,MAAAA,EACA0kF,UAAAA,EACA3/E,SAAAA,EACA1E,QAAAA,EACA6E,MAAAA,EACAK,YAAaq/E,EAEjB,CACE,IAAMr/E,OAA4BjG,IAAd4uB,EAA0Btc,EAAM1K,OAASgnB,OAAY5uB,EACzE,MAAO,CACLsC,SAAAA,EACAuB,IAAK8O,EACLnN,KAAMU,EAAOyM,EACbjS,MAAAA,EACA0kF,UAAAA,EACA3/E,SAAAA,EACA1E,QAAAA,EACA2E,WAAYu/E,aAAQ,EAARA,EAAUvkF,MACtBD,MAAOwkF,EACPh/E,YAAAA,EA/Bc,CAkCpB,IAAGkI,QAAO,SAAAw4B,GAAC,QAAMA,CAAC,GACpB,GAAC,CAAA9iC,IAAA,SAAAlH,MAeD,WACE,IAAA8hF,EAAkErtB,KAAK90D,MAAhEQ,EAAM2hF,EAAN3hF,OAAQF,EAAW6hF,EAAX7hF,YAAau7E,EAAWsG,EAAXtG,YAAat7E,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAChD7c,EAAe/Y,EAAOS,SAAtBsY,YACDqtE,E,uWAAW5/E,CAAA,CACf+E,GAAAA,EACAqqB,QAAAA,EACA51B,OAAAA,EACAF,YAAAA,EACAC,SAAAA,EACA6J,SAAU0qD,KAAK1qD,SACfyxE,YAAAA,GACG/mB,KAAK1mC,MAEV,OAAO7U,EAAYqtE,EAAapmF,EAAOoc,IACzC,IAAC,CA9KuB,CAASylE,EAAAA,W,weAAd2F,GACZ1F,UAAY,CACjBv2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OACT/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBwD,cAAezD,KAAAA,IACfuE,iBAAkBvE,KAAAA,OAClB4D,kBAAmB5D,KAAAA,OACnBnxD,YAAamxD,KAAAA,OACbjiF,YAAaiiF,KAAAA,OACbhiF,SAAUgiF,KAAAA,KAEVn4E,SAAUm4E,KAAAA,KAAeC,WACzB3G,YAAa0G,KAAAA,MCjBjB,IAAQtvB,GAAU7zD,GAAV6zD,MACR6yB,GAA0E1mF,GAAMyjF,YAAzEtvD,GAAcuyD,GAAdvyD,eAAgBQ,GAAa+xD,GAAb/xD,cAAeiC,GAAa8vD,GAAb9vD,cAAe2nC,GAAiBmoB,GAAjBnoB,kBACrDsrB,GAAiD7pF,GAAM2oF,UAAhD58B,GAAiB89B,GAAjB99B,kBAAmBnyB,GAAmBiwD,GAAnBjwD,oBACnBla,GAAgB1f,GAAM8pF,WAAtBpqE,aAIcqqE,GAAU,SAAA3H,GAmB7B,SAAA2H,EAAYnpF,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAA0H,GACjBl5B,EAAAyxB,GAAA,KAAAyH,EAAA,CAAMnpF,IACN8gF,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAmH,EAAA3H,IAAAS,EAAAA,EAAAA,GAAAkH,EAAA,EAAA5hF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,MAGjBopF,GAAmBt0B,KAAKxrD,OAFT,CAAC,SAAU,QAAS,YAAa,WAAY,WAAY,YAAa,QAAS,eAEhDnI,KAAI,SAAAC,GAAC,MAChD,gBAANA,GAAuB0d,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IAAI,GAAQk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IACtGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,IACJqrD,KAAK1mC,MAJT,CAAC,SAAU,QAAS,YAAa,WAAY,QAAS,SAIzBjtB,KAAI,SAAAC,GAAC,OACpDk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAC7ByQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAG1BqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,IAEvB8I,IACFt0B,KAAKxrD,MAAQwrD,KAAKu0B,SAAS/I,EAAWxrB,KAAK1mC,MAE/C,GAAC,CAAA7mB,IAAA,WAAAlH,MAED,SAAAwC,EAAAyD,GAAsH,IAA5G9F,EAAMqC,EAANrC,OAAQwV,EAAKnT,EAALmT,MAAOsc,EAASzvB,EAATyvB,UAAWurD,EAAKh7E,EAALg7E,MAAOxkD,EAAQx2B,EAARw2B,SAAU2iD,EAAWn5E,EAAXm5E,YAAa76C,EAAet+B,EAAfs+B,gBAAiBlU,EAASpqB,EAAToqB,UAAaw7D,EAAmBniF,EAAnBmiF,oBACvFa,EAAsB9oF,EAAOS,SAA7BqoF,mBACDC,EAAgBz0B,KAAK00B,YACzBhpF,EAAQA,EAAOgvB,MAAOxZ,EAAOsc,EAAWurD,EAAOxkD,EAAUiwD,EAAoBtN,EAAa/uD,EAAWkU,GAGvG,OADc2zB,KAAK0xB,aAAahmF,EAAQ+oF,EAAed,EAEzD,GAAC,CAAAlhF,IAAA,UAAAlH,MAED,SAAAmG,GAA8D,IAArDhG,EAAMgG,EAANhG,OAAgB8xB,GAAF9rB,EAANi3C,OAAiBj3C,EAAT8rB,WAAWjyB,EAAKmG,EAALnG,MAAOw9E,EAAKr3E,EAALq3E,MAAO5wD,EAASzmB,EAATymB,UAChDtqB,EAAiDnC,EAAOS,SAAjDg1D,EAAetzD,EAAfszD,gBAAiB9hB,EAAqBxxC,EAArBwxC,sBAClBs1C,EAAkBppF,EAClBqpF,IAAmBrpF,EAKnBsD,EAAe+lF,EAAmC,KAAlBzzB,EAEhC0zB,EAAWD,EAAiB31D,GAAcvzB,EAAQipF,GAAmB,KACrEj/E,EAAem/E,GAAY,CAAC,EAE5BlD,EAAe9oB,GAAkB8rB,EAAiBjpF,GAClDkmF,EAAe/oB,GAAkB8rB,EAAiBjpF,GAAQ,GAC1D8J,EAAgBwqD,KAAK80B,aAAaD,EAAUF,EAAiBjpF,GAC7D8nF,EAAcn9B,GAAkBs+B,EAAiBjpF,GACnDiK,EAAoB69E,EAAcA,EAAYjnF,KAAK8yC,GAAyB,KAC5E1pC,GAAqBH,IACvBG,EAAoB,MAEtB,IACMg+E,EADkB5K,IAAU5wD,IACcy8D,GAAkBp3D,EAIlE,MAAO,CACL3uB,YAAAA,EACAwG,YAAas/E,EAAiBhD,aAAAA,EAAcC,aAAAA,EAAcp8E,cAAAA,EAAeE,aAAAA,EAAcC,kBAAAA,EACvF/J,UALgB+nF,EAAsB,yBAA2B,KAMjEA,oBAAAA,EAEJ,GAAC,CAAAlhF,IAAA,cAAAlH,MAED,SAAYG,EAAQgvB,EAAOq6D,EAAkBv3D,EAAWurD,EAAOxkD,EAAUiwD,EAAoBtN,EAAa/uD,EAAWkU,GACnH3R,EAAQyjC,GAAMzjC,GACd,IAGIs6D,EAHEj1D,EAAiBr0B,EAAOS,SAAS4zB,eACjCwtB,EAAkB9uB,GAAe/yB,EAAQqpF,GAG3CE,EAAmB1nC,EACjBlxB,EAAS6H,GAAoBx4B,EAAQqpF,EAAkBxwD,EAAU,SAyCvE,OAxCqBlI,GAAU3wB,EAAOya,QAAQkW,GAC1ClE,GACF88D,EAAmB5oD,EACnB2oD,EAAe3oD,aAAe,EAAfA,EAAiB71B,MAGvB+2C,EACTynC,EAAeznC,EAAgB/2C,KACrBuyE,IAEViM,EAAex3D,GAGjB,SAAS03D,EAAQpkE,EAAM1c,GACrB,IAAK,IAAIuqB,KAAW7N,EAAM,CACxB,IAAI+uC,EAAY/uC,EAAK6N,GAASkhC,UAC1Bs1B,GAAW/gF,GAAc,IAAIka,OAAOqQ,GACpCy2D,EAAcD,EAAQ5oF,KAAKwzB,GAC3BjF,EAAamE,GAAcvzB,EAAQ0pF,GACvC,GAAuB,WAAnBt6D,EAAWtkB,KACqB,GAA/B0+E,EAAQr1B,EAAWs1B,WACbrkE,EAAK6N,OACT,KAAA02D,EACDC,GAAUN,GAAgBl6D,EAAWiE,YAAci2D,EACnC,QAApBK,EAAIJ,SAAgB,IAAAI,GAAhBA,EAAkB36D,QACpB46D,EAASA,GAAUL,EAAiBv6D,MAAMvnB,SAASiiF,IACjDZ,IACFc,EAASA,GAAUd,EAAmBO,EAAkBxnC,EAAiB6nC,EAAat6D,EAAYyJ,KAE/FzJ,EAAWy6D,kBAAoBrO,GAAeA,EAAY76E,KAAI,SAAA8C,GAAA,IAAAuB,GAAAwI,EAAAA,EAAAA,GAAA/J,EAAA,GAAEkoB,EAAI3mB,EAAA,GAAM,OAAAA,EAAA,GAAM2mB,CAAI,IAAElkB,SAASiiF,KAClGE,GAAS,GACNA,UACIxkE,EAAK6N,EAChB,CACF,CACA,OAAO5mB,KAAK+Y,GAAMnc,MACpB,CAEAugF,CAAQx6D,EAAO,IAERA,CACT,GAAC,CAAAjoB,IAAA,eAAAlH,MAED,SAAaG,EAAQgvB,GAA4D,IAAAg+C,EAAA,KAArDl7C,EAAS9oB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,QAAG9F,EAAWwF,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMm/E,EAAQn/E,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACzE,IAAKgmB,EACH,OAAO,KACT,IAAAm1B,EAAgDnkD,EAAOS,SAAhD4zB,EAAc8vB,EAAd9vB,eAAgBsf,EAAqBwQ,EAArBxQ,sBACjBvqC,EAASV,SAAAA,EAAMO,OAASP,EAAK7H,KAAKwzB,GAAkBA,EAAiB,GAErE+zD,EAAyB,SAAzBA,EAA0B7yE,GAC9B,OAAOnJ,OAAOC,KAAKkJ,GAAU,CAAC,GAAGuM,QAAO,SAACC,EAAKlM,GAC5C,IAAML,EAAQD,EAAOM,GACrB,MAAmB,YAAfL,EAAM1K,KACDiX,EAAMqmE,EAAuB5yE,EAAM2+C,WAEnCpyC,GAAOvM,EAAM1K,OAASgnB,EAAY,EAAI,EAEjD,GAAG,EACL,EAEA,OAAOzlB,KAAK2iB,GAAOruB,KAAI,SAAAsyB,GACrB,IAAM62D,EAAe,GAAHlnE,QAAAhP,EAAAA,EAAAA,GAAQlL,QAAAA,EAAQ,IAAK,CAAAuqB,IACjCtH,EAAOqD,EAAMiE,GACbrvB,EAAQopE,EAAKoc,aAAaz9D,EAAMm+D,EAAc9pF,GAEhDsoF,EADgB39B,GAAkBm/B,EAAc9pF,GACxBa,KAAK8yC,GAC7B20C,GAAa1kF,IACf0kF,EAAY,MACd,IAAMrkF,EAAU0nB,EAAK1nB,QAErB,GAAiB,WAAb0nB,EAAK7gB,KAAmB,CAC1B,IAAMhC,EAAQkkE,EAAKgZ,aAAahmF,EAAQ2rB,EAAKwoC,UAAWriC,EAAWg4D,EAAc,CAC/ElmF,MAAAA,EACAK,QAAAA,IAEIukF,EAAsBJ,EAAuBz8D,EAAKwoC,WAAa,EACrE,MAAO,CACLptD,IAAKksB,EACLvqB,KAAMU,EAAO6pB,EACbrvB,MAAAA,EACA0kF,UAAAA,EACArkF,QAAAA,EACA6E,MAAAA,EACAK,YAAaq/E,EAEjB,CACE,IAAMr/E,OAA4BjG,IAAd4uB,EAA0BnG,EAAK0H,aAAevB,OAAY5uB,EAC9E,MAAO,CACL6D,IAAKksB,EACLvqB,KAAMU,EAAO6pB,EACbrvB,MAAAA,EACA0kF,UAAAA,EACArkF,QAAAA,EACA2E,WAAYu/E,aAAQ,EAARA,EAAUvkF,MACtBD,MAAOwkF,EACPh/E,YAAAA,EAGN,GACF,GAAC,CAAApC,IAAA,eAAAlH,MAED,SAAakqF,EAAU92D,EAASjzB,GAC9B,IAAKizB,EAAS,OAAO,KACrB,IAAIy0D,EAAkB1nF,EAAOS,SAASinF,gBAClCnzC,EAAY/e,GAAcvC,EAASjzB,GACnC4D,GAAQmmF,aAAQ,EAARA,EAAUnmF,QAASqnD,KAAK1W,GAEpC,OADQ0qC,GAAer7E,EAAO8jF,EAEhC,GAAC,CAAA3gF,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAA+DrtB,KAAK90D,MAA7DQ,EAAM2hF,EAAN3hF,OAAQF,EAAW6hF,EAAX7hF,YAAasK,EAAQu3E,EAARv3E,SAAUrK,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAC7Cpc,EAAcxZ,EAAOS,SAArB+Y,WACD4sE,E,uWAAW5/E,CAAA,CACfxG,OAAAA,EACAF,YAAAA,EACAC,SAAAA,EACA6J,SAAUQ,EACVtB,MAAOwrD,KAAKxrD,MACZyC,GAAAA,EACAqqB,QAAAA,GACG0+B,KAAK1mC,MAEV,OAAOpU,EAAW4sE,EAAapmF,EAAOoc,IACxC,IAAC,CA5N4B,CAASylE,EAAAA,WAAnB8G,GACZ7G,UAAY,CACjBv2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OACT/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBxsE,MAAOusE,KAAAA,IACPjwD,UAAWiwD,KAAAA,OACXttD,SAAUstD,KAAAA,OACVlpD,SAAUkpD,KAAAA,OACVjiF,YAAaiiF,KAAAA,OACbliF,MAAOkiF,KAAAA,OACP33E,SAAU23E,KAAAA,KAAeC,WACzBjiF,SAAUgiF,KAAAA,KACVvG,YAAauG,KAAAA,MACbphD,gBAAiBohD,KAAAA,OACjBt1D,UAAWs1D,KAAAA,KACX1E,MAAO0E,KAAAA,M,woBC3BX,IAAQ/9D,GAAyBplB,GAAMQ,UAA/B4kB,qBACA43C,GAAyBh9D,GAAMyjF,YAA/BzmB,qBACRouB,GAA4CprF,GAAMulF,UAA1C34D,GAAkBw+D,GAAlBx+D,mBAAoBpM,GAAW4qE,GAAX5qE,YAEtB6qE,IAAoBp/E,EAAAA,EAAAA,OAAK,SAAAxI,GAGzB,IAFJ6nF,EAAa7nF,EAAb6nF,cACG35B,GAAW9tD,EAAAA,GAAAA,GAAAJ,EAAAK,IAEN1C,EAAuCuwD,EAAvCvwD,OAAQysB,EAA+B8jC,EAA/B9jC,UAChB3mB,EAD+CyqD,EAApB5vB,iBAC8C,CAAC,EAAlEnO,EAAa1sB,EAAb0sB,cAAeb,EAAY7rB,EAAZ6rB,aAAcvkB,EAAYtH,EAAZsH,aAC/B+8E,EAAU19D,GAAqC,IAAxBrf,aAAY,EAAZA,EAAcnE,SAAqC,WAAtBmE,aAAY,EAAZA,EAAe,IACnElD,GAAasoB,aAAa,EAAbA,EAAe4tB,cAAc5tB,aAAa,EAAbA,EAAetoB,YAE/D,OAAIigF,GAAWx4D,EACe,kBAAjBA,EACFA,EAAgB4+B,EAAYl8C,UAAY,MAAUk8C,EAAYj8C,SAAW,KACvEpK,EACLuL,MAAMC,QAAQic,GACTA,EAAahxB,KAAI,SAAA2Q,GAAC,OAAI0S,GAAqB9Z,EAAYoH,IAAMA,CAAC,IAAEzQ,KAAK,MAEpEmjB,GAAqB9Z,EAAYynB,IAAiBA,EAEvD,GAAGA,EAGPu4D,EAIEA,EAAc35B,EAAavwD,EAAOoc,KAHhC,GAIX,IAEA6tE,GAAkB9H,YAAc,oBAEhC,IAAMiI,GAAgB,SAAHpkF,GAMb,IALJ2hD,EAAK3hD,EAAL2hD,MAAOl7B,EAASzmB,EAATymB,UAAW1f,EAAQ/G,EAAR+G,SACXs9E,EAAQrkF,EAAfnG,MAA6ByqF,EAAatkF,EAAzBoyC,WAA2BC,EAAUryC,EAAVqyC,WAAY9lB,EAAevsB,EAAfusB,gBACxD84B,EAAcrlD,EAAdqlD,eAAgB1qB,EAAe36B,EAAf26B,gBAChBhQ,EAAM3qB,EAAN2qB,OAAQ45D,EAAgBvkF,EAAhBukF,iBAAkBC,EAAgBxkF,EAAhBwkF,iBAAkBh/B,EAAWxlD,EAAXwlD,YAAa93C,EAAc1N,EAAd0N,eAAgBtJ,EAAQpE,EAARoE,SAAUmxE,EAAYv1E,EAAZu1E,aACnFv7E,EAAMgG,EAANhG,OAAQwV,EAAKxP,EAALwP,MAAOif,EAAQzuB,EAARyuB,SAAUg2D,EAASzkF,EAATykF,UAAW34D,EAAS9rB,EAAT8rB,UAAWurD,EAAKr3E,EAALq3E,MAAOxkD,EAAQ7yB,EAAR6yB,SAAU94B,EAAQiG,EAARjG,SAAU6wB,EAAW5qB,EAAX4qB,YAAa4qD,EAAWx1E,EAAXw1E,YAAajwE,EAAEvF,EAAFuF,GAAIqqB,EAAO5vB,EAAP4vB,QAAS6xD,EAAQzhF,EAARyhF,SAEjGyC,EAAsCK,EAA/C5vE,QAA2BojD,GAAgBt7D,EAAAA,GAAAA,GAAI8nF,EAAgBG,IAIhEC,EAAgBN,EAAWA,EAAS1pF,KAAI,SAAA2Q,GAAC,OAAIka,GAAmBla,EAAE,SAAIpO,EACtErD,GAAQiS,EAAAA,EAAAA,UAAQ,WACpB,GAAIu5C,EAAgB,CAClB,IAAIxrD,EAAQ,CAAE8qF,aAAa,EAAbA,EAAe9kE,IAAI,GAAI8kE,aAAa,EAAbA,EAAe9kE,IAAI,IAGxD,YAFiB3iB,IAAbrD,EAAM,SAAiCqD,IAAbrD,EAAM,KAClCA,OAAQqD,GACHrD,CACT,CACA,OAAO8qF,aAAa,EAAbA,EAAe9kE,IAAI8hC,EAC5B,GAAG,CAAE0D,EAAgBg/B,IACfjyC,GAAatmC,EAAAA,EAAAA,UAAQ,WACzB,OAAKw4E,EAGDj/B,EACK,CAAEi/B,EAAczkE,IAAI,GAAIykE,EAAczkE,IAAI,GAAIykE,EAAczkE,IAAI,IAElEykE,aAAa,EAAbA,EAAezkE,IAAI8hC,GALjB,IAMX,GAAG,CAAE0D,EAAgBg/B,IACfx7E,EAAewuE,EAAQhlC,EAAaD,EAClC5lB,GAAkBmO,GAAmB,CAAC,GAAtCnO,cACA5uB,EAAuB4mF,EAAvB5mF,MAAOT,EAAgBqnF,EAAhBrnF,YACTsQ,EAAe+3C,EAAcA,EAAYroD,YAAc,KACvDynF,EAAcxrE,GAAY5J,GAAS,KAAOA,EAE1C+6C,EAAc1tD,KAAI2D,GAAAA,GAAAA,GAAC,CAAC,EACrBu3D,GACAvrC,GAAa,IAChBxyB,OAAAA,EACAwV,MAAOo1E,EACPH,UAAAA,EACAh2D,SAAAA,EACA3C,UAAAA,EACAurD,MAAAA,EACAzsD,YAAAA,EACA4qD,YAAAA,EACA76C,gBAAAA,EACA9H,SAAAA,EACA8uB,MAAAA,EACA0D,eAAAA,EACA5+B,UAAAA,EACA5sB,MAAAA,EACAkN,SAAAA,EACAqrC,WAAAA,EACAC,WAAAA,EACAxpC,aAAAA,EACAjL,MAAAA,EACAT,YAAAA,EACAsQ,aAAAA,EACAC,eAAAA,EACAtJ,SAAAA,EACAmxE,aAAAA,EACAx7E,SAAAA,EACAwyB,gBAAAA,EACAhnB,GAAAA,EACAqqB,QAAAA,EACA6xD,SAAAA,EACAyC,cAAAA,EACAv5D,OAAAA,IAAM,GAAA/N,QAAAhP,EAAAA,EAAAA,GAEHgoD,IAAoB,CACvB,UAGF,OAAO13D,EAAAA,cAAC+lF,IAAiB7kF,EAAAA,GAAAA,GAAA,CACvB8kF,cAAeA,GACX35B,GAER,EAEA65B,GAAcjI,YAAc,gBAE5B,Y,yQC9GA,IAAAmD,GAAkE1mF,GAAMyjF,YAAjEtvD,GAAcuyD,GAAdvyD,eAAgByK,GAAiB8nD,GAAjB9nD,kBAAmByC,GAAoBqlD,GAApBrlD,qBAC1CwoD,GAAwE7pF,GAAM2oF,UAAvE5gC,GAAyB8hC,GAAzB9hC,0BAA2BnuB,GAAmBiwD,GAAnBjwD,oBAAqB4yB,GAAaq9B,GAAbr9B,cAC/C3Z,GAA6B7yC,GAAMwjF,aAAnC3wC,yBACDnzB,GAAgB1f,GAAM8pF,WAAtBpqE,aAGDusE,IAFkBjsF,GAAMulF,UAAtB/kE,YAEkB,CAACrB,YAAa,IAEnB+sE,GAAM,SAAA9J,GAmCzB,SAAA8J,EAAYtrF,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAA6J,IACjBr7B,EAAAyxB,GAAA,KAAA4J,EAAA,CAAMtrF,KA0CRurF,UAAY,SACV1/B,EAAgB1D,EAAOqjC,EAAYvD,EACnC5nF,EAAO0yB,GACJ,IADqBumD,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjC,GAHK8vE,EAAM2O,WACT3O,EAAM2O,SAAWA,GAEfp8B,GAAkB51C,MAAMC,QAAQ7V,GAAQ,CAC1C,IAAMorF,EAAW,CAACx7B,EAAKjwD,MAAMK,MAAMgmB,IAAI,GAAI4pC,EAAKjwD,MAAMK,MAAMgmB,IAAI,IAC5DolE,EAAS,IAAMprF,EAAM,IACvB4vD,EAAKjwD,MAAM4K,SAAS,EAAGvK,EAAM,GAAImrF,EAAYz4D,EAAiBumD,GAC5DmS,EAAS,IAAMprF,EAAM,IACvB4vD,EAAKjwD,MAAM4K,SAAS,EAAGvK,EAAM,GAAImrF,EAAYz4D,EAAiBumD,EAClE,MACErpB,EAAKjwD,MAAM4K,SAASu9C,EAAO9nD,EAAOmrF,EAAYz4D,EAAiBumD,EAEnE,EAACrpB,EAEDy7B,aAAe,SACbvjC,EAAO8/B,EACPz6E,GAEA,IAAM8rE,EAAQ,CACZ2O,SAAAA,GAEFh4B,EAAKjwD,MAAM6N,YAAYs6C,EAAO36C,EAAQ8rE,EACxC,EAACrpB,EAoID07B,aAAe,SAACxjC,EAAO/5B,EAAMpuB,GAC3B,IACEQ,EAEER,EAFFQ,OAAQysB,EAENjtB,EAFMitB,UAAW+xB,EAEjBh/C,EAFiBg/C,UAAW3lB,EAE5Br5B,EAF4Bq5B,SAAiB1N,EAE7C3rB,EAFsCK,MAAeu4C,EAErD54C,EAFqD44C,WAAYC,EAEjE74C,EAFiE64C,WACnEt4C,EACEP,EADFO,SAAU6wB,EACRpxB,EADQoxB,YAAa4qD,EACrBh8E,EADqBg8E,YAAajwE,EAClC/L,EADkC+L,GAAIqqB,EACtCp2B,EADsCo2B,QAASnB,EAC/Cj1B,EAD+Ci1B,SAAU3C,EACzDtyB,EADyDsyB,UAAWurD,EACpE79E,EADoE69E,MAAO9B,EAC3E/7E,EAD2E+7E,aAExE96E,EAAYT,EAAZS,SACCga,EAA2CmT,EAA3CnT,QAAS2wE,EAAkCx9D,EAAlCw9D,QAASC,EAAyBz9D,EAAzBy9D,OAAQj+E,EAAiBwgB,EAAjBxgB,aAC5BvN,EAAQ4sB,EAAY2+D,EAAUjgE,EAC9B3V,EAAQiX,EAAY+xB,EAAY6sC,EACtCC,EAA2C7wE,EAAQktC,GAA3C56C,EAAQu+E,EAARv+E,SAAU0+C,EAAU6/B,EAAV7/B,WAAYg8B,EAAQ6D,EAAR7D,SACxB8D,EAAkBn+E,EAAanE,OAAS,IAAMlJ,EAE9CyrF,EAAc/qF,EAASs5D,WACzB71D,EAAAA,cAAA,SAAO6C,IAAK,SAAS0gF,EAAU//E,UAAU,eAAe+jD,EAAW7nD,OACnE,KACJ,OACEM,EAAAA,cAAA,OAAK6C,IAAK,WAAW0gF,EAAU//E,UAAWy9E,KAC3B,SAAbp4E,EAAsB,eAAiB,iBACvCw+E,EAAkB,wBAA0B,6BAE9B,SAAbx+E,EAAsB,KAAOy+E,EAC9BtnF,EAAAA,cAACkmF,IAAahlF,EAAAA,GAAAA,GAAA,CACZ2B,IAAK0gF,EACLl8E,GAAIA,EACJqqB,QAASA,EACT6xD,SAAUA,EACV16E,SAAUA,EACV46C,MAAOA,EACP9nD,MAAOA,EACPu4C,WAAYA,EACZC,WAAYA,EACZ5rB,UAAWA,EACX4wD,MAAOA,GACH58C,KAAK7S,EAAM,CAAC,iBAAkB,kBAAmB,oBACjD6S,KAAKhmB,EAAQktC,GAAQ,CACvB,SAAU,mBAAoB,mBAAoB,cAAe,iBAAkB,aACnF,CACF4zB,aAAcA,EACdv7E,OAAQA,EACRwV,MAAOA,EACPif,SAAUA,EACV3C,UAAWA,EACXlB,YAAaA,EACb4qD,YAAaA,EACb3iD,SAAUA,EACV94B,SAAUA,KAIlB,EAAC0vD,EAEDz1C,mBAAqB,SAAC2tC,EAAO/5B,EAAMpuB,GACjC,IAAOQ,EAAoDR,EAApDQ,OAAQysB,EAA4CjtB,EAA5CitB,UAAW+xB,EAAiCh/C,EAAjCg/C,UAAW3lB,EAAsBr5B,EAAtBq5B,SAAU94B,EAAYP,EAAZO,SACxCU,EAAYT,EAAZS,SACC2M,EAAuDwgB,EAAvDxgB,aAAcqN,EAAyCmT,EAAzCnT,QAAS4wE,EAAgCz9D,EAAhCy9D,OAAQI,EAAwB79D,EAAxB69D,oBACjCj2E,EAAQiX,EAAY+xB,EAAY6sC,EACtCK,EAAgCjxE,EAAQktC,GAAjC56C,EAAQ2+E,EAAR3+E,SAAUM,EAAWq+E,EAAXr+E,YACXs+E,EAAel8B,EAAKk8B,aAEpBC,EAAcnrF,EAASs5D,WACzB71D,EAAAA,cAAA,SAAOwD,UAAU,eAAc,KAC/B,KAEJ,OAAO0F,EAAanE,OAAS,IAAMlJ,GAC9BmE,EAAAA,cAAA,OAAK6C,IAAK,oBAAuB4gD,EAAOjgD,UAAU,oBAClDkkF,EACD1nF,EAAAA,cAACynF,EAAY,CACX5kF,IAAK,YAAY4gD,EACjBA,MAAOA,EACPv6C,aAAcq+E,EACd1+E,SAAUA,EACV/M,OAAQA,EACRwV,MAAOA,EACPqjB,SAAUA,EACVxrB,YAAaA,EACbtN,SAAUA,EACVqE,MAAO3D,EAAS61D,yBAGxB,EAAC7G,EAEDo8B,UAAY,SAAClkC,EAAO/5B,EAAMpuB,GACxB,IAAOQ,EAAUR,EAAVQ,OACAya,EAAWmT,EAAXnT,QACAha,EAAYT,EAAZS,SACAqrF,EAAWrxE,EAAQktC,GAAnBmkC,QAEDC,EAAWtrF,EAASs5D,WACtB71D,EAAAA,cAAA,SAAOwD,UAAU,eAAc,KAC/B,KAEJ,OAAOokF,GACF5nF,EAAAA,cAAA,OAAK6C,IAAK,qBAAqB4gD,EAAOjgD,UAAWy9E,KAClD,cACS,GAATx9B,GAAc,sBAEbokC,EACD7nF,EAAAA,cAAA,YAAO4nF,GAEb,EAACr8B,EAEDu8B,kBAAoB,SAACrkC,GAKnB,MAAO,CAJK8H,EAAKo8B,UAAUlkC,EAAO8H,EAAK7hC,KAAM6hC,EAAKjwD,OAClCiwD,EAAKz1C,mBAAmB2tC,EAAO8H,EAAK7hC,KAAM6hC,EAAKjwD,OAC7CiwD,EAAK07B,aAAaxjC,EAAO8H,EAAK7hC,KAAM6hC,EAAKjwD,OAO7D,EAtTE8gF,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAsJ,EAAA9J,IAAAS,EAAAA,EAAAA,GAAAqJ,EAAA,EAAA/jF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,MACjBysF,GAAiB33B,KAAKq3B,eAAgB3L,aAAS,EAATA,EAAWhgF,WAAW8/E,aAAS,EAATA,EAAW9/E,QAMvEksF,EALc,CAClB,SAAU,KAAM,cAChB,QAAS,UAAW,WAAY,YAAa,YAAa,WAAY,YAAa,WAAY,WAAY,kBAC3G,QAAS,YAAa,iBAAkB,cAAe,SAGtD76E,QAAO,SAAAzQ,GACN,MAAU,gBAANA,GACM0d,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IAAI,GAMzC,UAANA,EAGKk/E,EAAmB,UAAME,EAAmB,QAE9CF,EAAUl/E,KAAOo/E,EAAUp/E,EACpC,IAMF,KAJwB0zD,KAAK1mC,MAAQs+D,EAAYjjF,OAAS,KAExDqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,EAAWoM,IAElCD,EAAe,CACjB,IAAQjsF,EAAW8/E,EAAX9/E,OACAga,EAAuBha,EAAOS,SAA9BuZ,mBACRs6C,KAAKq3B,aAAe5E,GAAoB/mF,EAAQga,EAClD,CACF,GAAC,CAAAjT,IAAA,UAAAlH,MA8BD,SAAAwC,GAGqB,IAAA8pF,EAAAC,EAAAC,EAAAC,EAAAtf,EAAA,KAFnBhtE,EAAMqC,EAANrC,OAAe4qF,EAAWvoF,EAAlBmT,MAA8Bsc,GAAFzvB,EAARoyB,SAAmBpyB,EAATyvB,WAAWy6D,EAASlqF,EAATkqF,UAAWC,EAAQnqF,EAARmqF,SAAU3zD,EAAQx2B,EAARw2B,SAAoB6G,EAASr9B,EAAnB0K,SAA4Boe,EAAM9oB,EAAbxC,MACrG4sF,EAAcpqF,EAAdoqF,eAAgB3yB,EAAWz3D,EAAXy3D,YAAartC,EAASpqB,EAAToqB,UAAsB8F,GAAFlwB,EAATm8C,UAA0Bn8C,EAAfkwB,iBAAiBipD,EAAWn5E,EAAXm5E,YAAa6B,EAAKh7E,EAALg7E,MAAO9xE,EAAElJ,EAAFkJ,GACvF2gF,EAAWljF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,GACR49C,EAAoB5mD,EAAOS,SAA3BmmD,iBACDpxC,EAAQiX,EAAY,CAACd,KAAM4gE,EAAWv7D,IAAKw7D,GAAY5B,EACvDvlC,GAAoBulC,GAAe94D,EACrC46D,EAAahtD,EACb0rD,EAAUjgE,GACVsB,GAAaggE,GAAkB3yB,KACjC4yB,EAAaj7C,GAAyB/R,GACtC0rD,EAAU35C,GAAyBtmB,IAGrC,IAAIwV,EAAkB5N,GAAe/yB,EAAQwV,IACxCmrB,GAAmB0kB,IACtB1kB,EAAkB3gC,EAAOmc,MAAM2V,IAEjC,IACwCw4B,EADpC9nB,EAAgBhK,GAAoBx4B,EAAQwV,EAAOqjB,IAClD2J,GAAiB6iB,IACpB7iB,EAAuC,QAA1B8nB,EAAGtqD,EAAOmc,MAAM2V,UAAU,IAAAw4B,OAAA,EAAvBA,EAAyB14B,YAE3C,IAAM0M,EAAqB7R,EACvBo+D,GACArtD,GAAkBx9B,EAAQ64B,EAAUrjB,GACxC,IAAwB,MAAnBmrB,GAAiD,MAAtBrC,KAAgCw7B,EAC9D,OAAO,KAET,IdvJ6Bj8C,EAAUC,EcuJjCutC,EAAiB/sB,aAAkB,EAAlBA,EAAoB+sB,eACrCshC,EAA4BthC,IAA0C,WAAb,QAAV8gC,EAAAO,SAAU,IAAAP,OAAA,EAAVA,EAAYtmE,IAAI,KAAyC,WAAb,QAAVumE,EAAAM,SAAU,IAAAN,OAAA,EAAVA,EAAYvmE,IAAI,KACjG+mE,EAAqBvhC,IAAmBshC,EACxC5uE,EAAc6uE,EAAqB,EdzJlB,QAAzB9uE,EAAOD,OADwBA,Ec0JiCygB,QdzJpD,EAALzgB,EAAOE,mBAAW,IAAAD,EAAAA,EAAI,Ec0J3B,GAAoB,IAAhBC,EACF,OAAO,KAGT,IAAI3Q,EAAwB,QAAZi/E,EAAG/3B,KAAK1mC,YAAI,IAAAy+D,OAAA,EAATA,EAAWj/E,aAC1Bq+E,EAA+B,QAAZa,EAAGh4B,KAAK1mC,YAAI,IAAA0+D,OAAA,EAATA,EAAWb,oBAChCr+E,IAAgB,CAAC,QAAS,WAAY,SAAU,kBAAmB,kBAAkBiE,QAAO,SAAAzQ,GAAC,OAAIsrF,EAAYzkF,SAAS7G,EAAE,IAAEqI,SAC7HmE,EAAeu5C,GAA0B3mD,EAAQwV,EAAOqjB,EAAU8H,GAC9D8rD,IAEFr/E,EAAe,CAAC,UAEboI,IACHpI,EAAehB,OAAOC,KAAKu6C,IAE7B6kC,EAAsBr+E,EAAazM,KAAI,SAAAqM,GAAM,MAAI,CAACA,EAAQ,CACxDpJ,MAAOgjD,EAAiB55C,GAAQpJ,OAChC,KAEJ,IAAM6W,EAAUoyE,KAAM,EAAG9uE,GAAapd,KAAI,SAAAgnD,GAAS,IAAAmlC,EAAAC,EAAAC,EAAAC,EAC3CC,EAAyB,QAAZJ,EAAG9f,EAAKp/C,YAAI,IAAAk/D,GAAS,QAATA,EAATA,EAAWryE,eAAO,IAAAqyE,OAAA,EAAlBA,EAAqBnlC,GACrC56C,GAAqB,QAAVggF,EAAAL,SAAU,IAAAK,OAAA,EAAVA,EAAYlnE,IAAI8hC,KAAU,KACvCh3B,EAAS6H,GAAoBx4B,EAAQwV,EAAOqjB,EAAU9rB,GACtDw9E,EAAmBtqD,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,GACzE4/E,IACFh8D,EAAS45D,EAAiBnV,aAC1BmV,EAAmBtqD,GAAqBjgC,EAAQwV,EAAOqjB,EAAUlI,EAAQ5jB,KAEtEw9E,GAAoBllC,IACvB10B,EAAS,CAAC,OAAQ,SAASlpB,SAASsF,GAAYA,EAAWy1B,EAC3D+nD,EAAmBvqF,EAAOya,QAAQkW,IAEpC,IAAMq6D,EAA6B,QAAnBgC,EAAGzC,SAAgB,IAAAyC,OAAA,EAAhBA,EAAkBliF,KAC/B2gD,EAAaL,GAAcprD,EAAQwV,EAAOqjB,EAAU8uB,EAAO56C,EAAU6/E,GACrEpC,EAAmBp/B,GAAcprD,EAAQwV,EAAOqjB,EAAU8uB,EAAO,KAAMilC,GACvEd,EAAUxtD,SAAAA,EAAoB5qB,eAAiB4qB,aAAkB,EAAlBA,EAAoB5qB,eAAei0C,GAAS,KAE7F6D,EAAc,KACd93C,EAAiB,KACjB23C,IAKFG,EAAc,CACZroD,YAAa,EALfqoD,EAAc,CACZJ,GAAcprD,EAAQwV,EAAOqjB,EAAU,GACvCuyB,GAAcprD,EAAQwV,EAAOqjB,EAAU,KAGZ,GAAG11B,YAAaqoD,EAAY,GAAGroD,aAC1DS,MAAO,CAAE4nD,EAAY,GAAG5nD,MAAO4nD,EAAY,GAAG5nD,QAEhD8P,EAAiB4qB,aAAkB,EAAlBA,EAAoB5qB,gBAGvC,IAAM+zE,EAAWX,GAAY,CAAEv7E,GAAAA,EAAI8xE,MAAAA,EAAO11B,MAAAA,EAAO6zB,YAAAA,IAC3C2R,EAAO1F,QAETp6E,EAAc6/E,aAAa,EAAbA,EAAe7/E,YAC5BA,IAAe6/E,aAAa,EAAbA,EAAezF,YAAaA,IAC9Cp6E,EAAc2/D,EAAKke,aAAa12B,KAAKwY,EAAMrlB,EAAOwlC,IAEpD,IAAI/iF,EAAW8iF,aAAa,EAAbA,EAAe9iF,SAS9B,OARKA,IACA8iF,aAAa,EAAbA,EAAezF,YAAaA,IAC5ByF,aAAa,EAAbA,EAAelC,cAAeA,IACrB,QAATiC,EAAAjgB,EAAKp/C,YAAI,IAAAq/D,OAAA,EAATA,EAAW5hC,kBAAmBA,IAEjCjhD,EAAW4iE,EAAK+d,UAAUv2B,KAAKwY,EAAM3hB,EAAgB1D,EAAOqjC,EAAYvD,IAGnE,CACL16E,SAAAA,EACA0+C,WAAAA,EACA96B,OAAAA,EACAm7D,QAAAA,EACAvB,iBAAAA,EACAC,iBAAAA,EACAh/B,YAAAA,EACA93C,eAAAA,EACArG,YAAAA,EACAjD,SAAAA,EACAq9E,SAAAA,EACAuD,WAAAA,EAEJ,IAEA,MAAO,CACLxoD,cAAAA,EACA7B,gBAAAA,EACArC,mBAAAA,EACA+sB,eAAgBuhC,EAChB7uE,YAAAA,EACA3Q,aAAAA,EACAq+E,oBAAAA,EACAhxE,QAAAA,EACA2wE,QAAAA,EACAC,OAAQ71E,EACR+c,gBAAAA,EAEJ,GAAC,CAAAxrB,IAAA,SAAAlH,MAmHD,WACE,IAAKy0D,KAAK1mC,KAAM,OAAO,KACvB,IAAAw/D,EAAuC94B,KAAK1mC,KAApC4U,EAAa4qD,EAAb5qD,cAAezkB,EAAWqvE,EAAXrvE,YACvB,IAAKykB,EAAe,OAAO,KAC3B,IAAMh3B,EAAOg3B,EAEb,OACEt+B,EAAAA,cAACqiF,GAAG,CACF7+E,UAAS,8BAAAkb,OAAgCpX,EAAK8jD,eAC9CvoD,IAAK,cAAcyE,GAElBqhF,KAAM,EAAG9uE,GAAapd,IAAI2zD,KAAK03B,mBAGtC,IAAC,CA3WwB,CAASnK,EAAAA,W,yQAAfiJ,GACZhJ,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzBniF,MAAOkiF,KAAAA,IACPh1E,SAAUg1E,KAAAA,IACV3pC,WAAY2pC,KAAAA,IACZ1pC,WAAY0pC,KAAAA,OACZvsE,MAAOusE,KAAAA,IACPttD,SAAUstD,KAAAA,OACVjwD,UAAWiwD,KAAAA,OACXsL,QAAStL,KAAAA,OACTlpD,SAAUkpD,KAAAA,OACVhiF,SAAUgiF,KAAAA,KACVxvD,gBAAiBwvD,KAAAA,MACjBx2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OAET33E,SAAU23E,KAAAA,KACV10E,YAAa00E,KAAAA,KACbxG,aAAcwG,KAAAA,KAEdt1D,UAAWs1D,KAAAA,KACXwK,UAAWxK,KAAAA,OACXyK,SAAUzK,KAAAA,OACVvjC,UAAWujC,KAAAA,IAEX0K,eAAgB1K,KAAAA,KAChBnxD,YAAamxD,KAAAA,OAEbvG,YAAauG,KAAAA,MACb1E,MAAO0E,KAAAA,KAEPjoB,YAAaioB,KAAAA,MC3CjB,IAAOxuD,GAAiB30B,GAAMyjF,YAAvB9uD,cACAjV,GAAgB1f,GAAM8pF,WAAtBpqE,aAGcgvE,GAAU,SAAAtM,GAsB7B,SAAAsM,EAAY9tF,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAAqM,IACjB79B,EAAAyxB,GAAA,KAAAoM,EAAA,CAAM9tF,KA2BRwpD,QAAU,SAAC/1B,GAAwB,IAAf6lD,EAAK9vE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3B24E,EAA0ClyB,EAAKjwD,MAAvC69E,EAAKsE,EAALtE,MAAO11B,EAAKg6B,EAALh6B,MAAO6zB,EAAWmG,EAAXnG,YAAajwE,EAAEo2E,EAAFp2E,GACnC,IAAKutE,EAAM2O,SAAU,CACnB,IAAMA,EAAWX,GAAY,CAAEv7E,GAAAA,EAAI8xE,MAAAA,EAAO11B,MAAAA,EAAO6zB,YAAAA,IACjD1C,EAAM2O,SAAWA,CACnB,CAEAh4B,EAAKjwD,MAAM+7E,aACT8B,GAAS,EAAK11B,GAAS,EAAI6zB,EAAa,KAAMvoD,EAAS,aAAS/vB,EAAW41E,EAE/E,EAACrpB,EAED/F,YAAc,SAACz1B,EAAQD,EAAQg3D,EAAYz4D,EAAiBumD,GAC1D,IAAAyU,EAA4C99B,EAAKjwD,MAAlCmoD,GAAF4lC,EAANvtF,OAAautF,EAAL5lC,OAAO01B,EAAKkQ,EAALlQ,MAAO7B,EAAW+R,EAAX/R,YAE7B/rB,EAAKjwD,MAAM+7E,aACT8B,GAAS,EAAK11B,GAAS,EAAI6zB,EAAavnD,EAAQD,EAAQg3D,EAAYz4D,EAAiBumD,EAEzF,EAACrpB,EAED9F,eAAiB,SAAC11B,EAAQ21B,EAAWkvB,GACnC,IAAA0U,EAA4C/9B,EAAKjwD,MAAlCmoD,GAAF6lC,EAANxtF,OAAawtF,EAAL7lC,OAAO01B,EAAKmQ,EAALnQ,MAAO7B,EAAWgS,EAAXhS,YAE7B/rB,EAAKjwD,MAAM+7E,aACT8B,GAAS,EAAK11B,GAAS,EAAI6zB,EAAavnD,EAAQ21B,EAAW,iBAAa1mD,EAAW41E,EAEvF,EAACrpB,EAEDg+B,iBAAmB,WAAM,IAAAvrC,EAAAwrC,EACvBC,EAAkJl+B,EAAKjwD,MAAhJQ,EAAM2tF,EAAN3tF,OAAQwV,EAAKm4E,EAALn4E,MAAOsc,EAAS67D,EAAT77D,UAAW2C,EAAQk5D,EAARl5D,SAAU4oD,EAAKsQ,EAALtQ,MAAOxkD,EAAQ80D,EAAR90D,SAAU/4B,EAAW6tF,EAAX7tF,YAAaD,EAAK8tF,EAAL9tF,MAAOE,EAAQ4tF,EAAR5tF,SAAUy7E,EAAWmS,EAAXnS,YAAajwE,EAAEoiF,EAAFpiF,GAAIqqB,EAAO+3D,EAAP/3D,QAASnJ,EAASkhE,EAATlhE,UAAWkU,EAAegtD,EAAfhtD,gBAEzHitD,EAAc,CAClB/tF,MAFkC,QAAvBqiD,EAAGriD,SAAU,QAAL6tF,EAAL7tF,EAAOgmB,WAAG,IAAA6nE,OAAA,EAAVA,EAAAnwE,KAAA1d,EAAa,eAAO,IAAAqiD,EAAAA,EAAI,KAGtC93C,SAAUqlD,EAAKzG,QACfhpD,OAAAA,EAAQwV,MAAAA,EAAOsc,UAAAA,EAAW2C,SAAAA,EAAU4oD,MAAAA,EAAOxkD,SAAAA,EAAU/4B,YAAAA,EAAaC,SAAAA,EAAUy7E,YAAAA,EAC5E/uD,UAAAA,EAAWkU,gBAAAA,EACXp1B,GAAAA,EAAIqqB,QAAAA,GAENzzB,EAAgCnC,EAAOS,SAAhCs5D,EAAU53D,EAAV43D,WAAYvE,EAASrzD,EAATqzD,UACbg2B,EAAczxB,EAChB71D,EAAAA,cAAA,SAAOwD,UAAU,eAAe8tD,GAChC,KAEJ,OACEtxD,EAAAA,cAACqiF,GAAG,CAACx/E,IAAI,OAAOW,UAAU,cACvB8jF,EACDtnF,EAAAA,cAACykF,GAAeiF,GAGtB,EAACn+B,EAEDo+B,eAAiB,SAAC55D,EAAQypD,GACxB,IAAOtwE,EAAyCswE,EAAzCtwE,aAActC,EAA2B4yE,EAA3B5yE,KAAMgjF,EAAqBpQ,EAArBoQ,WAAYlqF,EAAS85E,EAAT95E,MAChC5D,EAAUyvD,EAAKjwD,MAAfQ,OACDmqF,EAAU/8E,GAAuC,GAAvBA,EAAanE,QAAkC,SAAnBmE,EAAa,GAEzE,OADmBpN,EAAOS,SAASs5D,YAAuB,WAARjvD,IAAqBq/E,IAAY2D,EAC5D,KAErB5pF,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAU,yBACZ9D,GAASqwB,EAGhB,EAACw7B,EAEDs+B,kBAAoB,SAAC95D,EAAQypD,GAC3B,IAAOtwE,EAAkCswE,EAAlCtwE,aAActC,EAAoB4yE,EAApB5yE,KAAMgjF,EAAcpQ,EAAdoQ,WACpB9tF,EAAUyvD,EAAKjwD,MAAfQ,OACDmqF,EAAU/8E,GAAuC,GAAvBA,EAAanE,QAAkC,SAAnBmE,EAAa,GAEzE,OADmBpN,EAAOS,SAASs5D,YAAuB,WAARjvD,IAAqBq/E,IAAY2D,EAC5D,KAErB5pF,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAU,6BACZ,IAGP,EAAC+nD,EAEDu+B,aAAe,SAAC/6D,EAASgB,EAAQypD,GAC/B,IAAAuQ,EAGIx+B,EAAKjwD,MAFPQ,EAAMiuF,EAANjuF,OAAQwV,EAAKy4E,EAALz4E,MAAOsc,EAASm8D,EAATn8D,UAAW2C,EAAQw5D,EAARx5D,SAAU4oD,EAAK4Q,EAAL5Q,MAAiBx9E,GAAFouF,EAARp1D,SAAeo1D,EAALpuF,OAAOE,EAAQkuF,EAARluF,SAAUy7E,EAAWyS,EAAXzS,YAAajwE,EAAE0iF,EAAF1iF,GAAIqqB,EAAOq4D,EAAPr4D,QACvFyiB,EAAU41C,EAAV51C,WAAYD,EAAU61C,EAAV71C,WAAYmjC,EAAY0S,EAAZ1S,aAEpBvqD,EAAMnxB,EAAQA,EAAMwmB,MAAM,CAAC,OAAQ4N,IAAW,KAC9CD,EAAShD,EAAMA,EAAInL,IAAI,cAAW3iB,EAClCgrF,EAA0D,GAArCxQ,EAActwE,aAAanE,OAAcy0E,EAActwE,aAAa,QAAKlK,EAG9FqtD,EAAc,CAClBvwD,OAAAA,EACAusF,UAAWt5D,EACXu5D,SAAUv4D,EACVuqB,UAAWhpC,EACXsc,UAAAA,EACA2C,SAAAA,EACA4jB,WAAAA,EACAD,WAAAA,EACAilC,MAAAA,EACAxkD,SAAU,KACVh5B,MAAOm0B,EACPjnB,SAdgBikB,EAAOA,EAAInL,IAAI,aAAeqoE,GAAsB,QAAWA,EAe/E9jF,SAAUqlD,EAAK/F,YACfr8C,YAAaoiD,EAAK9F,eAClB4xB,aAAAA,EACAtoD,QAAAA,EACAgB,OAAAA,EACAypD,cAAAA,EACA39E,SAAAA,EACAy7E,YAAAA,EACAjwE,GAAAA,EACAqqB,QAAAA,GAIF,OACE1xB,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAU,yBACbxD,EAAAA,cAACiqF,GAAc59B,GAGrB,EAACd,EAED2+B,aAAe,SAACn6D,EAAQypD,EAAe2Q,EAAQhsF,GAAmB,IAAhBuvD,EAAUvvD,EAAVuvD,WAChD,OAAKy8B,EAEHnqF,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAU,uBACZkqD,EAAaA,EAAWy8B,EAAW,GAAK,MAHvB,IAMxB,EAAC5+B,EAED6+B,oBAAsB,SAAAxoF,GAAsB,IAApB6rD,EAAc7rD,EAAd6rD,eACtB,OACEztD,EAAAA,cAACqiF,GAAG,CAACx/E,IAAI,cAAcW,UAAU,8BAC9BiqD,EAAiBA,EAAe,GAAK,IAG5C,EAAClC,EAED8+B,mBAAqB,SAAAvoF,GAAsB,IAApB2rD,EAAc3rD,EAAd2rD,eACrB,OACEztD,EAAAA,cAACqiF,GAAG,CAACx/E,IAAI,aAAaW,UAAU,6BAC7BiqD,EAAiBA,EAAe,GAAK,IAG5C,EAAClC,EAED++B,eAAiB,WACf,IAAAnC,EAAkC58B,EAAK7hC,KAAhC6gE,EAAcpC,EAAdoC,eAAgBx7D,EAAOo5D,EAAPp5D,QACvB,IAAKA,EAAS,OAAO,KACrB,IAAOa,GAAQ26D,GAAkB,CAAC,GAA3B36D,KACP,OAAKA,EAGH5vB,EAAAA,cAAAA,EAAAA,SAAA,KACGurD,EAAK6+B,oBAAoBG,GAC1BvqF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAG,QAAA6b,OAAUqQ,GAAWvrB,UAAS,gCAAAkb,OAAkCqQ,EAAO,WAC5E7mB,OAAOC,KAAKynB,GAAMnzB,KAAI,SAACszB,EAAQo6D,GAAQ,OACtCnqF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAG,OAAA6b,OAASqR,EAAM,KAAArR,OAAIyrE,GAAY3mF,UAAS,+BAAAkb,OAAiCqQ,EAAO,WAAArQ,OAAUqR,IAC/Fw7B,EAAK2+B,aAAan6D,EAAQH,EAAKG,GAASo6D,EAAUI,GAClDh/B,EAAKo+B,eAAe55D,EAAQH,EAAKG,IACjCw7B,EAAKs+B,kBAAkB95D,EAAQH,EAAKG,IACpCw7B,EAAKu+B,aAAa/6D,EAASgB,EAAQH,EAAKG,IACrC,KAGTw7B,EAAK8+B,mBAAmBE,IAfX,IAkBpB,EAjMEnO,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAA8L,EAAAtM,IAAAS,EAAAA,EAAAA,GAAA6L,EAAA,EAAAvmF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,QAEC80D,KAAK1mC,MADT,CAAC,SAAU,QAAS,WAAY,QAAS,WAAY,YAAa,SACrCjtB,KAAI,SAAAC,GAAC,MAC7C,gBAANA,GAAuB0d,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IAAI,GAAQk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IACtGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAG1BqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,GAE7B,GAAC,CAAA/4E,IAAA,UAAAlH,MAED,SAAAmF,GAA0C,IAAA0pF,EAAAC,EAAjC3uF,EAAMgF,EAANhF,OAAyBH,GAAZmF,EAALwQ,MAAexQ,EAAR6zB,SAAe7zB,EAALnF,OAC1BozB,EAA8B,QAAvBy7D,EAAG7uF,SAAU,QAAL8uF,EAAL9uF,EAAOgmB,WAAG,IAAA8oE,OAAA,EAAVA,EAAApxE,KAAA1d,EAAa,eAAO,IAAA6uF,EAAAA,EAAI,KAGxC,MAAO,CACLD,eAHqBx7D,EAAUM,GAAcvzB,EAAQizB,GAAW,KAGhDA,QAAAA,EAEpB,GAAC,CAAAlsB,IAAA,SAAAlH,MA2KD,WACE,IAAQ27E,EAAgBlnB,KAAK90D,MAArBg8E,YACFrsD,EAAWqsD,EAAcA,EAAY76E,KAAI,SAAAiZ,GAAA,IAAAC,GAAArM,EAAAA,EAAAA,GAAAoM,EAAA,GAAE+K,EAAC9K,EAAA,GAAE0E,EAAC1E,EAAA,YAAA+I,OAAS+B,EAAC,KAAA/B,OAAIrE,EAAC,IAAI1d,KAAK,KAAO,OAC9E+tF,GAAYpT,aAAW,EAAXA,EAAavyE,SAAU,EACzC,OACE/E,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAS,kDAAAkb,OAAoDuM,EAAQ,8BAAAvM,OAA6BgsE,IACpGt6B,KAAKm5B,mBACLn5B,KAAKk6B,iBAGZ,IAAC,CArO4B,CAAS3M,EAAAA,WAAnByL,GACZxL,UAAY,CACjBv2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OACT/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBxsE,MAAOusE,KAAAA,IACPttD,SAAUstD,KAAAA,OACVjwD,UAAWiwD,KAAAA,OACX1pC,WAAY0pC,KAAAA,OACZlpD,SAAUkpD,KAAAA,OACVjiF,YAAaiiF,KAAAA,OACbliF,MAAOkiF,KAAAA,OACP33E,SAAU23E,KAAAA,KAAeC,WACzBzG,aAAcwG,KAAAA,KACdhiF,SAAUgiF,KAAAA,KACVvG,YAAauG,KAAAA,MACbphD,gBAAiBohD,KAAAA,OACjBt1D,UAAWs1D,KAAAA,KACX1E,MAAO0E,KAAAA,KACP3pC,WAAY2pC,KAAAA,QAnBe,IAyOzBoM,GAAS,SAAAU,GAab,SAAAV,EAAY3uF,GAAO,IAAAwtE,EAIU,OAJViU,EAAAA,EAAAA,GAAA,KAAAkN,IACjBnhB,EAAAkU,GAAA,KAAAiN,EAAA,CAAM3uF,KA0BR4K,SAAW,SAAC0kF,EAAQjvF,EAAOmrF,EAAYz4D,EAAiBumD,GACtD,IAAAiW,EAA2B/hB,EAAKxtE,OAChC4K,EADe2kF,EAAR3kF,UAAgB2kF,EAAN96D,OACAp0B,EAAOmrF,EAAYz4D,EAAiBumD,EACvD,EAAC9L,EAED3/D,YAAc,SAACyhF,EAAQ/hF,EAAU+rE,GAC/B,IAAAkW,EAA8BhiB,EAAKxtE,OACnC6N,EADkB2hF,EAAX3hF,aAAmB2hF,EAAN/6D,OACAlnB,EAAU+rE,EAChC,EAjCEwH,GAAiBtT,GAEjBA,EAAKyT,eAAejhF,GAAOwtE,CAC7B,CAAC,OAAAwU,EAAAA,EAAAA,GAAA2M,EAAAU,IAAApN,EAAAA,EAAAA,GAAA0M,EAAA,EAAApnF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,QAEC80D,KAAK1mC,MADT,CAAC,cAAe,UAAW,UACEjtB,KAAI,SAAAC,GAAC,MAC7C,gBAANA,GAAuB0d,GAAawhE,EAAUl/E,GAAIo/E,EAAUp/E,IAAI,GAAQk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IACtGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAG1BqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,GAE7B,GAAC,CAAA/4E,IAAA,UAAAlH,MAED,SAAAka,GAAwC,IAA/ByhE,EAAWzhE,EAAXyhE,YAAavoD,EAAOlZ,EAAPkZ,QAASgB,EAAMla,EAANka,OAG7B,MAAO,CACLunD,YAHqB,GAAH54D,QAAAhP,EAAAA,EAAAA,GAAQ4nE,GAAe,IAAK,EAACvoD,EAASgB,KAK5D,GAAC,CAAAltB,IAAA,SAAAlH,MAYD,WACE,IAAO27E,EAAelnB,KAAK1mC,KAApB4tD,YACP,OACEt3E,EAAAA,cAAC4mF,IAAM1lF,EAAAA,GAAAA,GAAA,GACDkvD,KAAK90D,MAAK,CACd4K,SAAUkqD,KAAKlqD,SACfiD,YAAainD,KAAKjnD,YAClBof,WAAW,EACX+uD,YAAaA,IAGnB,IAAC,CA7DY,CAASqG,EAAAA,W,yQAAlBsM,GACGrM,UAAY,CACjB7uD,QAAS8uD,KAAAA,OAAiBC,WAC1B/tD,OAAQ8tD,KAAAA,OAAiBC,WACzB53E,SAAU23E,KAAAA,KAAeC,WACzB30E,YAAa00E,KAAAA,KAAeC,WAC5BjiF,SAAUgiF,KAAAA,KACV1E,MAAO0E,KAAAA,KACPvG,YAAauG,KAAAA,MACbx2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,QC1P4C,IAGpCkN,GAAY,SAAAjO,GAC/B,SAAAiO,EAAYzvF,GAAO,IAAAiwD,EAGU,OAHVwxB,EAAAA,EAAAA,GAAA,KAAAgO,IACjBx/B,EAAAyxB,GAAA,KAAA+N,EAAA,CAAMzvF,KAoDRuZ,YAAc,WACZ,IAAA4oE,EAIIlyB,EAAKjwD,MAHPQ,EAAM2hF,EAAN3hF,OAAQkvF,EAASvN,EAATuN,UAAW1J,EAAa7D,EAAb6D,cAAec,EAAgB3E,EAAhB2E,iBAAkBX,EAAiBhE,EAAjBgE,kBACpD/7E,EAAQ+3E,EAAR/3E,SAAU2xE,EAAYoG,EAAZpG,aAAc3qD,EAAW+wD,EAAX/wD,YAAa7wB,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QACnDyiB,EAAUspC,EAAVtpC,WAAYD,EAAUupC,EAAVvpC,WAGd,IAD2B,CAAC,OAAQ,SACZ3wC,SAAS6+E,GAC/B,MAAO,IAET,IAAM9wE,EAA6B,SAArB8wE,EACZpiF,EAAAA,cAACopF,GAAU,CACTjQ,OAAO,EACPr9E,OAAQA,EACRH,MAAO2lF,EACP/wD,SAAU6xD,EACVx0D,UAAW6zD,EACXttC,WAAYA,EACZD,WAAYA,EACZxnB,YAAaA,EACbxmB,SAAUR,EACV2xE,aAAcA,EACdx7E,SAAUA,EACVwL,GAAIA,EACJqqB,QAASA,EACT7uB,IAAK,cAAgBwE,IAGvBrH,EAAAA,cAACsjF,GAAK,CACJxnF,OAAQA,EACRwlF,cAAeA,EACfc,iBAAkBA,EAClBX,kBAAmBA,EACnB/0D,YAAaA,EACbhnB,SAAUA,EACV9J,YAAaE,EAAOS,SAAS0uF,uBAC7BpvF,SAAUA,EACVwL,GAAIA,EACJqqB,QAASA,EACT7uB,IAAK,SAAWwE,IAGd+pD,EAAkC,SAArBgxB,EAA8BtmF,EAAOS,SAAS+0D,UAAYx1D,EAAOS,SAAS60D,WACvF1xD,EAAQ5D,EAAOS,SAASs5D,YAAmC,SAArBusB,GAA+BpiF,EAAAA,cAAA,SAAOwD,UAAU,eAAe4tD,GAC3G,OACEpxD,EAAAA,cAAA,OAAK6C,IAAKu/E,EAAkB5+E,UAAWwnF,GACpCtrF,EACA4R,EAGP,EAACi6C,EAEDv1C,mBAAqB,WACnB,IAAKu1C,EAAK7hC,KAAM,OAAO,KACvB,IAAA2/D,EAAgE99B,EAAKjwD,MAA7DQ,EAAMutF,EAANvtF,OAAQD,EAAQwtF,EAARxtF,SAAUumF,EAAgBiH,EAAhBjH,iBAAkBjL,EAAWkS,EAAXlS,YAAa9vE,EAAEgiF,EAAFhiF,GACjD6jF,EAAwB3/B,EAAK7hC,KAA7BwhE,oBACA3uF,EAAaT,EAAbS,SACFkrF,EAAel8B,EAAKk8B,aAEpBC,EAAcnrF,EAASs5D,WAC3B71D,EAAAA,cAAA,SAAOwD,UAAU,eAAc,KAC7B,KAEJ,OACE0nF,EAAoBnmF,OAAS,IAAMlJ,GACjCmE,EAAAA,cAAA,OAAK6C,IAAK,WAAYW,UAAW,kBAC9BkkF,EACD1nF,EAAAA,cAACynF,EAAY,CACX5kF,IAAK,YAAcwE,EACnB6B,aAAcgiF,EACdriF,SAAUu5E,EACVtmF,OAAQA,EACRqN,YAAaguE,EACbt7E,SAAUA,EACVqE,MAAO3D,EAAS41D,yBAK1B,EAlIEiqB,GAAiB7wB,GACjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAyN,EAAAjO,IAAAS,EAAAA,EAAAA,GAAAwN,EAAA,EAAAloF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,MACjBysF,GAAiB33B,KAAKq3B,eAAgB3L,aAAS,EAATA,EAAWhgF,WAAW8/E,aAAS,EAATA,EAAW9/E,QAO7E,KALwBs0D,KAAK1mC,MADT,CAAC,UAC4BjtB,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAGnHqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,IAEvBmM,EAAe,CACjB,IAAQjsF,EAAW8/E,EAAX9/E,OACAga,EAAuBha,EAAOS,SAA9BuZ,mBACRs6C,KAAKq3B,aAAe,SAAClI,GAAE,OAAKzpE,EAAmBypE,EAAIzjF,EAAOoc,IAAI,CAChE,CACF,GAAC,CAAArV,IAAA,UAAAlH,MAED,SAAAwC,GAEG,IACDF,EAFME,EAANrC,OAEgDS,SAAzCmmD,EAAgBzkD,EAAhBykD,iBAOP,MAAO,CACLwoC,oBARmCjtF,EAAZotC,aACgB5uC,KAAI,SAACqM,GAAM,MAAK,CACvDA,EACA,CACEpJ,MAAOgjD,EAAiB55C,GAAQpJ,OAEnC,IAIH,GAAC,CAAAmD,IAAA,SAAAlH,MAED,WACE,IAAA2tF,EAA0Cl5B,KAAK90D,MAA7B6vF,GAAF7B,EAAT0B,UAA+B1B,EAApB6B,sBACZ9/C,EAAe8/C,GAAwB/6B,KAAKp6C,qBAC5C1E,EAAQ8+C,KAAKv7C,cACnB,OAAKs2E,EAIDnrF,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAW,uBACb6nC,EACA/5B,GALEA,CASX,IAAC,CApD8B,CAASqsE,EAAAA,W,wRCJ1C,IAAOrkD,GAAqB5+B,GAAMyjF,YAA3B7kD,kBAEc8xD,GAAe,SAAA/K,GAAA,SAAA+K,IAAA,OAAArO,EAAAA,EAAAA,GAAA,KAAAqO,GAAApO,GAAA,KAAAoO,EAAAtmF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAA8N,EAAA/K,IAAA9C,EAAAA,EAAAA,GAAA6N,EAAA,EAAAvoF,IAAA,SAAAlH,MAYlC,WACE,IAAKy0D,KAAK90D,MAAMomF,iBACd,OAAO,KACT,IAAM2J,EAAsB/xD,GAAkB82B,KAAK90D,MAAMQ,OAAQs0D,KAAK90D,MAAMomF,iBAAkBtxB,KAAK90D,MAAMgmF,eACzG,QAA2C,IAAhC+J,EAAoB9tF,QAC7B,OAAO,KAGT,IAAA+tF,EAA0DD,EAAoB9tF,QAA7DguF,EAAcD,EAAvB70E,QAA4B+0E,GAAiBjtF,EAAAA,GAAAA,GAAA+sF,EAAA9sF,IAU/CitF,EAAaF,EATErjF,OAAOke,OAAO,CAAC,EAAGolE,EAAmB,CACxD1vF,OAAQs0D,KAAK90D,MAAMQ,OACnBwV,MAAO8+C,KAAK90D,MAAMgmF,cAClB/wD,SAAU6/B,KAAK90D,MAAM8mF,iBACrBztD,SAAUy7B,KAAK90D,MAAMomF,iBACrBnkF,QAAS6yD,KAAK90D,MAAM0rB,gBACpB0kE,UAAWt7B,KAAK90D,MAAMi8E,kBACtB17E,SAAUu0D,KAAK90D,MAAMO,WAEyBu0D,KAAK90D,MAAMQ,OAAOoc,KAC5D5Q,EAAO8oD,KAAK90D,MAAMomF,iBAExB,OACE1hF,EAAAA,cAAA,OAAKwD,UAAS,kCAAAkb,OAAoCpX,EAAK8jD,gBACpDqgC,EAGP,IAAC,CAtCiC,CAAStK,EAAAA,e,k1BAAxBiK,GACZxN,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzB92D,gBAAiB62D,KAAAA,IAAcC,WAC/BwD,cAAezD,KAAAA,IACfuE,iBAAkBvE,KAAAA,OAClB6D,iBAAkB7D,KAAAA,OAAiBC,WACnCjiF,SAAUgiF,KAAAA,KAEVtG,kBAAmBsG,KAAAA,KAAeC,YCFtC,IAAAsD,GAA8E1mF,GAAMyjF,YAA7EtvD,GAAcuyD,GAAdvyD,eAAgByK,GAAiB8nD,GAAjB9nD,kBAAmByC,GAAoBqlD,GAApBrlD,qBAAsB4rB,GAAUy5B,GAAVz5B,WACzD8B,GAAyB/uD,GAAM2oF,UAA/B55B,sBAGDkiC,GAAI,SAAA7O,GAsCR,SAAA6O,EAAYrwF,GAAO,IAAAiwD,EAOU,OAPVwxB,EAAAA,EAAAA,GAAA,KAAA4O,GACjBpgC,EAAAyxB,GAAA,KAAA2O,EAAA,CAAMrwF,IACN8gF,GAAiB7wB,GAEjBA,EAAKqgC,WAAargC,EAAKqgC,WAAWt7B,KAAI/E,GACtCA,EAAK0rB,QAAU1rB,EAAK0rB,QAAQ3mB,KAAI/E,GAEhCA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAqO,EAAA7O,IAAAS,EAAAA,EAAAA,GAAAoO,EAAA,EAAA9oF,IAAA,iBAAAlH,MAED,SAAeigF,GAAW,IAAA9S,EAAA,KAClBgT,EAAY1rB,KAAK90D,MACjBysF,GAAiB33B,KAAKl+C,OAAQ4pE,aAAS,EAATA,EAAWhgF,WAAW8/E,aAAS,EAATA,EAAW9/E,QAOrE,KALwBs0D,KAAK1mC,MADT,CAAC,gBAAiB,mBAAoB,oBAAqB,mBAAoB,SAAU,oBAAqB,YACjFjtB,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,KAGnHqrD,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,IAEvBmM,EAAe,CACjB,IAAQjsF,EAAW8/E,EAAX9/E,OACRmC,EAEInC,EAAOS,SADTuK,EAAU7I,EAAV6I,WAAY2O,EAAYxX,EAAZwX,aAAcG,EAAiB3X,EAAjB2X,kBAAmBJ,EAAYvX,EAAZuX,aAAcw3C,EAAkB/uD,EAAlB+uD,mBAAoBC,EAAiBhvD,EAAjBgvD,kBAAmBK,EAAervD,EAAfqvD,gBAEpG8C,KAAKl+C,KAAO2wE,GAAoB/mF,EAAQgL,GACxCspD,KAAKy7B,IAAMhJ,GAAoB/mF,EAAQ2Z,GACvC26C,KAAK07B,OAASjJ,GAAoB/mF,EAAQ8Z,GAC1Cw6C,KAAK3/C,OAASoyE,GAAoB/mF,EAAQ0Z,GAC1C46C,KAAK27B,aAAelJ,GAAoB/mF,EAAQkxD,GAChDoD,KAAK47B,YAAcnJ,GAAoB/mF,EAAQmxD,GAC/CmD,KAAK67B,UAAYpJ,GAAoB/mF,EAAQwxD,EAC/C,CACA8C,KAAK87B,SAAW,WACdpjB,EAAKxtE,MAAMswF,YACb,CACF,GAAC,CAAA/oF,IAAA,UAAAlH,MAED,SAAAwC,GAAmG,IAA1FmjF,EAAanjF,EAAbmjF,cAAeG,EAAiBtjF,EAAjBsjF,kBAAmBC,EAAgBvjF,EAAhBujF,iBAAkB5lF,EAAMqC,EAANrC,OAAQqwF,EAAiBhuF,EAAjBguF,kBAAmBjqE,EAAQ/jB,EAAR+jB,SAC/Eg+B,EAA6BpkD,EAAOS,SAApC2jD,0BACDiiC,EAAkBx6B,GAAW25B,EAAexlF,GAC5CswF,EAAsBv9D,GAAe/yB,EAAQwlF,GAC7C+K,EAAkBD,GAAoD,YAA7BA,EAAoBxlF,KAE7D68E,IAAoBnC,GADDphC,GAA6BuhC,EAEhD6K,EAAuB7I,GAAmB/B,EAC1C6K,EAAyBjzD,GAAkBx9B,EAAQ4lF,EAAkBJ,GACrEkL,EAA6BD,GAA4D,MAAlCA,EAAuBhvF,QAC9E2lF,EAA4BnnD,GAAqBjgC,EAAQwlF,EAAeI,EAAkB,KAAM,OAAS,CAAC,EAC1G+K,EAAevJ,EAA0BuJ,aAQ/C,MAAO,CACLtK,gBAAAA,EAAiBe,0BAAAA,EACjBwJ,aARmB5wF,EAAOS,SAASs0D,YAAcs7B,EAAoB,IAAMjqE,EAQ7D8gE,aAPKS,IAAoBgJ,EAOXxJ,kBANJQ,GAAmBgJ,GAAgBvJ,EAA0BE,oBAMtCuJ,WAL9BL,IAAyBD,EAKiBO,oBAJjCN,GAAwBE,EAMtD,GAAC,CAAA3pF,IAAA,UAAAlH,MAED,SAAQu7E,GACN9mB,KAAK90D,MAAM27E,QAAQC,EACrB,GAAC,CAAAr0E,IAAA,aAAAlH,MAED,WACE,IAAA8hF,EAA4BrtB,KAAK90D,MAA1B8X,EAASqqE,EAATrqE,UAAWtX,EAAM2hF,EAAN3hF,OAClBmkD,EAAkEnkD,EAAOS,SAAlE6Z,EAAa6pC,EAAb7pC,cAAyCy2E,EAAc5sC,EAAxCoS,yBAClBw6B,IAAmBz8B,KAAK08B,qBAC1B12E,EAAciD,KAAKvd,EAAOoc,IAAG5V,GAAAA,GAAA,GAAMuqF,GAAc,IAC/C55E,KAAMm9C,KAAK87B,SACXa,SAAU,KACV35E,UAAWA,IACVtX,EAAOoc,KAEVk4C,KAAK87B,UAET,GAAC,CAAArpF,IAAA,oBAAAlH,MAED,SAAAiG,EAAAE,GAOG,IANDw/E,EAAa1/E,EAAb0/E,cAAec,EAAgBxgF,EAAhBwgF,iBAAkBX,EAAiB7/E,EAAjB6/E,kBACjCC,EAAgB9/E,EAAhB8/E,iBAAkB16D,EAAeplB,EAAfolB,gBAClBrrB,EAAKiG,EAALjG,MAAO+yB,EAAS9sB,EAAT8sB,UAAW7lB,EAAQjH,EAARiH,SAAUwlB,EAAezsB,EAAfysB,gBAAiB6lB,EAAUtyC,EAAVsyC,WAAYC,EAAUvyC,EAAVuyC,WACzDznB,EAAW9qB,EAAX8qB,YAIA,MAAO,CACLpb,MAAOgwE,EACP/wD,SAAU6xD,EACVx0D,UAAW6zD,EACX0H,QANarnF,EAAfqgF,gBAOExtD,SAAU+sD,EACV16D,gBAAAA,EACArrB,MAAAA,EACA+yB,UAAAA,EACA7lB,SAAAA,EACAwlB,gBAAAA,EACA6lB,WAAAA,EACAC,WAAAA,EACAznB,YAAAA,EAEJ,GAAC,CAAA7pB,IAAA,qBAAAlH,MAED,WACE,IAAOG,EAAUs0D,KAAK90D,MAAfQ,OACDkxF,EAAW58B,KAAK68B,kBAAkB78B,KAAK90D,MAAO80D,KAAK1mC,MACzD,OAAO+/B,GAAsBujC,EAAUlxF,EACzC,GAAC,CAAA+G,IAAA,cAAAlH,MAED,WACE,IAAA0tF,EAGIj5B,KAAK90D,MAFPQ,EAAMutF,EAANvtF,OAAQomB,EAAQmnE,EAARnnE,SAAUwK,EAAW28D,EAAX38D,YAAagF,EAAO23D,EAAP33D,QAASrqB,EAAEgiF,EAAFhiF,GACxC+6E,EAAgBiH,EAAhBjH,iBAAkBd,EAAa+H,EAAb/H,cAAeG,EAAiB4H,EAAjB5H,kBAAmB/7E,EAAQ2jF,EAAR3jF,SAAU2xE,EAAYgS,EAAZhS,aAAcF,EAAWkS,EAAXlS,YAAahjC,EAAUk1C,EAAVl1C,WAEnF+4C,EAAwBpxF,EAAOS,SAA/B2wF,oBACA/K,EAAoB/xB,KAAK1mC,KAAzBy4D,gBAGR,OAAOniF,EAAAA,cAAC+qF,GAAY,CAClBloF,IAAI,QACJmoF,UAAW/J,KACW,QAApBmB,EAA6B,oBAAsB,eAErDtmF,OAAQA,EACRqvF,sBAAuBz+D,EACvB40D,cAAeA,EACfc,iBAAkBA,EAClBX,kBAAmBA,EACnBU,gBAAiBA,EACjBhuC,WAAYA,EACZzuC,SAAWwnF,EAAiC5K,GAAX58E,EACjC2xE,aAAe6V,EAAqC5K,GAAfjL,EACrCF,YAAc+V,EAAoC5K,GAAdnL,EACpCzqD,YAAaA,EACb7wB,SAAUqxF,GAAuBhrE,EACjC7a,GAAIA,EACJqqB,QAASA,GAEb,GAAC,CAAA7uB,IAAA,iBAAAlH,MAED,WACE,IAAA2tF,EAA2Bl5B,KAAK90D,MAAzBQ,EAAMwtF,EAANxtF,OAAQomB,EAAQonE,EAARpnE,SACfimE,EAEI/3B,KAAK1mC,KADPy4D,EAAegG,EAAfhG,gBAAiBe,EAAyBiF,EAAzBjF,0BAA2BF,EAAYmF,EAAZnF,aAAcC,EAAiBkF,EAAjBlF,kBAEpDkK,EAAqBrxF,EAAOS,SAA5B4wF,iBAER,OAAOntF,EAAAA,cAAC+iF,GAAe,CACrBlgF,IAAI,WACJ/G,OAAQA,EACRwlF,cAAelxB,KAAK90D,MAAMgmF,cAC1Bc,iBAAkBhyB,KAAK90D,MAAM8mF,iBAC7BX,kBAAmBrxB,KAAK90D,MAAMmmF,kBAC9BU,gBAAiBA,EACjBT,iBAAkBtxB,KAAK90D,MAAMomF,iBAC7BtK,YAAc+V,EAA4C7K,GAAzBlyB,KAAK90D,MAAM87E,YAC5C4L,aAAcA,EACdC,kBAAmBA,EACnBC,0BAA2BA,EAC3BrnF,SAAUsxF,GAAoBjrE,EAC9B7a,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,SAExB,GAAC,CAAA7uB,IAAA,eAAAlH,MAED,WACE,IAAA8tF,EAA2Br5B,KAAK90D,MAAzBQ,EAAM2tF,EAAN3tF,OAAQomB,EAAQunE,EAARvnE,SACPyqE,EAAev8B,KAAK1mC,KAApBijE,WACAS,EAAwBtxF,EAAOS,SAA/B6wF,oBACR,IAAKT,EAAY,OAAO,KAExB,IAAMlgE,EAASzsB,EAAAA,cAAC4mF,IAAM1lF,EAAAA,GAAAA,GAAA,CACpB2B,IAAI,UACAutD,KAAK68B,kBAAkB78B,KAAK90D,MAAO80D,KAAK1mC,MAAK,CACjD5tB,OAAQA,EACRoK,SAAWknF,EAA4C9K,GAAtBlyB,KAAK90D,MAAM4K,SAC5CiD,YAAcikF,EAA+C9K,GAAzBlyB,KAAK90D,MAAM6N,YAC/CkuE,aAAe+V,EAAgD9K,GAA1BlyB,KAAK90D,MAAM+7E,aAChDx7E,SAAUuxF,GAAuBlrE,EACjC7a,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,WAGtB,OACE1xB,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,cAAcutD,KAAK90D,MAAMomF,iBAAkBl+E,UAAU,eAC5DipB,EAGP,GAAC,CAAA5pB,IAAA,wBAAAlH,MAED,WACE,IAAOG,EAAUs0D,KAAK90D,MAAfQ,OACC8wF,EAAwBx8B,KAAK1mC,KAA7BkjE,oBACRv0B,EAAkDv8D,EAAOS,SAAjD4wF,EAAgB90B,EAAhB80B,iBAAkBC,EAAmB/0B,EAAnB+0B,oBAC1B,IAAKR,EAAqB,OAAO,KAEjC,IAAM/uB,EAAS79D,EAAAA,cAACorF,GAAe,CAC7BvoF,IAAI,kBACJy+E,cAAelxB,KAAK90D,MAAMgmF,cAC1BI,iBAAkBtxB,KAAK90D,MAAMomF,iBAC7B16D,gBAAiBopC,KAAK90D,MAAM0rB,gBAC5BuwD,kBAAoB4V,EAAkD7K,GAA/BlyB,KAAK90D,MAAMi8E,kBAClDz7E,OAAQA,EACRD,SAAUuxF,IAGZ,OACEptF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,kBAAkButD,KAAK90D,MAAMomF,iBAAkBl+E,UAAU,0BAChEq6D,EAGP,GAAC,CAAAh7D,IAAA,qBAAAlH,MAED,WACE,IAAMowF,EAAe37B,KAAK27B,aAC1B,OAAKA,EAEE/rF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,qBAAsButD,KAAK90D,MAAMomF,iBAAkBl+E,UAAU,uBAC5ExD,EAAAA,cAAC+rF,EAAiB37B,KAAK90D,QAFhB,IAIX,GAAC,CAAAuH,IAAA,oBAAAlH,MAED,WACE,IAAMqwF,EAAc57B,KAAK47B,YACzB,OAAKA,EAEEhsF,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,oBAAqButD,KAAK90D,MAAMomF,iBAAkBl+E,UAAU,sBAC3ExD,EAAAA,cAACgsF,EAAgB57B,KAAK90D,QAFf,IAIX,GAAC,CAAAuH,IAAA,cAAAlH,MAED,WACE,IAAAouF,EAAyC35B,KAAK90D,MAAvCQ,EAAMiuF,EAANjuF,OAAQo4C,EAAU61C,EAAV71C,WAAYC,EAAU41C,EAAV51C,WACnB5H,EAAqBzwC,EAAOS,SAA5BgwC,iBACF0/C,EAAY77B,KAAK67B,UACjBoB,EAAW,CAACl5C,GAAUz1B,QAAAhP,EAAAA,EAAAA,IAAMwkC,aAAU,EAAVA,EAAY7vB,YAAa,KAAKlX,QAAO,SAAAlE,GAAC,QAAMA,CAAC,IAAEoE,SAAW,KAC5F,OAAOk/B,GAAoB8gD,GACtBrtF,EAAAA,cAAA,OAAKwD,UAAU,eACfyoF,EAAYjsF,EAAAA,cAACisF,EAAS,CAACtpF,MAAO0qF,IAAeA,EAEpD,GAAC,CAAAxqF,IAAA,aAAAlH,MAED,WACE,IAAQ4kF,EAA2BnwB,KAAK90D,MAAhCilF,uBACAmM,EAAiBt8B,KAAK1mC,KAAtBgjE,aACFx6E,EAAOk+C,KAAKl+C,KACZnL,EAAO/G,EAAAA,cAACkS,EAAI,CAChBtL,KAAK,SAEP,OAAO8lF,GAAiB1sF,EAAAA,cAAA,OACtB6C,IAAI,iBACJyqF,YAAa/M,EACb/8E,UAAW,sCACXuD,EACJ,GAAC,CAAAlE,IAAA,YAAAlH,MAED,WACE,IAAA4xF,EAA2Bn9B,KAAK90D,MAAzBQ,EAAMyxF,EAANzxF,OAAQomB,EAAQqrE,EAARrrE,SACfy2C,EAII78D,EAAOS,SAHTo1D,EAAWgH,EAAXhH,YACA67B,EAAmB70B,EAAnB60B,oBACAz8B,EAAe4H,EAAf5H,gBAEI7+C,EAAOk+C,KAAKl+C,KACZ25E,EAAMz7B,KAAKy7B,IAEjB,OAAQ2B,KAAyBtrE,GAAYA,GAAY6uC,IACvD/wD,EAAAA,cAAC6rF,EAAG,CACFhpF,IAAI,WACJ+D,KAAK,UACLC,QAASupD,KAAKw7B,WACdlsF,MAAOiyD,EACP71D,OAAQA,EACRgL,WAAYoL,GAGlB,GAAC,CAAArP,IAAA,aAAAlH,MAED,WACE,IAAA8xF,EAA6Cr9B,KAAK90D,MAA3CQ,EAAM2xF,EAAN3xF,OAAQomB,EAAQurE,EAARvrE,SAAU4+D,EAAY2M,EAAZ3M,aAAcz5E,EAAEomF,EAAFpmF,GACvCyxD,EAEIh9D,EAAOS,SADTk1D,EAASqH,EAATrH,UAAWC,EAAWoH,EAAXpH,YAAag8B,EAAQ50B,EAAR40B,SAEpBj9E,EAAS2/C,KAAK3/C,OAEpB,OAAOi9E,KAAcxrE,IAAa4+D,IAChC9gF,EAAAA,cAACyQ,EAAM,CACL5N,IAAI,YACJ+D,KAAK,OACLS,GAAIA,EACJ1L,MAAOumB,EACPhc,SAAUkqD,KAAK6mB,QACfv3E,MAAO+xD,EACPl/C,aAAcm/C,EACdl/C,WAAW,EACX1W,OAAQA,GAGd,GAAC,CAAA+G,IAAA,SAAAlH,MAED,WACE,IAAAysF,EAA2Dh4B,KAAK1mC,KAAxDkjE,EAAmBxE,EAAnBwE,oBAAqB1J,EAAyBkF,EAAzBlF,0BAC7ByK,EAAoCv9B,KAAK90D,MAAjCuN,EAAQ8kF,EAAR9kF,SAAUlN,EAAKgyF,EAALhyF,MAAOG,EAAM6xF,EAAN7xF,OACnB8xF,EAAsC,UAArB/kF,aAAQ,EAARA,EAAUuzB,WAAuBwwD,GAAqC,GAAdjxF,EAAM+G,MAAawgF,EAA0BrkF,UACtHitF,EAAS17B,KAAK07B,OAEdl7D,EAAQ,CACZw/B,KAAKv7C,cACLu7C,KAAKj7C,iBACLi7C,KAAKpD,qBACLoD,KAAK62B,eACL72B,KAAKnD,oBACLmD,KAAKy9B,yBAEDC,EAAO9tF,EAAAA,cAAA,OAAK6C,IAAI,YAAYW,UAAWy9E,KAAW,aAAc2M,GAAkB,uBAAwBh9D,GAE1GjuB,EAAQytD,KAAK29B,cACbC,EAAO59B,KAAK69B,aACZ/W,EAAO9mB,KAAK89B,aACZC,EAAM/9B,KAAKg+B,YAEjB,OACEpuF,EAAAA,cAAAA,EAAAA,SAAA,KACGguF,EACDhuF,EAAAA,cAAA,OAAK6C,IAAI,oBAAoBW,UAAU,uBACpCsqF,EAAMnrF,GAET3C,EAAAA,cAAA,OAAK6C,IAAI,sBAAsBW,UAAU,gBACvCxD,EAAAA,cAAC8rF,EAAM,CAACjpF,IAAI,oBAAoB/G,OAAQA,GACrCo7E,EACAiX,IAKX,IAAC,CAvXO,CAASxQ,EAAAA,WAAbgO,GACG/N,UAAY,CACjBv2E,GAAIw2E,KAAAA,OAAiBC,WACrBpsD,QAASmsD,KAAAA,OACTyD,cAAezD,KAAAA,IACfuE,iBAAkBvE,KAAAA,OAClB4D,kBAAmB5D,KAAAA,OACnB6D,iBAAkB7D,KAAAA,OAClB72D,gBAAiB62D,KAAAA,OACjB/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBniF,MAAOkiF,KAAAA,IACPh1E,SAAUg1E,KAAAA,IACVnvD,UAAWmvD,KAAAA,IACXxvD,gBAAiBwvD,KAAAA,MACjB+C,aAAc/C,KAAAA,KACd8C,gBAAiB9C,KAAAA,KACjBnxD,YAAamxD,KAAAA,OACb3pC,WAAY2pC,KAAAA,IACZ1pC,WAAY0pC,KAAAA,OACZ37D,SAAU27D,KAAAA,KACViD,aAAcjD,KAAAA,KAGd0C,uBAAwB1C,KAAAA,KACxBn4E,SAAUm4E,KAAAA,KACV1G,YAAa0G,KAAAA,KACbzG,YAAayG,KAAAA,KACbtG,kBAAmBsG,KAAAA,KACnB5G,QAAS4G,KAAAA,KACT+N,WAAY/N,KAAAA,KACZ33E,SAAU23E,KAAAA,KACV10E,YAAa00E,KAAAA,KACbxG,aAAcwG,KAAAA,KACdsO,kBAAmBtO,KAAAA,OACnBwQ,cAAexQ,KAAAA,OACfyQ,wBAAyBzQ,KAAAA,QAyV7B,Sb7LA,SAAgB8N,GACd,IAAM4C,GAAyBvQ,EAAAA,GAAAA,KAC7B,SAAC5K,GACC,MAAO,CACL8C,SAAU9C,EAAM8C,SAEpB,GACA,KACA,KACA,CACE54B,QAAAA,IAT2B0gC,CAtML,SAAC2N,GAAI,IAAA6C,EAAA,OAAAA,EAAA,SAAA1R,GA4B7B,SAAA2R,EAAYnzF,GAAO,IAAAiwD,EAIa,OAJbwxB,EAAAA,EAAAA,GAAA,KAAA0R,IACjBljC,EAAAyxB,GAAA,KAAAyR,EAAA,CAAMnzF,KAMRgnF,QAAU,WAAO,EAAC/2B,EAElBqgC,WAAa,WACXrgC,EAAKjwD,MAAM+hF,QAAQ5G,WAAWlrB,EAAKjwD,MAAMkJ,KAC3C,EAAC+mD,EAED0rB,QAAU,WAAiB,IAAhBC,EAAIpyE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAChBymD,EAAKjwD,MAAM+hF,QAAQpG,QAAQ1rB,EAAKjwD,MAAMkJ,KAAM0yE,EAC9C,EAAC3rB,EAED7lD,SAAW,SAAC4L,EAAO+c,EAAiBumD,GAClCrpB,EAAKjwD,MAAM+hF,QAAQ33E,SAAS6lD,EAAKjwD,MAAMkJ,KAAM8M,EAAO+c,EAAiBumD,EACvE,EAACrpB,EAED4rB,YAAc,SAACruE,GACbyiD,EAAKjwD,MAAM+hF,QAAQlG,YAAY5rB,EAAKjwD,MAAMkJ,KAAMsE,EAClD,EAACyiD,EAED6rB,YAAc,SAACziD,GACb42B,EAAKjwD,MAAM+hF,QAAQjG,YAAY7rB,EAAKjwD,MAAMkJ,KAAMmwB,EAClD,EAAC42B,EAEDgsB,kBAAoB,SAACjwE,EAAM3L,GACzB4vD,EAAKjwD,MAAM+hF,QAAQ9F,kBAAkBhsB,EAAKjwD,MAAMkJ,KAAM8C,EAAM3L,EAC9D,EAAC4vD,EAEDrlD,SAAW,SAACu9C,EAAO9nD,EAAOiL,EAAMynB,EAAiBumD,GAC/CrpB,EAAKjwD,MAAM+hF,QAAQn3E,SAASqlD,EAAKjwD,MAAMkJ,KAAMi/C,EAAO9nD,EAAOiL,EAAMynB,EAAiBumD,EACpF,EAACrpB,EAEDpiD,YAAc,SAACs6C,EAAO36C,EAAQ8rE,GAC5BrpB,EAAKjwD,MAAM+hF,QAAQl0E,YAAYoiD,EAAKjwD,MAAMkJ,KAAMi/C,EAAO36C,EAAQ8rE,EACjE,EAEArpB,EACA8rB,aAAe,SAAC5zB,EAAO6zB,EAAavnD,EAAQp0B,EAAOiL,EAAMynB,EAAiBumD,GACxErpB,EAAKjwD,MAAM+hF,QAAQhG,aAAa9rB,EAAKjwD,MAAMkJ,KAAMi/C,EAAO6zB,EAAavnD,EAAQp0B,EAAOiL,EAAMynB,EAAiBumD,EAC7G,EA1CErpB,EAAK4wB,0BAA4BA,GAAyB5wB,GAE1DA,EAAK+2B,QAAQ56E,WAAY,EAAK6jD,CAChC,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAmR,EAAA3R,IAAAS,EAAAA,EAAAA,GAAAkR,EAAA,EAAA5rF,IAAA,wBAAAlH,MAyCD,SAAsBigF,EAAWC,GAC/B,IAAIC,EAAY1rB,KAAK90D,MACjBygF,EAAY3rB,KAAKgjB,MAEjB4I,EAAS5rB,KAAK+rB,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IACMgF,GADchF,EAAU1F,SAAS7uE,IAAMy0E,EAAU5F,SAAS7uE,KAC7Bu0E,EAAUv0E,GACzC40E,EAAM,GACV,IAAK,IAAIv/E,KAAKk/E,EAAW,CACvB,IAAIM,EAAWN,EAAUl/E,IAAMo/E,EAAUp/E,GAChC,YAALA,GAAoBkkF,IACtB1E,GAAU,GAERA,GACFD,EAAIr8D,KAAKljB,EAEb,CACKu/E,EAAIl3E,SACPi3E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAn5E,IAAA,SAAAlH,MAED,WACE,IAAMilF,EAAexwB,KAAK90D,MAAM46E,SAAS7uE,IAAM+oD,KAAK90D,MAAM+L,GACpDmlB,EAAcqC,GAAeuhC,KAAK90D,MAAMQ,OAAQs0D,KAAK90D,MAAMgW,OAC3Dsc,EAAYwiC,KAAK90D,MAAMsyB,YAAapB,aAAW,EAAXA,EAAa5lB,OAAQ,KACxD2lC,EAAoB6jB,KAAK90D,MAAMQ,OAAOS,SAAtCgwC,iBAEDmiD,GADWliE,GAAeA,EAAY5lB,MACjBg6E,GAAgBxwB,KAAK90D,MAAMqlF,iBAEtDlD,EAAiCrtB,KAAK90D,MAA/B44C,EAAUupC,EAAVvpC,WAEDy6C,EAAuB,OADZ,CADYlR,EAAVtpC,YACSz1B,QAAAhP,EAAAA,EAAAA,IAAMwkC,aAAU,EAAVA,EAAY7vB,YAAa,KAAKlX,QAAO,SAAAlE,GAAC,QAAMA,CAAC,IAAEoE,SAAW,OACvDk/B,EAErC,OACEvsC,EAAAA,cAAA,OACEwD,UAAWy9E,KAAW,0BAA2B,iBAAkB0N,EAAW,kBAAoB,MAClG,UAASv+B,KAAK90D,MAAM+L,IAEnB,CACCu5E,EAAe5gF,EAAAA,cAAC2rF,EAAI,CAClB9oF,IAAK,WACLwE,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,QACpBkvD,cAAc,EACdD,iBAAiB,EACjBzK,SAAU9lB,KAAK90D,MAAM46E,SACrBxwE,SAAU0qD,KAAKkyB,QACfnL,YAAa/mB,KAAKkyB,QAClBjL,aAAcjnB,KAAKkyB,QACnBlL,YAAahnB,KAAKkyB,QAClB/K,kBAAmBnnB,KAAKkyB,QACxBrL,QAAS7mB,KAAKkyB,QACdsJ,WAAYx7B,KAAKkyB,QACjBp8E,SAAUkqD,KAAKkyB,QACfn5E,YAAainD,KAAKkyB,QAClBhB,cAAelxB,KAAK90D,MAAMgW,OAAS,KACnC8wE,iBAAkBhyB,KAAK90D,MAAMi1B,UAAY,QACzCkxD,kBAAmB7zD,EACnBlB,YAAa0jC,KAAK90D,MAAMoxB,aAAe,KACvCg1D,iBAAkBtxB,KAAK90D,MAAMq5B,UAAY,KACzCh5B,MAAOy0D,KAAK90D,MAAMK,OAAS,KAC3BkN,SAAUunD,KAAK90D,MAAMuN,UAAY,KACjC6lB,UAAW0hC,KAAK90D,MAAMozB,WAAa,KACnCwlB,WAAYkc,KAAK90D,MAAM44C,YAAc,KACrCC,WAAYic,KAAK90D,MAAM64C,YAAc,KACrCntB,gBAAiBopC,KAAK90D,MAAM0rB,gBAC5BlrB,OAAQs0D,KAAK90D,MAAMQ,OACnBqwF,kBAAmB/7B,KAAK90D,MAAM6wF,kBAC9BkC,cAAej+B,KAAK90D,MAAM+yF,cAC1BhgE,gBAAiB+hC,KAAK90D,MAAM+yB,gBAC5BnM,SAAUkuC,KAAK90D,MAAM4mB,SACrB4+D,aAAc1wB,KAAK90D,MAAMwlF,aACzBwN,wBAAyBl+B,KAAK90D,MAAMgzF,0BACjC,KAELtuF,EAAAA,cAAC2rF,EAAI,CACH9oF,IAAKutD,KAAK90D,MAAM+L,GAChBA,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,QACpBkvD,aAAcA,EACdD,gBAAiB+N,EACjBhO,YAAatwB,KAAK90D,MAAMolF,YACxBzJ,QAASyX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK6mB,QACjD2U,WAAY8C,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKw7B,WACpDlmF,SAAUgpF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK1qD,SAClDyxE,YAAauX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK+mB,YACrDE,aAAcqX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKinB,aACtDD,YAAasX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKgnB,YACrDG,kBAAmBmX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKmnB,kBAC3DrxE,SAAUwoF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKlqD,SAClDiD,YAAaulF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKjnD,YACrDm4E,cAAelxB,KAAK90D,MAAMgW,OAAS,KACnC8wE,iBAAkBhyB,KAAK90D,MAAMi1B,UAAY,QACzCkxD,kBAAmB7zD,EACnBlB,YAAa0jC,KAAK90D,MAAMoxB,aAAe,KACvCg1D,iBAAkBtxB,KAAK90D,MAAMq5B,UAAY,KACzCh5B,MAAOy0D,KAAK90D,MAAMK,OAAS,KAC3BkN,SAAUunD,KAAK90D,MAAMuN,UAAY,KACjC6lB,UAAW0hC,KAAK90D,MAAMozB,WAAa,KACnCwlB,WAAYkc,KAAK90D,MAAM44C,YAAc,KACrCC,WAAYic,KAAK90D,MAAM64C,YAAc,KACrCntB,gBAAiBopC,KAAK90D,MAAM0rB,gBAC5BlrB,OAAQs0D,KAAK90D,MAAMQ,OACnBqwF,kBAAmB/7B,KAAK90D,MAAM6wF,kBAC9BkC,cAAej+B,KAAK90D,MAAM+yF,cAC1BhgE,gBAAiB+hC,KAAK90D,MAAM+yB,gBAC5BnM,SAAUkuC,KAAK90D,MAAM4mB,SACrB4+D,aAAc1wB,KAAK90D,MAAMwlF,aACzBwN,wBAAyBl+B,KAAK90D,MAAMgzF,2BAK9C,IAAC,CAhM4B,CACH3Q,EAAAA,WAAS6Q,EAC5B5Q,UAAY,CACjBv2E,GAAIw2E,KAAAA,OAAiBC,WACrBpsD,QAASmsD,KAAAA,OACT/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBt5E,KAAMq5E,KAAAA,IAAcC,WACpBnpD,SAAUkpD,KAAAA,OACVvsE,MAAOusE,KAAAA,IACPttD,SAAUstD,KAAAA,OACVjwD,UAAWiwD,KAAAA,OACXR,QAASQ,KAAAA,OAAiBC,WAC1B4C,YAAa7C,KAAAA,KACbliF,MAAOkiF,KAAAA,IACPh1E,SAAUg1E,KAAAA,IACVxvD,gBAAiBwvD,KAAAA,MACjB3pC,WAAY2pC,KAAAA,IACZ1pC,WAAY0pC,KAAAA,OACZ72D,gBAAiB62D,KAAAA,OACjBsO,kBAAmBtO,KAAAA,OACnBnxD,YAAamxD,KAAAA,OACb37D,SAAU27D,KAAAA,KACViD,aAAcjD,KAAAA,KAEd3H,SAAU2H,KAAAA,OACV8C,gBAAiB9C,KAAAA,MAClB2Q,CAAA,CAuLDI,CAAoBjD,IAGtB,OAFA4C,EAAuBtQ,YAAc,yBAE9BsQ,CACR,Ca6KD,CAA6BjO,GAAU,OAAVA,CAAkBqC,GAAcgJ,M,oSCpY7D,IAAOl3D,GAA2B/5B,GAAMwjF,aAAjCzpD,wBAyQP,kBAAgBo6D,EAAOC,GACrB,IAAMC,GAA0B/Q,EAAAA,GAAAA,KAC9B,SAAC5K,GACC,MAAO,CACL8C,SAAU9C,EAAM8C,SAEpB,GACA,KACA,KACA,CACE54B,QAAAA,IAT4B0gC,CAvQL,SAAC6Q,EAAOC,GAAQ,IAAAE,EAAA,OAAAA,EAAA,SAAAlS,GA2BzC,SAAAmS,EAAY3zF,GAAO,IAAAiwD,EAOa,OAPbwxB,EAAAA,EAAAA,GAAA,KAAAkS,IACjB1jC,EAAAyxB,GAAA,KAAAiS,EAAA,CAAM3zF,KAuDR4zF,qBAAuB,SAAC5zF,GAEtB,OADAA,EAAQA,GAASiwD,EAAKjwD,OACTy1B,aAAe0D,GAAwBn5B,EAAMQ,OAAQR,EAAMgW,MAC1E,EAACi6C,EAED/jD,eAAiB,WAAiB,IAAhBmsB,EAAI7uB,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACvBymD,EAAKjwD,MAAM+hF,QAAQ71E,eAAe+jD,EAAKjwD,MAAMkJ,KAAMmvB,EACrD,EAAC43B,EAED1jD,OAAS,WAAgB,IAAfD,EAAG9C,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACdymD,EAAKjwD,MAAM+hF,QAAQx1E,OAAO0jD,EAAKjwD,MAAMkJ,KAAMoD,EAC7C,EAAC2jD,EAED0rB,QAAU,WAAiB,IAAhBC,EAAIpyE,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAChBymD,EAAKjwD,MAAM+hF,QAAQpG,QAAQ1rB,EAAKjwD,MAAMkJ,KAAM0yE,EAC9C,EAAC3rB,EAED+2B,QAAU,WAAO,EAAC/2B,EAElBqgC,WAAa,WACXrgC,EAAKjwD,MAAM+hF,QAAQxG,YAAYtrB,EAAKjwD,MAAMkJ,KAC5C,EAAC+mD,EAEDqrB,SAAW,WACTrrB,EAAKjwD,MAAM+hF,QAAQzG,SAASrrB,EAAKjwD,MAAMkJ,KACzC,EAAC+mD,EAEDorB,aAAe,WACbprB,EAAKjwD,MAAM+hF,QAAQ1G,aAAaprB,EAAKjwD,MAAMkJ,KAC7C,EAAC+mD,EAEDmrB,oBAAsB,WACpBnrB,EAAKjwD,MAAM+hF,QAAQ3G,oBAAoBnrB,EAAKjwD,MAAMkJ,KACpD,EAAC+mD,EAEDgrB,QAAU,WACR,IAAMzrC,EAAkC,cAAZgkD,EAA2BvjC,EAAKjwD,MAAMgW,MAAQ,KAC1Ei6C,EAAKjwD,MAAM+hF,QAAQ9G,QAAQhrB,EAAKjwD,MAAMkJ,UAAMxF,OAAWA,OAAWA,EAAW8rC,EAC/E,EAEAygB,EACA7lD,SAAW,SAAC4L,EAAO+c,EAAiBumD,GAClCrpB,EAAKjwD,MAAM+hF,QAAQ33E,SAAS6lD,EAAKjwD,MAAMkJ,KAAM8M,EAAO+c,EAAiBumD,EACvE,EAEArpB,EACA6rB,YAAc,SAACziD,GACb42B,EAAKjwD,MAAM+hF,QAAQjG,YAAY7rB,EAAKjwD,MAAMkJ,KAAMmwB,EAClD,EAEA42B,EACArlD,SAAW,SAACu9C,EAAO9nD,EAAOiL,EAAMynB,EAAiBumD,GAC/CrpB,EAAKjwD,MAAM+hF,QAAQn3E,SAASqlD,EAAKjwD,MAAMkJ,KAAMi/C,EAAO9nD,EAAOiL,EAAMynB,EAAiBumD,EACpF,EAACrpB,EAEDpiD,YAAc,SAACs6C,EAAO36C,EAAQ8rE,GAC5BrpB,EAAKjwD,MAAM+hF,QAAQl0E,YAAYoiD,EAAKjwD,MAAMkJ,KAAMi/C,EAAO36C,EAAQ8rE,EACjE,EAEArpB,EACA8rB,aAAe,SAAC5zB,EAAO6zB,EAAavnD,EAAQp0B,EAAOiL,EAAMynB,EAAiBumD,GACxErpB,EAAKjwD,MAAM+hF,QAAQhG,aAAa9rB,EAAKjwD,MAAMkJ,KAAMi/C,EAAO6zB,EAAavnD,EAAQp0B,EAAOiL,EAAMynB,EAAiBumD,EAC7G,EApHErpB,EAAK4wB,0BAA4BA,GAAyB5wB,GAC1D6wB,GAAiB7wB,GAEjBA,EAAK4jC,oBAAsB5jC,EAAK2jC,qBAAqB5zF,GACrDiwD,EAAKzjD,mBAAqByjD,EAAK6jC,uBAAuB9zF,GACtDiwD,EAAK+2B,QAAQ56E,WAAY,EAAK6jD,CAChC,CAAC,OAAA+xB,EAAAA,EAAAA,GAAA2R,EAAAnS,IAAAS,EAAAA,EAAAA,GAAA0R,EAAA,EAAApsF,IAAA,wBAAAlH,MAED,SAAsBigF,EAAWC,GAC/B,IAAIC,EAAY1rB,KAAK90D,MACjBygF,EAAY3rB,KAAKgjB,MAEjB4I,EAAS5rB,KAAK+rB,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IACMgF,GADchF,EAAU1F,SAAS7uE,IAAMy0E,EAAU5F,SAAS7uE,KAC7Bu0E,EAAUv0E,GACzC40E,EAAM,GACV,IAAK,IAAIv/E,KAAKk/E,EAAW,CACvB,IAAIM,EAAWN,EAAUl/E,IAAMo/E,EAAUp/E,GAChC,YAALA,GAAoBkkF,IACtB1E,GAAU,GAERA,GACFD,EAAIr8D,KAAKljB,EAEb,CACKu/E,EAAIl3E,SACPi3E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAn5E,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAO9/E,EAA2B8/E,EAA3B9/E,OAAYi1B,GAAe6qD,EAAnBv0E,GAAmBu0E,EAAf7qD,aACb4kB,EAAYya,KAAK90D,MAAMQ,OACvBuzF,EAAiBj/B,KAAK90D,MAAMy1B,YAC9B4kB,GAAa75C,GAAUuzF,GAAkBt+D,IAC3Cq/B,KAAK++B,oBAAsB/+B,KAAK8+B,qBAAqBtT,GACrDxrB,KAAKtoD,mBAAqBsoD,KAAKg/B,uBAAuBxT,GAE1D,GAAC,CAAA/4E,IAAA,yBAAAlH,MAED,SAAwBL,GAAO,IAAAwtE,EAAA,KAC7B,OAAOuP,KAAU/8E,EAAMQ,OAAO6uB,cAAc,SAAC3lB,EAAMhC,GAAK,MAAM,CAC5DqE,GAAI,eAAFqX,OAAiBpjB,EAAM+L,GAAE,KAAAqX,OAAI1b,GAC/BsE,KAAM,eAAFoX,OAAiBpjB,EAAM+L,GAAE,KAC7BxE,IAAKG,EACLtD,MAAOsF,EAAKtF,MACZ6H,QAASvE,IAAU8lE,EAAKomB,qBAAqB5zF,GAC9C,GACH,GAAC,CAAAuH,IAAA,SAAAlH,MAkED,WACE,IAAO4wC,EAAoB6jB,KAAK90D,MAAMQ,OAAOS,SAAtCgwC,iBACDq0C,EAAexwB,KAAK90D,MAAM46E,SAAS7uE,IAAM+oD,KAAK90D,MAAM+L,GACpDioF,EAAiBl/B,KAAK90D,MAAMkJ,KAAK9B,KACjCqxE,EAAa3jB,KAAK90D,MAAMQ,OAAOS,SAASw3E,WACxC2a,GAAqB9N,GAAgBxwB,KAAK90D,MAAMqlF,gBAChD/yD,EAAYwiC,KAAK90D,MAAMsyB,WAAa,KAEnCsmB,EAAckc,KAAK90D,MAAnB44C,WAEDy6C,EAAuB,QADZj/E,EAAAA,EAAAA,IAAKwkC,aAAU,EAAVA,EAAY7vB,YAAa,IAAKlX,QAAO,SAAAlE,GAAC,QAAMA,CAAC,IAAEoE,SAAW,OAC3Ck/B,EAI/BgjD,OAA4C,IAAfxb,GAA8Bub,EAAiBvb,EAC5E/vD,EAA2B,GAAlBsrE,EACf,OACEtvF,EAAAA,cAAA,OACEwD,UAAWy9E,KAAW,0BAA2B,kBAAmB0N,EAAW,mBAAqB,MACpG,UAASv+B,KAAK90D,MAAM+L,IAEnB,CACCu5E,EAAe5gF,EAAAA,cAAC6uF,EAAK,CACnBhsF,IAAK,WACLwE,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,QACpBkvD,cAAc,EACdD,iBAAiB,EACjBzK,SAAU9lB,KAAK90D,MAAM46E,SACrBlyD,OAAQA,EACRurE,oBAAqBA,EACrBznF,mBAAoBsoD,KAAKtoD,mBACzBF,IAAKwoD,KAAK90D,MAAMsM,IAChBunF,oBAAqB/+B,KAAK++B,oBAC1B3nF,eAAgB4oD,KAAKkyB,QACrBz6E,OAAQuoD,KAAKkyB,QACbrL,QAAS7mB,KAAKkyB,QACdsJ,WAAYx7B,KAAKkyB,QACjB1L,SAAUxmB,KAAKkyB,QACf3L,aAAcvmB,KAAKkyB,QACnB5L,oBAAqBtmB,KAAKkyB,QAC1B/L,QAASnmB,KAAKkyB,QACd58E,SAAU0qD,KAAKkyB,QACfjL,aAAcjnB,KAAKkyB,QACnBlL,YAAahnB,KAAKkyB,QAClBp8E,SAAUkqD,KAAKkyB,QACfn5E,YAAainD,KAAKkyB,QAClB3mF,MAAOy0D,KAAK90D,MAAMK,OAAS,KAC3Bu4C,WAAYkc,KAAK90D,MAAM44C,YAAc,KACrCrrC,SAAUunD,KAAK90D,MAAMuN,UAAY,KACjC/M,OAAQs0D,KAAK90D,MAAMQ,OACnB4qB,UAAW0pC,KAAK90D,MAAMorB,UACtB22D,QAASjtB,KAAK90D,MAAM+hF,QACpB8O,kBAAmB/7B,KAAK90D,MAAM6wF,kBAC9BkC,cAAej+B,KAAK90D,MAAM+yF,cAC1B/M,cAAelxB,KAAK90D,MAAMgW,OAAS,KACnC8wE,iBAAkBhyB,KAAK90D,MAAMi1B,UAAY,QACzCkxD,kBAAmB7zD,EACnBlB,YAAa0jC,KAAK90D,MAAMoxB,aAAe,KACvCg1D,iBAAkBtxB,KAAK90D,MAAMq5B,UAAY,KACzCzS,SAAUkuC,KAAK90D,MAAM4mB,SACrB4+D,aAAc1wB,KAAK90D,MAAMwlF,aACzBwN,wBAAyBl+B,KAAK90D,MAAMgzF,0BACjC,KAELtuF,EAAAA,cAAC6uF,EAAK,CACJhsF,IAAKutD,KAAK90D,MAAM+L,GAChBA,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,QACpBkvD,aAAcA,EACdD,gBAAiB+N,EACjBhO,YAAatwB,KAAK90D,MAAMolF,YACxB18D,OAAQA,EACRurE,oBAAqBA,EACrBznF,mBAAoBsoD,KAAKtoD,mBACzBF,IAAKwoD,KAAK90D,MAAMsM,IAChBunF,oBAAqB/+B,KAAK++B,oBAC1B3nF,eAAgBknF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK5oD,eACxDK,OAAQ6mF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKvoD,OAChDovE,QAASyX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK6mB,QACjD2U,WAAY8C,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKw7B,WACpDhV,SAAU8X,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKwmB,SAClDD,aAAc+X,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKumB,aACtDD,oBAAqBgY,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKsmB,oBAC7DH,QAASmY,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKmmB,QACjD7wE,SAAUgpF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAK1qD,SAClD2xE,aAAcqX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKinB,aACtDD,YAAasX,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKgnB,YACrDlxE,SAAUwoF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKlqD,SAClDiD,YAAaulF,EAAoBt+B,KAAKkyB,QAAUlyB,KAAKjnD,YACrDxN,MAAOy0D,KAAK90D,MAAMK,OAAS,KAC3Bu4C,WAAYkc,KAAK90D,MAAM44C,YAAc,KACrCrrC,SAAUunD,KAAK90D,MAAMuN,UAAY,KACjC/M,OAAQs0D,KAAK90D,MAAMQ,OACnB4qB,UAAW0pC,KAAK90D,MAAMorB,UACtB22D,QAASjtB,KAAK90D,MAAM+hF,QACpB8O,kBAAmB/7B,KAAK90D,MAAM6wF,kBAC9BkC,cAAej+B,KAAK90D,MAAM+yF,cAC1B/M,cAAelxB,KAAK90D,MAAMgW,OAAS,KACnC8wE,iBAAkBhyB,KAAK90D,MAAMi1B,UAAY,QACzCkxD,kBAAmB7zD,EACnBlB,YAAa0jC,KAAK90D,MAAMoxB,aAAe,KACvCg1D,iBAAkBtxB,KAAK90D,MAAMq5B,UAAY,KACzCzS,SAAUkuC,KAAK90D,MAAM4mB,SACrB4+D,aAAc1wB,KAAK90D,MAAMwlF,aACzBwN,wBAAyBl+B,KAAK90D,MAAMgzF,2BAK9C,IAAC,CAjQwC,CACd3Q,EAAAA,WAASqR,EAC7BpR,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzBT,QAASQ,KAAAA,OAAiBC,WAC1Bt5E,KAAMq5E,KAAAA,IAAcC,WACpBz2E,GAAIw2E,KAAAA,OAAiBC,WACrBpsD,QAASmsD,KAAAA,OACTj2E,IAAKi2E,KAAAA,KACL9sD,YAAa8sD,KAAAA,OACbn3D,UAAWm3D,KAAAA,IACX6C,YAAa7C,KAAAA,KACbsO,kBAAmBtO,KAAAA,OACnBvsE,MAAOusE,KAAAA,IACPttD,SAAUstD,KAAAA,OACVjwD,UAAWiwD,KAAAA,OACXnxD,YAAamxD,KAAAA,OACbliF,MAAOkiF,KAAAA,IACPh1E,SAAUg1E,KAAAA,IACV3pC,WAAY2pC,KAAAA,IACZ37D,SAAU27D,KAAAA,KACViD,aAAcjD,KAAAA,KAEd3H,SAAU2H,KAAAA,OACV8C,gBAAiB9C,KAAAA,MAClBmR,CAAA,CAyPDQ,CAAqBX,EAAOC,IAG9B,OAFAC,EAAwB9Q,YAAc,0BAE/B8Q,CACR,E,yQC/RD,IAAMU,GAA2B,CAC/BC,QAAS,qBACTC,UAAW,qBACXC,SAAU,qBACVC,WAAY,qBACZC,aAAc,qBACdC,YAAa,sBAKFC,GAAY,SAAA3P,GAAA,SAAA2P,IAAA,OAAAjT,EAAAA,EAAAA,GAAA,KAAAiT,GAAAhT,GAAA,KAAAgT,EAAAlrF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAA0S,EAAA3P,IAAA9C,EAAAA,EAAAA,GAAAyS,EAAA,EAAAntF,IAAA,SAAAlH,MACvB,WACE,IAAA8hF,EAIIrtB,KAAK90D,MAHPQ,EAAM2hF,EAAN3hF,OACAy6E,EAAOkH,EAAPlH,QAASK,EAAQ6G,EAAR7G,SAAUgV,EAAUnO,EAAVmO,WAAY3U,EAAOwG,EAAPxG,QAAS/0D,EAAQu7D,EAARv7D,SAAU4+D,EAAYrD,EAAZqD,aAAcz5E,EAAEo2E,EAAFp2E,GAChE4oF,EAAWxS,EAAXwS,YAAaC,EAAUzS,EAAVyS,WAAYC,EAAc1S,EAAd0S,eAE3BlyF,EAIInC,EAAOS,SAHTixF,EAAmBvvF,EAAnBuvF,oBAAqBx7B,EAAY/zD,EAAZ+zD,aAAcJ,EAAa3zD,EAAb2zD,cAAeM,EAAaj0D,EAAbi0D,cAAek+B,EAAoBnyF,EAApBmyF,qBACjE36E,EAAYxX,EAAZwX,aAAc3O,EAAU7I,EAAV6I,WAAY0O,EAAYvX,EAAZuX,aAAcI,EAAiB3X,EAAjB2X,kBACxC67C,EAASxzD,EAATwzD,UAAWC,EAAWzzD,EAAXyzD,YAAag8B,EAAQzvF,EAARyvF,SAAU38B,EAAe9yD,EAAf8yD,gBAE9B7+C,EAAO,SAACqtE,GAAE,OAAKz4E,EAAWy4E,EAAIzjF,EAAOoc,IAAI,EACzC2zE,EAAM,SAACtM,GAAE,OAAK9pE,EAAa8pE,EAAIzjF,EAAOoc,IAAI,EAC1CzH,EAAS,SAAC8uE,GAAE,OAAK/pE,EAAa+pE,EAAIzjF,EAAOoc,IAAI,EAC7C4zE,EAAS,SAACvM,GAAE,OAAK3pE,EAAkB2pE,EAAIzjF,EAAOoc,IAAI,EAClD9X,EAAWqvF,GAAyBW,GAnBtB,YAqBdC,EAAgB3C,KAAcxrE,IAAa4+D,IAAiB9gF,EAAAA,cAACyQ,EAAM,CACvE7J,KAAK,OAAOS,GAAIA,EAAI1L,MAAOumB,EAAUhc,SAAU+wE,EAASv3E,MAAO+xD,EAAWl/C,aAAcm/C,EAAa51D,OAAQA,IAGzGw0F,GAAc9C,GAAuB0C,IAAehuE,GAAYliB,EAAAA,cAAC6rF,EAAG,CACxEjlF,KAAK,UAAUC,QAAS0vE,EAAS72E,MAAOsyD,EAAcn2D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAElGq+E,GAAe/C,GAAuByC,IAAgB/tE,GAAYliB,EAAAA,cAAC6rF,EAAG,CAC1EjlF,KAAK,WAAWC,QAAS+vE,EAAUl3E,MAAOkyD,EAAe/1D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAErGs+E,GAAehD,GAAuB2C,KAAoBjuE,GAAYA,GAAY6uC,IAAoB/wD,EAAAA,cAAC6rF,EAAG,CAC9GjlF,KAAK,WAAWC,QAAS+kF,EAAYlsF,MAAOwyD,EAAep2D,OAAQA,EAAQgL,WAAYoL,IAGzF,OACElS,EAAAA,cAAA,OAAKwD,UAAS,kBAAAkb,OAAoBte,IAChCJ,EAAAA,cAAC8rF,EAAM,CAAChwF,OAAQA,GACbu0F,EACAC,EACAC,EACAC,GAIT,IAAC,CA1CsB,CAASrP,EAAAA,e,k1BCFlC,IAAOz3B,GAAwBhvD,GAAM2oF,UAA9B35B,qBAKM+mC,GAAU,SAAA3T,GA6BrB,SAAA2T,EAAYn1F,GAAO,IAAAiwD,EAQ4B,OAR5BwxB,EAAAA,EAAAA,GAAA,KAAA0T,IACjBllC,EAAAyxB,GAAA,KAAAyT,EAAA,CAAMn1F,KA4FRo1F,kBAAoB,iBAAM,EAAE,EAAAnlC,EA+B5B2B,oBAAsB,WACpB,IAAMyjC,EAAgBplC,EAAKolC,cAC3B,OAAqB3xF,MAAjB2xF,EACK,KACF3wF,EAAAA,cAAC2wF,GAAazvF,EAAAA,GAAAA,GAAA,CACnB2B,IAAI,wBACA0oD,EAAKjwD,OAEb,EAACiwD,EAED4B,mBAAqB,WACnB,IAAMyjC,EAAerlC,EAAKqlC,aAC1B,OAAoB5xF,MAAhB4xF,EACK,KACF5wF,EAAAA,cAAC4wF,GAAY1vF,EAAAA,GAAAA,GAAA,CAClB2B,IAAI,uBACA0oD,EAAKjwD,OAEb,EA3IE8gF,GAAiB7wB,GACjBA,EAAKgxB,eAAejhF,GAEpBiwD,EAAKqgC,WAAargC,EAAKqgC,WAAWt7B,KAAI/E,GACtCA,EAAK0rB,QAAU1rB,EAAK0rB,QAAQ3mB,KAAI/E,GAChCA,EAAKwB,WAAaxB,EAAKwB,WAAWuD,KAAI/E,GAAOA,CAC/C,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAmT,EAAA3T,IAAAS,EAAAA,EAAAA,GAAAkT,EAAA,EAAA5tF,IAAA,iBAAAlH,MAED,SAAeigF,GAAW,IAAA9S,EAAA,KAClBgT,EAAY1rB,KAAK90D,MAGvB,IAFuB80D,KAAKl+C,OAAQ4pE,aAAS,EAATA,EAAWhgF,WAAW8/E,aAAS,EAATA,EAAW9/E,QAElD,CACjB,IAAQA,EAAW8/E,EAAX9/E,OACRmC,EAA6EnC,EAAOS,SAA5EuK,EAAU7I,EAAV6I,WAAYyO,EAAWtX,EAAXsX,YAAa23C,EAAmBjvD,EAAnBivD,oBAAqBC,EAAkBlvD,EAAlBkvD,mBACtDiD,KAAKl+C,KAAO2wE,GAAoB/mF,EAAQgL,GACxCspD,KAAKzoD,MAAQk7E,GAAoB/mF,EAAQyZ,GACzC66C,KAAKugC,cAAgB9N,GAAoB/mF,EAAQoxD,GACjDkD,KAAKwgC,aAAe/N,GAAoB/mF,EAAQqxD,EAClD,CAEAiD,KAAK87B,SAAW,WACdpjB,EAAKxtE,MAAMswF,YACb,CACF,GAAC,CAAA/oF,IAAA,qBAAAlH,MAED,WACE,OAAOwsB,KAAWioC,KAAK90D,MAAMQ,OAAOS,SAAS6zF,sBA9DzB,WA8DkE,MACxF,GAAC,CAAAvtF,IAAA,UAAAlH,MAED,SAAQu7E,GACN9mB,KAAK90D,MAAM27E,QAAQC,EACrB,GAAC,CAAAr0E,IAAA,aAAAlH,MAED,WACE,IAAA8hF,EAA4BrtB,KAAK90D,MAA1B8X,EAASqqE,EAATrqE,UAAWtX,EAAM2hF,EAAN3hF,OAClBmkD,EAAmEnkD,EAAOS,SAAnE6Z,EAAa6pC,EAAb7pC,cAA0Cy2E,EAAc5sC,EAAzCqS,0BAClBu6B,IAAmBz8B,KAAKygC,sBAC1Bz6E,EAAciD,KAAKvd,EAAOoc,IAAG5V,GAAAA,GAAA,GAAMuqF,GAAc,IAC/C55E,KAAMm9C,KAAK87B,SACXa,SAAU,KACV35E,UAAWA,IACVtX,EAAOoc,KAEVk4C,KAAK87B,UAET,GAAC,CAAArpF,IAAA,sBAAAlH,MAED,WACE,IAAA0tF,EAA4Bj5B,KAAK90D,MAA1BorB,EAAS2iE,EAAT3iE,UAAW5qB,EAAMutF,EAANvtF,OAClB,OAAO4tD,GAAqBhjC,EAAW5qB,EACzC,GAAC,CAAA+G,IAAA,UAAAlH,MAED,WAEE,OADiBy0D,KAAK90D,MAAfQ,OACOS,SAASwL,OACzB,GAEA,CAAAlF,IAAA,YAAAlH,MACA,WACE,IAAA2tF,EAAgDl5B,KAAK90D,MAA9CwM,EAAkBwhF,EAAlBxhF,mBAEP,OAFoCwhF,EAAT5iE,UAAiB4iE,EAANxtF,OACboM,OAAOC,KAAKL,GAAoB/C,OAC/B,GAAKqrD,KAAKroD,SACtC,GAAC,CAAAlF,IAAA,eAAAlH,MAED,WACE,IAAO+qB,EAAa0pC,KAAK90D,MAAlBorB,UACP,OAAOA,GAA8B,GAAlBA,EAAUhkB,IAC/B,GAAC,CAAAG,IAAA,aAAAlH,MAGD,WACE,IAAO+qB,EAAa0pC,KAAK90D,MAAlBorB,UACP,OAAOA,GAAYA,EAAUhkB,KAAO,CACtC,GAAC,CAAAG,IAAA,wBAAAlH,MAED,WAGE,OAFoBy0D,KAAK90D,MAAlBorB,WAGL1mB,EAAAA,cAAA,OAAK6C,IAAI,iBAAiBW,UAAWy9E,KACnC,kBACC7wB,KAAK0gC,YAA8B,GAAhB,cACpB1gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAKsgC,sBACHtgC,KAAK4gC,iBAEb,GAAC,CAAAnuF,IAAA,sBAAAlH,MAID,WACE,IAAMs1F,EAAqB7gC,KAAK6gC,qBAChC,OACEjxF,EAAAA,cAAA,OAAK6C,IAAI,eAAeW,UAAWy9E,KACjC,gBACA7wB,KAAK2gC,aAAe,aAAe,GAClC3gC,KAAK0gC,YAA8B,GAAhB,cACpB1gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK8gC,eAAiB,eAAiB,KAEtC9gC,KAAK+gC,eACLF,GAAsB7gC,KAAKlD,sBAC3B+jC,GAAsB7gC,KAAKghC,gBAC3BH,GAAsB7gC,KAAKjD,qBAGlC,GAAC,CAAAtqD,IAAA,sBAAAlH,MAED,WAEE,OAD2By0D,KAAK6gC,sBAE9BjxF,EAAAA,cAAA,OAAK6C,IAAI,eAAeW,UAAU,iBAC/B4sD,KAAKlD,sBACLkD,KAAKghC,gBACLhhC,KAAKjD,qBAGZ,GAAC,CAAAtqD,IAAA,gBAAAlH,MAsBD,WACE,IAAA8tF,EAAgEr5B,KAAK90D,MAA9DQ,EAAM2tF,EAAN3tF,OAAQy6E,EAAOkT,EAAPlT,QAASK,EAAQ6S,EAAR7S,SAAU10D,EAAQunE,EAARvnE,SAAU4+D,EAAY2I,EAAZ3I,aAAcz5E,EAAEoiF,EAAFpiF,GAE1D,OAAOrH,EAAAA,cAACgwF,GAAY,CAClBntF,IAAI,gBACJ/G,OAAQA,EACRy6E,QAASA,EACTK,SAAUA,EACVqZ,YAAa7/B,KAAK6/B,cAClBC,WAAY9/B,KAAK8/B,aACjBC,eAAgB//B,KAAK+/B,iBACrBvE,WAAYx7B,KAAKw7B,WACjB3U,QAAS7mB,KAAK6mB,QACd/0D,SAAUA,EACV4+D,aAAcA,EACdz5E,GAAIA,GAER,GAAC,CAAAxE,IAAA,cAAAlH,MAED,WACE,OAAOy0D,KAAK90D,MAAMi0F,mBACpB,GAAC,CAAA1sF,IAAA,aAAAlH,MACD,WACE,IAAMm4E,EAAmB1jB,KAAK90D,MAAMQ,OAAOS,SAASu3E,iBAC9Cua,EAAgBj+B,KAAK90D,MAAM+yF,cACjC,OAAIva,GACKua,EAAgBva,CAG3B,GAAC,CAAAjxE,IAAA,iBAAAlH,MACD,WACE,OAAQy0D,KAAK90D,MAAM0oB,MACrB,GAAC,CAAAnhB,IAAA,iBAAAlH,MAED,WACE,IAAO+qB,EAAa0pC,KAAK90D,MAAlBorB,UACP,OAAOA,EAAYA,EAAUtC,WAAWC,UAAU5nB,IAAI2zD,KAAKrD,YAAc,IAC3E,GAAC,CAAAlqD,IAAA,aAAAlH,MAED,SAAWqJ,GACT,GAAKA,EAAL,CAGA,IAAM1J,EAAQ80D,KAAK90D,MACZQ,EAA0CR,EAA1CQ,OAAQuhF,EAAkC/hF,EAAlC+hF,QAASqD,EAAyBplF,EAAzBolF,YAAax+D,EAAY5mB,EAAZ4mB,SAE/Btb,EADkC,SAApB5B,EAAK2c,IAAI,SAA6D,MAAvC3c,EAAKmd,MAAM,CAAC,aAAc,UAClD,aAAend,EAAK2c,IAAI,QAEnD,OACE3hB,EAAAA,cAACqxF,IAAInwF,EAAAA,GAAAA,GAAA,GACCkvD,KAAKkhC,kBAAkBtsF,GAAK,CAChCnC,IAAKmC,EAAK2c,IAAI,MACdta,GAAIrC,EAAK2c,IAAI,MACb+P,QAASp2B,EAAM+L,GAEf7C,KAAMQ,EAAK2c,IAAI,QACf/a,KAAMA,EACNmgB,WAAY/hB,EAAK2c,IAAI,cACrB7lB,OAAQA,EACRuhF,QAASA,EACT32D,UAAW1hB,EAAK2c,IAAI,aACpBwqE,kBAAmB/7B,KAAKmhC,yBAAyBvsF,GACjDqpF,cAAej+B,KAAKohC,qBAAqBxsF,GACzCspF,wBAAyBl+B,KAAK+7B,oBAC9BzL,YAAaA,EACbC,gBAAiBvwB,KAAK90D,MAAMqlF,gBAC5B3+D,eAAgBE,IAxBpB,CA2BF,GAAC,CAAArf,IAAA,oBAAAlH,MAED,SAAkB81F,GAChB,MAAO,CAAC,CACV,GAAC,CAAA5uF,IAAA,oBAAAlH,MAED,WACE,OAAIy0D,KAAK90D,MAAM4mB,SACN,EACFkuC,KAAK90D,MAAM6wF,iBACpB,GAAC,CAAAtpF,IAAA,uBAAAlH,MAED,SAAqB81F,GACnB,OAAOrhC,KAAK90D,MAAM+yF,aACpB,GAAC,CAAAxrF,IAAA,2BAAAlH,MAED,SAAyB81F,GACvB,OAAIrhC,KAAK90D,MAAM4mB,SACN,EACFkuC,KAAK+7B,mBACd,GAAC,CAAAtpF,IAAA,eAAAlH,MAED,WACE,IAAAouF,EAAqC35B,KAAK90D,MAAlCQ,EAAMiuF,EAANjuF,OAAQkoB,EAAM+lE,EAAN/lE,OAAQ9B,EAAQ6nE,EAAR7nE,SAClBiqE,EAAoB/7B,KAAK+7B,oBAC/B,OAAOrwF,EAAOS,SAASs0D,aAAe7sC,GAAUmoE,EAAoB,IAAMjqE,CAC5E,GAAC,CAAArf,IAAA,aAAAlH,MAED,WACE,IAAQ4kF,EAA2BnwB,KAAK90D,MAAhCilF,uBACFruE,EAAOk+C,KAAKl+C,KACZnL,EAAO/G,EAAAA,cAACkS,EAAI,CAChBtL,KAAK,SAEP,OAAOwpD,KAAKs8B,gBAAmB1sF,EAAAA,cAAA,OAC7B6C,IAAI,kBACJyqF,YAAa/M,EACb/8E,UAAW,uCACXuD,EACJ,GAAC,CAAAlE,IAAA,qBAAAlH,MAED,WAEE,OAD+By0D,KAAK90D,MAA5BwM,kBAEV,GAAC,CAAAjF,IAAA,cAAAlH,MAED,WACE,IAAA4xF,EAGIn9B,KAAK90D,MAFPQ,EAAMyxF,EAANzxF,OAAQ4qB,EAAS6mE,EAAT7mE,UAAWrf,EAAEkmF,EAAFlmF,GACnB8nF,EAAmB5B,EAAnB4B,oBAAqB3nF,EAAc+lF,EAAd/lF,eAAgBI,EAAG2lF,EAAH3lF,IAAKC,EAAM0lF,EAAN1lF,OAAQqa,EAAQqrE,EAARrrE,SAGpDm2C,EAAwEv8D,EAAOS,SAAxEixF,EAAmBn1B,EAAnBm1B,oBAAqDxlF,GAArBqwD,EAAX9iD,YAA8B8iD,EAAjBtwD,QAA2BswD,EAARrwD,UACtDF,EAAqBsoD,KAAKtoD,qBAChC,IAAKsoD,KAAK0gC,YACR,OAAO,KACT,IAAKpqE,IAAcA,EAAUhkB,KAC3B,OAAO,KAET,IAAMw/E,EAAc,CAClB5gF,SAAU8uD,KAAK2gC,aACfl1F,SAAU2xF,GAAuBtrE,EACjCitE,oBAAqBA,EACrB3nF,eAAgBgmF,EAAsBlL,GAAU96E,EAChDM,mBAAoBA,EACpBhM,OAAQA,EACR8L,IAAKA,IAAO,EACZP,GAAIA,EACJQ,OAAQ2lF,EAAsBlL,GAAUz6E,EACxCG,SAAUA,EACVD,QAASqoD,KAAKroD,UACdma,SAAUA,GAENva,EAAQyoD,KAAKzoD,MACnB,OACE3H,EAAAA,cAAC2H,GAAKzG,EAAAA,GAAAA,GAAA,CACJ2B,IAAI,eACAq/E,GAGV,GAAC,CAAAr/E,IAAA,eAAAlH,MAED,WACE,OACEqE,EAAAA,cAAA,OAAK6C,IAAI,qBAAqBW,UAAW,uBACtC4sD,KAAK76C,cACL66C,KAAK69B,aAGZ,GAAC,CAAAprF,IAAA,SAAAlH,MAED,WACE,OAAOqE,EAAAA,cAAAA,EAAAA,SAAA,KACJowD,KAAKshC,sBACLthC,KAAKuhC,wBACLvhC,KAAKwhC,sBAEV,IAAC,CAnVoB,CAASjU,EAAAA,WAAnB8S,GACJ7S,UAAY,CACjBuO,kBAAmBtO,KAAAA,OACnB/1E,mBAAoB+1E,KAAAA,OAAiBC,WACrCyR,oBAAqB1R,KAAAA,KAAeC,WACpC95D,OAAQ65D,KAAAA,KAAeC,WACvBl2E,IAAKi2E,KAAAA,KACLsR,oBAAqBtR,KAAAA,OACrB/hF,OAAQ+hF,KAAAA,OAAiBC,WACzBz2E,GAAIw2E,KAAAA,OAAiBC,WACrBpsD,QAASmsD,KAAAA,OACTr5E,KAAMq5E,KAAAA,IACNn3D,UAAWm3D,KAAAA,IACX+C,aAAc/C,KAAAA,KACd8C,gBAAiB9C,KAAAA,KACjB37D,SAAU27D,KAAAA,KACViD,aAAcjD,KAAAA,KAEd0C,uBAAwB1C,KAAAA,KACxB6C,YAAa7C,KAAAA,KACbtH,QAASsH,KAAAA,KAAeC,WACxBlH,SAAUiH,KAAAA,KAAeC,WACzB8N,WAAY/N,KAAAA,KAAeC,WAC3Bt2E,eAAgBq2E,KAAAA,KAAeC,WAC/Bj2E,OAAQg2E,KAAAA,KAAeC,WACvB7G,QAAS4G,KAAAA,KAAeC,WACxBT,QAASQ,KAAAA,OAAiBC,YA4T9B,SAAemR,GAAe3O,GAAU,QAAVA,CAAmBqC,GAAc8N,KAAc,S,yRCpWtE,IAAMoB,GAAgB,SAAAxR,GAAA,SAAAwR,IAAA,OAAA9U,EAAAA,EAAAA,GAAA,KAAA8U,GAAA7U,GAAA,KAAA6U,EAAA/sF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAAuU,EAAAxR,IAAA9C,EAAAA,EAAAA,GAAAsU,EAAA,EAAAhvF,IAAA,SAAAlH,MAC3B,WACE,IAAA8hF,EAIIrtB,KAAK90D,MAHPQ,EAAM2hF,EAAN3hF,OACAy6E,EAAOkH,EAAPlH,QAAS2Z,EAAUzS,EAAVyS,WAAYC,EAAc1S,EAAd0S,eAAgBvE,EAAUnO,EAAVmO,WACrC3U,EAAOwG,EAAPxG,QAAS/0D,EAAQu7D,EAARv7D,SAAU4+D,EAAYrD,EAAZqD,aAAcz5E,EAAEo2E,EAAFp2E,GAEnCpJ,EAIInC,EAAOS,SAHTixF,EAAmBvvF,EAAnBuvF,oBAAqBx7B,EAAY/zD,EAAZ+zD,aAAcE,EAAaj0D,EAAbi0D,cACnCz8C,EAAYxX,EAAZwX,aAAc3O,EAAU7I,EAAV6I,WAAY0O,EAAYvX,EAAZuX,aAAcI,EAAiB3X,EAAjB2X,kBACxC67C,EAASxzD,EAATwzD,UAAWC,EAAWzzD,EAAXyzD,YAAag8B,EAAQzvF,EAARyvF,SAAU38B,EAAe9yD,EAAf8yD,gBAE9B7+C,EAAO,SAACqtE,GAAE,OAAKz4E,EAAWy4E,EAAIzjF,EAAOoc,IAAI,EACzC2zE,EAAM,SAACtM,GAAE,OAAK9pE,EAAa8pE,EAAIzjF,EAAOoc,IAAI,EAC1CzH,EAAS,SAAC8uE,GAAE,OAAK/pE,EAAa+pE,EAAIzjF,EAAOoc,IAAI,EAC7C4zE,EAAS,SAACvM,GAAE,OAAK3pE,EAAkB2pE,EAAIzjF,EAAOoc,IAAI,EAElDm4E,EAAgB3C,KAAcxrE,IAAa4+D,IAAiB9gF,EAAAA,cAACyQ,EAAM,CACvE7J,KAAK,OAAOS,GAAIA,EAAI1L,MAAOumB,EAAUhc,SAAU+wE,EAASv3E,MAAO+xD,EAAWl/C,aAAcm/C,EAAal/C,WAAW,EAAM1W,OAAQA,IAG1Hw0F,GAAc9C,GAAuB0C,IAAehuE,GAAYliB,EAAAA,cAAC6rF,EAAG,CACxEjlF,KAAK,eAAeC,QAAS0vE,EAAS72E,MAAOsyD,EAAcn2D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAGvGs+E,GAAehD,GAAuB2C,KAAoBjuE,GAAYA,GAAY6uC,IAAoB/wD,EAAAA,cAAC6rF,EAAG,CAC9GjlF,KAAK,eAAeC,QAAS+kF,EAAYlsF,MAAOwyD,EAAep2D,OAAQA,EAAQgL,WAAYoL,IAG7F,OACElS,EAAAA,cAAA,OAAKwD,UAAW,kBACdxD,EAAAA,cAAC8rF,EAAM,CAAChwF,OAAQA,GACbu0F,EACAC,EACAE,GAIT,IAAC,CAtC0B,CAASrP,EAAAA,e,k1BCKC,IAGjC2Q,GAAS,SAAAC,GAUb,SAAAD,EAAYx2F,GAAO,IAAAiwD,EAeS,OAfTwxB,EAAAA,EAAAA,GAAA,KAAA+U,IACjBvmC,EAAAyxB,GAAA,KAAA8U,EAAA,CAAMx2F,KAORo1F,kBAAoB,iBAAM,sBAAsB,EAAAnlC,EAEhDmmC,oBAAsB,kBAAM,IAAI,EAAAnmC,EAChCqmC,oBAAsB,kBAAM,IAAI,EAAArmC,EAChCh2C,YAAc,kBAAM,IAAI,EAAAg2C,EACxB0kC,YAAc,kBAAM,CAAK,EAAA1kC,EACzB2kC,WAAa,kBAAM,CAAI,EAAA3kC,EACvB4kC,eAAiB,kBAAM,CAAK,EAAA5kC,CAb5B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAwU,EAAAC,IAAAxU,EAAAA,EAAAA,GAAAuU,EAAA,EAAAjvF,IAAA,iBAAAlH,MAED,SAAeigF,IACboW,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAH,EAAA14E,WAAA,uBAAAC,KAAA,KAAqBuiE,EACvB,GAAC,CAAA/4E,IAAA,2BAAAlH,MAWD,SAAyB81F,GACvB,GAAIrhC,KAAK90D,MAAM4mB,SACb,OAAO,EACT,IAAOwE,EAAa0pC,KAAK90D,MAAlBorB,UACP,OAAOA,aAAS,EAATA,EAAWhkB,OAAQ,CAC5B,GAAC,CAAAG,IAAA,wBAAAlH,MAED,WACE,OACEqE,EAAAA,cAAAA,EAAAA,SAAA,KACGowD,KAAK69B,aACL79B,KAAKv7C,cACLu7C,KAAKghC,iBAAeY,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAH,EAAA14E,WAAA,8BAAAC,KAAA,MAI3B,GAAC,CAAAxW,IAAA,cAAAlH,MAED,WACE,IAAA8hF,EAGIrtB,KAAK90D,MAFPQ,EAAM2hF,EAAN3hF,OAAQwlF,EAAa7D,EAAb6D,cAAec,EAAgB3E,EAAhB2E,iBAAkBX,EAAiBhE,EAAjBgE,kBAAmB/7E,EAAQ+3E,EAAR/3E,SAAU2xE,EAAYoG,EAAZpG,aAAcF,EAAWsG,EAAXtG,YACpFzqD,EAAW+wD,EAAX/wD,YAAarlB,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAASxP,EAAQu7D,EAARv7D,SAEpBgrE,EAAwBpxF,EAAOS,SAA/B2wF,oBAER,OAAOltF,EAAAA,cAAC+qF,GAAY,CAClBloF,IAAI,QACJmoF,UAAW,eACXlvF,OAAQA,EACRqvF,sBAAsB,EACtB7J,cAAeA,EACfc,iBAAkBA,EAClBX,kBAAmBA,EACnB/7E,SAAUA,EACV2xE,aAAcA,EACdF,YAAaA,EACbzqD,YAAaA,EACb7wB,SAAUqxF,GAAuBhrE,EACjC7a,GAAIA,EACJqqB,QAASA,GAEb,GAAC,CAAA7uB,IAAA,gBAAAlH,MAED,WACE,IAAA0tF,EAAsDj5B,KAAK90D,MAApDQ,EAAMutF,EAANvtF,OAAQy6E,EAAO8S,EAAP9S,QAASr0D,EAAQmnE,EAARnnE,SAAU4+D,EAAYuI,EAAZvI,aAAcz5E,EAAEgiF,EAAFhiF,GAEhD,OAAOrH,EAAAA,cAAC6xF,GAAgB,CACtB/1F,OAAQA,EACRy6E,QAASA,EACT2Z,WAAY9/B,KAAK8/B,aACjBC,eAAgB//B,KAAK+/B,iBACrBvE,WAAYx7B,KAAKw7B,WACjB3U,QAAS7mB,KAAK6mB,QACd/0D,SAAUA,EACV4+D,aAAcA,EACdz5E,GAAIA,GAER,GAAC,CAAAxE,IAAA,oBAAAlH,MAED,SAAkB81F,GAChB,MAAO,CACL/kE,YAAa0jC,KAAK90D,MAAMgmF,cAE5B,IAAC,CA1FY,CAASmP,IAAlBqB,GACGlU,UAASt7E,GAAAA,GAAA,GACXmuF,GAAW7S,WAAS,IACvB0D,cAAezD,KAAAA,IACfuE,iBAAkBvE,KAAAA,OAClBnxD,YAAamxD,KAAAA,OACbn4E,SAAUm4E,KAAAA,KACV1G,YAAa0G,KAAAA,OAuFjB,SAAeoR,GAAe3O,GAAU,mBAAVA,CAA8BqC,GAAcmP,KAAa,c,yQCtGhF,IAAMI,GAAmB,SAAA7R,GAAA,SAAA6R,IAAA,OAAAnV,EAAAA,EAAAA,GAAA,KAAAmV,GAAAlV,GAAA,KAAAkV,EAAAptF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAA4U,EAAA7R,IAAA9C,EAAAA,EAAAA,GAAA2U,EAAA,EAAArvF,IAAA,SAAAlH,MAC9B,WACE,IAAA8hF,EAIIrtB,KAAK90D,MAHPQ,EAAM2hF,EAAN3hF,OACAy6E,EAAOkH,EAAPlH,QAAS2Z,EAAUzS,EAAVyS,WAAYC,EAAc1S,EAAd0S,eAAgBvE,EAAUnO,EAAVmO,WACrC3U,EAAOwG,EAAPxG,QAAS/0D,EAAQu7D,EAARv7D,SAAU4+D,EAAYrD,EAAZqD,aAAcz5E,EAAEo2E,EAAFp2E,GAEnCpJ,EAIInC,EAAOS,SAHTixF,EAAmBvvF,EAAnBuvF,oBAAqBv7B,EAAeh0D,EAAfg0D,gBAAiBC,EAAaj0D,EAAbi0D,cACtCz8C,EAAYxX,EAAZwX,aAAc3O,EAAU7I,EAAV6I,WAAY0O,EAAYvX,EAAZuX,aAAcI,EAAiB3X,EAAjB2X,kBACxC67C,EAASxzD,EAATwzD,UAAWC,EAAWzzD,EAAXyzD,YAAag8B,EAAQzvF,EAARyvF,SAAU38B,EAAe9yD,EAAf8yD,gBAE9B7+C,EAAO,SAACqtE,GAAE,OAAKz4E,EAAWy4E,EAAIzjF,EAAOoc,IAAI,EACzC2zE,EAAM,SAACtM,GAAE,OAAK9pE,EAAa8pE,EAAIzjF,EAAOoc,IAAI,EAC1CzH,EAAS,SAAC8uE,GAAE,OAAK/pE,EAAa+pE,EAAIzjF,EAAOoc,IAAI,EAC7C4zE,EAAS,SAACvM,GAAE,OAAK3pE,EAAkB2pE,EAAIzjF,EAAOoc,IAAI,EAElDm4E,EAAgB3C,KAAcxrE,IAAa4+D,IAAiB9gF,EAAAA,cAACyQ,EAAM,CACvE7J,KAAK,OAAOS,GAAIA,EAAI1L,MAAOumB,EAAUhc,SAAU+wE,EAASv3E,MAAO+xD,EAAWl/C,aAAcm/C,EAAa51D,OAAQA,IAGzGw0F,GAAc9C,GAAuB0C,IAAehuE,GAAYliB,EAAAA,cAAC6rF,EAAG,CACxEjlF,KAAK,kBAAkBC,QAAS0vE,EAAS72E,MAAOuyD,EAAiBp2D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAG7Gs+E,GAAehD,GAAuB2C,KAAoBjuE,GAAYA,GAAY6uC,IAAoB/wD,EAAAA,cAAC6rF,EAAG,CAC9GjlF,KAAK,eAAeC,QAAS+kF,EAAYlsF,MAAOwyD,EAAep2D,OAAQA,EAAQgL,WAAYoL,IAG7F,OACElS,EAAAA,cAAA,OAAKwD,UAAW,qCACdxD,EAAAA,cAAC8rF,EAAM,CAAChwF,OAAQA,GACbu0F,EACAC,EACAE,GAIT,IAAC,CAtC6B,CAASrP,EAAAA,e,67BCWzC,IAAAC,GAA+C1mF,GAAMyjF,YAA9CtvD,GAAcuyD,GAAdvyD,eAAgBkN,GAAoBqlD,GAApBrlD,qBAChBwtB,GAA4C7uD,GAAM2oF,UAAlD95B,yCAGD4oC,GAAY,SAAAJ,GAehB,SAAAI,EAAY72F,GAAO,IAAAiwD,EAaQ,OAbRwxB,EAAAA,EAAAA,GAAA,KAAAoV,IACjB5mC,EAAAyxB,GAAA,KAAAmV,EAAA,CAAM72F,KAORo1F,kBAAoB,iBAAM,0BAA0B,EAAAnlC,EAEpDqmC,oBAAsB,kBAAM,IAAI,EAAArmC,EAChC0kC,YAAc,kBAAM,CAAK,EAAA1kC,EACzB2kC,WAAa,kBAAM,CAAI,EAAA3kC,EACvB4kC,eAAiB,kBAAM,CAAI,EAAA5kC,CAX3B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAA6U,EAAAJ,IAAAxU,EAAAA,EAAAA,GAAA4U,EAAA,EAAAtvF,IAAA,iBAAAlH,MAED,SAAeigF,IACboW,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAE,EAAA/4E,WAAA,uBAAAC,KAAA,KAAqBuiE,EACvB,GAAC,CAAA/4E,IAAA,sBAAAlH,MASD,WACE,OACEqE,EAAAA,cAAA,OAAK6C,IAAI,eAAeW,UAAWy9E,KACjC,gBACA7wB,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK8gC,eAAiB,eAAiB,GACvC9gC,KAAKs8B,eAAiB,aAAe,cACrCt8B,KAAK0gC,aAAiB1gC,KAAK2gC,eAAgB3gC,KAAKroD,UAA6B,cAAhB,gBAE5DqoD,KAAK+gC,eACL/gC,KAAKgiC,mBACLhiC,KAAKghC,gBAGZ,GAAC,CAAAvuF,IAAA,eAAAlH,MAED,WACE,OACEqE,EAAAA,cAAA,OAAKwD,UAAW,uBACb4sD,KAAK76C,cACL66C,KAAK69B,aAGZ,GAAC,CAAAprF,IAAA,mBAAAlH,MAED,WACE,OACEqE,EAAAA,cAAA,OAAKwD,UAAW,6BACb4sD,KAAKv7C,cACLu7C,KAAKj7C,iBACLi7C,KAAK62B,eACL72B,KAAK29B,cAGZ,GAAC,CAAAlrF,IAAA,cAAAlH,MAED,WACE,IAAA8hF,EAA6BrtB,KAAK90D,MAA3BQ,EAAM2hF,EAAN3hF,OAAQo4C,EAAUupC,EAAVvpC,WACfj2C,EAA8CnC,EAAOS,SAA7C+wD,EAAervD,EAAfqvD,gBAAiB/gB,EAAgBtuC,EAAhBsuC,iBACnB8gD,GAAW39E,EAAAA,EAAAA,IAAKwkC,aAAU,EAAVA,EAAY7vB,YAAa,IAAKlX,QAAO,SAAAlE,GAAC,QAAMA,CAAC,IAAEoE,SAAW,KAChF,OAAOk/B,GAAoB8gD,GACpBrtF,EAAAA,cAAA,OAAKwD,UAAU,qBACf8pD,EAAkBA,EAAgB,CAAC3qD,MAAO0qF,GAAWvxF,EAAOoc,KAAOm1E,EAE5E,GAAC,CAAAxqF,IAAA,UAAAlH,MAED,WACE,IAAA0tF,EAAkDj5B,KAAK90D,MAAhDQ,EAAMutF,EAANvtF,OAAQwlF,EAAa+H,EAAb/H,cACT8K,GADwC/C,EAAhB3H,iBACF7yD,GAAe/yB,EAAQwlF,IAAkB,CAAC,GACtE,OAAsCtiF,MAA/BotF,EAAoBrkF,QAAuBqkF,EAAoBrkF,QAAUjM,EAAOS,SAASwL,OAClG,GAAC,CAAAlF,IAAA,qBAAAlH,MAED,WACE,IAAA2tF,EAAkDl5B,KAAK90D,MAAhDQ,EAAMwtF,EAANxtF,OAAQwlF,EAAagI,EAAbhI,cACT8K,GADwC9C,EAAhB5H,iBACF7yD,GAAe/yB,EAAQwlF,IAAkB,CAAC,GAClEx5E,GAAkBkqF,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAE,EAAA/4E,WAAA,2BAAAC,KAAA,MACtB,GAAI+yE,EAAoBzhE,aAAc,CACpC,IAC8CzK,EAD1C9b,EAAW,CAAC,EAAE+b,E,65BAAAC,CACJgsE,EAAoBzhE,cAAY,IAA9C,IAAAxK,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAgD,KAAvC7jB,EAACwjB,EAAAvkB,MACF4B,EAAUuK,EAAmBpL,GAC/Ba,IACF6G,EAAS1H,GAAKa,EAElB,CAAC,OAAAijB,GAAAL,EAAAlX,EAAAuX,EAAA,SAAAL,EAAAM,GAAA,CACD3Y,EAAqB1D,CACvB,CACA,OAAO0D,CACT,GAAC,CAAAjF,IAAA,cAAAlH,MAED,WACE,IAAA8tF,EAGIr5B,KAAK90D,MAFPQ,EAAM2tF,EAAN3tF,OAAQwlF,EAAamI,EAAbnI,cAAec,EAAgBqH,EAAhBrH,iBAAkBX,EAAiBgI,EAAjBhI,kBAAmB/7E,EAAQ+jF,EAAR/jF,SAAUyxE,EAAWsS,EAAXtS,YAAaE,EAAYoS,EAAZpS,aACnF3qD,EAAW+8D,EAAX/8D,YAAarlB,EAAEoiF,EAAFpiF,GAAIqqB,EAAO+3D,EAAP/3D,QAASxP,EAAQunE,EAARvnE,SAEpBgrE,EAAwBpxF,EAAOS,SAA/B2wF,oBAER,OAAOltF,EAAAA,cAAC+qF,GAAY,CAClBloF,IAAI,QACJmoF,UAAW,cACXlvF,OAAQA,EACRqvF,sBAAsB,EACtB7J,cAAeA,EACfc,iBAAkBA,EAClBX,kBAAmBA,EACnB/7E,SAAUA,EACV2xE,aAAcA,EACdF,YAAaA,EACbzqD,YAAaA,EACb7wB,SAAUqxF,GAAuBhrE,EACjC7a,GAAIA,EACJqqB,QAASA,GAEb,GAAC,CAAA7uB,IAAA,iBAAAlH,MAED,WACE,IAAAouF,EAAqG35B,KAAK90D,MAAnGQ,EAAMiuF,EAANjuF,OAAQwlF,EAAayI,EAAbzI,cAAec,EAAgB2H,EAAhB3H,iBAAkBV,EAAgBqI,EAAhBrI,iBAA4BtK,GAAF2S,EAARrkF,SAAqBqkF,EAAX3S,aAAal1D,EAAQ6nE,EAAR7nE,SACjFgrE,EAAwBpxF,EAAOS,SAA/B2wF,oBACFhK,EAA4BnnD,GAAqBjgC,EAAQwlF,EAAeI,IAAqB,CAAC,EAC9F+K,EAAevJ,EAA0BuJ,aACzCxJ,EAAoB3B,GAAiBmL,GAAgBvJ,EAA0BE,oBAC/EJ,EAAe1B,IAAkBmL,EAEvC,OAAOzsF,EAAAA,cAAC+iF,GAAe,CACrBlgF,IAAI,WACJmoF,UAAW,kBACXlvF,OAAQA,EACRwlF,cAAeA,EACfc,iBAAkBA,EAClBV,iBAAkBA,EAClBtK,YAAaA,EACb4L,aAAcA,EACdC,kBAAmBA,EACnBC,0BAA2BA,EAC3BrnF,SAAUqxF,GAAuBhrE,EACjC7a,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,SAExB,GAAC,CAAA7uB,IAAA,sBAAAlH,MAED,WACE,IAAA4xF,EAA4Bn9B,KAAK90D,MAA1BorB,EAAS6mE,EAAT7mE,UAAW5qB,EAAMyxF,EAANzxF,OACZkxF,EAAW58B,KAAK68B,kBAAkB78B,KAAK90D,OAC7C,OAAOiuD,GAAyCyjC,EAAUtmE,EAAW5qB,EACvE,GAAC,CAAA+G,IAAA,oBAAAlH,MAED,SAAAwC,GAKG,IAJDmjF,EAAanjF,EAAbmjF,cAAec,EAAgBjkF,EAAhBikF,iBAAkBX,EAAiBtjF,EAAjBsjF,kBACjCC,EAAgBvjF,EAAhBujF,iBAAkB16D,EAAe7oB,EAAf6oB,gBAClBrrB,EAAKwC,EAALxC,MAAO+yB,EAASvwB,EAATuwB,UAAsCwlB,GAAnB/1C,EAAR0K,SAAyB1K,EAAfkwB,gBAA2BlwB,EAAV+1C,YAG7C,OAHmE/1C,EAAVg2C,WAGlD,CACL7iC,MAAOgwE,EACP/wD,SAAU6xD,EACVx0D,UAAW6zD,EACX9sD,SAAU+sD,EACV16D,gBAAAA,EACArrB,MAAAA,EACA+yB,UAAAA,EAEA7lB,SAAU,CAAC,SAEXqrC,WAAAA,EACAC,WAAY,KACZznB,YAfSvuB,EAAXuuB,YAiBF,GAAC,CAAA7pB,IAAA,eAAAlH,MAED,WACE,IAAA8xF,EAA4Dr9B,KAAK90D,MAA1DQ,EAAM2xF,EAAN3xF,OAAQwlF,EAAamM,EAAbnM,cAAeI,EAAgB+L,EAAhB/L,iBAAkBx/D,EAAQurE,EAARvrE,SACxCkrE,EAAwBtxF,EAAOS,SAA/B6wF,oBAGR,IAF6B9L,IAAiBI,EAE7B,OAAO,KAExB,IAAMj1D,EAASzsB,EAAAA,cAAC4mF,IAAM1lF,EAAAA,GAAAA,GAAA,CACpB2B,IAAI,SACJ0lF,gBAAgB,GACZn4B,KAAK68B,kBAAkB78B,KAAK90D,OAAM,CACtCQ,OAAQA,EACRoK,SAAWknF,EAA4C9K,GAAtBlyB,KAAK90D,MAAM4K,SAE5CiD,YAAam5E,GACbzmF,SAAUuxF,GAAuBlrE,EACjC7a,GAAI+oD,KAAK90D,MAAM+L,GACfqqB,QAAS0+B,KAAK90D,MAAMo2B,WAGtB,OACE1xB,EAAAA,cAACqiF,GAAG,CAACx/E,IAAK,cAAcutD,KAAK90D,MAAMomF,iBAAkBl+E,UAAU,eAC5DipB,EAGP,GAAC,CAAA5pB,IAAA,gBAAAlH,MAED,WACE,IAAAgyF,EAAsDv9B,KAAK90D,MAApDQ,EAAM6xF,EAAN7xF,OAAQy6E,EAAOoX,EAAPpX,QAASr0D,EAAQyrE,EAARzrE,SAAU4+D,EAAY6M,EAAZ7M,aAAcz5E,EAAEsmF,EAAFtmF,GAEhD,OAAOrH,EAAAA,cAACkyF,GAAmB,CACzBp2F,OAAQA,EACRy6E,QAASA,EACT2Z,WAAY9/B,KAAK8/B,aACjBC,eAAgB//B,KAAK+/B,iBACrBvE,WAAYx7B,KAAKw7B,WACjB3U,QAAS7mB,KAAK6mB,QACd/0D,SAAUA,EACV4+D,aAAcA,EACdz5E,GAAIA,GAER,GAAC,CAAAxE,IAAA,2BAAAlH,MAED,SAAyB81F,GACvB,GAAIrhC,KAAK90D,MAAM4mB,SACb,OAAO,EACT,IAAOwE,EAAa0pC,KAAK90D,MAAlBorB,UACP,OAAOA,aAAS,EAATA,EAAWhkB,OAAQ,CAC5B,GAAC,CAAAG,IAAA,oBAAAlH,MAED,SAAkB81F,GAChB,MAAO,CACL/kE,YAAa0jC,KAAK90D,MAAMgmF,cAE5B,IAAC,CAzOe,CAASmP,IAArB0B,GACGvU,UAASt7E,GAAAA,GAAA,GACXmuF,GAAW7S,WAAS,IACvB0D,cAAezD,KAAAA,IACfuE,iBAAkBvE,KAAAA,OAClB6D,iBAAkB7D,KAAAA,OAClBliF,MAAOkiF,KAAAA,IACPnxD,YAAamxD,KAAAA,OACbn4E,SAAUm4E,KAAAA,KACV1G,YAAa0G,KAAAA,KACbzG,YAAayG,KAAAA,KACb33E,SAAU23E,KAAAA,KACV3pC,WAAY2pC,KAAAA,MAiOhB,SAAeoR,GAAe3O,GAAU,uBAAVA,CAAkCqC,GAAcwP,KAAgB,c,yQC5P9F,IAAM1C,GAA2B,CAC/BC,QAAS,qBACTC,UAAW,qBACXC,SAAU,qBACVC,WAAY,qBACZC,aAAc,qBACdC,YAAa,sBAKFsC,GAAkB,SAAAhS,GAAA,SAAAgS,IAAA,OAAAtV,EAAAA,EAAAA,GAAA,KAAAsV,GAAArV,GAAA,KAAAqV,EAAAvtF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAA+U,EAAAhS,IAAA9C,EAAAA,EAAAA,GAAA8U,EAAA,EAAAxvF,IAAA,SAAAlH,MAC7B,WACE,IAAA8hF,EAGIrtB,KAAK90D,MAFPQ,EAAM2hF,EAAN3hF,OACA66E,EAAY8G,EAAZ9G,aAAcD,EAAmB+G,EAAnB/G,oBAAqBO,EAAOwG,EAAPxG,QAAS/0D,EAAQu7D,EAARv7D,SAAU4+D,EAAYrD,EAAZqD,aAAcz5E,EAAEo2E,EAAFp2E,GAAI4oF,EAAWxS,EAAXwS,YAAaqC,EAAa7U,EAAb6U,cAEvFr0F,EAIInC,EAAOS,SAHTixF,EAAmBvvF,EAAnBuvF,oBAAqB37B,EAAY5zD,EAAZ4zD,aAAcC,EAAmB7zD,EAAnB6zD,oBAAqBs+B,EAAoBnyF,EAApBmyF,qBACxD36E,EAAYxX,EAAZwX,aAAc3O,EAAU7I,EAAV6I,WAAY0O,EAAYvX,EAAZuX,aAAcI,EAAiB3X,EAAjB2X,kBACxC67C,EAASxzD,EAATwzD,UAAWC,EAAWzzD,EAAXyzD,YAAag8B,EAAQzvF,EAARyvF,SAEpBx7E,EAAO,SAACqtE,GAAE,OAAKz4E,EAAWy4E,EAAIzjF,EAAOoc,IAAI,EACzC2zE,EAAM,SAACtM,GAAE,OAAK9pE,EAAa8pE,EAAIzjF,EAAOoc,IAAI,EAC1CzH,EAAS,SAAC8uE,GAAE,OAAK/pE,EAAa+pE,EAAIzjF,EAAOoc,IAAI,EAC7C4zE,EAAS,SAACvM,GAAE,OAAK3pE,EAAkB2pE,EAAIzjF,EAAOoc,IAAI,EAClD9X,EAAWqvF,GAAyBW,GAlBtB,YAoBdC,EAAgB3C,KAAcxrE,IAAa4+D,IAAiB9gF,EAAAA,cAACyQ,EAAM,CACvE7J,KAAK,OAAOS,GAAIA,EAAI1L,MAAOumB,EAAUhc,SAAU+wE,EAASv3E,MAAO+xD,EAAWl/C,aAAcm/C,EAAa51D,OAAQA,IAGzGy2F,GAAmB/E,GAAuByC,IAAgB/tE,GAAYliB,EAAAA,cAAC6rF,EAAG,CAC9EjlF,KAAK,eAAeC,QAAS8vE,EAAcj3E,MAAOmyD,EAAch2D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAG5GsgF,GAA0BhF,GAAuB8E,IAAkBpwE,GAAYliB,EAAAA,cAAC6rF,EAAG,CACvFjlF,KAAK,sBAAsBC,QAAS6vE,EAAqBh3E,MAAOoyD,EAAqBj2D,SAAUqmB,EAAUpmB,OAAQA,EAAQgL,WAAYoL,IAGvI,OACElS,EAAAA,cAAA,OAAKwD,UAAS,kBAAAkb,OAAoBte,IAChCJ,EAAAA,cAAC8rF,EAAM,CAAChwF,OAAQA,GACbu0F,EACAkC,EACAC,GAIT,IAAC,CAtC4B,CAASrR,EAAAA,e,weCJxC,IAAA2E,GAAsEprF,GAAMulF,UAArEz5D,GAAiCs/D,GAAjCt/D,kCAAmCG,GAAwBm/D,GAAxBn/D,yBAGpC8rE,GAAW,SAAAV,GAKf,SAAAU,EAAYn3F,GAAO,IAAAiwD,EAalB,OAbkBwxB,EAAAA,EAAAA,GAAA,KAAA0V,IACjBlnC,EAAAyxB,GAAA,KAAAyV,EAAA,CAAMn3F,KAORo1F,kBAAoB,iBAAM,wBAAwB,EAAAnlC,EAElDqmC,oBAAsB,kBAAM,IAAI,EAAArmC,EAChCmnC,eAAiB,WAAM,IAAAC,EACrB,OAA2B,QAApBA,EAAApnC,EAAKjwD,MAAMorB,iBAAS,IAAAisE,OAAA,EAApBA,EAAsBjwF,OAAQ6oD,EAAKjwD,MAAMorB,UAAUvZ,QAAO,SAAAyL,GAAC,OAA0B,MAAtBA,EAAE+I,IAAI,YAAoB,IAAEjf,KAAO,CAC3G,EAAC6oD,CAXD,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAmV,EAAAV,IAAAxU,EAAAA,EAAAA,GAAAkV,EAAA,EAAA5vF,IAAA,iBAAAlH,MAED,SAAeigF,IACboW,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAQ,EAAAr5E,WAAA,uBAAAC,KAAA,KAAqBuiE,EACvB,GAAC,CAAA/4E,IAAA,cAAAlH,MAQD,WAAc,IAAAi3F,EACJ/e,EAAqBzjB,KAAK90D,MAAMQ,OAAOS,SAAvCs3E,iBACFgf,GAAoC,QAApBD,EAAAxiC,KAAK90D,MAAMorB,iBAAS,IAAAksE,OAAA,EAApBA,EAAsBlwF,OAAQ,EACpD,OAAImxE,GACKgf,EAAgBhf,CAG3B,GAAC,CAAAhxE,IAAA,aAAAlH,MACD,WACE,OAAO,CACT,GAAC,CAAAkH,IAAA,oBAAAlH,MAED,WAAoB,IAAAm3F,EAGdC,GADsC,QAApBD,EAAA1iC,KAAK90D,MAAMorB,iBAAS,IAAAosE,OAAA,EAApBA,EAAsBpwF,OAAQ,EAKpD,OAHI0tD,KAAKsiC,kBACPK,IAEKA,CACT,GAAC,CAAAlwF,IAAA,uBAAAlH,MAED,SAAqBqJ,GACnB,OAAO2hB,GAAyB3hB,EAClC,GAAC,CAAAnC,IAAA,2BAAAlH,MAED,SAAyBqJ,GAAM,IAAAguF,EAC7B,GAAI5iC,KAAK90D,MAAM4mB,SACb,OAAO,EACT,IAAA+wE,EAA+C7iC,KAAK90D,MAAMQ,OAAOS,SAAzD22F,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAGvBJ,GADsC,QAApBC,EAAA5iC,KAAK90D,MAAMorB,iBAAS,IAAAssE,OAAA,EAApBA,EAAsBtwF,OAAQ,EAEhD0tD,KAAKsiC,kBACPK,IAGF,IACItsE,EADgBD,GAAkCxhB,GAItD,OAFW,GAAPyhB,GAAY0sE,GAAmBD,GAAqBH,EAAiB,IACvEtsE,EAAM,KACDA,CACT,GAAC,CAAA5jB,IAAA,sBAAAlH,MAED,WACE,OACEqE,EAAAA,cAAA,OAAK6C,IAAI,eAAeW,UAAWy9E,KACjC,gBACA7wB,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK8gC,eAAiB,eAAiB,GACvC9gC,KAAKs8B,eAAiB,aAAe,eAGpCt8B,KAAK+gC,eACL/gC,KAAKghC,gBAGZ,GAAC,CAAAvuF,IAAA,eAAAlH,MAED,WACE,OACEqE,EAAAA,cAAA,OAAKwD,UAAW,uBACb4sD,KAAK76C,cACL66C,KAAK69B,aAGZ,GAAC,CAAAprF,IAAA,cAAAlH,MAED,WAGE,OAFmBy0D,KAAK90D,MAAhBQ,OAC8BS,SAA9BuwD,oBACqB,IAC/B,GAAC,CAAAjqD,IAAA,UAAAlH,MAED,WACE,OAAO,CACT,GAAC,CAAAkH,IAAA,gBAAAlH,MAGD,WACE,IAAA8hF,EAAgFrtB,KAAK90D,MAA9EQ,EAAM2hF,EAAN3hF,OAAQ66E,EAAY8G,EAAZ9G,aAAcD,EAAmB+G,EAAnB/G,oBAAqBx0D,EAAQu7D,EAARv7D,SAAU4+D,EAAYrD,EAAZqD,aAAcz5E,EAAEo2E,EAAFp2E,GAE1E,OAAOrH,EAAAA,cAACqyF,GAAkB,CACxBv2F,OAAQA,EACR66E,aAAcA,EACdD,oBAAqBA,EACrB4b,eAAgBliC,KAAKsiC,iBACrBzC,YAAa7/B,KAAK6/B,cAClBhZ,QAAS7mB,KAAK6mB,QACd/0D,SAAUA,EACV4+D,aAAcA,EACdz5E,GAAIA,GAER,IAAC,CAjHc,CAASopF,IAApBgC,GACG7U,U,uWAASt7E,CAAA,GACXmuF,GAAW7S,WAoHlB,SAAeqR,GAAe3O,GAAU,qBAAVA,CAAgCqC,GAAc8P,KAAe,gB,k1BCzHvD,IAG9BW,GAAS,SAAArB,GAQb,SAAAqB,EAAY93F,GAAO,IAAAiwD,EAiDa,OAjDbwxB,EAAAA,EAAAA,GAAA,KAAAqW,IACjB7nC,EAAAyxB,GAAA,KAAAoW,EAAA,CAAM93F,KA8CRo1F,kBAAoB,iBAAM,sBAAsB,EAAAnlC,EAEhDqmC,oBAAsB,kBAAM,IAAI,EAAArmC,CA/ChC,CAAC,OAAA+xB,EAAAA,EAAAA,GAAA8V,EAAArB,IAAAxU,EAAAA,EAAAA,GAAA6V,EAAA,EAAAvwF,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,MACjBysF,GAAiB33B,KAAKhD,wBAAyB0uB,aAAS,EAATA,EAAWhgF,WAAW8/E,aAAS,EAATA,EAAW9/E,QAItF,IAFAk2F,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,uBAAAC,KAAA,KAAqBuiE,GAEjBmM,EAAe,CACjB,IAAQjsF,EAAW8/E,EAAX9/E,OACRmC,EAAyEnC,EAAOS,SAAxE6wD,EAAqBnvD,EAArBmvD,sBAAuBC,EAAoBpvD,EAApBovD,qBAAsBC,EAAervD,EAAfqvD,gBACrD8C,KAAKijC,gBAAkBxQ,GAAoB/mF,EAAQsxD,GACnDgD,KAAKkjC,eAAiBzQ,GAAoB/mF,EAAQuxD,GAClD+C,KAAK67B,UAAYpJ,GAAoB/mF,EAAQwxD,EAC/C,CACF,GAAC,CAAAzqD,IAAA,gBAAAlH,MAED,WACE,OAA+BqD,MAAxBoxD,KAAK90D,MAAMorB,SACpB,GAAC,CAAA7jB,IAAA,oBAAAlH,MAED,WAEE,OAAOy0D,KAAK90D,MAAMgzF,uBACpB,GAAC,CAAAzrF,IAAA,2BAAAlH,MAED,SAAyB81F,GAEvB,OAAIrhC,KAAK90D,MAAM4mB,SACN,EACFkuC,KAAK90D,MAAM6wF,iBACpB,GAAC,CAAAtpF,IAAA,uBAAAlH,MAED,SAAqB81F,GAEnB,OAAOrhC,KAAK90D,MAAM+yF,aACpB,GAAC,CAAAxrF,IAAA,eAAAlH,MAED,WAEE,OAAIy0D,KAAK5qC,kBAETwsE,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,qBAAAC,KAAA,KACF,GAAC,CAAAxW,IAAA,sBAAAlH,MAMD,WACE,OACEqE,EAAAA,cAAA,OAAK6C,IAAI,eAAeW,UAAWy9E,KACjC,gBACA7wB,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK2gC,aAAe,aAAe,GACnC3gC,KAAK8gC,eAAiB,eAAiB,GACvC9gC,KAAKs8B,eAAiB,aAAe,cACrCt8B,KAAK0gC,aAAiB1gC,KAAK2gC,eAAgB3gC,KAAKroD,UAA6B,cAAhB,gBAE5DqoD,KAAKmjC,mBACLnjC,KAAKojC,qBACLpjC,KAAKghC,gBAGZ,GAAC,CAAAvuF,IAAA,wBAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,gBACA,KAGPxlB,EAAAA,cAAA,OAAKwD,UAAW,oBACb4sD,KAAKqjC,kBACLrjC,KAAKsjC,oBACLtjC,KAAKluD,cACLkuD,KAAKujC,mBAGZ,GAAC,CAAA9wF,IAAA,mBAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,gBACsB4qC,KAAK90D,MAAMQ,OAAOS,SAAvCw1D,kBACmB,GAI3B/xD,EAAAA,cAAA,OAAKwD,UAAW,uBACb4sD,KAAK76C,cACL66C,KAAK69B,aACL79B,KAAK29B,cAGZ,GAAC,CAAAlrF,IAAA,kBAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,gBACA,MACTwsE,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,8BAAAC,KAAA,KACF,GAAC,CAAAxW,IAAA,qBAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,gBAELxlB,EAAAA,cAAA,WACGowD,KAAKluD,cACLkuD,KAAK29B,eAIL,IACT,GAAC,CAAAlrF,IAAA,cAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,kBAETwsE,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,oBAAAC,KAAA,KACF,GAAC,CAAAxW,IAAA,aAAAlH,MAED,WACE,OAAIy0D,KAAK5qC,kBAETwsE,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,mBAAAC,KAAA,KACF,GAAC,CAAAxW,IAAA,oBAAAlH,MAED,WACE,IAAM03F,EAAkBjjC,KAAKijC,gBAC7B,OAAuBr0F,MAAnBq0F,EACK,KACFrzF,EAAAA,cAACqzF,GAAenyF,EAAAA,GAAAA,GAAA,CACrB2B,IAAI,iBACAutD,KAAK90D,OAEb,GAAC,CAAAuH,IAAA,mBAAAlH,MAED,WACE,IAAM23F,EAAiBljC,KAAKkjC,eAC5B,OAAsBt0F,MAAlBs0F,EACK,KACFtzF,EAAAA,cAACszF,GAAcpyF,EAAAA,GAAAA,GAAA,CACpB2B,IAAI,gBACAutD,KAAK90D,OAEb,GAAC,CAAAuH,IAAA,cAAAlH,MAED,WACE,IAAA8hF,EAA6BrtB,KAAK90D,MAA3BQ,EAAM2hF,EAAN3hF,OAAQo4C,EAAUupC,EAAVvpC,WACP3H,EAAqBzwC,EAAOS,SAA5BgwC,iBACF0/C,EAAY77B,KAAK67B,UACjBoB,GAAW39E,EAAAA,EAAAA,IAAKwkC,aAAU,EAAVA,EAAY7vB,YAAa,IAAKlX,QAAO,SAAAlE,GAAC,QAAMA,CAAC,IAAEoE,SAAW,KAChF,OAAOk/B,GAAoB8gD,GACtBrtF,EAAAA,cAAA,OAAKwD,UAAU,eACfyoF,EAAYjsF,EAAAA,cAACisF,EAAS,CAACtpF,MAAO0qF,IAAeA,EAEpD,GAAC,CAAAxqF,IAAA,cAAAlH,MAED,WACE,IAAA0tF,EAAmGj5B,KAAK90D,MAAhGQ,EAAMutF,EAANvtF,OAAQomB,EAAQmnE,EAARnnE,SAAUvmB,EAAK0tF,EAAL1tF,MAAOkN,EAAQwgF,EAARxgF,SAAUqrC,EAAUm1C,EAAVn1C,WAAYhuC,EAAQmjF,EAARnjF,SAAUiD,EAAWkgF,EAAXlgF,YAAakuE,EAAYgS,EAAZhS,aAAchwE,EAAEgiF,EAAFhiF,GACpF+lF,EAAwBtxF,EAAOS,SAA/B6wF,oBAEF3gE,EAASzsB,EAAAA,cAAC4mF,GAAM,CACpB/jF,IAAI,SACJ+yD,aAAa,EACbtkD,MAAO,cACPqjB,SAAU,KACVh5B,MAAOA,EACPkN,SAAUA,QAAAA,EAAY,QACtBqrC,WAAYA,EACZC,WAAY,KACZr4C,OAAQA,EACRoK,SAAWknF,EAAiC9K,GAAXp8E,EACjCiD,YAAcikF,EAAoC9K,GAAdn5E,EACpCkuE,aAAe+V,EAAqC9K,GAAfjL,EACrCx7E,SAAUuxF,GAAuBlrE,EACjC7a,GAAIA,EACJqqB,QAAS,OAGX,OACE1xB,EAAAA,cAACqiF,GAAG,CAAC7+E,UAAU,qBACZipB,EAGP,GAAC,CAAA5pB,IAAA,gBAAAlH,MAED,WACE,IAAA2tF,EAAgEl5B,KAAK90D,MAA9DQ,EAAMwtF,EAANxtF,OAAQ86E,EAAQ0S,EAAR1S,SAAUL,EAAO+S,EAAP/S,QAASr0D,EAAQonE,EAARpnE,SAAU4+D,EAAYwI,EAAZxI,aAAcz5E,EAAEiiF,EAAFjiF,GAC1D,OAAOrH,EAAAA,cAACgwF,GAAY,CAClBl0F,OAAQA,EACR86E,SAAUA,EACVL,QAASA,EACT2Z,WAAY9/B,KAAK8/B,aACjBD,YAAa7/B,KAAK6/B,cAClBE,eAAgB//B,KAAK+/B,iBACrBvE,WAAYx7B,KAAKw7B,WACjB3U,QAAS7mB,KAAK6mB,QACd/0D,SAAUA,EACV4+D,aAAcA,EACdz5E,GAAIA,GAER,GAAC,CAAAxE,IAAA,sBAAAlH,MAED,WAEE,IAAQA,EAAUy0D,KAAK90D,MAAfK,MACFi4F,EAAWj4F,GAASA,EAAM+G,KAAO/G,EAAMgmB,IAAI,GAAK,KAChD5U,EAAuB,MAAZ6mF,KAAqBriF,MAAMC,QAAQoiF,IAAYA,EAAS7uF,OAAS,GAClF,OAAOitF,EAAAA,GAAAA,IAAAC,EAAAA,EAAAA,GAAAmB,EAAAh6E,WAAA,4BAAAC,KAAA,QAAgCtM,CACzC,IAAC,CA1NY,CAAS0jF,IAAlB2C,GACGxV,UAASt7E,GAAAA,GAAA,GACXmuF,GAAW7S,WAAS,IACvB0Q,wBAAyBzQ,KAAAA,OACzBliF,MAAOkiF,KAAAA,IACP33E,SAAU23E,KAAAA,OAyNd,SAAeoR,GAAe3O,GAAU,mBAAVA,CAA8BqC,GAAcyQ,KAAa,c,k2BCjOvF,IAQMS,GAAgB,SAACv4F,GAAU,IAAAw4F,EACzB/sE,GAA6B,QAAhB+sE,EAAAx4F,EAAMyrB,kBAAU,IAAA+sE,OAAA,EAAhBA,EAAkBl6C,aAAc,CAAC,EAC9CipB,EAAMvgE,GAAA,GAAOykB,GAOnB,OANIzrB,EAAM0mB,iBACR6gD,EAAO3gD,UAAW,GAEhB6E,EAAW7E,WACb2gD,EAAOie,cAAe,GAEjBje,CACT,EAEMkxB,GAAU,CACdniE,KAAM,SAACt2B,GAAK,OACV0E,EAAAA,cAAC2rF,IAAIzqF,EAAAA,GAAAA,GAAA,GACC2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACf8O,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrBvyF,OAAQR,EAAMQ,OACd4kF,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj0D,YAAapxB,EAAMoxB,YACnB4hE,wBAAyBhzF,EAAMgzF,0BAC/B,EAEJ7uF,MAAO,SAACnE,GAAK,OACX0E,EAAAA,cAAC6uF,IAAK3tF,EAAAA,GAAAA,GAAA,GACA2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACfvhF,OAAQR,EAAMQ,OACdqwF,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrB3N,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj6D,UAAWprB,EAAMorB,UACjBgG,YAAa,KACb4hE,wBAAyBhzF,EAAMgzF,0BAC/B,EAEJ0F,WAAY,SAAC14F,GAAK,OAChB0E,EAAAA,cAAC8xF,IAAS5wF,EAAAA,GAAAA,GAAA,GACJ2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACfvhF,OAAQR,EAAMQ,OACdqwF,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrB3N,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj6D,UAAWprB,EAAMorB,UACjBgG,YAAapxB,EAAMoxB,YACnB4hE,wBAAyBhzF,EAAMgzF,0BAC/B,EAEJ2F,eAAgB,SAAC34F,GAAK,OACpB0E,EAAAA,cAACmyF,IAAYjxF,EAAAA,GAAAA,GAAA,GACP2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACfvhF,OAAQR,EAAMQ,OACdqwF,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrB3N,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj6D,UAAWprB,EAAMorB,UACjBgG,YAAapxB,EAAMoxB,YACnB4hE,wBAAyBhzF,EAAMgzF,0BAC/B,EAEJ4F,aAAc,SAAC54F,GAAK,OAClB0E,EAAAA,cAACyyF,IAAWvxF,EAAAA,GAAAA,GAAA,GACN2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACfvhF,OAAQR,EAAMQ,OACdqwF,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrB3N,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj6D,UAAWprB,EAAMorB,UACjBgG,YAAa,KACb4hE,wBAAyBhzF,EAAMgzF,0BAC/B,EAEJ6F,WAAY,SAAC74F,GAAK,OAChB0E,EAAAA,cAACozF,IAASlyF,EAAAA,GAAAA,GAAA,GACJ2yF,GAAcv4F,GAAM,CACxB+L,GAAI/L,EAAM+L,GACVqqB,QAASp2B,EAAMo2B,QACfltB,KAAMlJ,EAAMkJ,KACZ64E,QAAS/hF,EAAM+hF,QACfvhF,OAAQR,EAAMQ,OACdqwF,kBAAmB7wF,EAAM6wF,kBACzBkC,cAAe/yF,EAAM+yF,cACrB3N,YAAaplF,EAAMolF,YACnBC,gBAAiBrlF,EAAMqlF,gBACvBj6D,UAAWprB,EAAMorB,UACjBgG,YAAa,KACb4hE,wBAAyBhzF,EAAMgzF,0BAC/B,GAKA+C,GAAI,SAAAhR,GAAA,SAAAgR,IAAA,OAAAtU,EAAAA,EAAAA,GAAA,KAAAsU,GAAArU,GAAA,KAAAqU,EAAAvsF,UAAA,QAAAw4E,EAAAA,EAAAA,GAAA+T,EAAAhR,IAAA9C,EAAAA,EAAAA,GAAA8T,EAAA,EAAAxuF,IAAA,SAAAlH,MAiBR,WAAS,IAAAy4F,EACP3W,EAA2BrtB,KAAK90D,MAAxBsL,EAAI62E,EAAJ72E,KAAStL,GAAKiD,EAAAA,GAAAA,GAAAk/E,EAAAj/E,IAEhBiJ,EAAkB,UADK,QAAnB2sF,EAAG94F,EAAMyrB,kBAAU,IAAAqtE,OAAA,EAAhBA,EAAkBzyE,IAAI,SACD,OAAS,GACrCorC,EAAazxD,EAAMQ,OAAOS,SAASwwD,WACrC0D,EAAMsjC,GAAQntF,EAAOa,GACzB,OAAIslD,EACKA,EAAUzqD,GAAAA,GAAC,CAAC,EAAGhH,GAAK,IAAEsL,KAAAA,EAAMytF,cAAe5jC,IAAMn1D,EAAMQ,OAAOoc,KAElEu4C,EACEA,EAAIn1D,GADM,IAEnB,IAAC,CA5BO,CAAS6lF,EAAAA,e,yQAAbkQ,GACGzT,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzBz2E,GAAIw2E,KAAAA,OAAiBC,WACrBpsD,QAASmsD,KAAAA,OACTj3E,KAAMi3E,KAAAA,MAlII,CACZ,OACA,QACA,aACA,eACA,eA6H+BC,WAC7Bt5E,KAAMq5E,KAAAA,IAAcC,WACpB/2D,WAAY82D,KAAAA,IACZn3D,UAAWm3D,KAAAA,IACXR,QAASQ,KAAAA,OAAiBC,WAC1BqO,kBAAmBtO,KAAAA,OACnB6C,YAAa7C,KAAAA,KACbnxD,YAAamxD,KAAAA,OACb8C,gBAAiB9C,KAAAA,KACjB77D,eAAgB67D,KAAAA,MC9IpB,IAAAiI,GAAwEprF,GAAMulF,UAAtEz5D,GAAiCs/D,GAAjCt/D,kCAAmCG,GAAwBm/D,GAAxBn/D,yBAC3C2tE,GAAsD55F,GAAMwjF,aAApD3wC,GAAwB+mD,GAAxB/mD,yBAA0BE,GAAe6mD,GAAf7mD,gBAE5B8mD,GAAO,SAAAzX,GAaX,SAAAyX,EAAYj5F,GAAO,IAAAiwD,EAII,OAJJwxB,EAAAA,EAAAA,GAAA,KAAAwX,IACjBhpC,EAAAyxB,GAAA,KAAAuX,EAAA,CAAMj5F,KACD6gF,0BAA4BA,GAAyB5wB,GAE1DA,EAAKipC,SAASl5F,GAAOiwD,CACvB,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAiX,EAAAzX,IAAAS,EAAAA,EAAAA,GAAAgX,EAAA,EAAA1xF,IAAA,wBAAAlH,MAVD,SAAsBigF,EAAWC,GAE/B,OADezrB,KAAK+rB,0BAA0BP,EAAWC,EAE3D,GAAC,CAAAh5E,IAAA,WAAAlH,MASD,SAAUL,GACR,IAAM+L,EAAK/L,EAAMmmB,KAAKE,IAAI,MAC1ByuC,KAAK5rD,KAAO+oC,GAAyBlmC,EACvC,GAAC,CAAAxE,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAEIrtB,KAAK90D,MADPmmB,EAAIg8D,EAAJh8D,KAAM3lB,EAAM2hF,EAAN3hF,OAAQuhF,EAAOI,EAAPJ,QAASqD,EAAWjD,EAAXiD,YAEnB+T,EAAWhzE,EAAKE,IAAI,QACpBqyD,EAAwB,gBAAZygB,EACZtI,EAAoBnY,EAAY,KAAOxtD,GAAkC/E,GACzE4sE,EAAgBra,EAAY,KAAOrtD,GAAyBlF,GAC5Dpa,EAAKoa,EAAKE,IAAI,MACpB,OACE3hB,EAAAA,cAACqxF,GAAI,CACHxuF,IAAKwE,EACLA,GAAIA,EACJ7C,KAAM4rD,KAAK5rD,KACXoC,KAAM6tF,EACN1tE,WAAYtF,EAAKE,IAAI,eAAiB8rB,KACtC3xC,OAAQA,EACRuhF,QAASA,EACT32D,UAAWjF,EAAKE,IAAI,cAAgB8rB,KACpC0+C,kBAAmBA,EACnBkC,cAAeA,EACfC,wBAAyB,EACzB5N,YAAaA,GAGnB,IAAC,CAlDU,CAAS/C,EAAAA,WAAhB4W,GACG3W,UAAY,CACjBn8D,KAAMo8D,KAAAA,IAAcC,WACpBhiF,OAAQ+hF,KAAAA,OAAiBC,WACzBT,QAASQ,KAAAA,OAAiBC,WAC1B4C,YAAa7C,KAAAA,MAgDjB,SxB4jBA,SAAgB0W,GAA8B,IAArBG,EAAS5vF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAC7B6vF,GAA6B3W,EAAAA,GAAAA,KACjC,SAAC5K,GACC,MAAO,CACL8C,SAAU9C,EAAM8C,SAChBG,UAAWjD,EAAMiD,UACjBD,SAAUhD,EAAMgD,SAEpB,GAAG,CACDwE,aAAcyC,GACd1C,gBAAiB0C,GACjBxC,WAAYwC,IAEd,KACA,CACE//B,QAAAA,IAd+B0gC,CA7mBL,SAACuW,GAAO,IAAAK,EAAEF,EAAS5vF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAA8vF,EAAA,SAAA9X,GAQtD,SAAA+X,EAAYv5F,GAAO,IAAAiwD,EAKU,OALVwxB,EAAAA,EAAAA,GAAA,KAAA8X,IACjBtpC,EAAAyxB,GAAA,KAAA6X,EAAA,CAAMv5F,KAyHRw5F,gBAAkB,SAAC7rF,EAAGotE,GACpB,OAAOptE,GAAKA,EAAE8rF,iBAAmBC,SAASlH,MAAQmH,MACpD,EAAC1pC,EAEDm1B,YAAc,SAACr5E,EAAIm5E,EAAKv3E,GACtB,IAAIisF,EAAS1U,EAAI2U,QAAQ,uBACiBn2F,IAAtCusD,EAAK6pC,+BACP7pC,EAAK6pC,6BAA+B3Z,GAA4ByZ,IAElEF,SAASlH,KAAKuH,UAAUnqC,IAAI,eAC5BgqC,EAAOG,UAAUnqC,IAAI,eACrB,IASIoqC,EATAC,EAAkBL,EAAOC,QAAQ,6BAA+BD,EAE9DM,GADND,EAAkBhqC,EAAKkqC,iBAAiBF,IAAoBP,SAASlH,MACnC0H,UAK5BE,GAHUnqC,EAAKoqC,oBAAoBT,GAC1B3pC,EAAKqqC,sBAAsBV,GAErBA,EAAOW,iBAAiB,qBACvCC,EAAWJ,EAAa3wF,OAAS2wF,EAAa,GAAK,KAErDI,IACFR,EAAeL,OAAOc,iBAAiBD,EAAU,MAAME,iBAAiB,gBACxEV,EAAe16F,SAAS06F,IAG1B,IAAMpf,EAAW,CACf7uE,GAAIA,EACJsW,EAAG6iE,EAAIyV,WACP9f,EAAGqK,EAAI0V,UACPh0D,EAAGs+C,EAAI2V,YACPtoE,EAAG2yD,EAAI4V,aACPC,SAAU9qC,EAAK9pC,KAAK7c,MAAMyC,GAC1B4H,YAAaqmF,GAETjf,EAAY,CAChBhvE,GAAIA,EACJsW,EAAG6iE,EAAIyV,WACP9f,EAAGqK,EAAI0V,UACPV,UAAWA,EACXc,QAASrtF,EAAEqtF,QACXC,QAASttF,EAAEstF,QACXF,SAAU9nC,GAAMhD,EAAK9pC,KAAK7c,MAAMyC,IAChC6tF,OAAQA,EACRK,gBAAiBA,GAEbnf,EAAW,CACfkgB,QAASrtF,EAAEqtF,QACXC,QAASttF,EAAEstF,SAGP1rF,EAAS0gD,EAAKupC,gBAAgB7rF,EAAGotE,GACvC9qB,EAAKirC,YAAc3rF,EACnBA,EAAO4rF,iBAAiB,YAAalrC,EAAKmrC,QAC1C7rF,EAAO4rF,iBAAiB,UAAWlrC,EAAKorC,WAExCprC,EAAKjwD,MAAMs/E,aAAavE,EAAWH,EAAUE,EAC/C,EAAC7qB,EAGDmrC,OAAS,SAACztF,GAA2B,IAAxB2tF,IAAY9xF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,KAAAA,UAAA,GACnBoxE,EAAWhuE,OAAOke,OAAO,CAAC,EAAGmlC,EAAKjwD,MAAM46E,UACxC2gB,EAAgBtrC,EAAKjwD,MAAM+6E,UACzBpnE,EAAcinE,EAASjnE,YAEvBumF,EADkBqB,EAActB,gBACJC,UAElC,GADAtf,EAASmgB,SAAW9qC,EAAK9pC,KAAK7c,MAAMsxE,EAAS7uE,IACxC6uE,EAASmgB,SAAd,CAIA,IAAIjgB,EAAW,CACbkgB,QAASrtF,EAAEqtF,QACXC,QAASttF,EAAEstF,SAEPO,EAAgB,CACpBR,QAASO,EAAcP,QACvBC,QAASM,EAAcN,SAGzB,GAAIttF,EAAE8tF,WAAY,CAChB,IAAM7B,EAAS2B,EAAc3B,OACvB8B,EAASzrC,EAAKoqC,oBAAoBT,GAClC+B,EAAQ1rC,EAAKqqC,sBAAsBV,GACzCjsF,EAAE8tF,WAAW,CAAC7B,OAAAA,EAAQ8B,OAAAA,EAAQC,MAAAA,GAChC,CAGA,IAAKJ,EAAcK,IAAK,CACtB,IAAMhC,EAAS2B,EAAc3B,OACvB+B,EAAQ1rC,EAAKqqC,sBAAsBV,GACrC+B,IACFJ,EAAcK,IAAMD,EAAME,wBAAwBz+D,KAAOu8D,OAAOmC,QAChEP,EAAcQ,IAAMJ,EAAME,wBAAwB92F,IAAM40F,OAAOqC,QAEnE,CAEA,IAAMC,EAASV,EAAcl5E,EACvB65E,EAASX,EAAc1gB,EACvBshB,EAAeZ,EAAcP,QAC7BoB,EAAeb,EAAcN,QAC7BoB,EAAiBd,EAAcrB,UAC/BoC,EAAM,CACVj6E,EAAG45E,GAAUtuF,EAAEqtF,QAAUmB,GACzBthB,EAAGqhB,GAAUvuF,EAAEstF,QAAUmB,IAAiBlC,EAAYmC,IAExDzhB,EAASv4D,EAAIi6E,EAAIj6E,EACjBu4D,EAASC,EAAIyhB,EAAIzhB,EACjBD,EAASjnE,YAAcA,EACvBinE,EAASE,SAAWA,EACpBF,EAAS4gB,cAAgBA,EAGzBvrC,EAAKjwD,MAAMq/E,gBAAgBvE,EAAUF,GAEvB0gB,GAAerrC,EAAKssC,WAAW3hB,EAAUjtE,EAAGyrF,IAGpDzrF,EAAE6uF,gBACJ7uF,EAAE6uF,gBAlDN,CAoDF,EAACvsC,EAEDorC,UAAY,WACV,IAAIzB,EAAS3pC,EAAKjwD,MAAM+6E,UAAU6e,OAElC3pC,EAAKjwD,MAAMu/E,aAEXqa,EAAOG,UAAU0C,OAAO,eACxB/C,SAASlH,KAAKuH,UAAU0C,OAAO,eAC/BxsC,EAAKysC,UAAY,CAAC,EAElB,IAAMntF,EAAS0gD,EAAKirC,aAAejrC,EAAKupC,kBACxCjqF,EAAOotF,oBAAoB,YAAa1sC,EAAKmrC,QAC7C7rF,EAAOotF,oBAAoB,UAAW1sC,EAAKorC,UAC7C,EA/PEprC,EAAK4wB,0BAA4BA,GAAyB5wB,GAC1D6wB,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAuX,EAAA/X,IAAAS,EAAAA,EAAAA,GAAAsX,EAAA,EAAAhyF,IAAA,iBAAAlH,MAED,SAAeigF,GACbxrB,KAAK3uC,KAAO2B,GAAYw4D,EAAUn6D,KACpC,GAAC,CAAA5e,IAAA,wBAAAlH,MAED,SAAsBigF,EAAWC,GAC/B,IAAIC,EAAY1rB,KAAK90D,MACjBygF,EAAY3rB,KAAKgjB,MAEjB4I,EAAS5rB,KAAK+rB,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IAAIK,EAAM,GACV,IAAK,IAAIv/E,KAAKk/E,EACGA,EAAUl/E,IAAMo/E,EAAUp/E,IAG/B,YAALA,GAAwB,YAALA,GACpBu/E,EAAIr8D,KAAKljB,GAGVu/E,EAAIl3E,SACPi3E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAn5E,IAAA,qBAAAlH,MAED,SAAmBu8F,EAAYC,GAC7B,IAAIjiB,EAAW9lB,KAAK90D,MAAM46E,SACtB2gB,EAAgBzmC,KAAK90D,MAAM+6E,UAE/B,GADA6J,IAAoB,EAChB2W,GAAiBA,EAAcxvF,KACjC6uE,EAASmgB,SAAWjmC,KAAK3uC,KAAK7c,MAAMsxE,EAAS7uE,IACzC6uE,EAASmgB,WACPngB,EAASmgB,SAASrzF,OAAS6zF,EAAcR,SAASrzF,OAASkzE,EAASmgB,SAAShxE,QAAUwxE,EAAcR,SAAShxE,SAAQ,CACxH,IAAM6vE,EAAS2B,EAAc3B,OACvBK,EAAkBsB,EAActB,gBAChC0B,EAAQ7mC,KAAKwlC,sBAAsBV,GAAQ,GACjD,GAAI+B,EAAO,CACT,IAAMC,EAAMD,EAAME,wBAAwBz+D,KAAOu8D,OAAOmC,QAClDC,EAAMJ,EAAME,wBAAwB92F,IAAM40F,OAAOqC,QACjDc,EAASvB,EAAcK,IACvBmB,EAASxB,EAAcQ,IACvB7B,EAAYD,EAAgBC,UAClCqB,EAAcK,IAAMA,EACpBL,EAAcQ,IAAMA,EACpBR,EAAcR,SAAW9nC,GAAM2nB,EAASmgB,UACxCQ,EAAc1gB,EAAI8gB,EAAMf,UACxBW,EAAcl5E,EAAIs5E,EAAMhB,WACxBY,EAAcN,SAAYc,EAAMgB,EAChCxB,EAAcP,SAAYY,EAAMkB,EAC5B7C,GAAmBP,SAASlH,OAC9B+I,EAAcrB,UAAYA,GAE5BplC,KAAKsmC,OAAOtmC,KAAK90D,MAAM86E,UAAU,EACnC,CACF,CAGN,GAAC,CAAAvzE,IAAA,iBAAAlH,MAED,SAAgBu5F,EAAQoD,GAA8B,IAArBC,EAAWzzF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GAC1C,GAAe,MAAXwzF,EACF,OAAO,KACJloC,KAAK4nC,YACR5nC,KAAK4nC,UAAY,CAAC,GACpB,IAAI77E,EAAKi0C,KAAK4nC,UAAUM,GACxB,OAAIn8E,GAAM64E,SAASwD,SAASr8E,KAAQo8E,IAEpCp8E,EAAK+4E,EAAOuD,cAAc,qCAAqCH,EAAQ,MACvEloC,KAAK4nC,UAAUM,GAAWn8E,GAFjBA,CAIX,GAAC,CAAAtZ,IAAA,sBAAAlH,MAED,SAAqBu5F,GAA6B,IAArBqD,EAAWzzF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACjCsrD,KAAK4nC,YACR5nC,KAAK4nC,UAAY,CAAC,GACpB,IAAI77E,EAAKi0C,KAAK4nC,UAAqB,UACnC,GAAI77E,GAAM64E,SAASwD,SAASr8E,KAAQo8E,EAClC,OAAOp8E,EACT,IAAMu8E,EAAMxD,EAAOyD,uBAAuB,gBAG1C,OAFAx8E,EAAKu8E,EAAI3zF,OAAS2zF,EAAI,GAAK,KAC3BtoC,KAAK4nC,UAAqB,UAAI77E,EACvBA,CACT,GAAC,CAAAtZ,IAAA,wBAAAlH,MAED,SAAuBu5F,GAA6B,IAArBqD,EAAWzzF,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,IAAAA,UAAA,GACnCsrD,KAAK4nC,YACR5nC,KAAK4nC,UAAY,CAAC,GACpB,IAAI77E,EAAKi0C,KAAK4nC,UAAuB,YACrC,GAAI77E,GAAM64E,SAASwD,SAASr8E,KAAQo8E,EAClC,OAAOp8E,EACT,IAAMu8E,EAAMxD,EAAOyD,uBAAuB,kBAG1C,OAFAx8E,EAAKu8E,EAAI3zF,OAAS2zF,EAAI,GAAK,KAC3BtoC,KAAK4nC,UAAuB,YAAI77E,EACzBA,CACT,GAAC,CAAAtZ,IAAA,gBAAAlH,MAED,SAAcypB,GACZ,IAAMwzE,EAAY3D,OAAOc,iBAAiB3wE,GAAM,cAChD,OAAsB,WAAdwzE,GAAwC,SAAdA,IAA0BxzE,EAAKyzE,aAAezzE,EAAKgxE,YACvF,GAAC,CAAAvzF,IAAA,mBAAAlH,MAED,SAAiBypB,GACf,OAAY,MAARA,EACK,KAELA,IAAS4vE,SAASlH,MAAQ19B,KAAK0oC,cAAc1zE,GACxCA,EAEAgrC,KAAKqlC,iBAAiBrwE,EAAKo2D,WAEtC,GAAC,CAAA34E,IAAA,aAAAlH,MA4ID,SAAYo9F,EAAU9vF,EAAG+vF,GAAW,IAU9BC,EAAUC,EAASC,EAASC,EAVEtwB,EAAA,KAE5ButB,EAAW0C,EAAS1C,SACpBpnF,EAAc8pF,EAAS9pF,YAEzBoqF,EAAW,KACTnE,EAAS9kC,KAAK90D,MAAM+6E,UAAU6e,OAC9BoE,EAASP,EAAS1xF,GAClB2vF,EAAS5mC,KAAKulC,oBAAoBT,GAClC+B,EAAQ7mC,KAAKwlC,sBAAsBV,GAEzC,GAAI8B,GAAUC,EAAO,CAGnB,GAFAgC,EAAWjC,EAAOG,0BAClB+B,EAAUjC,EAAME,yBACH94F,MACX,OAEF,IAAIk7F,EAAW,CAACC,IAAK,EAAGC,IAAK,GACzBR,EAAS54F,IAAM64F,EAAQ74F,IACzBk5F,EAASE,KAAO,EACTR,EAAS9yE,OAAS+yE,EAAQ/yE,SACjCozE,EAASE,IAAM,GACbR,EAASvgE,KAAOwgE,EAAQxgE,KAC1B6gE,EAASC,IAAM,EACRP,EAASvgE,KAAOwgE,EAAQxgE,OAC/B6gE,EAASC,KAAO,GAGlB,IAIIE,EAJEC,EAAW,CACfh8E,GAFFy7E,EAAWlE,EAAOiC,yBAEJz+D,MAAQ0gE,EAASzgE,MAAQygE,EAAS1gE,MAAQ,EACtDy9C,EAAGojB,EAASE,KAAO,EAAIR,EAAS9yE,OAAS8yE,EAAS54F,KAGpD,GAAI4I,EAAE2wF,uBACJF,EAAazwF,EAAE2wF,2BACV,CACL,IAAMC,EAAY7E,SAAS8E,iBAAiBH,EAASh8E,EAAGg8E,EAASxjB,EAAE,GAEnE,KADAujB,EAAaG,EAAYA,EAAU1E,QAAQ,4BAA8B,OACtD0E,GAAaA,EAAUxE,UAAUmD,SAAS,2BAA4B,KAAAuB,EAEjFC,EAAqBH,SAAqB,QAAZE,EAATF,EAAWI,kBAAU,IAAAF,OAAA,EAArBA,EAAuBE,WAC9CD,GAAsBA,EAAmB3E,UAAUmD,SAAS,6BAC9DkB,EAAaM,EAEjB,CACF,CACA,GAAKN,EAEE,CACL,IAAMl1E,EAAUk1E,EAAWrE,UAAUmD,SAAS,mBACxC0B,EAAYR,EAAWS,aAAa,WACpCC,EAAQV,EACVW,GAAW,EACXC,GAAY,EAChB,GAAIF,EAAO,CAET,IAAMG,GADNpB,EAAUiB,EAAMjD,yBACUhxE,OAASgzE,EAAQ94F,IACrCm6F,EAAQpqC,KAAK3uC,KAAK7c,MAAMs1F,GAC9B,IAAKM,EACH,MAAM,IAAIpyE,MAAM,mGAElB,IAAIqyE,EAAU,KACZC,EAAQ,KACRC,EAAQ,KACRC,EAAQ,KAEV,GAAoB,GAAhBrB,EAASE,IACXkB,EAAQtE,GACRqE,EAAQzD,KAENwD,EAAUC,EAAMvD,8BAElB,GAAI3yE,EAAS,CACX,GAAI+0E,EAASE,IAAM,EAAG,CAEpB,IAAMoB,EAAanB,EAAWf,uBAAuB,iBAC/CmC,EAASD,EAAW91F,OAAS81F,EAAW,GAAK,KACnD,GAAIC,EAAQ,CACV,IAAMC,EAAWD,EAAO3D,wBAClB6D,EAAaD,EAAS50E,OAAS40E,EAAS16F,IACxB44F,EAAS9yE,OAAS40E,EAAS16F,IAAkB,EAAX26F,EAAa,GAClDR,EAAMn6F,IAAM04F,EAAS1C,SAASh2F,MAC/Cs6F,EAAQH,EACRC,EAAUM,EACVL,EAAQI,EACRR,GAAY,EAEhB,CACF,MAAWf,EAASE,IAAM,GACpBe,EAAMh4E,KAAO6zE,EAAS7zE,KAEC22E,EAAQhzE,OAAS8yE,EAAS54F,KAAQ,GACrCm6F,EAAMn6F,IAAM04F,EAAS1C,SAASh2F,MAClDs6F,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,EACRC,GAAW,IAMMd,EAASE,IAAM,EAC9BN,EAAQhzE,OAAS8yE,EAAS54F,IAAQk6F,EAAU,EAC5CtB,EAAS9yE,OAASgzE,EAAQ94F,IAAQk6F,EAAU,KAE3CD,GAAcD,IACjBM,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,GAGRQ,EAAQJ,EAIhB,MAEuBjB,EAASE,IAAM,EAC9BN,EAAQhzE,OAAS8yE,EAAS54F,IAAOk6F,EAAU,EAC3CtB,EAAS9yE,OAASgzE,EAAQ94F,IAAOk6F,EAAU,KAE/CI,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,GAKd,IAAMa,EAAaN,GAASA,EAAMtzF,IAAMiyF,EACxC,GAAImB,EAAS,CACX,IAAMS,EAAiBjC,EAASvgE,KAAO0gE,EAAS1gE,KAG1CyiE,GAFgBV,EAAQ/hE,KAAO0gE,EAAS1gE,KAE9B5f,KAAKrL,IAAI,EAAGqL,KAAKsiF,MAAMF,EAAiBjsF,KAGpDosF,EAAa,GACbC,EAAW,GACf,GAAIL,OAEG,CACL,GAAIz2E,IACE61E,EACFgB,EAAWz7E,KAAK,CAACqzB,GAA4B0nD,EAAOA,EAAMn4E,IAAI,IACrD83E,GACTe,EAAWz7E,KAAK,CAACqzB,GAA6B0nD,EAAOA,EAAMn4E,IAAI,IAGlCo4E,GAAO,CAEpC,IAAMW,EAAwB,GAAbX,EAAMp4E,IAEjBg5E,EAAyB,cAAdZ,EAAMh0F,MAAyC,cAAjByvF,EAASzvF,KACpD60F,EAAab,EAAMr0E,MAAQ6pC,KAAK3uC,KAAK7c,MAAMg2F,EAAMr0E,MAAMzC,OACvD43E,EAAad,EAAMv9E,MAAQ+yC,KAAK3uC,KAAK7c,MAAMg2F,EAAMv9E,MAAMyG,OACvDuyE,EAASvyE,QAAU23E,IACrBA,EAAa,MACXpF,EAASvyE,QAAU43E,IACrBA,EAAa,MACf,IAAMC,EAAWF,GAAcrrC,KAAK3uC,KAAK7c,MAAM62F,GACzCG,EAAWF,GAActrC,KAAK3uC,KAAK7c,MAAM82F,GAE3CnC,EAASE,IAAM,EACb8B,EACFD,EAAS17E,KAAK,CAACqzB,GAA4B2nD,EAAOA,EAAMp4E,IAAI,IACnDg5E,GAAYI,EACrBN,EAAS17E,KAAK,CAACqzB,GAA6B2oD,EAAUA,EAASp5E,IAAI,IAEnE84E,EAAS17E,KAAK,CAACqzB,GAA2B2nD,EAAOA,EAAMp4E,MAEhD+2E,EAASE,IAAM,IACpB8B,EACFD,EAAS17E,KAAK,CAACqzB,GAA6B2nD,EAAOA,EAAMp4E,IAAI,IACpDg5E,GAAYG,EACrBL,EAAS17E,KAAK,CAACqzB,GAA4B0oD,EAAUA,EAASn5E,IAAI,IAElE84E,EAAS17E,KAAK,CAACqzB,GAA4B2nD,EAAOA,EAAMp4E,MAG9D,CAEG63E,GAAaC,IACZf,EAASE,IAAM,EACjB4B,EAAWz7E,KAAK,CAACqzB,GAA4B0nD,EAAOA,EAAMn4E,MACjD+2E,EAASE,IAAM,GACxB4B,EAAWz7E,KAAK,CAACqzB,GAA2B0nD,EAAOA,EAAMn4E,MAG/D,CAGA,IAAMq5E,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAG,GACVE,EAAa3F,EAASvyE,OAASglD,EAAKrnD,KAAK7c,MAAMyxF,EAASvyE,QAAU,KAClEm4E,EAAWF,EAAKj4E,OAASglD,EAAKrnD,KAAK7c,MAAMm3F,EAAKj4E,QAAU,KAC9D,MAAO,GAAPpF,QAAAhP,EAAAA,EAAAA,GAAWosF,GAAE,CAAEE,EAAYC,GAC7B,EACAZ,EAAaA,EAAW5+F,IAAIo/F,GAC5BP,EAAWA,EAAS7+F,IAAIo/F,GAwCxB,IAAIK,EAAW,KACXC,GAtCJd,EAAaA,EAAWluF,QAAO,SAAA2uF,GAC7B,IAAM37F,EAAY27F,EAAG,GACfM,EAAMN,EAAG,GACf,IAAK37F,GAAa8yC,IAA8B9yC,GAAa8yC,KAA4C,MAAdmpD,EAAI/2E,OAC7F,OAAO,EACT,GAAI+2E,EAAIn4E,YAAc9jB,GAAa8yC,IAA8B9yC,GAAa8yC,IAC5E,OAAO,EAET,IAAIopD,EAAYD,EAAI/0F,IAAMgvF,EAAShvF,GACnC,IAAKg1F,EAEH,IADA,IAAIzhC,EAAMwhC,EACHxhC,EAAIv1C,QAET,IADAu1C,EAAMkO,EAAKrnD,KAAK7c,MAAMg2D,EAAIv1C,SAClBhe,IAAMgvF,EAAShvF,GAAI,CACzBg1F,GAAW,EACX,KACF,CAGJ,OAAQA,CACV,IAAG5/F,KAAI,SAAAq/F,GACL,IAAM37F,EAAY27F,EAAG,GACnBC,EAAOD,EAAG,GAIRQ,GAHKR,EAAG,GACIA,EAAG,GACLA,EAAG,GACA,MAQjB,OANEQ,EADEn8F,GAAa8yC,IAA8B9yC,GAAa8yC,GAC7C8oD,EAEAjzB,EAAKrnD,KAAK7c,MAAMm3F,EAAK12E,UACG,MAArBi3E,EAAWj3E,SAC3Bi3E,EAAa,MACfR,EAAG,GAAKQ,EACDR,CACT,KAG+B3uF,QAAO,SAAA2uF,GAAE,OAAIhzB,EAAKyzB,QAAQlG,EAAUyF,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAI9C,EAAU,IACzD,GAAxBmD,EAAcp3F,QAAeu2F,EAASv2F,OAAS,IAC5Eo3F,EAAgBb,EAASnuF,QAAO,SAAA2uF,GAAE,OAAIhzB,EAAKyzB,QAAQlG,EAAUyF,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAI9C,EAAU,KAE5G,IAAMwD,EAAOL,EAAc1/F,KAAI,SAAAq/F,GAAE,OAAIA,EAAG,EAAE,IACpCW,EAASpG,EAAS7zE,IAClBk6E,EAAUF,EAAK99E,OAAO+9E,GACxBE,GAAiB,MACY,GAA7BD,EAAQhwF,QAAQyuF,GAClBwB,GAAiBxB,EACVA,EAAUriF,KAAKrL,IAAG2T,MAARtI,MAAIpJ,EAAAA,EAAAA,GAAQgtF,IAC7BC,GAAiB7jF,KAAKrL,IAAG2T,MAARtI,MAAIpJ,EAAAA,EAAAA,GAAQgtF,IACtBvB,EAAUriF,KAAKtL,IAAG4T,MAARtI,MAAIpJ,EAAAA,EAAAA,GAAQgtF,MAC7BC,GAAiB7jF,KAAKtL,IAAG4T,MAARtI,MAAIpJ,EAAAA,EAAAA,GAAQgtF,KAC/BR,EAAWC,EAAc1+E,MAAK,SAAAq+E,GAAE,OAAIA,EAAG,IAAMa,EAAc,IACtD1B,GAAciB,IAAYC,EAAcp3F,SAC3Cm3F,EAAWC,EAAc,IAC3B9C,EAAW6C,CACb,CACF,CACF,MArNE98E,GAAON,IAAI,sBAsNf,CAEA,QAAIu6E,IACFjpC,KAAKwsC,KAAKvG,EAAUgD,EAAS,GAAIA,EAAS,GAAIA,EAAS,KAUhD,EAIX,GAAC,CAAAx2F,IAAA,UAAAlH,MAED,SAASkhG,EAAQd,EAAM57F,EAAW67F,EAAYC,EAAUK,EAAYtD,GAClE,IAAK6D,IAAWd,EACd,OAAO,EACT,GAAIc,EAAOx1F,KAAO00F,EAAK10F,GACrB,OAAO,EAET,IAAA4rF,EAAyF7iC,KAAK90D,MAAMQ,OAAOS,SAAnGu0D,EAAUmiC,EAAVniC,WAAYqiC,EAAeF,EAAfE,gBAAiBpf,EAAUkf,EAAVlf,WAAYD,EAAgBmf,EAAhBnf,iBAAkBof,EAAiBD,EAAjBC,kBAE7D4J,GADSR,EAAaA,EAAW95E,IAAM,EAAIu5E,EAAKv5E,MACxBq6E,EAAOh3E,OAAS,GACxCk3E,EAAgB58F,GAAa8yC,IAA8B9yC,GAAa8yC,GACxE+pD,EAAS78F,GAAa8yC,IAA+B9yC,GAAa8yC,GAClEgqD,EAASF,GAA6B,GAAZhB,EAAKv5E,KAAYw6E,GAAsB,GAAZjB,EAAKv5E,IAC1D06E,EAAiBL,EAAOx3E,QAAU02E,EAAK12E,OACvC83E,EAAiBH,GAAUE,EAE3BE,EAAyC,cAAfP,EAAOj2F,OAAyBq2F,GAEtC,cAArBJ,EAAOv3E,YAA2C,cAAby2E,EAAKn1F,MAA2C,cAAnBm1F,EAAKz2E,YAExD,cAAfu3E,EAAOj2F,MAAqC,cAAbm1F,EAAKn1F,MAAwBm2F,GAC7C,cAAfF,EAAOj2F,MAAqC,gBAAbm1F,EAAKn1F,OAEnCusF,GAAmB0J,EAAO/4E,QAAUi4E,EAAKj4E,OACzCu5E,EAAiBtB,EAAK75E,UAAY26E,EAAO36E,UAAYo6E,GAAcA,EAAWp6E,SAEpF,GAAI6xD,GAAc+oB,EAAc/oB,EAC9B,OAAO,EAET,GAAIopB,KAAoBrsC,GAAcssC,GAA2BC,GAC/D,OAAO,EAET,GAAmB,cAAfR,EAAOj2F,MAAwBi2F,EAAO/4E,QAAUi4E,EAAKj4E,OAAQ,CAC/D,IAAMw5E,IAAiBtB,GAAmC,GAAtBA,EAAW91E,QACzCq3E,EAAuBtB,EAAWA,EAASx2E,uBAAyB,EAAI,EAC9E,GAAIquD,GAAoBypB,EAAuBzpB,EAC7C,OAAO,EACT,GAAIwpB,IAAmBpK,EACrB,OAAO,CACX,CAEA,GAAmB,cAAf2J,EAAOj2F,OACTi2F,EAAOr3E,eAAiBu2E,EAAKv2E,eACb,gBAAbu2E,EAAKn1F,MAA0BzG,GAAa8yC,IAG/C,OAAO,EAGT,IAAIjyC,GAAM,EAIV,OAHIg4F,IACFh4F,EAAMg4F,EAAU6D,EAAOz3E,KAAKjK,OAAQ4gF,EAAK32E,KAAKjK,OAAQhb,EAAWm8F,EAAaA,EAAWl3E,KAAKjK,OAAS,OAElGna,CACT,GAAC,CAAA6B,IAAA,OAAAlH,MAED,SAAMkhG,EAAQd,EAAM57F,EAAWm8F,GACxBlsC,KAAKglC,+BACRlV,IAAoB,GAGtB9vB,KAAK90D,MAAM+hF,QAAQvG,SAAS+lB,EAAOr4F,KAAMu3F,EAAKv3F,KAAMrE,EACtD,GAAC,CAAA0C,IAAA,SAAAlH,MAED,WACE,OAAOqE,EAAAA,cAACu0F,GAAOrzF,EAAAA,GAAAA,GAAA,GACTkvD,KAAK90D,MAAK,CACdolF,YAAatwB,KAAKswB,cAEtB,IAAC,CAxmBqD,CACxB/C,EAAAA,WAASiX,EAChChX,UAAY,CACjBn8D,KAAMo8D,KAAAA,IAAcC,WACpBT,QAASQ,KAAAA,OAAiBC,YAE3B8W,CAAA,CAunBD4I,CAAwBjJ,EAASG,IAGnC,OAFAC,EAA2B1W,YAAc,6BAElC0W,CACR,CwBjlBD,CAAiCJ,I,weCvDjC,IAAOhmC,GAAS7zD,GAAT6zD,MACP6yB,GAA2D1mF,GAAMyjF,YAA1DtvD,GAAcuyD,GAAdvyD,eAAgByC,GAAa8vD,GAAb9vD,cAAe2nC,GAAiBmoB,GAAjBnoB,kBACtCsrB,GAAkD7pF,GAAM2oF,UAAjD1zC,GAAkB40C,GAAlB50C,mBAAoBrb,GAAmBiwD,GAAnBjwD,oBAINmpE,GAAU,SAAA3gB,GAkB7B,SAAA2gB,EAAYniG,GAAO,IAAAiwD,EAIU,OAJVwxB,EAAAA,EAAAA,GAAA,KAAA0gB,GACjBlyC,EAAAyxB,GAAA,KAAAygB,EAAA,CAAMniG,IACN8gF,GAAiB7wB,GAEjBA,EAAKgxB,eAAejhF,GAAOiwD,CAC7B,CAAC,OAAA+xB,EAAAA,EAAAA,GAAAmgB,EAAA3gB,IAAAS,EAAAA,EAAAA,GAAAkgB,EAAA,EAAA56F,IAAA,iBAAAlH,MAED,SAAeigF,GACb,IAAME,EAAY1rB,KAAK90D,MAGjBopF,GAAmBt0B,KAAKxrD,OAFT,CAAC,SAAU,QAAS,WAAY,YAAa,WAAY,YAAa,eAEvCnI,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,EAClH24F,GAAkBttC,KAAK1mC,MAFT,CAAC,SAAU,QAAS,WAAY,YAAa,WAAY,QAAS,cAAe,YAAa,eAEjEjtB,KAAI,SAAAC,GAAC,OAAKk/E,EAAUl/E,KAAOo/E,EAAUp/E,EAAE,IAAGyQ,QAAO,SAAAikB,GAAE,OAAIA,CAAE,IAAErsB,OAAS,EAEjH2/E,IACFt0B,KAAKxrD,MAAQwrD,KAAKu0B,SAAS/I,IAEzB8hB,IACFttC,KAAK1mC,KAAO0mC,KAAKmxB,QAAQ3F,GAE7B,GAAC,CAAA/4E,IAAA,WAAAlH,MAED,SAAAwC,GAAwF,IAA9ErC,EAAMqC,EAANrC,OAAQwV,EAAKnT,EAALmT,MAAOsc,EAASzvB,EAATyvB,UAAW+G,EAAQx2B,EAARw2B,SAAUjI,EAAWvuB,EAAXuuB,YAAanE,EAASpqB,EAAToqB,UAAWkU,EAAet+B,EAAfs+B,gBAC7D+gB,EAA4B1hD,EAAOS,SAAnCihD,yBAEDqmC,EAAkBvyD,GAAc5E,EAAa5wB,GAC7C+3B,EAAoBnH,EAAcmC,GAAe/yB,EAAQ4wB,GAAe,KACxEo3D,EAAep3D,EAAcmH,aAAiB,EAAjBA,EAAmBo8B,UAAYn0D,EAAOuV,OAEnEssF,EAAiBvtC,KAAKwtC,aAAa9hG,EAAQgoF,EAAcxyE,EAAOob,EAAam3D,EAAiBlvD,EAAU6oB,EAA0Bj1B,EAAWkU,EAAiB7O,GAEpK,OADcwiC,KAAK0xB,aAAa+B,EAAiB/nF,EAAQ6hG,EAAgB9Z,EAE3E,GAAC,CAAAhhF,IAAA,UAAAlH,MAED,SAAAiG,GAA6G,IAAAi8F,EAApG/hG,EAAM8F,EAAN9F,OAAQwV,EAAK1P,EAAL0P,MAA4B3V,GAAZiG,EAATgsB,UAAmBhsB,EAAR+yB,SAAe/yB,EAALjG,OAAoBmiG,EAAiBl8F,EAA9B3C,YAAgCspB,EAAS3mB,EAAT2mB,UAAWmE,EAAW9qB,EAAX8qB,YAC7FzuB,EAAkDnC,EAAOS,SAAlD4C,EAAgBlB,EAAhBkB,iBAAkBswC,EAAqBxxC,EAArBwxC,sBACnBhqC,EAAc9J,EACd8nF,IAAoB9nF,EAEpBgiD,EAAkBrsC,EAAQud,GAAe/yB,EAAQwV,GAAS,CAAC,EAC3DysF,EAAuBpgD,SAAwB,QAATkgD,EAAflgD,EAAiBpnC,eAAO,IAAAsnF,OAAA,EAAxBA,EAA0BvsF,MACjD0sF,GAA4BD,aAAoB,EAApBA,EAAsB1xC,cAAe,CAAC,EAClEptD,EAAcwkF,EAAkB,KACjCl7D,GAAau1E,GAAqBE,EAA0Bx2C,kBAAoBroD,EAC/EukF,EAAYD,EAAkB50D,GAAe/yB,EAAQ2J,GAAe,KACpEK,EAAe49E,GAAa,CAAC,EAE7B3B,EAAe9oB,GAAkBxzD,EAAa3J,GAC9CkmF,EAAe/oB,GAAkBxzD,EAAa3J,GAAQ,GACtD8J,EAAgBwqD,KAAKuzB,cAAcD,EAAWj+E,EAAa3J,GAC3D8nF,EAAcj0C,GAAmBlqC,EAAa3J,GAChDiK,EAAoB69E,EAAcA,EAAYjnF,KAAK8yC,GAAyB,KAKhF,OAJI1pC,GAAqBH,GAAiB8mB,KACxC3mB,EAAoB,MAGf,CACL9G,YAAAA,EACAwG,YAAAA,EAAas8E,aAAAA,EAAcC,aAAAA,EAAcp8E,cAAAA,EAAeE,aAAAA,EAAcD,iBAJ/CC,EAAagqC,QAAUhqC,EAAa/F,QAI6BgG,kBAAAA,EAE5F,GAAC,CAAAlD,IAAA,eAAAlH,MAED,SAAaG,EAAQuV,EAAQ8zE,EAAkBz4D,EAAam3D,EAAiBlvD,EAAU6oB,EAA0Bj1B,EAAWkU,EAAiB7O,GAC3Ivc,EAASk9C,GAAMl9C,GACf,IAKI+zE,EALEj1D,EAAiBr0B,EAAOS,SAAS4zB,eACjCwtB,EAAkB9uB,GAAe/yB,EAAQqpF,GAEzC14D,EAAS6H,GAAoBx4B,EAAQqpF,EAAkBxwD,EAAU,SAyCvE,OAxCqB74B,EAAOya,QAAQkW,GAGlC24D,EADE78D,EACakU,aAAe,EAAfA,EAAiB71B,KAGvB+2C,EACMA,EAAgB/2C,KAGhBgnB,EAGjB,SAAS03D,EAAQpkE,EAAM1c,GACrB,IAAK,IAAIy5F,KAAiB/8E,EAAM,CAC9B,IAAI+uC,EAAY/uC,EAAK+8E,GAAehuC,UAChCs1B,GAAW/gF,GAAc,IAAIka,OAAOu/E,GACpCC,EAAoB3Y,EAAQ5oF,KAAKwzB,GACjC0tB,EAAmBhvB,GAAe/yB,EAAQoiG,GAC9C,GAAKrgD,EAEE,GAA6B,WAAzBA,EAAiBj3C,MAA8C,UAAzBi3C,EAAiBj3C,KAC7B,GAA/B0+E,EAAQr1B,EAAWs1B,WACdrkE,EAAK+8E,OACT,CAEL,IAAIvY,IAAWN,GAAgBvnC,EAAiBj3C,MAAQw+E,IAClD78D,GAAmB21E,GAAqB/Y,GAC1CjrD,EAAKsjB,GAA4B1hD,EAAOS,SAASihD,yBACjDtjB,IACFwrD,EAASA,GAAUxrD,EAAGirD,EAAkBxnC,EAAiBugD,EAAmBrgD,EAAkBlpB,IAC3F+wD,UACIxkE,EAAK+8E,EAChB,aAbS/8E,EAAK+8E,EAchB,CACA,OAAO91F,KAAK+Y,GAAMnc,MACpB,CAEAugF,CAAQj0E,EAAQwyE,GAAmB,IAE5BxyE,CACT,GAAC,CAAAxO,IAAA,eAAAlH,MAED,SAAakoF,EAAiB/nF,EAAQuV,GAAsC,IAAAy3D,EAAA,KAA9BtkE,EAAIM,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KAAMm/E,EAAQn/E,UAAAC,OAAA,QAAA/F,IAAA8F,UAAA,GAAAA,UAAA,GAAG,KACpE,IAAKuM,EACH,OAAO,KACT,IAAA4uC,EAAgDnkD,EAAOS,SAAhD4zB,EAAc8vB,EAAd9vB,eAAgBsf,EAAqBwQ,EAArBxQ,sBACjBvqC,EAASV,SAAAA,EAAMO,OAASP,EAAK7H,KAAKwzB,GAAkBA,EAAiB,GAE3E,OAAOhoB,KAAKkJ,GAAQ5U,KAAI,SAAAkV,GACtB,IAAMwyE,EAAgB,GAAHzlE,QAAAhP,EAAAA,EAAAA,GAAQlL,QAAAA,EAAQ,IAAK,CAAAmN,IAClCL,EAAQD,EAAOM,GACfjS,EAAQopE,EAAK6a,cAAcryE,EAAO6yE,EAAeroF,GAEnDsoF,EADgBz0C,GAAmBw0C,EAAeroF,GAC1Ba,KAAK8yC,IAC7B20C,GAAa1kF,GAASmkF,KACxBO,EAAY,MACd,IAAM3/E,EAAW6M,EAAMw+B,OACjB/vC,EAAUuR,EAAMvR,QAEtB,IAAIuR,EAAM6sF,eAGV,MAAkB,WAAd7sF,EAAM1K,MAAmC,UAAd0K,EAAM1K,KAC5B,CACL/D,IAAK8O,EACLnN,KAAMU,EAAOyM,EACbjS,MAAAA,EACA0kF,UAAAA,EACA3/E,SAAAA,EACA1E,QAAAA,EACA6E,MAAOkkE,EAAKgZ,aAAa+B,EAAiB/nF,EAAQwV,EAAM2+C,UAAWk0B,EAAe,CAChFzkF,MAAAA,EACAK,QAAAA,KAIG,CACL8C,IAAK8O,EACLnN,KAAMU,EAAOyM,EACbjS,MAAAA,EACA0kF,UAAAA,EACA3/E,SAAAA,EACA1E,QAAAA,EACA2E,WAAYu/E,aAAQ,EAARA,EAAUvkF,MACtBD,MAAOwkF,EAGb,IAAG92E,QAAO,SAAAw4B,GAAC,QAAMA,CAAC,GACpB,GAAC,CAAA9iC,IAAA,gBAAAlH,MAED,SAAcqoF,EAAWryE,EAAU7V,GACjC,IAAK6V,EAAU,OAAO,KACtB,IAAI6xE,EAAkB1nF,EAAOS,SAASinF,gBAClC9mD,EAAapL,GAAc3f,EAAU7V,GACrC4D,GAAQskF,aAAS,EAATA,EAAWtkF,QAASqnD,KAAKrqB,GAErC,OADQq+C,GAAer7E,EAAO8jF,EAEhC,GAAC,CAAA3gF,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAA+DrtB,KAAK90D,MAA7DQ,EAAM2hF,EAAN3hF,OAAQF,EAAW6hF,EAAX7hF,YAAasK,EAAQu3E,EAARv3E,SAAUrK,EAAQ4hF,EAAR5hF,SAAUwL,EAAEo2E,EAAFp2E,GAAIqqB,EAAO+rD,EAAP/rD,QAC7C7c,EAAe/Y,EAAOS,SAAtBsY,YACDqtE,E,uWAAW5/E,CAAA,CACfqD,cAAc,EACd7J,OAAAA,EACAF,YAAAA,EACA8J,SAAUQ,EACVrK,SAAAA,EACA+I,MAAOwrD,KAAKxrD,MACZyC,GAAAA,EACAqqB,QAAAA,GACG0+B,KAAK1mC,MAEV,OAAO7U,EAAYqtE,EAAapmF,EAAOoc,IACzC,IAAC,CAzM4B,CAASylE,EAAAA,WAAnB8f,GACZ7f,UAAY,CACjBv2E,GAAIw2E,KAAAA,OACJnsD,QAASmsD,KAAAA,OACT33E,SAAU23E,KAAAA,KAAeC,WACzBhiF,OAAQ+hF,KAAAA,OAAiBC,WACzBxsE,MAAOusE,KAAAA,IACPttD,SAAUstD,KAAAA,OACVjwD,UAAWiwD,KAAAA,OACXliF,MAAOkiF,KAAAA,OACPlpD,SAAUkpD,KAAAA,OACVjiF,YAAaiiF,KAAAA,OACbhiF,SAAUgiF,KAAAA,KACVnxD,YAAamxD,KAAAA,OACbphD,gBAAiBohD,KAAAA,OACjBt1D,UAAWs1D,KAAAA,MC1Bf,kBAAgBviF,GACd,IAAOK,EAAoFL,EAApFK,MAAOuK,EAA6E5K,EAA7E4K,SAAkBiK,GAA2D7U,EAAnEQ,OAAmER,EAA3D6U,UAAUC,EAAiD9U,EAAjD8U,QAASvU,EAAwCP,EAAxCO,SAAkBiZ,GAAsBxZ,EAA9BioF,SAA8BjoF,EAApBM,aAAAA,OAAW,IAAAkZ,EAAG,CAAC,EAACA,EACjFspF,EAAsBxiG,EAAYyiG,UAAY,CAAC,EAC/CC,EAAqB1iG,EAAY2iG,SAAW,CAAC,EAG7CC,EAAgB,SAAAv1F,GAAC,OAAI/C,EAA2B,QAAlB+C,EAAE4B,OAAOlP,MAAgB,EAO7D,OAAOqE,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,QAAQjL,OAAO,EAAM4L,UAAW5L,EAAO2F,SAAUzF,EAAUuB,SAAUohG,GAAoBJ,IAAuB,IAAEjuF,EAC9HnQ,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,QAAQjL,OAAO,EAAO4L,SAAU5L,EAAO2F,SAAUzF,EAAUuB,SAAUohG,GAAoBF,IAAuB,IAAEluF,EAGjI,EClBD,YAAgB9U,GACd,IAAOK,EAA4EL,EAA5EK,MAAOuK,EAAqE5K,EAArE4K,SAAkBrK,GAAmDP,EAA3DQ,OAA2DR,EAAnDO,UAAUoD,EAAyC3D,EAAzC2D,YAAayL,EAA4BpP,EAA5BoP,UAAW9O,EAAiBN,EAAjBM,YAO5DkP,EAAYnP,GAAS,GAC3B,OACEqE,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CACE0F,KAAK,OACLjL,MAAOmP,EACP7L,YAAaA,EACbqC,SAAUzF,EACVuB,SAba,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MACP,KAARiP,IACFA,OAAM5L,GACRkH,EAAS0E,EACX,EASIF,UAAWA,GACP9O,GAGT,ECpBD,YAAgBN,GACd,IAAOK,EAAgGL,EAAhGK,MAAOuK,EAAyF5K,EAAzF4K,SAAkBrK,GAAuEP,EAA/EQ,OAA+ER,EAAvEO,UAAUoD,EAA6D3D,EAA7D2D,YAAayL,EAAgDpP,EAAhDoP,UAAoB7L,GAA4BvD,EAArC0P,QAAqC1P,EAA5BuD,WAAWjD,EAAiBN,EAAjBM,YAOhFkP,EAAYnP,GAAS,GAC3B,OACEqE,EAAAA,cAAA,YAAAkB,EAAAA,GAAAA,GAAA,CACEvF,MAAOmP,EACP7L,YAAaA,EACbqC,SAAUzF,EACVuB,SAZa,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MACP,KAARiP,IACFA,OAAM5L,GACRkH,EAAS0E,EACX,EAQIF,UAAWA,EACX3L,MAAO,CACLV,MAAOQ,EAAY,YAASG,IAE1BpD,GAGT,ECtBkBlB,GAAXD,OAER,kBAAgBa,GACd,IAAOK,EAAiEL,EAAjEK,MAAOuK,EAA0D5K,EAA1D4K,SAA+BrK,GAA2BP,EAAhDQ,OAAgDR,EAAxC+P,YAAwC/P,EAA3BO,UAAUD,EAAiBN,EAAjBM,YASvD,OACEoE,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,OAAQjL,MAAOA,GAAS,GAAK2F,SAAUzF,EAAUuB,SAR9C,SAAA6L,GACf,IAAItN,EAAQsN,EAAE4B,OAAOlP,MACR,IAATA,IACFA,OAAQqD,GACVkH,EAASvK,EACX,GAGuFC,GAExF,ECfD,YAAgBN,GACd,IAAOK,EAA4EL,EAA5EK,MAAOuK,EAAqE5K,EAArE4K,SAA2CrK,GAA0BP,EAA3DQ,OAA2DR,EAAnD+P,YAAmD/P,EAAtC6Q,WAAsC7Q,EAA1BO,UAAUD,EAAgBN,EAAhBM,YASnE,OACEoE,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,OAAQjL,MAAOA,GAAS,GAAK2F,SAAUzF,EAAUuB,SAR9C,SAAA6L,GACf,IAAItN,EAAQsN,EAAE4B,OAAOlP,MACR,IAATA,IACFA,OAAQqD,GACVkH,EAASvK,EACX,GAGuFC,GAExF,ECbD,IAAQnB,GAAWC,GAAXD,OAER,kBAAgBa,GACd,IAWImjG,EAXG9iG,EAA6EL,EAA7EK,MAAOuK,EAAsE5K,EAAtE4K,SAAkBmF,GAAoD/P,EAA5DQ,OAA4DR,EAApD+P,aAAyBxP,GAA2BP,EAAvC6Q,WAAuC7Q,EAA3BO,UAAUD,EAAiBN,EAAjBM,YAiBnE,OAFE6iG,EAHG9iG,EAGOlB,GAAOkB,GAAO4P,OAAO,oBAFrB,GAKVvL,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,iBAAkBjL,MAAO8iG,EAAUn9F,SAAUzF,EAAUuB,SAhBpD,SAAA6L,GACf,IAAItN,EAAQsN,EAAE4B,OAAOlP,MAEnBA,EADW,IAATA,OACMqD,EAEAvE,GAAO,IAAI+d,KAAK7c,IAAQ4P,OAAOF,GACzCnF,EAASvK,EACX,GAS6FC,GAE9F,ECtBD,IAAQX,GAAkBP,GAAMQ,UAAxBD,cAER,kBAAekD,GAA8E,IAA5E6H,EAAU7H,EAAV6H,WAAYrK,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAA6BrK,GAAFsC,EAAjB5C,kBAA2B4C,EAARtC,UAAUD,EAAWuC,EAAXvC,YAsBzE,OACEoE,EAAAA,cAAA,UAAAkB,EAAAA,GAAAA,GAAA,CAAQ1F,UAAQ,EACd4B,SAJa,SAAA6L,GAAC,OAAI/C,EAdO,SAAC6Q,GAG5B,IAFA,IAAIkQ,EAAS,GACP1pB,EAAUwZ,EAAYxZ,QACnBod,EAAI,EAAIA,EAAIpd,EAAQwH,OAAS4V,IAAK,CACzC,IAAM+jF,EAAMnhG,EAAQod,GAChB+jF,EAAIx6F,UACN+iB,EAAOrH,KAAK8+E,EAAI/iG,MAEpB,CAGA,OAFKsrB,EAAOliB,SACVkiB,OAASjoB,GACJioB,CACT,CAE+B03E,CAAqB11F,EAAE4B,QAAQ,EAK1DlP,MAAOA,EACP2F,SAAUzF,GACN8C,KAAK/C,EAAa,CAAC,aAAc,QAAS,oBAzBhDX,GAAc+K,GAAY,SAAApE,GAAoB,IAAlB1B,EAAK0B,EAAL1B,MAAOvE,EAAKiG,EAALjG,MACjC,OAAOqE,EAAAA,cAAA,UAAQ6C,IAAKlH,EAAOA,MAAOA,GAAQuE,EAC5C,IA4BH,EClCD,IAAQjF,GAAkBP,GAAMQ,UAAxBD,cAER,kBAAekD,GAA8E,IAA5E6H,EAAU7H,EAAV6H,WAAYrK,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAA6BrK,GAAFsC,EAAjB5C,kBAA2B4C,EAARtC,UAAUD,EAAWuC,EAAXvC,YAQnEmR,EAAoB,MAATpR,EACjB,OACEqE,EAAAA,cAAA,UAAAkB,EAAAA,GAAAA,GAAA,CACE9D,SALa,SAAA6L,GAAC,OAAI/C,EAAS+C,EAAE4B,OAAOlP,MAAM,EAM1CA,MAAOoR,EAAWpR,EAAQ,GAC1B2F,SAAUzF,GACN8C,KAAK/C,EAAa,CAAC,aAAc,YAEnCmR,GAAY/M,EAAAA,cAAA,UAAQsB,UAAQ,EAAC3F,MAAO,KAdxCV,GAAc+K,GAAY,SAAApE,GAAoB,IAAlB1B,EAAK0B,EAAL1B,MAAOvE,EAAKiG,EAALjG,MACjC,OAAOqE,EAAAA,cAAA,UAAQ6C,IAAKlH,EAAOA,MAAOA,GAAQuE,EAC5C,IAgBH,ECvBD,YAAgB5E,GACd,IAAOK,EAAiFL,EAAjFK,MAAOuK,EAA0E5K,EAA1E4K,SAAkBrK,GAAwDP,EAAhEQ,OAAgER,EAAxDO,UAAU2R,EAA8ClS,EAA9CkS,IAAKC,EAAyCnS,EAAzCmS,IAAKC,EAAoCpS,EAApCoS,KAAMzO,EAA8B3D,EAA9B2D,YAAarD,EAAiBN,EAAjBM,YASjE+R,EAAuB3O,MAATrD,EAAqB,GAAKA,EAC9C,OACEqE,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO0F,KAAK,SAAUjL,MAAOgS,EAAa1O,YAAaA,EAAaqC,SAAUzF,EAAU2R,IAAKA,EAAKC,IAAKA,EAAKC,KAAMA,EAAMtQ,SAVzG,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MAEjBiP,EADU,KAARA,GAAsB,OAARA,OACV5L,EAEA6O,OAAOjD,GACf1E,EAAS0E,EACX,GAGkJhP,GAEnJ,ECdD,YAAgBN,GACd,IAAOK,EAAsFL,EAAtFK,MAAOuK,EAA+E5K,EAA/E4K,SAAkBrK,GAA6DP,EAArEQ,OAAqER,EAA7DO,UAAU2R,EAAmDlS,EAAnDkS,IAAKC,EAA8CnS,EAA9CmS,IAAKC,EAAyCpS,EAAzCoS,KAAMzO,EAAmC3D,EAAnC2D,YAAW6V,EAAwBxZ,EAAtBM,YAAAA,OAAW,IAAAkZ,EAAG,CAAC,EAACA,EACjFrW,EAAmB7C,EAAY8C,OAAS,CAAC,EACzC2P,EAAoBzS,EAAY0S,QAAU1S,EAC1CwB,EAAW,SAAA6L,GACf,IAAI2B,EAAM3B,EAAE4B,OAAOlP,MAEjBiP,EADU,KAARA,GAAsB,OAARA,OACV5L,EAEA6O,OAAOjD,GACf1E,EAAS0E,EACX,EACM+C,EAAuB3O,MAATrD,EAAqB,GAAKA,EAC9C,OACEqE,EAAAA,cAAA,OAAKjB,MAAO,CAACoQ,QAAS,gBACpBnP,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO2B,IAAK,SAAU+D,KAAK,SAAUjL,MAAOgS,EAAa1O,YAAaA,EAAaqC,SAAUzF,EAAU2R,IAAKA,EAAKC,IAAKA,EAAKC,KAAMA,EAAMtQ,SAAUA,GAAcqB,IAC/JuB,EAAAA,cAAA,SAAAkB,EAAAA,GAAAA,GAAA,CAAO2B,IAAK,QAAS+D,KAAK,QAASjL,MAAOgS,EAAarM,SAAUzF,EAAU2R,IAAKA,EAAKC,IAAKA,EAAKC,KAAMA,EAAMtQ,SAAUA,GAAciR,IAGxI,ECnBD,YAAelQ,GAAyD,IAAvDyG,EAAKzG,EAALyG,MAAOc,EAAQvH,EAARuH,SAAUD,EAAWtH,EAAXsH,YAAa5J,EAAQsC,EAARtC,SAAUG,EAASmC,EAATnC,UAejD+Q,EAA0B,MAAftH,EACjB,OACEzF,EAAAA,cAAA,UACE5C,SALa,SAAA6L,GAAC,OAAIvD,EAASuD,EAAE4B,OAAOlP,MAAM,EAM1CA,MAAOoR,EAAWtH,EAAc,GAChCnE,SAAUzF,EACVkD,MAAO,CAAEwB,MAAOvE,EAAY,MAAQ,QAElC+Q,GAAY/M,EAAAA,cAAA,UAAQsB,UAAQ,EAAC3F,MAAO,KAtBpB,SAAhB6O,EAAiB6G,GAAM,OAC3BA,EAAO5U,KAAI,SAAA6U,GACT,IAAO1M,EAA6C0M,EAA7C1M,MAAOJ,EAAsC8M,EAAtC9M,KAAM9E,EAAgC4R,EAAhC5R,MAAO4B,EAAyBgQ,EAAzBhQ,SAAU2D,EAAeqM,EAAfrM,YACrC,GAAIL,EACF,OAAO5E,EAAAA,cAAA,YAAUsB,SAAUA,EAAUuB,IAAK2B,EAAM9E,MAAOA,GAAQ8K,EAAc5F,IAE7E,IAAM7F,EAAQkG,EAAc,CAAE25F,WAAY,QAAW,CAAC,EACtD,OAAO5+F,EAAAA,cAAA,UAAQsB,SAAUA,EAAUuB,IAAK2B,EAAM7I,MAAO6I,EAAMzF,MAAOA,GAAQW,EAE9E,GAAE,CAcC8K,CAAc5F,GAGpB,EC3BD,YAAezG,GAA0G,IAoB/GsJ,EApBOJ,EAAElJ,EAAFkJ,GAAIO,EAAGzJ,EAAHyJ,IAAKC,EAAM1J,EAAN0J,OAAQC,EAAkB3J,EAAlB2J,mBAAoBN,EAAcrJ,EAAdqJ,eAAgBlG,EAAQnD,EAARmD,SAAUzF,EAAQsC,EAARtC,SAAUC,EAAMqC,EAANrC,OAAQiM,EAAO5J,EAAP4J,QAASC,EAAQ7J,EAAR6J,SACnGC,EAAaC,OAAOC,KAAKL,GAAoB/C,OAC7CqD,EAAc9G,EAEd+G,EADkBvM,EAAOS,SAAxB+L,eAC2BL,EAAa,IAAMG,EAwB/ChL,EAAW,SAAA6L,GAAC,OAAIzB,EAAeyB,EAAE4B,OAAOlP,MAAM,EAIpD,MAAO,CACLoM,IAbMN,EAAU,MACT,CACLzH,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAAUb,KAAK,WAAWS,GAAIA,EAAGI,EAASF,QAASK,EAAKtG,SAAUzF,EAAUuB,SAQ3E,SAAA6L,GAAC,OAAIpB,EAAOoB,EAAE4B,OAAOtD,QAAQ,IAN7CvH,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAAQ,QAAUo3F,QAASx3F,EAAGI,GAAUO,GAAY,SAUrEK,GA3BAH,OAAOC,KAAKL,GAAoBrL,KAAI,SAAAoG,GAClC,IAAAi8F,EAAmCh3F,EAAmBjF,GAA/CwE,EAAEy3F,EAAFz3F,GAAIC,EAAIw3F,EAAJx3F,KAAM5H,EAAKo/F,EAALp/F,MAAO6H,EAAOu3F,EAAPv3F,QAClBE,EAAUD,EAAeE,UAAY,UAAY,GACvD,OAAK7L,IAAYyF,GAAciG,EAExB,CACLvH,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAASb,KAAK,QAAQS,GAAIA,EAAGI,EAASH,KAAMA,EAAKG,EAASF,QAASA,EAASjG,SAAUzF,GAAYyF,EAAU3F,MAAOkH,EAAKzF,SAAUA,IAEjJ4C,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAAQ,QAASo3F,QAASx3F,EAAGI,GAAU/H,IAJ/C,IAMX,IAoBH,ECrCD,IAAMq/F,GAAc,CAClB,aAAgB,IAChB,gBAAmB,IACnB,SAAY,IACZ,aAAgB,IAChB,QAAW,KAGb,kBAAe5gG,GAAsC,IAApCyI,EAAIzI,EAAJyI,KAAMlH,EAAKvB,EAALuB,MAAOmH,EAAO1I,EAAP0I,QAAShL,EAAQsC,EAARtC,SAC/BmjG,EAAWt/F,GAASq/F,GAAYn4F,GACtC,OAAO5G,EAAAA,cAAA,UAAQ6G,QAASA,EAASD,KAAK,SAAStF,SAAUzF,GAAWmjG,EACrE,ECVD,YAAe7gG,GAAY,IAAVyI,EAAIzI,EAAJyI,KAGXG,EAFe,CACnB,EACsBH,IAAS,KAK/B,OAJKG,GAAiB,SAATH,IACXG,EAAO/G,EAAAA,cAACoG,GAAQ,OAGXW,CACR,ECVD,YAAe5I,GAAwB,IAAtB4C,EAAQ5C,EAAR4C,SACf,OAD+B5C,EAANrC,OAClBkE,EAAAA,cAAAA,EAAAA,SAAA,KAAGe,EACX,ECFD,YAAe5C,GAAQA,EAANrC,OAAkE,IAA1DoN,EAAY/K,EAAZ+K,aAAcL,EAAQ1K,EAAR0K,SAAiBM,GAAFhL,EAAL+B,MAAkB/B,EAAXgL,aAAatN,EAAQsC,EAARtC,SASnE,OACEmE,EAAAA,cAAA,UACE5C,SAJa,SAAA6L,GAAC,OAAIE,EAAYF,EAAE4B,OAAOlP,MAAM,EAK7CA,MAAOkN,GAAY,GACnBvH,SAAUzF,GAZQ,SAACqN,GAAY,OACjCA,EAAazM,KAAI,SAAAmF,GAAA,IAAAE,GAAAwH,EAAAA,EAAAA,GAAA1H,EAAA,GAAEkH,EAAMhH,EAAA,GAAEkH,EAAIlH,EAAA,UAC7B9B,EAAAA,cAAA,UAAQ6C,IAAKiG,EAAQnN,MAAOmN,GAASE,EAAKtJ,MAAe,GACzD,CAWC8K,CAActB,GAGpB,EClBD,YAAe/K,GAAgD,IAA9CxC,EAAKwC,EAALxC,MAAOuK,EAAQ/H,EAAR+H,SAAUxG,EAAKvB,EAALuB,MAAO2H,EAAElJ,EAAFkJ,GAEjCI,GAF2CtJ,EAANrC,OAAYqC,EAAJyI,MAGnD,MAAO,CACL5G,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAAUb,KAAK,WAAWS,GAAIA,EAAGI,EAASF,UAAW5L,EAAOyB,SAH5D,SAAA6L,GAAC,OAAI/C,EAAS+C,EAAE4B,OAAOtD,QAAQ,IAK9CvH,EAAAA,cAAA,SAAO6C,IAAKwE,EAAGI,EAAQ,QAAUo3F,QAASx3F,EAAGI,GAAU/H,GAE1D,ECVD,YAAevB,GAAuC,IAArC8U,EAAI9U,EAAJ8U,KAA0B/S,GAAd/B,EAAN+U,OAAkB/U,EAAVgV,WAAiBhV,EAAL+B,OACrC++F,QAAQ/+F,IACV+S,GAEH,ECsBM,IAAMisF,GAAkB,SAAH/gG,GAAqB,OAAVA,EAANrC,OAAgBqC,EAAR4C,QAAsB,E,yQCxB9B,IAEZo+F,GAAS,SAAA9e,GAAA,SAAA8e,IAAA,IAAA5zC,GAAAwxB,EAAAA,EAAAA,GAAA,KAAAoiB,GAAA,QAAAr+E,EAAAhc,UAAAC,OAAA6qB,EAAA,IAAAre,MAAAuP,GAAAjF,EAAA,EAAAA,EAAAiF,EAAAjF,IAAA+T,EAAA/T,GAAA/W,UAAA+W,GA0B3B,OA1B2B0vC,EAAAyxB,GAAA,KAAAmiB,EAAA,GAAAzgF,OAAAkR,KAwB5B7mB,aAAe,SAACpN,GACd4vD,EAAKjwD,MAAMowF,UAAU,YAAa9wF,SAASe,GAC7C,EAAC4vD,CAAA,QAAA+xB,EAAAA,EAAAA,GAAA6hB,EAAA9e,IAAA9C,EAAAA,EAAAA,GAAA4hB,EAAA,EAAAt8F,IAAA,SAAAlH,MAED,WACE,IAAA8hF,EAGIrtB,KAAK90D,MAFP2wC,EAAQwxC,EAARxxC,SAAU1uC,EAAOkgF,EAAPlgF,QAASzB,EAAM2hF,EAAN3hF,OAAQ6xE,EAAW8P,EAAX9P,YAAaE,EAAiB4P,EAAjB5P,kBAAmBjyE,EAAW6hF,EAAX7hF,YAC3DkyE,EAAY2P,EAAZ3P,aAAcC,EAAY0P,EAAZ1P,aAAcH,EAAgB6P,EAAhB7P,iBAAkB/xE,EAAQ4hF,EAAR5hF,SAEzCU,EAA0BT,EAA1BS,SAAUga,EAAgBza,EAAhBya,QAAS2B,EAAOpc,EAAPoc,IACpBknF,EAAmBnzD,EAAWA,EAASohC,eAAYruE,EAClD62D,EAAct5D,EAAds5D,WACDwpC,EAAoB9hG,EAAQokB,IAAI,YAAay9E,GAC7CE,EAAa3W,KAAM7a,EAAcC,EAAe,GAAGtxE,KAAI,SAACuI,GAAI,MAAM,CAAC9E,MAAO8E,EAAMrJ,MAAOqJ,EAAK,IAC5FyR,EAAUF,EAAQY,OAAOV,QACzBzJ,EAAS,SAAC1R,GAAK,OAAKmb,EAAQnb,EAAO4c,EAAI,EAE7C,OACElY,EAAAA,cAAA,OAAKwD,UAAU,uBACbxD,EAAAA,cAAA,OAAKwD,UAAU,qBACXqyD,GACG71D,EAAAA,cAAA,SAAOwD,UAAU,eAAemqE,IAElC9X,GAAc+X,GACZ5tE,EAAAA,cAAA,OAAKwD,UAAU,0BAChBxD,EAAAA,cAAA,YAAO4tE,IAGX5tE,EAAAA,cAACgN,GAAM9L,EAAAA,GAAAA,GAAA,CACLpF,OAAQA,EACRH,MAAO0jG,EACPr5F,WAAYs5F,EACZp5F,SAAUkqD,KAAKrnD,aACflN,SAAUA,EACVoD,YAAa4uE,GACTjyE,KAGRoE,EAAAA,cAAA,OAAKwD,UAAU,qBAAqB4sD,KAAK90D,MAAMyF,UAGrD,IAAC,CAjE2B,CAASogF,EAAAA,e,ykBAAlBge,GACZvhB,UAAY,CACjB9hF,OAAQ+hF,KAAAA,OAAiBC,WACzB4N,UAAW7N,KAAAA,KAAeC,WAC1BvgF,QAASsgF,KAAAA,IAAcC,WACvBhQ,aAAc+P,KAAAA,OACd9P,aAAc8P,KAAAA,OACdhQ,kBAAmBgQ,KAAAA,OACnBjQ,iBAAkBiQ,KAAAA,OAClBlQ,YAAakQ,KAAAA,OACbjiF,YAAaiiF,KAAAA,OACbhiF,SAAUgiF,KAAAA,MAXOshB,GAeZI,aAAe,CACpB3jG,YAAa,CAAC,EACdkyE,aAAc,EACdC,aAAc,GACdF,kBAAmB,uBACnBF,YAAa,gBACbC,iBAAkB,MCjBtB,IAiKI9xE,GAAS,CACX6uB,aAlKgBroB,GAAA,GACbk9F,GAAW70E,cAkKdR,UA7Ja7nB,GAAAA,GAAA,GACVk9F,GAAWr1E,WAAS,IACvBkjD,UAAS/qE,GAAAA,GAAA,GACJk9F,GAAWr1E,UAAUkjD,WAAS,IACjC9vE,QAAO+E,GAAAA,GAAA,GACFk9F,GAAWr1E,UAAUkjD,UAAU9vE,SAAO,IACzCkZ,QAAS,SAACnb,EAAK6C,GAA6B,OAAO4W,EAA9B5W,EAAH4W,KAA0B5W,EAArBwyD,EAAI8uC,kBAA+CnkG,EAAM,QAwJpFib,QAhJc,CACdC,KAAIlU,GAAAA,GAAA,GACCk9F,GAAWjpF,QAAQC,MAAI,IAC1BC,QAAS,SAACnb,EAAKsG,GAA6B,OAAOmT,EAA9BnT,EAAHmT,KAA0BnT,EAArBqT,EAAIyqF,kBAA+CpkG,EAAM,IAElFqb,SAAQrU,GAAAA,GAAA,GACHk9F,GAAWjpF,QAAQI,UAAQ,IAC9BF,QAAS,SAACnb,EAAKwG,GAAiC,OAAOiT,EAAlCjT,EAAHiT,KAA8BjT,EAAzBmT,EAAI0qF,sBAAuDrkG,EAAM,IAE1Fub,OAAMvU,GAAAA,GAAA,GACDk9F,GAAWjpF,QAAQM,QAAM,IAC5BJ,QAAS,SAACnb,EAAKiE,GAA+B,OAAOwV,EAAhCxV,EAAHwV,KAA4BxV,EAAvB0V,EAAI2qF,oBAAmDtkG,EAAM,IAEtFgT,OAAMhM,GAAAA,GAAA,GACDk9F,GAAWjpF,QAAQjI,QAAM,IAC5BmI,QAAS,SAACnb,EAAKwF,GAA+B,OAAOiU,EAAhCjU,EAAHiU,KAA4BjU,EAAvBmU,EAAI4qF,oBAAmDvkG,EAAM,IAEtF6b,OAAM7U,GAAAA,GAAA,GACDk9F,GAAWjpF,QAAQY,QAAM,IAC5BV,QAAS,SAACnb,EAAKoa,GAA+B,OAAOX,EAAhCW,EAAHX,KAA4BW,EAAvBT,EAAI6qF,oBAAmDxkG,EAAM,IAEtFyb,YAAWzU,GAAAA,GAAA,GACNk9F,GAAWjpF,QAAQQ,aAAW,IACjCN,QAAS,SAACnb,EAAKqa,GAAoC,OAAOZ,EAArCY,EAAHZ,KAAiCY,EAA5BV,EAAI8qF,yBAA6DzkG,EAAM,IAEhGmc,KAAInV,GAAAA,GAAA,GACCk9F,GAAWjpF,QAAQkB,MAAI,IAC1BhB,QAAS,SAACnb,EAAKua,GAA6B,OAAOd,EAA9Bc,EAAHd,KAA0Bc,EAArBZ,EAAI+qF,kBAA+C1kG,EAAM,IAElFqc,KAAIrV,GAAAA,GAAA,GACCk9F,GAAWjpF,QAAQoB,MAAI,IAC1BlB,QAAS,SAACnb,EAAKya,GAA6B,OAAOhB,EAA9BgB,EAAHhB,KAA0BgB,EAArBd,EAAIgrF,kBAA+C3kG,EAAM,IAElFuc,SAAQvV,GAAAA,GAAA,GACHk9F,GAAWjpF,QAAQsB,UAAQ,IAC9BpB,QAAS,SAACnb,EAAK2a,GAAiC,OAAOlB,EAAlCkB,EAAHlB,KAA8BkB,EAAzBhB,EAAIirF,sBAAuD5kG,EAAM,IAE1Fic,QAAAjV,GAAAA,GAAA,GACKk9F,GAAWjpF,QAAO,SAAQ,IAC7BE,QAAS,SAACnb,EAAK6a,GAAgC,OAAOpB,EAAjCoB,EAAHpB,KAA6BoB,EAAxBlB,EAAIkrF,qBAAqD7kG,EAAM,IAExFgW,MAAKhP,GAAAA,GAAA,GACAk9F,GAAWjpF,QAAQjF,OAAK,IAC3BmF,QAAS,SAACnb,EAAK+a,GAA4B,OAAOtB,EAA7BsB,EAAHtB,KAAyBsB,EAApBpB,EAAImrF,iBAA6C9kG,EAAM,EAC9EM,YAAa,CACXsZ,YAAY,KAGhBuS,KAAInlB,GAAAA,GAAA,GACCk9F,GAAWjpF,QAAQkR,MAAI,IAC1BhR,QAAS,SAACnb,EAAKgb,GAAsB,OAAOvB,EAAvBuB,EAAHvB,KAAmBuB,EAAdrB,EAAIm0E,WAAiC9tF,EAAM,EAClEM,YAAa,CACX,IAMJi0E,WAAUvtE,GAAAA,GAAA,GACLk9F,GAAWjpF,QAAQs5D,YAAU,IAEhCp5D,QAAS,SAACnb,EAAKob,GAA6B,OAAQ3B,EAA/B2B,EAAH3B,KAA0B2B,EAArBzB,EAAIyqF,kBAAgDpkG,EAAM,KAoFnF2c,MA9ES3V,GAAAA,GAAA,GACNk9F,GAAWvnF,OAAK,IACnBd,OAAM7U,GAAAA,GAAA,GACDk9F,GAAWvnF,MAAMd,QAAM,IAC1BZ,QAAOjU,GAAAA,GAAA,GACFk9F,GAAWvnF,MAAMd,OAAOZ,SAAO,IAClCY,OAAM7U,GAAAA,GAAA,GACDk9F,GAAWvnF,MAAMd,OAAOZ,QAAQY,QAAM,IACzCk1C,YAAa,CACXzwD,YAAa,CACXsZ,YAAY,YAqEtB3Y,SA3DY+F,GAAAA,GAAA,GACTk9F,GAAWjjG,UAAQ,IAEtBsY,YAAa,SAACvZ,EAAKsb,GAA8B,OAAO7B,EAA/B6B,EAAH7B,KAA2B6B,EAAtB3B,EAAIorF,mBAAiD/kG,EAAM,EACtF6Z,eAAgB,SAAC7Z,EAAKwb,GAA8B,OAAO/B,EAA/B+B,EAAH/B,KAA2B+B,EAAtB7B,EAAIorF,mBAAiD/kG,EAAM,EACzFga,WAAY,SAACha,EAAK0b,GAA8B,OAAOjC,EAA/BiC,EAAHjC,KAA2BiC,EAAtB/B,EAAIorF,mBAAiD/kG,EAAM,EACrFia,YAAa,SAACja,EAAK8b,GAAwB,OAAOrC,EAAzBqC,EAAHrC,KAAqBqC,EAAhBnC,EAAIqrF,aAAqChlG,EAAM,EAC1Eka,aAAc,SAACla,EAAKgc,GAAyB,OAAOvC,EAA1BuC,EAAHvC,KAAsBuC,EAAjBrC,EAAIsrF,cAAuCjlG,EAAM,EAC7Ema,aAAc,SAACna,EAAKkc,GAAyB,OAAOzC,EAA1ByC,EAAHzC,KAAsByC,EAAjBvC,EAAIurF,cAAuCllG,EAAM,EAC7EwL,WAAY,SAACxL,EAAKoc,GAAuB,OAAO3C,EAAxB2C,EAAH3C,KAAoB2C,EAAfzC,EAAIwrF,YAAmCnlG,EAAM,EACvEsa,kBAAmB,SAACta,EAAKsc,GAA8B,OAAO7C,EAA/B6C,EAAH7C,KAA2B6C,EAAtB3C,EAAIyrF,mBAAiDplG,EAAM,EAC5F4a,eAAgB,SAAC5a,EAAKwc,GAA2B,OAAO/C,EAA5B+C,EAAH/C,KAAwB+C,EAAnB7C,EAAIiqF,gBAA2C5jG,EAAM,EACnFwa,mBAAoB,SAACxa,EAAK0c,GAA+B,OAAOjD,EAAhCiD,EAAHjD,KAA4BiD,EAAvB/C,EAAI0rF,oBAAmDrlG,EAAM,EAC/F0a,mBAAoB,SAAC1a,EAAKslG,GAA+B,OAAO7rF,EAAhC6rF,EAAH7rF,KAA4B6rF,EAAvB3rF,EAAI0rF,oBAAmDrlG,EAAM,EAC/F8a,cAAe,SAAC9a,EAAKulG,GAAqB,OAAOC,EAAPD,EAAlB5rF,EAAI6rF,gBAAoCxlG,EAAM,EACtEwxD,mBAAoB,KACpBM,sBAAuB,SAAC9xD,EAAKylG,GAAM,OAAMhsF,EAANgsF,EAAHhsF,KAAa,OAAQ,CAAChU,SAAU,CAAC,WAAW,EAE5EkqF,uBAAwB,CACtB/1E,YAAY,GAEdiuE,0BAA2B,CACzB,EAGFn1E,mBAAoB,QACpB9P,mBAAoB,QACpBE,mBAAoB,QACpB6M,eAAgB,EAChBwH,WAAY,QACZ+wE,gBAAiB,IAEjBkK,UAAU,EACV3lF,SAAS,EACTO,eAAe,EACf8nF,qBAAsB,aAyBtBl4E,IAnBO5V,GAAAA,GAAA,GACJk9F,GAAWtnF,KAAG,IACjBjD,EAAC3S,GAAA,GACI0+F,GAELrwC,EAACruD,GAAA,GACI2+F,GAELlsF,IAAK,SAACmsF,EAAGC,GAAC,OAAKnhG,EAAAA,cAAoBkhG,EAAGC,EAAE,KAmB1C,SANArlG,GAASpB,GAAM0d,aAAak5D,aAAax1E,GAAQ,CAC/C,cACA,aACA,oB,omBCjLF,IAAAslG,GAAgH1mG,GAAMuG,aAA9G6iE,GAAes9B,GAAft9B,gBAAiBe,GAAiBu8B,GAAjBv8B,kBAAmBT,GAAiBg9B,GAAjBh9B,kBAAmBI,GAAmB48B,GAAnB58B,oBAAqBM,GAAuBs8B,GAAvBt8B,wBACpFu8B,GAAsH3mG,GAAMQ,UAApHD,GAAaomG,GAAbpmG,cAAewkB,GAAiB4hF,GAAjB5hF,kBAAmBmB,GAAYygF,GAAZzgF,aAActB,GAAmB+hF,GAAnB/hF,oBAAqBoB,GAAe2gF,GAAf3gF,gBAE7E,SAAS/D,GAAMC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,EACtB,GACF,CANiHykF,GAAnBxhF,oBAgY9F,SAxXkC,SAAH1hB,EAAAyD,GAWzB,IAVJsV,EAAU/Y,EAAV+Y,WAAYoqF,EAAWnjG,EAAXmjG,YAAaC,EAAcpjG,EAAdojG,eAAgBC,EAAgBrjG,EAAhBqjG,iBACxBC,EAAuBtjG,EAAxCkwB,gBACYqzE,EAAgBvjG,EAA5B6H,WAA8BzK,EAAiB4C,EAAjB5C,kBACvBG,EAAayC,EAApBxC,MAAsBuK,EAAQ/H,EAAR+H,SAAUjH,EAAWd,EAAXc,YAChCnD,EAAMqC,EAANrC,OAEAiB,EAAe6E,EAAf7E,gBACAvB,EAAQoG,EAARpG,SACAwB,EAAG4E,EAAH5E,IACAd,EAAmB0F,EAAnB1F,oBAEMylG,EAAqB,CAAC,YAAa,gBACnCC,EAAgB,eAChBC,EAAmB,kBACnBnkG,EAAe8jG,EAAmB,iBAAmBviG,EAG3DmK,EAAwBpJ,EAAAA,UAAe,GAAMqJ,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAtCnM,EAAIoM,EAAA,GAAE8H,EAAO9H,EAAA,GACpBy4F,EAA4C9hG,EAAAA,cAAehB,GAAU+iG,GAAAz4F,EAAAA,EAAAA,GAAAw4F,EAAA,GAA9DE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAoCliG,EAAAA,SAAe,GAAEmiG,GAAA74F,EAAAA,EAAAA,GAAA44F,EAAA,GAA9CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA0CtiG,EAAAA,UAAe,GAAMuiG,GAAAj5F,EAAAA,EAAAA,GAAAg5F,EAAA,GAAxDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAAoC1iG,EAAAA,SAAe,IAAG2iG,GAAAr5F,EAAAA,EAAAA,GAAAo5F,EAAA,GAA/CplG,EAAUqlG,EAAA,GAAEC,EAAaD,EAAA,GAChCE,EAA8C7iG,EAAAA,cAAehB,GAAU8jG,GAAAx5F,EAAAA,EAAAA,GAAAu5F,EAAA,GAAhEx0E,EAAey0E,EAAA,GAAEC,EAAkBD,EAAA,GAGpCE,EAAiBhjG,EAAAA,OAAa,GAC9BijG,EAAqBjjG,EAAAA,OAAa,GAClCkjG,EAAqBljG,EAAAA,QAAa,GAGlCmjG,EAA2BnjG,EAAAA,SAAc,kBAC7Cyf,GAAkBgiF,EAAwB,GACzC,CACDA,IAEIz7F,EAAahG,EAAAA,SAAc,kBAC/BkX,EACKuqF,EAA0B39B,GAAgBz1C,EAAiB80E,GAA0B,GAAQ90E,EAC9F5O,GAAkBiiF,EAAiB,GACtC,CACDxqF,EACAuqF,EACApzE,EACAqzE,IAGE0B,EAAsBlsF,EACtBmX,EACA5O,GAAkBiiF,GAClBnmG,GAAqB+B,IAAeojB,GAAgBpjB,EAAY+wB,KAClE+0E,EAAsBt/B,GAAgBs/B,EAAqB,CAAC9jF,GAAoBhiB,KAAc,KAE5F4Z,GAAemX,IAAmBozE,GAA4BnkG,GAAeL,GAAgB,SAARD,IAEvFomG,EAAsBp9F,GAEpBkR,IAAe3b,GAAqBkmG,GAAmC,QAARzkG,IAKjEomG,EAAsBt/B,GAAgBs/B,EAAqBD,GAA0B,GAAM,IAG7F,IAAM1lG,GAAY2kG,EAAa,EACzBiB,GAAiBpmG,GAAQia,QACNlY,IAApBqvB,KACCmzE,GAAmBlkG,GACnBE,GAAmB6lG,IAAkB5lG,GACrC6lG,IAAe9lG,IAAoBwI,GAAcA,EAAWjB,OAAS,GACtEi9F,GAAkBA,EAAex+B,UAAYw+B,EAAe70F,QAAU,MAAQ7P,EAC7EimG,IAAmB9lG,IAAa6lG,GAChC/lG,GAAUtC,GAAcmoG,EAAqBv+B,IAC7C93D,GAA4B,MAAjBrR,EACXsC,IAAqBxC,GAAYuR,GAAW6T,GAAallB,EAAesK,GAAc,KAItFw9F,GAAe,eAAA1hG,GAAAqhE,EAAAA,GAAAA,GAAA3L,KAAAA,MAAG,SAAAS,IAAA,IAAA9qD,EAAAs2F,EAAArgC,EAAA15C,EAAAg6E,EAAA1iG,EAAAzB,EAAA0nB,EAAAu8C,EAAAmgC,EAAAC,EAAAC,EAAA7zF,EAAA8zF,EAAAC,EAAAj/F,UAAA,OAAA0yD,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAApxC,KAAAoxC,EAAAt6C,MAAA,OAS2B,OATpBlQ,EAAM42F,EAAAh/F,OAAA,QAAA/F,IAAA+kG,EAAA,GAAAA,EAAA,GAAG,OAAMN,EAAUM,EAAAh/F,OAAA,QAAA/F,IAAA+kG,EAAA,IAAAA,EAAA,KAEnC/B,GACjBC,OAAkBjjG,GAGdokE,EAASqgC,GAAcp1E,EAAkBA,EAAgBtpB,OAAS,EAClE2kB,EAAO+5E,GAAczB,IAAmBV,GAAe,CAAEj+B,SAAU,GAEnEqgC,IAAqBV,EAAex2D,QAAOmrB,EAAAt6C,KAAA,EAC/BnG,EAAWmC,KAAKvd,aAAM,EAANA,EAAQoc,IAAK/K,EAAQi2D,EAAQ15C,GAAK,OACD,GAD7D1oB,EAAG22D,EAAAqsC,KACgBhB,EAAex2D,SAAWk3D,GAC1BT,EAAmBz2D,QAAO,CAAAmrB,EAAAt6C,KAAA,gBAAAs6C,EAAA+L,OAAA,SAC1C,MAAI,QA6BZ,OA7BYnkE,EAG8ByB,SAAAA,EAAKimB,OAC5CjmB,EACA,CAAEimB,OAAQjmB,GAFNimB,EAAM1nB,EAAN0nB,OAAQu8C,EAAOjkE,EAAPikE,QAAemgC,EAAOpkG,EAAbmqB,KAInBk6E,EAAUnkF,GAAkBwH,GAG9Bw8E,GACFzzF,EAAY8zD,GAAgBz1C,EAAiBu1E,GAAS,GACtDC,EAAgB7zF,EAAUjL,OAASspB,EAAgBtpB,SAEnDiL,EAAY4zF,EACRtC,IACFuC,EAAgB7zF,EAAUjL,OAAS,KAKjC++F,EAAyB,MAAXtgC,GAA8B,MAAXmgC,GAAoC,MAAjBE,EAAqBvhG,GAAAA,GAAAA,GAAAA,GAAA,GACxD,MAAjBuhG,EAAwB,CAAErgC,QAASqgC,GAAkB,CAAC,GAC3C,MAAXrgC,EAAkB,CAAEA,QAAAA,GAAY,CAAC,GACtB,MAAXmgC,EAAkBA,EAAU,CAAC,GAAC,IAClCx2F,OAAAA,SACEnO,IAEFijG,EAAkB6B,GACnBnsC,EAAA+L,OAAA,SAEM1zD,GAAS,yBAAA2nD,EAAAG,OAAA,GAAAG,EAAA,KACjB,kBA7CoB,OAAAn2D,EAAAsf,MAAA,KAAAtc,UAAA,KA+Cfm/F,GAAc,eAAAnjG,GAAAqiE,EAAAA,GAAAA,GAAA3L,KAAAA,MAAG,SAAA0sC,IAAA,IAAA/2F,EAAAs2F,EAAAviF,EAAAijF,EAAAr/F,UAAA,OAAA0yD,KAAAA,MAAA,SAAAQ,GAAA,cAAAA,EAAAzxC,KAAAyxC,EAAA36C,MAAA,OAEQ,OAFDlQ,EAAMg3F,EAAAp/F,OAAA,QAAA/F,IAAAmlG,EAAA,GAAAA,EAAA,GAAG,KAAMV,EAAUU,EAAAp/F,OAAA,QAAA/F,IAAAmlG,EAAA,IAAAA,EAAA,GACrD9B,GAAc,SAAA1kF,GAAC,OAAKA,EAAI,CAAC,IACzB8kF,EAAiBgB,GAAYzrC,EAAA36C,KAAA,EACVmmF,GAAgBr2F,EAAQs2F,GAAW,OAA5C,GAAJviF,EAAI82C,EAAAgsC,KACLf,EAAmBz2D,QAAS,CAAFwrB,EAAA36C,KAAA,eAAA26C,EAAA0L,OAAA,iBAGnB,MAARxiD,GAEF6hF,EAAmB7hF,GAErBmhF,GAAc,SAAA1kF,GAAC,OAAKA,EAAI,CAAC,IACzB8kF,GAAiB,GAAO,yBAAAzqC,EAAAF,OAAA,GAAAosC,EAAA,KACzB,kBAbmB,OAAApjG,EAAAsgB,MAAA,KAAAtc,UAAA,KAcds/F,GAA0BpkG,EAAAA,YAAkBqkG,KAASJ,GAAgBlnG,GAAkB,IAE7FiD,EAAAA,WAAgB,WASd,OARAijG,EAAmBz2D,UAEf62D,IAAgC,GAAdjB,GAA6C,GAA1BY,EAAex2D,UACtD22B,EAAAA,GAAAA,GAAA3L,KAAAA,MAAC,SAAA8sC,IAAA,OAAA9sC,KAAAA,MAAA,SAAAU,GAAA,cAAAA,EAAA3xC,KAAA2xC,EAAA76C,MAAA,cAAA66C,EAAA76C,KAAA,EACO4mF,KAAgB,wBAAA/rC,EAAAJ,OAAA,GAAAwsC,EAAA,IADxBnhC,GAKK,WACL8/B,EAAmBz2D,SACrB,CACF,GAAG,CAAC62D,KAGJ,IAAMnmG,GAAS,WACbiU,GAAQ,EACV,EAEMhU,GAAO,eAAAwY,GAAAwtD,EAAAA,GAAAA,GAAA3L,KAAAA,MAAG,SAAA+sC,EAAOz6F,GAAE,IAAA06F,EAAA,OAAAhtC,KAAAA,MAAA,SAAAitC,GAAA,cAAAA,EAAAl+E,KAAAk+E,EAAApnF,MAAA,OAUtB,IATKmnF,EAAkBtB,EAAmB12D,UAEzC02D,EAAmB12D,SAAU,EACzBhxC,GAEF2V,GAAQ,IAGVA,GAAQ,GAGE,QAARnU,GAAkBwnG,EAAe,CAAAC,EAAApnF,KAAA,QAEd,OAAAonF,EAAApnF,KAAA,EACfhgB,GAAc,KADD,GACmB,YAAW,wBAAAonG,EAAA3sC,OAAA,GAAAysC,EAAA,KAEpD,gBAjBY5gC,GAAA,OAAAhuD,EAAAyL,MAAA,KAAAtc,UAAA,KAgCP1H,GAAQ,eAAAyY,GAAAstD,EAAAA,GAAAA,GAAA3L,KAAAA,MAAG,SAAAktC,EAAOz7F,EAAG2B,EAAKtO,GAAM,IAAAqoG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArhG,EAAAshG,EAAAC,EAAAC,EAAAxgC,EAAAF,EAAA2gC,EAAAC,EAAAj4F,EAAAk4F,EAAA,OAAA9tC,KAAAA,MAAA,SAAA+tC,GAAA,cAAAA,EAAAh/E,KAAAg/E,EAAAloF,MAAA,OAsBhB,GApBdunF,EAAgBppG,GAAoB,QAARwB,GAA4B,UAAXV,EAE7CuoG,GAAmBrpG,GAAoB,QAARwB,GAA4B,UAAXV,GAAkC,YAAZ2M,aAAC,EAADA,EAAGrC,MACzEk+F,GAAoBtpG,GAAoB,QAARwB,GAA4B,UAAXV,GAAkC,YAAZ2M,aAAC,EAADA,EAAGrC,MACpE,QAAR5J,IACFV,EAASsO,EAEPA,EADEpP,EACIc,EAAOG,KAAI,SAAAkpC,GAAC,IAAAi/B,EAAA,OAAa,QAAbA,EAAKj/B,aAAC,EAADA,EAAGhqC,aAAK,IAAAipE,EAAAA,EAAIj/B,CAAC,IAEjB,QAAhBo/D,EAAS,QAATC,EAAG1oG,SAAM,IAAA0oG,OAAA,EAANA,EAAQrpG,aAAK,IAAAopG,EAAAA,EAAIzoG,GAGrBqH,EAAenI,GAAY+V,MAAMC,QAAQlV,IAAWA,EAAOG,KAAI,SAAAiiG,GAAG,OAAIA,aAAG,EAAHA,EAAK/6F,YAAY,IAAE8Z,MAAK,SAAArQ,GAAC,QAAMA,CAAC,MACjG,QADkGu3F,EACxGroG,SAAM,IAAAqoG,OAAA,EAANA,EAAQhhG,cACTnI,GAAYoP,IAAQ2G,MAAMC,QAAQ5G,KACpCA,EAAM,GAAH8T,QAAAhP,EAAAA,EAAAA,GAAQhU,GAAiB,IAAK,CAAAkP,IACjCtO,EAAS,QAGUsoG,GAAgC,IAAfh6F,EAAI7F,QAAgBzH,GAAcL,GACnE4nG,GACa,CAAFU,EAAAloF,KAAA,eAAAkoF,EAAA7hC,OAAA,iBAO+B,GAJzCuhC,EACFzpG,GACCoP,EAAI7F,QAAU6F,EAAI7F,QAAUrJ,GAAiB,IAAIqJ,QACjD6F,EAAIA,EAAI7F,OAAO,IAAMzH,IACpBsjB,GAAatjB,EAAY+wB,GAEX,aAAhB1qB,EAA2B,CAAA4hG,EAAAloF,KAAA,SAEK,OADlCulF,EAActlG,GACd4lG,EAAmB12D,SAAU,EAAK+4D,EAAAloF,KAAA,GAC5B4mF,GAAe3mG,GAAY,GAAK,QAAAioG,EAAAloF,KAAA,oBACb,gBAAhB1Z,EAA8B,CAAA4hG,EAAAloF,KAAA,SACvC6lF,EAAmB12D,SAAU,EAAK+4D,EAAAloF,KAAA,qBAE9B7hB,EAAU,CAAF+pG,EAAAloF,KAAA,SAEkE,GAFlE6nF,EACyC1gC,GAAoB55D,EAAK5E,EAAYzK,GAAkB4pG,GAAA77F,EAAAA,EAAAA,GAAA47F,EAAA,GAAnGvgC,EAAiBwgC,EAAA,GAAE1gC,EAAqB0gC,EAAA,GAC/Cj/F,EAASy+D,EAAmBztD,EAAautD,OAAwBzlE,IAE7DimG,EAAgC,CAAFM,EAAAloF,KAAA,gBAAAkoF,EAAAloF,KAAA,GAC1BV,GAAM,GAAE,eAAA4oF,EAAAloF,KAAA,GACRhgB,GAAc,KAAM,GAAI,YAAW,QAAAkoG,EAAAloF,KAAA,iBAID,GAJC+nF,EAG1BhhC,GAAkBx5D,EAAK5E,EAAYzK,GAAkB8pG,GAAA/7F,EAAAA,EAAAA,GAAA87F,EAAA,GAA/Dh4F,EAACi4F,EAAA,GAAEC,EAAGD,EAAA,GACbn/F,EAASkH,EAAG8J,EAAaouF,OAAMtmG,IAC3B8lG,IAAoB5oG,EAAmB,CAAAqpG,EAAAloF,KAAA,gBAAAkoF,EAAAloF,KAAA,GAEnCV,GAAM,GAAE,QACdxL,GAAQ,GAAO,yBAAAo0F,EAAAztC,OAAA,GAAA4sC,EAAA,KAItB,gBAzDa9gC,EAAAC,EAAA2hC,GAAA,OAAA3vF,EAAAuL,MAAA,KAAAtc,UAAA,KA2DRzH,GAAa,eAAA0Y,GAAAotD,EAAAA,GAAAA,GAAA3L,KAAAA,MAAG,SAAAiuC,EAAOx8F,EAAGy8F,EAAeC,GAAS,IAAAC,EAAAh7F,EAAA,OAAA4sD,KAAAA,MAAA,SAAAquC,GAAA,cAAAA,EAAAt/E,KAAAs/E,EAAAxoF,MAAA,OAiB7B,GARnBuoF,EAAuB,QAAR5oG,GAA+B,UAAd2oG,GAQhC/6F,EAAM86F,KACA9D,GAAiBh3F,IAAQi3F,IAAoB+D,EAAY,CAAAC,EAAAxoF,KAAA,eAAAwoF,EAAAniC,OAAA,oBAIjEgiC,GAAiBpoG,EAAU,CAAAuoG,EAAAxoF,KAAA,SAG6C,GAF1EulF,EAAch4F,IAES22F,GAAmBC,IAAqB52F,EAC3C,CAAFi7F,EAAAxoF,KAAA,gBAAAwoF,EAAAxoF,KAAA,GACV+mF,GAAwBx5F,GAAI,QAAAi7F,EAAAxoF,KAAA,iBACzBkkF,GAAkBC,GAC3BuB,EAAmB,IACpB,yBAAA8C,EAAA/tC,OAAA,GAAA2tC,EAAA,KAEJ,gBAhCkBK,EAAAC,EAAAC,GAAA,OAAAjwF,EAAAqL,MAAA,KAAAtc,UAAA,KA+FnB,MAAO,CACLvH,QAH2B,QAARP,EAAgB8nE,GAAwBvnE,IAAWA,GAItEyI,WAAAA,EACA+G,SAAAA,GACA/O,kBAAAA,GAEAf,KAAAA,EACAC,OAAAA,GACAC,QAAAA,GACA8oG,wBAhL8B,SAAChpG,GAC3BA,EACFC,KAEAC,IAEJ,EA2KEC,SAAAA,GAEAE,WAAAA,EACAD,cAAAA,GACAkmG,gBAAAA,GACA/lG,iBAAAA,GACAC,UAAAA,GACA+kG,cAAAA,EACA0D,eAjLqB,SAAC5pG,GACtB,IAAMqH,GAAerH,aAAM,EAANA,EAAQqH,gBAAgBrH,aAAM,EAANA,EAAQX,OACrD,OAAOgmG,EAAmBp+F,SAASI,EACrC,EAgLEhG,cAhFoB,SAACJ,GACrB,IAAM6G,GAAQsL,EAAAA,EAAAA,GAAOnS,GAerB,OAdI+jG,IACEiC,GACFn/F,EAASwb,KAAK,CACZjc,aAAc,YACdzD,MAAO0hG,IAEAY,GACTp+F,EAASwb,KAAK,CACZjc,aAAc,eACdzD,MAAO2hG,EACPvgG,UAAU,KAIT8C,CACT,EAgEEvG,kBA9DwB,SAACvB,EAAQ6pG,GACjC,GAAqB,MAAjBA,EACF,OAAO,KACT,IAAMzqG,EAAuCsD,MAAvBmnG,EAAcxqG,MAAqBwqG,EAAcxqG,MAAQwqG,EAC/E,OAAO7pG,EAAOX,QAAUD,CAC1B,EA0DEkC,kBAxDwB,SAACuoG,GACzB,OAAOA,GAAiBA,EAAc7kG,QACxC,EAuDExD,kBArDwB,SAACqoG,GAAkB,IAAAC,EAC3C,GAAID,SAAAA,EAAe3mF,SACjB,OAAO,EACT,IAAM5U,EAA0B,QAAvBw7F,EAAGD,aAAa,EAAbA,EAAexqG,aAAK,IAAAyqG,EAAAA,EAAID,EAC9B5mF,EAAKqB,GAAahW,EAAK5E,GAC7B,OAAOuZ,aAAE,EAAFA,EAAIC,YAAY,CACzB,EAgDEzhB,eA9CqB,SAACooG,GACtB,GAAqB,MAAjBA,EACF,OAAO,KACT,IAAM7pG,EAAgC0C,MAAvBmnG,EAAcxqG,MAAqBwqG,EAC9CthC,GAAkBjkD,GAAaulF,EAAengG,IAClD,OAAK1J,GAAU6pG,EAAcxiG,aAEpBwiG,EAAcjmG,OAElB5D,GAAUf,EAEN4qG,EAAclkG,WAElB3F,EAIEA,EAAO4D,OAAS5D,EAAOoD,OAASpD,EAAOX,MAAMsG,WAF3CkkG,EAAclkG,UAGzB,EA6BEvE,aAAAA,EAEJ,E,ykBC/XA,SAAA4E,GAAAA,GAAA,GAAoB5H,IAAK,IAAE2rG,WAAAA,EAAYjgG,SAAAA,I,kBCHvC,IAAI3J,EAAM,CACT,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,OAIZ,SAAS6pG,EAAeC,GACvB,IAAIl/F,EAAKm/F,EAAsBD,GAC/B,OAAOE,EAAoBp/F,EAC5B,CACA,SAASm/F,EAAsBD,GAC9B,IAAIE,EAAoB9gE,EAAElpC,EAAK8pG,GAAM,CACpC,IAAIt9F,EAAI,IAAImf,MAAM,uBAAyBm+E,EAAM,KAEjD,MADAt9F,EAAEy9F,KAAO,mBACHz9F,CACP,CACA,OAAOxM,EAAI8pG,EACZ,CACAD,EAAen+F,KAAO,WACrB,OAAOD,OAAOC,KAAK1L,EACpB,EACA6pG,EAAexpF,QAAU0pF,EACzBG,EAAOC,QAAUN,EACjBA,EAAej/F,GAAK,K","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      parentType: parentId ? items[parentId].type : null,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": opConfig.jsonLogic2,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType === \"time\" && typeof val === \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(config.ctx, val);\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: not,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  if (jlRangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n/**\n * @deprecated\n */\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    convVal = convertArg(val, conv, config, meta, spel);\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\n// const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, getFieldId, _getFromConfigCache, _saveToConfigCache,\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import pick from \"lodash/pick\";\nimport { extendConfig } from \"./configExtend\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = () => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo();\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport * from \"./configMemo\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") === \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["moment","Utils","xdpVersion","parseInt","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","e","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","sx","p","FormLabel","pt","pb","renderOptions","MuiTextWidget","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","fields","field","Array","isArray","some","pop","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","_props$customProps2","_ref2$W","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","call","shallowCopy","obj","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","_res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","caseId","childNo","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","node","parent","parentType","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","multiselectOps","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","immTree","operators","combinationOperators","opKey","opConfig","jsonLogic","opk","jsonLogic2","_jsonLogicIsExclamationOp","conjunctions","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","match","tKeys","jKeys","jlField","jlArgs","expectedTypes","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","arg","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","mainWidget","widgetConfig","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","jsonLogicImport","_e$message","message","valueType","_meta$settings","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","from","Set","parts","ancs","fp","conjunction","groupToId","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","_meta$settings2","isAllOrSomeInForMultiselect","opName","_config$operators$opN","isGroup0","groupOperators","opKeys","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","submeta","parseRule","conj","havingVals","parentFieldConfig","opCanReverse","reversedOp","isInRuleGroup","canRev","reverseOperatorsForNot","needRev","havingNot","canRevHaving","getWidgetForFieldOp","convertedArgs","_res$properties","defaultGroupConjunction","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","flatizeTernary","cond","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","isRev","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","forExport","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","cls","_val","isVar","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","_spel$_groupField","parentSpel","_groupField","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","buildCase","convertArg","sw","buildSimpleSwitch","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","reversedOpConfig","opNeedsReverse","needWrapWithNot","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$_groupField2","_config$settings$case","_spel$children","at","_values$","caseValueField","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_ret","_loop5","_argsArr$filter$find","_step10$value","_field3","_opConfig2","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_processConcatChildren","convertedChild","_config$settings$case2","_convVal","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","getFirstOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListWithOneElement","createListFromArray","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","_config$settings$form","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","minMaxContext","context","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","_config$settings2","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","hasValueErrorChanged","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","fieldCacheKey","getFieldId","cacheKey","cached","_getFromConfigCache","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","_saveToConfigCache","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","getOneChildOrDescendant","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMetaFieldLike","compileMetaField","mainWidgetProps","compileMetaSettings","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","bind","_ctx$components","_props","Cmp","components","O","canShortMongoQuery","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","commonMemo","memoId","configId","memos","getCommonMemo","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","findExtended","findConfig","_ret2","savedConfig","_ret3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","__cache","typeConfig","excludeOperators","typeWidgetConfig","defOp","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_argKey","_funcKey","_isFunc","_isCaseValue","_fieldConfig$fieldSet2","_keysToPutInFieldSett","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_typeWidgetConfig$opP","_fieldWidgetConfig$op","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_context3","t0","t1","_config$settings3","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$split","getFieldPathParts","onlyKeys","_field$get3","bucketKey","_config$__cache","_field$get4","_field$get5","_widgetConfig$opProps","widgetOpProps","fieldWidgetOpProps","mergedConfig","_fieldConfig$widgets","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","_not","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","origNot","groupOperatorDef","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","resultQuery","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","formatteOp","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","targetItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","_addChildren1","isLastDefaultCase","newChildrenWithLast","mergeIn","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","currentFielType","_getNewValueForFieldO3","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","_Utils$ConfigUtils","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","expectedType","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}