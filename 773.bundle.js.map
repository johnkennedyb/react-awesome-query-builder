{"version":3,"file":"773.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiPrice.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/utils/theming.ts","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/CssVarsProvider.tsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiProvider.tsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogicUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/mongoUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/spelUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/numberFormat.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaPrice.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaProvider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/colorUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder, config} = props;\n  const {renderSize} = config.settings;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size={renderSize}\n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: renderSize,\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        size={renderSize}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps, config} = props;\n  const {renderSize} = config.settings;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size={renderSize}\n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: renderSize,\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        size={renderSize}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps, config} = props;\n  const {renderSize} = config.settings;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size={renderSize}\n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: renderSize,\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        size={renderSize}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps, config}) => {\n  const {renderSize} = config.settings;\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size={renderSize}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { NumericFormat, getNumberFormatProps } = Utils.NumberFormat;\n\n\nexport default (props) => {\n  const {\n    value,\n    setValue,\n    readonly,\n    min,\n    max,\n    step,\n    placeholder,\n    customProps,\n\n    prefix,\n    suffix,\n  } = props;\n\n  const numericFormatProps = getNumberFormatProps(props, [\"prefix\", \"suffix\"]);\n\n  const handleChange = (values) => {\n    const val = values.floatValue;\n    setValue(val === undefined ? null : val);\n  };\n\n  const formattedValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(\n    () => ({\n      readOnly: readonly,\n      startAdornment: (prefix != undefined ? <InputAdornment position=\"start\">{prefix}</InputAdornment> : undefined),\n      endAdornment: (suffix != undefined ? <InputAdornment position=\"end\">{suffix}</InputAdornment> : undefined),\n    }),\n    [readonly]\n  );\n\n  // will not work without prop type=\"number\"\n  // const inputProps = useMemo(\n  //   () => ({\n  //     min,\n  //     max,\n  //   }),\n  //   [min, max, step]\n  // );\n\n  return (\n    <FormControl>\n      <NumericFormat\n        size=\"small\"\n        customInput={TextField}\n        value={formattedValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        //inputProps={inputProps}\n        disabled={readonly}\n        onValueChange={handleChange}\n        variant=\"standard\"\n        //type=\"number\"\n        {...customProps}\n        {...numericFormatProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps, config}) => {\n  const {renderSize} = config.settings;\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size={renderSize}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete, dontFixOptionsOrder,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n    dontFixOptionsOrder,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth, renderSize} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        size={renderSize}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({group}) => {\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    const groupMaybeJson = params.group;\n    let group;\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    } else if (groupMaybeJson) {\n      group = {\n        label: groupMaybeJson,\n      };\n    }\n    const groups = group ? (group.parentGroups ?? [group]) : [];\n    let res = (\n      <div key={params.key}>\n        {groups.map((gr) => (<GroupHeader key={gr?.path} group={gr} />))}\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size={renderSize}\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0, parentGroups = []) => {\n  const lvs = items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const getPrefix = (lev) => \"\\u00A0\\u00A0\".repeat(lev);\n    const prefix = getPrefix(level);\n    if (items) {\n      return itemsToListValues(items, level+1, [...parentGroups, item]);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n          parentGroups: parentGroups.map(({\n            tooltip, label, path\n          }, ind) => ({\n            path, tooltip, label: getPrefix(ind)+label\n          })),\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity);\n  \n  // Don't repeat groups\n  const usedGroups = [];\n  for (const lv of lvs) {\n    if (lv.group) {\n      lv.group.parentGroups = lv.group.parentGroups.filter(({path}) => (!usedGroups.includes(path)));\n      for (const gr of lv.group.parentGroups) {\n        usedGroups.push(gr.path);\n      }\n    }\n  }\n\n  return lvs;\n};\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n    dontFixOptionsOrder: true, // don't apply fixListValuesGroupOrder() for options\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly, renderSize}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size={renderSize ?? \"small\"}\n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon, config} = props;\n  const {renderSize} = config.settings;\n  const iconProps = {\n    type,\n    readonly,\n    renderSize,\n    config,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size={renderSize}\n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size={renderSize} \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={\"primary\"} \n      disableElevation\n      variant={checked ? \"contained\" : \"outlined\"}\n      sx={{\n        backgroundColor: checked ? \"primary.main\" : \"background.paper\",\n      }}\n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj, renderSize} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        size={renderSize}\n        key={id}\n        id={id + \"__not\"}\n        color={\"error\"} \n        disableElevation\n        variant={not ? \"contained\" : \"outlined\"}\n        sx={{\n          backgroundColor: not ? \"error.main\" : \"background.paper\",\n        }}\n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        size={renderSize}\n        disabled={readonly}\n        sx={{\n          marginLeft: \"1px\"\n        }}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly, config}) => {\n  const {renderSize} = config.settings;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size={renderSize} onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        size={renderSize}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","// https://mui.com/material-ui/customization/theming/\n// https://mui.com/material-ui/customization/palette/\n// https://mui.com/material-ui/customization/default-theme/\n\nimport { Utils, Config, CssVars } from \"@react-awesome-query-builder/ui\";\nimport { createTheme, Theme, ThemeOptions, PaletteOptions } from \"@mui/material/styles\";\nimport mergeWith from \"lodash/mergeWith\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\nconst { setColorOpacity, generateCssVarsForLevels, chroma } = Utils.ColorUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst filterBasicTheme = (theme: Theme) => {\n  const filteredPalette: PaletteOptions = omit(theme.palette, [\n    \"background\", \"text\", \"divider\", \"action\",\n  ]);\n  // filteredPalette = pick(filteredPalette, [\n  //   \"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\"\n  // ]);\n  return {\n    ...theme,\n    palette: filteredPalette,\n  } as ThemeOptions;\n};\n\nconst buildTheme = (config: Config, existingTheme?: Theme): Theme | null => {\n  const themeMode = config.settings.themeMode;\n  // const compactMode = config.settings.compactMode;\n  // const momentLocale = config.settings.locale?.moment;\n  const themeConfig = config.settings.theme?.mui as ThemeOptions | undefined;\n  const localeConfig = config.settings.locale?.mui;\n  const isFullTheme = (t?: Partial<Theme>) => !!t?.shadows && !!t?.palette?.mode;\n  const existingThemeMode = existingTheme?.palette.mode;\n  const canCreateTheme = !!themeConfig || themeMode || localeConfig;\n  if (!canCreateTheme) {\n    return null;\n  }\n\n  let mergedThemeOptions: ThemeOptions | undefined = undefined;\n  if (isFullTheme(themeConfig as Partial<Theme>)) {\n    // override existing theme completely\n    mergedThemeOptions = themeConfig;\n  } else {\n    // merge with existing theme\n    const filteredExistingTheme = (\n      themeMode && existingTheme && themeMode != existingThemeMode!\n        ? filterBasicTheme(existingTheme)\n        : existingTheme\n    ) as ThemeOptions | undefined;\n\n    mergedThemeOptions = mergeWith({}, \n      filteredExistingTheme ?? {}, \n      themeConfig ?? {},\n      themeMode && { palette: { mode: themeMode } }\n    ) as ThemeOptions;\n  }\n\n  return createTheme(\n    mergedThemeOptions,\n    localeConfig ?? {}\n  );\n};\n\nconst generateCssVars = (theme: Theme, config: Config): CssVars => {\n  logger.log(\"generateCssVars - MUI theme\", theme);\n  const { palette, typography, shadows } = theme;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n  const shape: Record<string, number> = (theme as any).shape;\n  const darkMode = palette.mode === \"dark\";\n  const useThickLeftBorderOnHoverItem = config.settings.designSettings?.useThickLeftBorderOnHoverItem ?? false;\n  const useShadowOnHoverItem = config.settings.designSettings?.useShadowOnHoverItem ?? false;\n\n  let cssVars: CssVars = {\n    \"--main-background\": palette.background.paper,\n\n    \"--rule-background\": darkMode ? palette.background.paper : palette.background.paper,\n    // level-based background colors\n    ...generateCssVarsForLevels(darkMode, \"--group-background\", palette.background.paper),\n    ...generateCssVarsForLevels(darkMode, \"--rulegroup-background\", palette.background.paper),\n    ...generateCssVarsForLevels(darkMode, \"--rulegroupext-background\", palette.background.paper),\n    ...generateCssVarsForLevels(darkMode, \"--switch-background\", palette.background.paper),\n    ...generateCssVarsForLevels(darkMode, \"--case-background\", palette.background.paper),\n\n    \"--rule-border-color\": darkMode ? palette.divider : chroma(palette.divider).brighten(3).hex(),\n    \"--group-border-color\": darkMode ? palette.divider : palette.divider,\n    \"--rulegroup-border-color\": darkMode ? palette.divider : palette.divider,\n    \"--rulegroupext-border-color\": darkMode ? palette.divider : palette.divider,\n    \"--switch-border-color\": darkMode ? palette.divider : palette.divider,\n    \"--case-border-color\": darkMode ? palette.divider : palette.divider,\n\n    \"--treeline-color\": palette.primary.main,\n    \"--treeline-switch-color\": palette.secondary.main,\n\n    \"--main-text-color\": palette.text.primary,\n    \"--main-font-family\": typography.fontFamily!,\n    \"--main-font-size\": typography.fontSize + \"px\",\n    \"--item-radius\": shape.borderRadius + \"px\",\n  };\n\n  if (useThickLeftBorderOnHoverItem) {\n    cssVars = {\n      ...cssVars,\n      \"--rule-border-left-width-hover\": \"2px\",\n      \"--group-border-left-width-hover\": \"2px\",\n      \"--rulegroup-border-left-width-hover\": \"2px\",\n      \"--rulegroupext-border-left-width-hover\": \"2px\",\n    };\n  }\n  \n  if(useShadowOnHoverItem) {\n    cssVars = {\n      ...cssVars,\n      \"--rule-shadow-hover\": shadows[1],\n      \"--group-shadow-hover\": shadows[1],\n      \"--rulegroup-shadow-hover\": shadows[1],\n      \"--rulegroupext-shadow-hover\": shadows[1],\n    };\n  }\n\n  return cssVars;\n};\n\nexport {\n  buildTheme,\n  generateCssVars,\n};\n","import React from \"react\";\nimport { Config } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { generateCssVars as defaultGenerateCssVars } from \"../../utils/theming\";\n\ninterface CssVarsProviderProps {\n  config: Config;\n  children: React.ReactNode;\n}\n\nconst CssVarsProvider: React.FC<CssVarsProviderProps> = ({ children, config }) => {\n  const ref = React.createRef<HTMLDivElement>();\n  const themeMode = config.settings.themeMode ?? \"light\";\n  const compactMode = config.settings.compactMode;\n  const liteMode = config.settings.liteMode;\n  const enableCssVars = !!config.settings.designSettings?.generateCssVarsFromThemeLibrary;\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    const cssVarsTarget = ref.current;\n    let cssVars: Record<string, string> = {};\n    if (enableCssVars) {\n      const generateCssVars = config.settings.designSettings?.generateCssVars?.mui ?? defaultGenerateCssVars;\n      cssVars = generateCssVars.call(config.ctx, theme, config) as Record<string, string>;\n      for (const k in cssVars) {\n        if (cssVars[k] != undefined) {\n          cssVarsTarget?.style.setProperty(k, cssVars[k]);\n        }\n      }\n    }\n    return () => {\n      for (const k in cssVars) {\n        cssVarsTarget?.style.removeProperty(k);\n      }\n    };\n  }, [themeMode, theme, config, enableCssVars]);\n\n  return (<div ref={ref} className={`qb-mui qb-${themeMode} ${compactMode ? \"qb-compact\" : \"\"} ${liteMode ? \"qb-lite\" : \"\"}`}>{children}</div>);\n};\n\nexport { CssVarsProvider };\n","import React from \"react\";\nimport { ProviderProps, Utils, Config } from \"@react-awesome-query-builder/ui\";\nimport { ThemeProvider, useTheme, extendTheme, Theme } from \"@mui/material/styles\";\nimport { ConfirmProvider } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport { CssVarsProvider } from \"./CssVarsProvider\";\nimport { buildTheme } from \"../../utils/theming\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst xdpVersion = parseInt((xdpPackage.version as string)?.split(\".\")?.[0] ?? \"0\");\n\n\nconst MuiProvider: React.FC<ProviderProps> = ({config, children}) => {\n  const momentLocale = config.settings.locale?.moment;\n  const existingOuterTheme = useTheme();\n  const existingTheme = config.settings.designSettings?.canInheritThemeFromOuterProvider ? existingOuterTheme : undefined;\n\n  const mergedTheme = React.useMemo<Theme | null>(() => {\n    return buildTheme(config, existingTheme);\n  }, [config, existingTheme]);\n\n  const locProviderProps = momentLocale ? (xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  }) : {};\n\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        <CssVarsProvider config={config}>\n          {children}\n        </CssVarsProvider>\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n\n  const withTheme = mergedTheme ? (\n    <ThemeProvider theme={mergedTheme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\nexport {\n  MuiProvider,\n};\n","import React from \"react\";\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiPriceWidget from \"./value/MuiPrice\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport { MuiConfirm, MuiUseConfirm } from \"./core/MuiConfirm\";\nimport { MuiProvider } from \"./core/MuiProvider\";\n\n\nconst MuiWidgets = {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiPriceWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm,\n\n  MuiProvider,\n};\n\nexport default MuiWidgets;\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n  const {renderSize} = config.settings;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size={renderSize}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows, renderSize} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size={renderSize}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  const {renderSize} = config.settings;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size={renderSize}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth, renderSize} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size={renderSize}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size={renderSize}\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  // todo: css\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-24px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth, renderSize} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size={renderSize}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size={renderSize}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size={renderSize}\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly, config } = props;\n  const {renderSize} = config.settings;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n\n  return (\n    <FormControl size={renderSize}>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              size={renderSize}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel, config,\n}) => {\n  const {renderSize} = config.settings;\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size={renderSize}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={renderSize}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={renderSize}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={renderSize}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","import { useConfirm } from \"material-ui-confirm\";\n\nexport const MuiUseConfirm = function () {\n  const confirmFn = useConfirm();\n  return ({okText, cancelText, title, onOk}) => {\n    confirmFn({\n      description: title || \"Are you sure?\",\n      title: null,\n      confirmationText: okText || \"Ok\",\n      cancellationText: cancelText || \"Cancel\",\n    })\n      .then(onOk)\n      .catch(() => {});\n  };\n};\n\nexport const MuiConfirm = ({confirmFn, ...renderOptions}) => {\n  confirmFn(renderOptions);\n};\n","import React from \"react\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\nimport { default as MuiWidgets } from \"../widgets\";\nimport { generateCssVars } from \"../utils/theming\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  price: {\n    ...BasicConfig.widgets.price,\n    factory: (props, { RCE, W: { MuiPriceWidget } }) => RCE(MuiPriceWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n  generateCssVars,\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const isTruthy = (value) => {\n  return !!value;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const isSafeKeyForObject = (k) => {\n  return ![\"__proto__\", \"constructor\", \"prototype\"].includes(k);\n};\n\nexport const hasSafeOwnProperty = (obj, k) => {\n  return Object.prototype.hasOwnProperty.call(obj, k) && isSafeKeyForObject(k);\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    if (!isSafeKeyForObject(k)) {\n      throw new Error(`path contains unsafe ${k}`);\n    }\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      if (!isSafeKeyForObject(mk)) {\n        throw new Error(`mixin contains unsafe key ${mk}`);\n        // newObjChanged = false;\n        // break;\n      }\n      if (!hasSafeOwnProperty(targetMix, mk)) {\n        continue;\n      }\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    // should not be possible\n    // if (field._isFuncArg) {\n    //   // it's func arg\n    //   return null;\n    // }\n    // if (field._isFunc) {\n    //   // it's field func\n    //   return \"func\";\n    // }\n    if (!field.func && field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type && !!field.widgets) {\n      // it's already a config\n      // but don't mess up with obj from `getFuncSignature`, it has `type` but no `widgets` and other keys !\n      return field;\n    }\n    if (field._isFuncArg) {\n      // it's func arg\n      return getFuncArgConfig(config, field._funcKey, field._argKey);\n    }\n    if (field._isFunc) {\n      // it's a func\n      return getFuncConfig(config, field._funcKey);\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's a func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig?.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  fixJsonLogicDateCompareOp: false, // todo: change to true in next minor/major version\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n  loadMoreLabel: \"Load more...\",\n  loadingMoreLabel: \"Loading more...\",\n  typeToSearchLabel: \"Type to search\",\n  loadingLabel: \"Loading...\",\n  notFoundLabel: \"Not found\",\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nexport function addJsonLogicOperation(name, op, jl = JL) {\n  return jl.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  //\n  // string\n  //\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  //\n  // date / datetime\n  //\n  \"date==\": (a, b) => {\n    if (a == null || b == null) {\n      return false;\n    }\n    const dateA = moment(a).startOf(\"day\");\n    const dateB = moment(b).startOf(\"day\");\n    return dateA.isSame(dateB); \n  },\n  \"date!=\": (a, b) => { return !customJsonLogicOperations[\"date==\"](a, b); },\n  \"datetime==\": (a, b) => {\n    if (a == null || b == null) {\n      return false;\n    }\n    const dateA = moment(a);\n    const dateB = moment(b);\n    return dateA.isSame(dateB); \n  },\n  \"datetime!=\": (a, b) => { return !customJsonLogicOperations[\"datetime==\"](a, b); },\n  now: () => new Date(),\n  today: () => {\n    const start = moment().startOf(\"day\");\n    const y = start.year();\n    const m = start.month();\n    const d = start.date();\n    // tip: we use UTC to return same result as eg. new Date(\"2025-05-16\")\n    const startUtc = moment.utc([y, m, d]);\n    return startUtc.toDate();\n  },\n  start_of_today: () => { return moment().startOf(\"day\").toDate(); },\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  datetime_add: (datetime, val, dim) => { return moment(datetime).add(val, dim).toDate(); },\n  datetime_truncate: (datetime, dim) => { return moment(datetime).startOf(dim).toDate(); },\n};\n\nexport function addRequiredJsonLogicOperations(jl = JL) {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k], jl);\n  }\n}\n\n/**\n * @deprecated\n */\nexport const jsonLogicFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => part?.value ?? part)\n      .filter(r => r != undefined);\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * @deprecated\n */\nexport const jsonLogicImportConcat = (val) => {\n  if (val == undefined)\n    return undefined;\n  const errors = [];\n  const parts = Array.isArray(val) ? val : [val];\n  const res = parts.filter(v => v != undefined).map(v => {\n    return {\n      type: \"property\", \n      value: val\n    };\n  });\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"));\n  }\n  return res;\n};","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst dateDimListValues = {\n  day: \"day\",\n  week: \"week\",\n  month: \"month\",\n  year: \"year\",\n};\nconst dateDimDefault = \"day\";\nconst datetimeDimListValues = {\n  hour: \"hour\",\n  minute: \"minute\",\n  second: \"second\",\n  ...dateDimListValues,\n};\nconst datetimeDimDefault = \"day\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  // jsonLogic: \"now\",\n  jsonLogic: () => {\n    return {now: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"now\"]) {\n      return [];\n    }\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: function () {\n    return {\n      \"$toDate\": \"$$NOW\"\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n    //     \"format\": \"%Y-%m-%d %H:%M:%S\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"NOW\",\n};\n\n// todo: add option like `resolveWithValueOnExport: false` for NOW, TODAY, START_OF_TODAY (issue #1234) ???\n\nconst TODAY = {\n  label: \"Today\",\n  returnType: \"date\",\n  //jsonLogic: \"today\",\n  jsonLogicCustomOps: {\n    today: {},\n  },\n  jsonLogic: () => {\n    return {today: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"today\"]) {\n      return [];\n    }\n  },\n  spelFunc: \"T(java.time.LocalDate).now()\",\n  sqlFormatFunc: () => \"CURDATE()\",\n  sqlFunc: \"CURDATE\",\n  mongoFormatFunc: function () {\n    return {\n      \"$dateTrunc\": {\n        // or \"date\": \"$$NOW\",\n        \"date\": { \"$toDate\": \"$$NOW\" },\n        \"unit\": \"day\"\n      }\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD\"),\n    //     \"format\": \"%Y-%m-%d\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"TODAY\",\n};\n\nconst START_OF_TODAY = {\n  label: \"Start of today\",\n  returnType: \"datetime\",\n  jsonLogicCustomOps: {\n    start_of_today: {},\n  },\n  // jsonLogic: \"start_of_today\",\n  jsonLogic: () => {\n    return {start_of_today: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"start_of_today\"]) {\n      return [];\n    }\n  },\n  spelFunc: \"T(java.time.LocalDateTime).now().truncatedTo(T(java.time.temporal.ChronoUnit).DAYS)\",\n  spelImport: (spel) => {\n    // spel = {\n    //   \"type\": \"!func\",\n    //   \"methodName\": \"truncatedTo\",\n    //   \"args\": [\n    //     {\n    //       \"type\": \"compound\",\n    //       \"children\": [\n    //         { \"type\": \"!type\", \"cls\": [ \"java\", \"time\", \"temporal\", \"ChronoUnit\" ] },\n    //         { \"type\": \"property\", \"val\": \"DAYS\" }\n    //       ]\n    //     }\n    //   ],\n    //   \"obj\": {\n    //     \"type\": \"!func\",\n    //     \"methodName\": \"now\",\n    //     \"obj\": {\n    //       \"type\": \"!type\",\n    //       \"cls\": [ \"java\", \"time\", \"LocalDateTime\" ]\n    //     }\n    //   }\n    // }\n    const { obj, args } = spel;\n    const isTruncate = spel?.type === \"!func\" && spel?.methodName === \"truncatedTo\";\n    const isObjNow = obj?.methodName === \"now\" && obj?.obj?.cls?.join(\".\") === \"java.time.LocalDateTime\";\n    const argsLength = args?.length || 0;\n    const oneArg = args?.[0];\n    const oneArgType = oneArg?.children?.[0];\n    const oneArgProperty = oneArg?.children?.[1];\n    const oneArgCls = oneArgType?.type === \"!type\" && oneArgType?.cls?.join(\".\");\n    const oneArgConst = oneArgProperty?.type === \"property\" && oneArgProperty?.val;\n    const isArgDays = argsLength === 1 && oneArg.type === \"compound\" && oneArgCls === \"java.time.temporal.ChronoUnit\" && oneArgConst === \"DAYS\";\n    if (isObjNow && isTruncate && isArgDays) {\n      return {};\n    }\n  },\n  sqlFormatFunc: () => \"DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00')\",\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if (sqlObj?.func === \"DATE_FORMAT\" && sqlObj.children?.length === 2) {\n      const [date, format] = sqlObj.children;\n      if (format?.value == \"%Y-%m-%d 00:00:00\" && date?.func == \"NOW\") {\n        return {\n          args: {}\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function () {\n    return {\n      \"$dateTrunc\": {\n        \"date\": { \"$toDate\": \"$$NOW\" },\n        \"unit\": \"day\"\n      }\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD\"),\n    //     \"format\": \"%Y-%m-%d\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"START_OF_TODAY\",\n};\n\nconst TRUNCATE_DATETIME = {\n  label: \"Truncate\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"to\"],\n  jsonLogicCustomOps: {\n    datetime_truncate: {},\n  },\n  jsonLogic: ({date, dim}) => ({\n    \"datetime_truncate\": [\n      date,\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    if (v[\"datetime_truncate\"]) {\n      const date = v[\"datetime_truncate\"][0];\n      const dim = v[\"datetime_truncate\"][1];\n      return [date, dim];\n    }\n  },\n  spelFormatFunc: ({date, dim}) => {\n    const dimPluralUppercase = (dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\").toUpperCase();\n    return `${date}.truncatedTo(T(java.time.temporal.ChronoUnit).${dimPluralUppercase})`;\n  },\n  spelImport: (spel) => {\n    // spel = {\n    //   \"type\": \"!func\",\n    //   \"methodName\": \"truncatedTo\",\n    //   \"args\": [\n    //     {\n    //       \"type\": \"compound\",\n    //       \"children\": [\n    //         { \"type\": \"!type\", \"cls\": [ \"java\", \"time\", \"temporal\", \"ChronoUnit\" ] },\n    //         { \"type\": \"property\", \"val\": \"DAYS\" }\n    //       ]\n    //     }\n    //   ],\n    // }\n    const { args } = spel;\n    const isTruncate = spel?.type === \"!func\" && spel?.methodName === \"truncatedTo\";\n    const argsLength = args?.length || 0;\n    const oneArg = args?.[0];\n    const oneArgType = oneArg?.children?.[0];\n    const oneArgProperty = oneArg?.children?.[1];\n    const oneArgCls = oneArgType?.type === \"!type\" && oneArgType?.cls?.join(\".\");\n    const oneArgConst = oneArgProperty?.type === \"property\" && oneArgProperty?.val;\n    const isArgDays = argsLength === 1 && oneArg.type === \"compound\" && oneArgCls === \"java.time.temporal.ChronoUnit\" && oneArgConst;\n    const dim = oneArgConst.toLowerCase().substring(0, oneArgConst.length - 1); \n    if (isTruncate && isArgDays) {\n      return {\n        date: spel.obj,\n        dim: {type: \"string\", val: dim},\n      };\n    }\n  },\n  // MySQL\n  sqlFormatFunc: ({date, dim}, sqlDialect) => {\n    if (!sqlDialect || sqlDialect === \"MySQL\") {\n      dim = dim.replace(/^'|'$/g, \"\");\n      switch (dim) {\n      case \"second\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:%i:%s')`;\n      case \"minute\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:%i:00')`;\n      case \"hour\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:00:00')`;\n      case \"day\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d 00:00:00')`;\n      case \"week\":\n        return `DATE_SUB(DATE_FORMAT(${date}, '%Y-%m-%d 00:00:00'), INTERVAL WEEKDAY(${date}) DAY)`;\n      case \"month\":\n        return `DATE_FORMAT(${date}, '%Y-%m-01 00:00:00')`;\n      case \"year\":\n        return `DATE_FORMAT(${date}, '%Y-01-01 00:00:00')`;\n      }\n    } else if (sqlDialect === \"PostgreSQL\") {\n      return `date_trunc(${dim}, ${date})`;\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if (!sqlDialect || sqlDialect === \"MySQL\") {\n      if (sqlObj?.func === \"DATE_FORMAT\" && sqlObj.children?.length === 2) {\n        const [date, format] = sqlObj.children;\n        let dim;\n        switch (format?.value) {\n        case \"%Y-%m-%d %H:%i:%s\":\n          dim = \"second\";\n          break;\n        case \"%Y-%m-%d %H:%i:00\":\n          dim = \"minute\";\n          break;\n        case \"%Y-%m-%d %H:00:00\":\n          dim = \"hour\";\n          break;\n        case \"%Y-%m-%d 00:00:00\":\n          dim = \"day\";\n          break;\n        case \"%Y-%m-01 00:00:00\":\n          dim = \"month\";\n          break;\n        case \"%Y-01-01 00:00:00\":\n          dim = \"year\";\n        }\n        if (dim) {\n          return {\n            args: {\n              date,\n              dim\n            }\n          };\n        }\n      } else if (sqlObj?.func === \"DATE_SUB\" && sqlObj.children?.length === 2) {\n        const [dateFormat, interval] = sqlObj.children;\n        const isFormat = dateFormat?.func === \"DATE_FORMAT\" && dateFormat.children?.length === 2;\n        const isIntervalDay = interval._type == \"interval\" && interval.unit === \"day\";\n        if (isFormat && isIntervalDay) {\n          const [date, format] = dateFormat.children;\n          if (format?.value === \"%Y-%m-%d 00:00:00\") {\n            return {\n              args: {\n                date,\n                dim: \"week\"\n              }\n            };\n          }\n        }\n      }\n      return undefined;\n    } else if (sqlDialect === \"PostgreSQL\") {\n      if (sqlObj?.func === \"date_trunc\" && sqlObj.children?.length === 2) {\n        const [dim, date] = sqlObj.children;\n        return {\n          args: {\n            date,\n            dim: dim.value,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function ({date, dim}) {\n    return {\n      \"$dateTrunc\": {\n        \"date\": date,\n        \"unit\": dim,\n      }\n    };\n  },\n  formatFunc: ({date, dim}) => (`TRUNCATE ${date} TO ${dim}`),\n  args: {\n    date: {\n      label: \"Datetime\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"value\", \"field\", \"func\"],\n      escapeForFormat: true,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: datetimeDimDefault,\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: datetimeDimListValues,\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if (Object.keys(datetimeDimListValues).includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"datetime_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    if (v[\"datetime_add\"]) {\n      const date = v[\"datetime_add\"][0];\n      const val = Math.abs(v[\"datetime_add\"][1]);\n      const op = v[\"datetime_add\"][1] >= 0 ? \"plus\" : \"minus\";\n      const dim = v[\"datetime_add\"][2];\n      return [date, op, val, dim];\n    }\n  },\n  jsonLogicCustomOps: {\n    datetime_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function ({date, op, val, dim}) {\n    return {\n      \"$dateAdd\": {\n        \"startDate\": date,\n        \"unit\": dim,\n        \"amount\": val * (op == \"minus\" ? -1 : +1),\n      }\n    };\n  },\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Datetime\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"value\", \"field\", \"func\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: datetimeDimDefault,\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: datetimeDimListValues,\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\n\nconst RELATIVE_DATE = {\n  ...RELATIVE_DATETIME,\n  label: \"Relative\",\n  returnType: \"date\",\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  args: {\n    date: {\n      ...RELATIVE_DATETIME.args.date,\n      label: \"Date\",\n      type: \"date\",\n      defaultValue: {func: \"TODAY\", args: []},\n    },\n    op: {...RELATIVE_DATETIME.args.op},\n    val: {...RELATIVE_DATETIME.args.val},\n    dim: {\n      ...RELATIVE_DATETIME.args.dim,\n      defaultValue: dateDimDefault,\n      fieldSettings: {\n        listValues: dateDimListValues,\n      },\n    },\n  },\n};\n\n// todo: add DATEDIFF (issue #142)\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  TODAY,\n  START_OF_TODAY,\n  RELATIVE_DATETIME,\n  TRUNCATE_DATETIME,\n  RELATIVE_DATE,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject, hasSafeOwnProperty} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogicUtils\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"searchOrValues\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\", \"sqlDialect\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\", \"sqlDialect\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\", \"expectedType\", \"settings\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\", \"sqlDialect\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n    material: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n    antd: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  designSettings: {\n    generateCssVars: {\n      antd: { type: \"f\", args: [\"theme\", \"config\"] },\n      mui: { type: \"f\", args: [\"theme\", \"config\"] },\n      material: { type: \"f\", args: [\"theme\", \"config\"] },\n      fluent: { type: \"f\", args: [\"theme\", \"config\"] },\n      bootstrap: { type: \"f\", args: [\"theme\", \"config\"] },\n    },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (hasSafeOwnProperty(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const areConfigsSame = (config1, config2) => {\n  return configKeys.map(k => config1[k] === config2[k]).filter(v => !v).length === 0;\n};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    // Note: because of desctructing, strict find would not be possible\n    //  (see commented line in `findExtended`)\n    //  (see issue #1187)\n    configStore.set({...config}, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = areConfigsSame(extConfig, findConfig);\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nconst widgetPropsForDeepMerge = [\"customProps\"];\nconst opPropsForDeepMerge = [\"options\"]; // tip: options for proximity\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    if (fieldConfig.type !== \"!struct\") {\n      // console.warn(`No type config for ${type}`);\n      fieldConfig.disabled = true;\n    }\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    fieldWidgetConfig.widgetProps = {\n      ...(typeWidgetConfig.widgetProps || {}),\n      ...(widget === fieldConfig.mainWidget && fieldConfig.mainWidgetProps || {}),\n      ...(fieldWidgetConfig.widgetProps || {}),\n    };\n    // merge some object-type props (like `customProps`) deeply\n    for (const prop of widgetPropsForDeepMerge) {\n      if (fieldWidgetConfig.widgetProps[prop]) {\n        fieldWidgetConfig.widgetProps[prop] = {\n          ...(config.widgets[widget]?.[prop] || {}),\n          ...(typeWidgetConfig.widgetProps?.[prop] || {}),\n          ...(widget === fieldConfig.mainWidget && fieldConfig.mainWidgetProps?.[prop] || {}),\n          ...(fieldWidgetConfig.widgetProps?.[prop] || {}),\n        };\n      }\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n        // merge some object-type props (like `options` for `complexity` op) deeply\n        for (const opProp of opPropsForDeepMerge) {\n          if (opProps[op][opProp]) {\n            opProps[op][opProp] = {\n              ...(config.operators?.[op]?.[opProp] || {}),\n              ...(typeWidgetConfig.opProps?.[op]?.[opProp] || {}),\n              ...(fieldWidgetConfig.opProps?.[op]?.[opProp] || {}),\n            };\n          }\n        }\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  // Tip: for demo app isGroup0 is true for \"Results\" and \"Cars\" with group op in \"some\", \"all\", \"none\"\n  // If isGroup0 is false, we should use \"reduce\"\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let filterQuery = {};\n  if (preserveSingleRuleGroup)\n    filterQuery[conj] = list.toList().toJS();\n  else\n    filterQuery = list.first();\n\n  // reverse filter\n  if (filterNot) {\n    filterQuery = { \"!\": filterQuery };\n  }\n\n  let resultQuery = filterQuery;\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    let reduceQuery;\n    if (!isGroup0) {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            filterQuery\n          ]\n        };\n      reduceQuery = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n    }\n    const formattedLhs = reduceQuery ?? formattedField;\n    const optionsMap = new Map({\n      having: filterQuery,\n      reduce: reduceQuery,\n      groupField: field,\n      groupFieldFormatted: formattedField,\n    });\n    // if groupOperator defines its own jsonLogic function, then we should use it (issue #1241)\n    if (typeof groupOperatorDef?.jsonLogic === \"function\") {\n      // we should use optionsMap here\n      resultQuery = formatLogic(config, properties, formattedLhs, formattedValue, groupOperator, optionsMap, fieldDefinition);\n    } else {\n      if (isGroup0) {\n        // config.settings.groupOperators\n        const op = groupOperator || \"some\";\n        resultQuery = {\n          [op]: [\n            formattedField,\n            filterQuery\n          ]\n        };\n      } else {\n        resultQuery = formatLogic(config, properties, formattedLhs, formattedValue, groupOperator, null, fieldDefinition);\n      }\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue, expectedType) => {\n  let formattedOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formattedOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formattedOp))\n      return { [formattedOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formattedOp]: formattedField };\n    // else if (cardinality == 1 && eqOps.includes(formattedOp) && [\"date\", \"datetime\"].includes(expectedType))\n    //   return { [expectedType+formattedOp]: [formattedField, formattedValue] };\n    else if (cardinality == 1)\n      return { [formattedOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formattedOp))\n      return { [formattedOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formattedOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const firstValueType = properties.get(\"valueType\")?.get(0);\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const expectedType = fieldDefinition?.type ?? firstValueType;\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue, expectedType);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n    expectedType,\n    config.settings,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, opNot,  field, _op, value, not, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  let neg = not ^ opNot;\n\n  if (useExpr && mop == \"$nin\") {\n    // There is only `$in` aggregation operator but not `$nin` (`$nin` is only a query operator)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/in/\n    neg = !neg;\n    mop = \"$in\";\n  }\n\n  if (useExpr && mop == \"$regex\") {\n    // https://stackoverflow.com/questions/35750920/regex-as-filter-in-projection\n    let e = {\n      \"$regexFind\": {\n        input: $field,\n        regex: mv\n      }\n    };\n    if (neg) {\n      e = { \"$not\": e };\n    }\n    return e;\n  }\n\n  if (neg) {\n    // if (!useExpr && (!mop || mop == \"$eq\"))\n    //   return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, opNot,  field, _op, values, not, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not ^ opNot) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nexport const mongoFieldEscape = (input) => {\n  return input.replace(/\\$/g, \"\\uFF04\");\n};\n\nexport const mongoFieldUnescape = (input) => {\n  return input.replace(/\\uFF04/g, \"$\");\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { mongoFieldEscape } from \"../utils/mongoUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator, exportPreserveGroups, reverseOperatorsForNot} = config.settings;\n  const sep = fieldSeparator;\n\n  const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  const isInsideRuleGroup = !!parentRuleGroup;\n  const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n  const isInsideRuleGroupArray = isInsideRuleGroup && parentRuleGroup.get(\"properties\").get(\"mode\") == \"array\";\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, parentRuleGroupField);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const isSimpleGroupWithOneChild = !isRuleGroup && oneChildType === \"rule\";\n  const canRevChildren = (not && isSimpleGroupWithOneChild || filterNot && children?.size === 1) && !exportPreserveGroups; // && !!reverseOperatorsForNot;\n  if (canRevChildren) {\n    if (isSimpleGroupWithOneChild) {\n      not = !not;\n    } else {\n      filterNot = !filterNot;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!reverseOperatorsForNot && !exportPreserveGroups || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n     && !!reverseOperatorsForNot && !exportPreserveGroups;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  // tip: can't use \"$expr\" inside \"$filter\".\"cond\" or inside \"$elemMatch\"\n  const canWrapExpr = !isRuleGroup && !isInsideRuleGroup;\n  const formatFieldNameFn = mode == \"array\" ? (f => `$$el${sep}${f}`) : _formatFieldName;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, canWrapExpr, formatFieldNameFn)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  let shortQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\") && !exportPreserveGroups;\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (resultQuery) {\n      shortQuery = true;\n    } else {\n      // can't be shorten\n      shortQuery = false;\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + mongoFieldEscape(groupFieldName),\n            []\n          ]\n        }\n      };\n      if (filterNot && resultQuery) {\n        resultQuery = { \"$not\": resultQuery };\n        filterNot = false;\n      }\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + mongoFieldEscape(groupFieldName),\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      const notForRule = !exportPreserveGroups ? not : false;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, notForRule, false, (_f => filterQuery), totalQuery\n      );\n      if (notForRule) {\n        not = false;\n      }\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      // tip: $elemMatch can't have $not and $expr inside BUT can have $nor\n      resultQuery = { [mongoFieldEscape(groupFieldName)]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    // tip: $nor can't be inside $filter.cond or $expr\n    if (isInsideRuleGroupArray) {\n      // inside $filter.cond\n      resultQuery = { \"$not\": resultQuery };\n    } else {\n      resultQuery = { \"$nor\": [ resultQuery ] };\n    }\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, parentRuleGroupField);\n  } else {\n    formattedField = formatFieldName(field, config, meta, parentRuleGroupField);\n    formattedField = mongoFieldEscape(formattedField);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentRuleGroupField, operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    not,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  // `mongoFormatOp` function SHOULD handle `not`\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    // if (not) {\n    //   ruleQuery = { \"$not\": ruleQuery };\n    // }\n    ruleQuery = { \"$expr\": ruleQuery };\n  } else {\n    // if (not) {\n    //   ruleQuery = { \"$nor\": [ ruleQuery ] };\n    // }\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n    if (ret?.[\"$dateFromString\"]) {\n      // $dateFromString (or $toDate) is an aggregation operator only\n      useExpr = true;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + mongoFieldEscape(formattedField);\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\n// @deprecated\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// @deprecated\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\n// @deprecated Use dedicated utils instead\nexport { mongoEmptyValue } from \"./mongoUtils\";\nexport { spelEscape, spelFixList, spelFormatConcat, spelImportConcat } from \"./spelUtils\";\n\n// todo: move to sqlUtils\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.unescapeLike = (val, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  let res = val;\n  // unescape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/\\\\\\\\([%_])/g, \"$1\");\n  } else {\n    res = res.replace(/\\\\([%_])/g, \"$1\");\n  }\n  return res;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/[%_\\\\]/g, \"\\\\\\\\$&\");\n  } else {\n    res = res.replace(/[%_]/g, \"\\\\$&\");\n  }\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const valFieldDefinition = valueSrc == \"field\" && getFieldConfig(config, currentValue) || {}; \n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        operator,\n        operatorDef,\n        valFieldDefinition,\n        config.settings.sqlDialect,\n      ];\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs,\n      config.settings.sqlDialect,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/spelUtils\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\" && field;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const {value: formattedField} = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType ?? fieldDef.type);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const {value: formattedField, valueSrc: _fieldSrc, valueType: fieldType} = formatLhs(meta, config, field, fieldSrc, parentField) ?? {};\n  if (formattedField === undefined)\n    return undefined;\n\n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType ?? fieldType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return {\n    value: formattedValue,\n    valueSrc: (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    valueType: (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  };\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    // formatField() returns type {value, valueSrc, valueType}\n    ret = formatField(meta, config, currentValue, parentField)?.value;\n  } else if (valueSrc === \"func\") {\n    // formatFunc() returns type {value, valueSrc, valueType}\n    ret = formatFunc(meta, config, currentValue, parentField, valueType)?.value;\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf?.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf?.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return {value: formattedField, valueSrc: \"field\", valueType: fieldDefinition?.type};\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null, valueType = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  // tip: returnType should equal valueType\n  return {value: ret, valueSrc: \"func\", valueType: funcConfig.returnType};\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (parents, item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(parents, item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  // const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  // const isInsideRuleGroup = !!parentRuleGroup;\n  // const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n  // const isInsideRuleGroupArray = isInsideRuleGroup && parentRuleGroup.get(\"properties\").get(\"mode\") == \"array\";\n  // // TIP: don't cut group for mode == 'struct'\n  // const realParentGroupField = isInsideRuleGroupArray && parentRuleGroupField;\n  const realParentGroupField = parentField;\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem([...parents, item], currentChild, config, meta, groupField ?? realParentGroupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(parents, item, config, meta, realParentGroupField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (parents, item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport Immutable from \"immutable\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlRawFieldMarker = \"jlRawField\";\nconst jlHavingMarker = \"jlHavingMarker\";\n\nconst jlArgsMarker = new Proxy({\n  __name: \"jlArgs\",\n  __test: (v) => {\n    const m = v?.match?.(/jlArgs\\[(\\d+)\\]/);\n    if (m) {\n      return parseInt(m[1]);\n    }\n  },\n}, {\n  get: function(target, k) {\n    if (!isNaN(parseInt(k))) {\n      return \"jlArgs[\"+k+\"]\";\n    } else {\n      return target[k];\n    }\n  }\n});\n\nconst jlEqOps = [\"==\", \"!=\", \"datetime==\", \"datetime!=\", \"date==\", \"date!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\", \"case_val\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    const cardinality = getOpCardinality(opConfig);\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + cardinality;\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if (typeof opConfig.jsonLogic === \"function\") {\n      let template;\n      try {\n        template = opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker, opConfig, new Immutable.Map({\n          having: jlHavingMarker,\n          groupField: jlRawFieldMarker,\n          // reduce: undefined,\n          // groupFieldFormatted: undefined,\n        }));\n      } catch(e) {\n        console.warn(`Error while running JsonLogic template for op ${opKey}`, e);\n        continue;\n      }\n      \n      const opInTemplate = Object.keys(template)[0];\n      const isRevArgs = opConfig.jsonLogic2?.startsWith(\"#\");\n      // example: \"all-in/1\"\n      const newOp = opConfig.jsonLogic2?.replace(/^#/, \"\") ?? opInTemplate;\n      const ops = opConfig.jsonLogicOps ?? [newOp];\n      ops.map(op => {\n        const opk = op + \"/\" + cardinality;\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": template, \n        \"newOp\": newOp,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.newOp;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": [], \"jlHaving\": null}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    }\n    const maybeArgIndex = jlArgsMarker.__test(value);\n    if (maybeArgIndex !== undefined) {\n      response.jlArgs[maybeArgIndex] = jsonlogic[key];\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlRawFieldMarker) {\n      response.jlField = {var: jsonlogic[key]};\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (value === jlHavingMarker) {\n      response.jlHaving = jsonlogic[key];\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special `newOp` value (usually taken from jsonLogic2)\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    if (match.jlHaving) {\n      vals.push(match.jlHaving);\n    }\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    const errorsBefore = [...meta.errors];\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertSwitch(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    const errorsAfter = [...meta.errors];\n    if (ret == undefined && expectedTypes.includes(\"case_val\")) {\n      // last resort\n      meta.errors = errorsBefore;\n      ret = convertCaseVal(op, vals, conv, config, not, meta, parentField);\n      if (ret == undefined) {\n        meta.errors = errorsAfter;\n      }\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (groupOp, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  const groupOpConfig = config.operators[groupOp];\n  let isGroup = !!groupOpConfig;\n  // const isGroup0 = groupOpConfig?.cardinality == 0;\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup) {\n    // If current op is in `config.groupOperators`, first arg is having query (see `match.jlHaving`)\n    having = args[0];\n    args = args.splice(1);\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const groupOp = config.settings.groupOperators.find(groupOp => {\n    const groupOpConfig = config.operators[groupOp];\n    return [groupOp, typeof groupOpConfig.jsonLogic === \"string\" && groupOpConfig.jsonLogic, groupOpConfig.jsonLogic2].includes(op);\n  });\n  const groupOpConfig = config.operators[groupOp];\n  const isGroup0 = groupOp && groupOpConfig?.cardinality == 0 && !isAllOrSomeInForMultiselect;\n  let cardinality = groupOpConfig?.cardinality ?? (arity - 1);\n  if (!isGroup0 && jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(groupOp, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n      if (jlDualMeaningOps.includes(match.newOp)) {\n        // use original order of args\n        havingVals = match.vals;\n      }\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertCaseVal = (op, vals, conv, config, not, meta, parentField = null) => {\n  const val = {[op]: vals};\n  const defaultCaseVal = buildCaseValProperties(config, meta, conv, val);\n  if (defaultCaseVal === undefined) {\n    return undefined;\n  }\n  const defaultCase = wrapInCase(null, defaultCaseVal, config, meta);\n  const children1 = [defaultCase];\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst convertSwitch = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func || dv?.get?.(\"func\")) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    const v = valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n    // Fix if func in LHS has `defaultValue: { func: ..., args: {...} }`\n    if (v?.func) {\n      valueFixes[i] = jsToImmutable(v);\n      valueSrcFixes[i] = \"func\";\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\nexport const setArgValueAsyncListValues = (value, argKey, asyncListValues, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"asyncListValues\"], asyncListValues);\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  \n  const isFetchSelectedValues = !!meta?.fetchSelectedValues && Array.isArray(search);\n  if (isFetchSelectedValues) {\n    const values = listValuesToArray(all)\n      .filter(({value}) => search.includes(value));\n    return {\n      values\n    };\n  }\n\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const isBetweenNormal = (child.type == \"op-and\" && child.children.length == 2 && child.children[0].type == \"op-ge\" && child.children[1].type == \"op-le\");\n      const isBetweenRev = (child.type == \"op-or\" && child.children.length == 2 && child.children[0].type == \"op-lt\" && child.children[1].type == \"op-gt\");\n      const isBetween = isBetweenNormal || isBetweenRev;\n      const canFlatize = child.type == type && !child.not && !isBetween;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(e) {\n          logger.debug(`Error while using spelImport for ${f}`, e);\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n\n          // Special case to distinct date and datetime\n          let isOk = true;\n          const funcType = funcConfig?.returnType;\n          if ([\"date\", \"datetime\"].includes(funcType)) {\n            const dateArgsKeys = Object.keys(funcConfig.args ?? []).filter(k => [\"date\", \"datetime\"].includes(funcConfig.args[k].type));\n            for (const k of dateArgsKeys) {\n              const argConfig = funcConfig.args[k];\n              const expectedType = argConfig.type;\n              const realType = argsObj[k]?.valueType;\n              if (realType && realType != expectedType) {\n                isOk = false;\n              }\n            }\n          }\n          if (isOk) {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // final convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {\n  mongoEmptyValue, mongoFormatOp1, mongoFormatOp2,\n} from \"../utils/mongoUtils\";\nimport {\n  spelFixList, spelEscape,\n} from \"../utils/spelUtils\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic2: \"==\",\n    jsonLogicOps: [\"==\", \"datetime==\", \"date==\"],\n    jsonLogic: (field, op, val, _opDef, _opOpts, _fieldDef, expectedType, settings) => {\n      if (settings?.fixJsonLogicDateCompareOp && [\"date\", \"datetime\"].includes(expectedType)) {\n        return { [`${expectedType}==`]: [field, val] };\n      }\n      return { \"==\": [field, val] };\n    },\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic2: \"!=\",\n    jsonLogicOps: [\"!=\", \"datetime!=\", \"date!=\"],\n    jsonLogic: (field, op, val, _opDef, _opOpts, _fieldDef, expectedType, settings) => {\n      if (settings?.fixJsonLogicDateCompareOp && [\"date\", \"datetime\"].includes(expectedType)) {\n        return { [`${expectedType}!=`]: [field, val] };\n      }\n      return { \"!=\": [field, val] };\n    },\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1, right.value.length - 1), sqlDialect);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1), sqlDialect);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(0, right.value.length - 1), sqlDialect);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} >= ${valFrom} && ${field} <= ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  price: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Price\",\n    valueLabels: [\n      { label: \"Price from\", placeholder: \"Enter price from\" },\n      { label: \"Price to\", placeholder: \"Enter price to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {      \n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // tip: we use UTC to return same result as new Date(val)\n      // new Date(\"2000-01-01\") is now the same as new Date(\"2000-01-01 00:00:00\") (first one in UTC)\n      return this.utils.moment.utc(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      if (dateVal.isValid()) {\n        return {\n          \"$dateFromString\": {\n            \"dateString\": dateVal.format(\"YYYY-MM-DD\"),\n            \"format\": \"%Y-%m-%d\"\n          }\n        };\n      }\n      return undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef, sqlDialect) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      if (dateVal.isValid()) {\n        return {\n          \"$dateFromString\": {\n            \"dateString\": dateVal.format(\"YYYY-MM-DD HH:mm:ss\"),\n            \"format\": \"%Y-%m-%d %H:%M:%S\"\n          }\n        };\n      }\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef, sqlDialect) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      price: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\", \"price\"],\n    \"slider\": [\"number\", \"rangeslider\", \"price\"],\n    \"rangeslider\": [\"number\", \"slider\", \"price\"],\n    \"price\": [\"number\", \"slider\", \"rangeslider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const REMOVE_GROUP_CHILDREN = \"REMOVE_GROUP_CHILDREN\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc, setArgValueAsyncListValues} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroupChildren = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeChildren(state, path);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeChildren = (state, path) => {\n  state = state.deleteIn(expandTreePath(path, \"children1\"));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${targetFV.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n      if (asyncListValues) {\n        targetFV = setArgValueAsyncListValues(targetFV, argKey, asyncListValues, argDefinition, config);\n      }\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, undefined, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, undefined, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children?.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig?.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.REMOVE_GROUP_CHILDREN: {\n      set.tree = removeGroupChildren(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroupChildren = (config, path) => ({\n  type: constants.REMOVE_GROUP_CHILDREN,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const REMOVE_GROUP_CHILDREN = \"REMOVE_GROUP_CHILDREN\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n    const canUseOldConfig = isConfigChanged && !isTreeChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, canUseOldConfig ? oldConfig : undefined, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const lev = this.props.path.size - 1;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={lev}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={lev}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (!treeEl) {\n        console.error(\"Please change renderBuilder implementation of <Query>: wrap <Builder> with div.query-builder for drag-n-drop support\");\n        return;\n      }\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = (\n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId\n      );\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null,\n        \"level-\" + this.props.lev\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    if (!this.meta.items) {\n      return null;\n    }\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, parentDelta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get?.(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    parentDelta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    parentDelta: PropTypes.number,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\", \"parentDelta\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id, parentDelta,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      }]);\n    }\n    const widgets = (isFuncArg ? [0] : range(0, cardinality)).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta ?? delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue, parentDelta,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          parentDelta={parentDelta ?? delta}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    const { isFuncArg } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {(isFuncArg ? [0] : range(0, cardinality)).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    parentDelta: PropTypes.number,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, parentDelta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition, parentDelta} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue, parentDelta,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n    const asyncListValues = arg?.get(\"asyncListValues\");\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      asyncListValues,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n      parentDelta,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        parentDelta={this.props.parentDelta}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown, config, isLocked } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n      config={config}\n      readonly={isLocked}\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    removeGroupChildren = () => {\n      this.props.actions.removeGroupChildren(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const lev = this.props.path.size - 1;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={lev}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              removeGroupChildren={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={lev}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              removeGroupChildren={isInDraggingTempo ? this.dummyFn : this.removeGroupChildren}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    removeGroupChildren: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.removeGroupChildren = this.removeGroupChildren.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeGroupChildren() {\n    this.props.removeGroupChildren();\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown, config, isLocked } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n      readonly={isLocked}\n      config={config}\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  canRenderConjs() {\n    const { children1 } = this.props;\n    if (!this.showConjs())\n      return false;\n    if (!children1 || !children1.size)\n      return false;\n    return true;\n  }\n\n  renderConjs() {\n    const {\n      config, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.canRenderConjs())\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group simple_group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig?.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <>\n        {this.renderGroupField()}\n        {this.renderError()}\n        {this.renderGroupHeader()}\n      </>\n    );\n  }\n\n  canRenderHeader() {\n    return this.canRenderConjs();\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={classNames(\n        \"group--field--count--rule\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n      )}>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {/* {!this.isNoChildren() ? \" where:\" : \"\"} */}\n        {this.renderSelfActions()}\n      </div>\n    );\n  }\n\n  canRenderGroupHeader() {\n    return this.canRenderHeader() && this.canRenderChildrenActions();\n  }\n\n  renderGroupHeader() {\n    if (!this.canRenderGroupHeader()) {\n      return null;\n    }\n    return (\n      <div className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderChildrenActions()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  showChildrenActionsAsSelf() {\n    const { config } = this.props;\n    const { forceShowConj } = config.settings;\n    return this.isNoChildren()\n      || this.isOneChild() && !forceShowConj && !this.showNot()\n      || !this.showNot() && !this.showConjs();\n  }\n\n  canRenderChildrenActions() {\n    return !this.showChildrenActionsAsSelf() && (this.canAddRule() || this.canAddGroup());\n  }\n\n  childrenAreRequired() {\n    const {config, selectedOperator} = this.props;\n    const cardinality = config.operators[selectedOperator]?.cardinality ?? 1;\n    return cardinality == 0; // tip: for group operators some/none/all\n  }\n\n  renderChildrenActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={!this.showChildrenActionsAsSelf() && this.canAddRule()}\n      canAddGroup={!this.showChildrenActionsAsSelf() && this.canAddGroup()}\n      removeSelf={this.removeGroupChildren}\n      canDeleteGroup={true}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id+\"_children\"}\n    />;\n  }\n\n  renderSelfActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.showChildrenActionsAsSelf() && this.canAddRule()}\n      canAddGroup={this.showChildrenActionsAsSelf() && this.canAddGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      canDeleteGroup={this.canDeleteGroup()}\n      id={id+\"_self\"}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          }),\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import { NumericFormat, numericFormatter as _numericFormatter, removeNumericFormat, useNumericFormat } from \"react-number-format\";\n\nconst getNumberFormatProps = (props, excludePropsNames = []) => {\n  const propNames = [\n    // Numeric format\n    \"prefix\",\n    \"suffix\",\n    \"thousandsGroupStyle\",\n    \"thousandSeparator\",\n    \"allowLeadingZeros\",\n    \"allowNegative\",\n    \"decimalScale\",\n    \"decimalSeparator\",\n    \"fixedDecimalScale\",\n    // Pattern format\n    \"allowEmptyFormatting\",\n    \"format\",\n    \"mask\",\n    \"patternChar\",\n  ];\n  const existingPropNames = propNames.filter(k => !excludePropsNames.includes(k) && props[k] !== undefined);\n  const existingProps = Object.fromEntries(existingPropNames.map(k => [k, props[k]]));\n  if (props.min >= 0) {\n    existingProps.allowNegative = false;\n  }\n  return existingProps;\n};\n\nconst numericFormatter = (val, numericFormatProps) => {\n  if (val == undefined) {\n    return \"\";\n  }\n  return _numericFormatter(\"\"+val, numericFormatProps);\n};\n\n// Copied from https://github.com/s-yadav/react-number-format/blob/master/src/utils.tsx#L309\nfunction getDefaultChangeMeta(value) {\n  return {\n    from: {\n      start: 0,\n      end: 0,\n    },\n    to: {\n      start: 0,\n      end: value.length,\n    },\n    lastValue: \"\",\n  };\n}\n\n// Copied from https://github.com/s-yadav/react-number-format/blob/master/src/utils.tsx#L257\nconst findChangeRange = (prevValue, newValue) => {\n  let i = 0,\n    j = 0;\n  const prevLength = prevValue.length;\n  const newLength = newValue.length;\n  while (prevValue[i] === newValue[i] && i < prevLength) i++;\n\n  //check what has been changed from last\n  while (\n    prevValue[prevLength - 1 - j] === newValue[newLength - 1 - j]\n    && newLength - j > i\n    && prevLength - j > i\n  ) {\n    j++;\n  }\n\n  return {\n    from: { start: i, end: prevLength - j },\n    to: { start: i, end: newLength - j },\n  };\n};\n\n// Helps with generating correct `changeMeta` for proper work of `removeNumericFormat()`\nconst getChangeMeta = (newValue, prevValue = undefined) => {\n  if (prevValue != undefined) {\n    return { ...findChangeRange(prevValue, newValue), lastValue: newValue };\n  } else {\n    return { ...getDefaultChangeMeta(newValue), lastValue: newValue ?? \"\" };\n  }\n};\n\n// Apply `decimalScale`\nconst limitToScale = (num, numericFormatProps) => {\n  const decimalScale = numericFormatProps?.decimalScale;\n  const isNegative = num < 0;\n  // if num == -3.141\n  const positiveWholeNumberPart = Math.abs(isNegative ? Math.ceil(num) : Math.floor(num)); // 3\n  let decimalStr = (\"\"+num).split(\".\")[1] ?? \"\"; // \"141\"\n  let decimalPart = decimalStr != undefined ? parseFloat(\"0.\" + decimalStr) : undefined;\n  if (decimalScale && decimalStr.length > decimalScale) {\n    decimalStr = decimalStr.substring(0, decimalScale); // \"14\"\n    decimalPart = parseFloat(\"0.\" + decimalStr); // 0.14\n  }\n  const res = (isNegative ? -1 : 1) * (positiveWholeNumberPart + decimalPart); // -3.14\n  return res;\n};\n\nconst startsWithZero = (num) => {\n  const isNegative = num < 0;\n  const positiveWholeNumberPart = Math.abs(isNegative ? Math.ceil(num) : Math.floor(num));\n  return positiveWholeNumberPart === 0;\n};\n\nconst getExtraLeadingZeros = (str, num) => {\n  const leadingZeros = str.match(/^-?(0+).+/)?.[1]?.length;\n  const extraLeadingZeros = leadingZeros ? (leadingZeros - (startsWithZero(num) ? 1 : 0)) : undefined;\n  return extraLeadingZeros;\n};\n\nconst getTrailingZeros = (str) => {\n  const parts = str.split(\".\");\n  if (parts[1]?.match(/^0+$/)) {\n    return parts[1].length;\n  }\n  return undefined;\n};\n\nconst fixDecimal = (origStr, numericFormatProps, lastStrValue = undefined) => {\n  const decimalSeparator = numericFormatProps?.decimalSeparator ?? \".\";\n  let str = origStr;\n  if (lastStrValue?.endsWith(\".\") && origStr.indexOf(lastStrValue) === 0) {\n    // If decimal separator is \",\" but user types \".\" and numbers - treat this as decimal part\n    str = lastStrValue.substring(0, lastStrValue.length - 1) + decimalSeparator + origStr.substring(lastStrValue.length);\n  }\n  return str;\n};\n\nconst numericParser = (origStr, numericFormatProps, lastStrValue = undefined, lastNumValue = undefined) => {\n  const decimalSeparator = numericFormatProps?.decimalSeparator ?? \".\";\n  const str = fixDecimal(origStr, numericFormatProps, lastStrValue);\n  const changeMeta = getChangeMeta(str, lastStrValue);\n  const typedDecimalSep = (changeMeta.to.end - changeMeta.to.start) === 1 && [decimalSeparator, \".\"].includes(str[changeMeta.to.start]);\n  const cleanStr = removeNumericFormat(str, changeMeta, numericFormatProps);\n \n  let num = parseFloat(cleanStr);\n  num = !isNaN(num) && isFinite(num) ? num : undefined;\n  if (num != undefined) {\n    num = limitToScale(num, numericFormatProps);\n  }\n\n  const { max, min, allowLeadingZeros } = numericFormatProps;\n  const changedValueWithSep = typedDecimalSep && num != lastNumValue;\n  const isValid = num != undefined && (max == undefined || num <= max) && (min == undefined || num >= min);\n  const extraLeadingZeros = allowLeadingZeros ? getExtraLeadingZeros(cleanStr, num) : undefined;\n  const trailingZeros = changedValueWithSep ? undefined : getTrailingZeros(cleanStr);\n\n  const res = {\n    str: origStr,\n    num,\n    extraLeadingZeros,\n    trailingZeros,\n    isValid,\n  };\n  return res;\n};\n\nconst addLeadingZeros = (str, extraLeadingZeros) => {\n  const isNegative = str.startsWith(\"-\");\n  const positiveStr = isNegative ? str.replace(/^[-]+/, \"\") : str;\n  const res = (isNegative ? \"-\" : \"\") + \"\".padStart(extraLeadingZeros, \"0\") + positiveStr;\n  return res;\n};\n\nconst addTrailingZeros = (str, trailingZeros) => {\n  const hasDot = str.endsWith(\".\");\n  const res = str + (hasDot ? \"\" : \".\") + \"\".padStart(trailingZeros, \"0\");\n  return res;\n};\n\nexport {\n  NumericFormat,\n  useNumericFormat,\n  numericParser,\n  numericFormatter,\n  getNumberFormatProps,\n  addLeadingZeros,\n  addTrailingZeros,\n};\n","import React from \"react\";\nimport { NumericFormat, getNumberFormatProps } from \"../../../../utils/numberFormat\";\n\nexport default (props) => {\n  const {\n    value,\n    setValue,\n    readonly,\n    placeholder,\n    min,\n    max,\n    customProps,\n  } = props;\n\n  const numericFormatProps = getNumberFormatProps(props);\n\n  const formattedValue = value == undefined ? \"\" : value;\n  //const isValid = value != undefined && (max == undefined || value <= max) && (min == undefined || value >= min);\n\n  const onValueChange = (values) => {\n    let { floatValue } = values;\n    setValue(floatValue !== undefined ? floatValue : undefined);\n  };\n\n  return (\n    <NumericFormat\n      value={formattedValue}\n      placeholder={placeholder}\n      disabled={readonly}\n      onValueChange={onValueChange}\n      {...customProps}\n      {...numericFormatProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\nconst VanillaProvider = ({config, children}) => {\n  const themeMode = config.settings.themeMode ?? \"light\";\n  const compactMode = config.settings.compactMode;\n  const liteMode = config.settings.liteMode;\n\n  const base = (<div className={`qb-${themeMode} ${compactMode ? \"qb-compact\" : \"\"} ${liteMode ? \"qb-lite\" : \"\"}`}>{children}</div>);\n  return base;\n};\n\nexport { VanillaProvider };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import {default as chroma} from \"chroma-js\";\n\nexport const setColorOpacity = (color, alpha) => chroma(color).alpha(alpha).hex();\n\nexport const generateCssVarsForLevels = (\n  isDark, cssVar, baseColor, baseDarkColor = undefined\n) => {\n  const maxLevel = 20;\n  const maxRatio = isDark ? 0.2 : 0.85;\n  return Object.fromEntries(Array.from({length: maxLevel + 1}, (_v, k) => k).map(lev => {\n    const k =  `${cssVar}-${lev}`;\n    const chr = chroma(isDark ? (baseDarkColor ?? baseColor) : baseColor);\n    const ratio = ((lev + 1) / (maxLevel + 1)) * maxRatio;\n    const chr2 = isDark ? chr.tint(ratio) : chr.shade(ratio);\n    const v = chr2.hex();\n    return [k, v];\n  }));\n};\n\nexport const isDarkColor = (color) => {\n  if (!color || color === \"transparent\")\n    return undefined;\n  // const lightness = chroma(color).get(\"lab.l\");\n  // return lightness < 70;\n  const luminance = chroma(color).luminance();\n  return luminance < 0.5;\n};\n\nexport const isColor = (color) => {\n  try {\n    chroma(color);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nexport {\n  chroma,\n};\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\nimport * as ColorUtils from \"../utils/colorUtils\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  price: {\n    ...CoreConfig.widgets.price,\n    factory: (props, {RCE, W: {VanillaPriceWidget}}) => RCE(VanillaPriceWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  //theme\n  designSettings: {\n    canInheritThemeFromOuterProvider: true,\n    useThickLeftBorderOnHoverItem: false,\n    useShadowOnHoverItem: false,\n    generateCssVarsFromThemeLibrary: true, // false to use design like in < 6.7\n  },\n  themeMode: undefined,\n  liteMode: true,\n  compactMode: false,\n  renderSize: \"small\",\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n  utils: {\n    ...CoreConfig.ctx.utils,\n    ColorUtils,\n  }\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch, fetchSelectedValuesOnInit,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config, field\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n  dontFixOptionsOrder,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = config.settings.loadMoreLabel ?? \"Load more...\";\n  const loadingMoreTitle = config.settings.loadingMoreLabel ?? \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? (config.settings.typeToSearchLabel ?? \"Type to search\") : placeholder;\n\n  // Import from JsonLogic fills `asyncListValues`, but import from SQL/SpEL does not. It's workaround\n  if (asyncFetch && fetchSelectedValuesOnInit && !selectedAsyncListValues && selectedValue != undefined) {\n    selectedAsyncListValues = Array.isArray(selectedValue) ? selectedValue : [selectedValue];\n  }\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n  const latestSelectedValue = React.useRef();\n  latestSelectedValue.current = selectedValue;\n  const latestInputValue = React.useRef();\n  latestInputValue.current = inputValue;\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  // if selectedAsyncListValues is array of strings/numbers => needs to be resolved\n  const areSelectedAsyncListValuesNotResolved = selectedAsyncListValues && Array.isArray(selectedAsyncListValues)\n    && selectedAsyncListValues.filter(v => v !== null && typeof v !== \"object\").length > 0;\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoadSelected = fetchSelectedValuesOnInit && !open && asyncFetch\n    && areSelectedAsyncListValuesNotResolved && selectedValue != null;\n  const canFirstLoadOnOpened = open && asyncFetch\n    && (asyncListValues === undefined)\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = (canFirstLoadOnOpened || canInitialLoadSelected) && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch - search\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  // fetch - selected values only\n  const fetchSelectedListValues = async () => {\n    const selectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    if (!selectedValues.length) {\n      return null;\n    }\n\n    const meta = { fetchSelectedValues: true };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, selectedValues, -1, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values: selectedListValues } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const latestSelectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    const nValues = latestSelectedValues.map(v => getItemInListValues(selectedListValues, v) ?? makeCustomListValue(v));\n\n    return nValues.length ? nValues : null;\n  };\n\n  const loadSelectedListValues = async () => {\n    setLoadingCnt(x => (x + 1));\n    const list = await fetchSelectedListValues();\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      setValue(latestSelectedValue.current, list);\n    }\n    setLoadingCnt(x => (x - 1));\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n      // if (!componentIsMounted.current && field) {\n      //   console.log(`Autocomplete for ${field} has been unmounted`)\n      // }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // Initial loading\n    if (canFirstLoadOnOpened && loadingCnt == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    if (canInitialLoadSelected && loadingCnt == 0) {\n      (async () => {\n        await loadSelectedListValues();\n      })();\n    }\n  }, [canFirstLoadOnOpened, canInitialLoadSelected, loadingCnt]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    const valHasDuplicates = multiple && val?.length && (new Set(val)).size !== val.length;\n    const isBadCallAfterTokenization = multiple && uif === \"antd\" && e === null && option === null && valHasDuplicates;\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput\n      || isBadCallAfterTokenization;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const isRemoveOption = uif === \"mui\" && eventType === \"removeOption\" && newInputValue === \"\" && multiple;\n    const isSelectOption = uif === \"mui\" && eventType === \"selectOption\" && newInputValue === \"\" && multiple;\n    const isIgnoredBlur = uif === \"mui\" && !multiple && eventType === \"blur\" && newInputValue === selectedListValue?.title;\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n      || isSelectOption || isRemoveOption || isIgnoredBlur\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (uif === \"mui\" && !multiple && eventType === \"selectOption\" && newInputValue !== \"\") {\n      // parity with Antd\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return false;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || (lv == null);\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" && !dontFixOptionsOrder ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport * as NumberFormat from \"./numberFormat\";\nimport { DragIcon } from \"../components/utils\";\nimport * as ColorUtils from \"./colorUtils\";\n\nexport default { ...Utils, ReactUtils, NumberFormat, DragIcon, ColorUtils };\n"],"names":["moment","Utils","xdpVersion","parseInt","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","_Utils$NumberFormat","NumberFormat","NumericFormat","getNumberFormatProps","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","dontFixOptionsOrder","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","renderSize","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","group","groupLabel","label","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","JSON","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","_group$parentGroups","groupMaybeJson","parse","_","groups","parentGroups","key","gr","path","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","altLabel","grouplabel","itemsToListValues","items","_step","level","arguments","length","lvs","item","matchesType","getPrefix","lev","repeat","prefix","concat","_toConsumableArray","ind","_value2","_altLabel","flat","Infinity","usedGroups","_iterator","_createForOfIteratorHelper","s","n","done","lv","filter","_step2","_iterator2","push","err","e","f","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","disableElevation","sx","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","forceShowConj","showConj","onNotClick","ButtonGroup","marginLeft","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","p","FormLabel","pt","pb","renderOptions","_Utils$ColorUtils","ColorUtils","generateCssVarsForLevels","setColorOpacity","chroma","logger","OtherUtils","generateCssVars","_config$settings$desi","_config$settings$desi2","_config$settings$desi3","_config$settings$desi4","log","typography","shadows","shape","darkMode","mode","useThickLeftBorderOnHoverItem","designSettings","useShadowOnHoverItem","cssVars","paper","divider","brighten","hex","secondary","text","fontFamily","fontSize","borderRadius","CssVarsProvider","_config$settings$them","ref","themeMode","compactMode","liteMode","enableCssVars","generateCssVarsFromThemeLibrary","cssVarsTarget","current","mui","defaultGenerateCssVars","call","ctx","setProperty","removeProperty","_split$","MuiWidgets","MuiTextWidget","setValue","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","listValues","hasValue","Select","autoWidth","displayEmpty","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiPriceWidget","suffix","numericFormatProps","formattedValue","startAdornment","InputAdornment","customInput","onValueChange","values","floatValue","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","setField","selectedKey","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","_useState","useState","_useState2","setOpen","fields","fieldKey","field","finalLabel","ListSubheader","disableSticky","findLabel","Array","isArray","some","pop","MuiFieldAutocomplete","MuiAutocomplete","isValueField","fieldItemKeysForSearch","_asyncValues","fieldAdapter","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","confirmFn","MuiUseConfirm","useConfirm","okText","cancelText","onOk","description","confirmationText","cancellationText","then","MuiProvider","_config$settings$loca","momentLocale","locale","existingOuterTheme","existingTheme","canInheritThemeFromOuterProvider","mergedTheme","themeConfig","localeConfig","existingThemeMode","filteredPalette","t","_t$palette","mergedThemeOptions","filteredExistingTheme","mergeWith","createTheme","buildTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","_props$customProps2","_ref2$W","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderProvider","_ref10","renderConfirm","_ref11","_ref12","widgets","factory","_ref13","textarea","_ref14","number","_ref15","price","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","isObjectOrArray","typeOf","isTypeOf","isNaN","isTruthy","shallowCopy","isSafeKeyForObject","hasSafeOwnProperty","obj","hasOwnProperty","setIn","opts","_opts","canCreate","canIgnore","canChangeType","Error","expectedObjType","newObj","pathToTarget","targetKey","goodPath","expectedType","oldValue","mergeIn","mixin","_opts2","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","isMixingArray","isMixingRealArray","indexDelta","_loop","mk","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","useSymbols","targetMixValue","isMixValueExplicit","left","right","mergeArraysSmart","_targetMix$mk5","splice","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","orig","next","slice","prevs","after","reverse","find","prev","before","isAfterDirectly","isBeforeDirectly","x","reduce","acc","newOp","rel","relOp","offset","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","tv","ov","getLogger","devMode","process","_process4","NODE_ENV_TEST","console","debug","_process3","NODE_ENV","warn","getFirstDefined","ret","arr","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","subfields","subfieldsKey","_callee","fieldSeparator","fieldConfig","_context3","t0","t1","getFieldRawConfig","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","_isFuncArg","_isFunc","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","reverseOperatorsForNot","canShortMongoQuery","fixJsonLogicDateCompareOp","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","loadMoreLabel","loadingMoreLabel","typeToSearchLabel","loadingLabel","notFoundLabel","applyJsonLogic","data","JL","addJsonLogicOperation","add_operation","customJsonLogicOperations","CALL","fn","JSX","mergeObjects","obj1","obj2","toLowerCase","str","strlen","regexTest","pattern","flags","match","RegExp","dateA","startOf","dateB","isSame","now","today","start","y","year","m","month","d","toDate","start_of_today","date_add","dim","add","datetime_add","datetime_truncate","addRequiredJsonLogicOperations","jl","jsonLogicFormatConcat","_part$value","jsonLogicImportConcat","dateDimListValues","day","week","datetimeDimListValues","hour","minute","second","NOW","jsonLogicCustomOps","jsonLogic","jsonLogicImport","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","TODAY","START_OF_TODAY","spelImport","spel","_obj$obj","_oneArg$children","_oneArg$children2","_oneArgType$cls","isTruncate","methodName","isObjNow","cls","argsLength","oneArg","oneArgType","oneArgProperty","oneArgCls","oneArgConst","isArgDays","sqlImport","sqlObj","sqlDialect","_sqlObj$children","_sqlObj$children2","TRUNCATE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","dimPluralUppercase","charAt","_oneArg$children3","_oneArg$children4","_oneArgType$cls2","substring","_sqlObj$children7","_sqlObj$children3","_sqlObj$children5","_sqlObj$children8","_sqlObj$children4","_dateFormat$children","_sqlObj$children6","interval","isFormat","isIntervalDay","_type","unit","_dateFormat$children2","escapeForFormat","mainWidgetProps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","_sqlObj$children9","_sqlObj$children10","plus","minus","RELATIVE_DATE","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","coef","bias","_spel$children","_a$children","_sqlObj$children11","_left$children","_sqlObj$children12","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","compileMetaFieldSettings","isArr","validateValue","compileMetaWidget","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","invokeWith","material","antd","fluent","bootstrap","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","O","commonMemo","memoId","configId","memos","areConfigsSame","config1","config2","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret","savedConfig","_ret2","_loop2","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","getSize","widgetPropsForDeepMerge","opPropsForDeepMerge","__configId","cachedExtConfig","origConfig","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_i2","_widgetPropsForDeepMe","_config$widgets$widge","_typeWidgetConfig$wid","_fieldConfig$mainWidg","_fieldWidgetConfig$wi","opKeys","_typeWidgetConfig$opP","_i3","_opPropsForDeepMerge","_config$operators","_typeWidgetConfig$opP2","_fieldWidgetConfig$op2","opProp","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","jsonLogicFormat","ff","tmp","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","_currentChild$get","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","filterQuery","resultQuery","_groupOperatorDef4","reduceQuery","formattedField","var","formattedLhs","optionsMap","having","groupFieldFormatted","formatLogic","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","varName","jsonLogicVar","groupVarKey","_properties$get","isRev","firstValueType","formattedOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongoEmptyValue","mongoFormatOp1","mop","mc","opNot","_op","useExpr","$field","mv","neg","regex","mongoFormatOp2","mops","mongoFieldEscape","mongoFieldUnescape","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_parents$filter","_groupOperatorDef$car","_conjunction","sep","parentRuleGroup","it","isInsideRuleGroup","isInsideRuleGroupArray","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","isSimpleGroupWithOneChild","reversedConj","mongoConj","canWrapExpr","formatFieldNameFn","formattedChild","totalQuery","as","notForRule","_f","_parents$filter2","_operatorDefinition4","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","spelFixList","SqlString","SqlStringOrig","trim","unescapeLike","escapeLike","any_start","any_end","escape","sqlEmptyValue","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","_formatItemValue","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue2","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","_formatLhs","realOp","_formatItemValue3","formatLhs","_formatField2","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","realParentGroupField","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jlFieldMarker","jlRawFieldMarker","jlHavingMarker","jlArgsMarker","Proxy","__name","__test","_v$match","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","_opConfig$jsonLogic","_opConfig$jsonLogic2$","_opConfig$jsonLogic2","_opConfig$jsonLogicOp","template","opInTemplate","isRevArgs","jsonLogic2","jsonLogicOps","_step$value","funcPath","fk","_config$settings$json","altVarKey","varKeys","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","tKeys","jKeys","maybeArgIndex","jlArgs","jlField","jlHaving","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","errorsBefore","convertSwitch","convertConj","convertOp","errorsAfter","convertCaseVal","wrapInDefaultConj","afterErrorsCnt","_e$message","h","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","isEpoch","epoch","convertLhs","groupOp","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","_groupOpConfig$cardin","isAllOrSomeInForMultiselect","opName","_config$operators$opN","groupOpConfig","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","defaultCaseVal","buildCaseValProperties","wrapInCase","flatizeTernary","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","_dv$get","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","makeCustomListValue","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapFn","searchListValue","search","getListValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","setArgValueAsyncListValues","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","_values","pageSize","currentOffset","newOffset","hasMore","fetchSelectedValues","abrupt","ceil","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","isBetweenNormal","isBetweenRev","isBetween","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","_funcConfig","isOk","funcType","_funcConfig$args","dateArgsKeys","_argsObj$k","realType","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step5","_step4$value","_iterator5","valueFuncs","_step5$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step6","_iterator6","_step7","_step6$value","_iterator7","opFuncs","_loop4","_argsArr$filter","_step7$value","_loop3","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","equal","opStr","_this$utils","_opDef","_opOpts","_fieldDef","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","utc","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","REMOVE_GROUP_CHILDREN","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","removeChildren","removeGroupChildren","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setOperatorOption","fromPath","toPath","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","_process2","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","canUseOldConfig","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","parentDelta","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","_immValueError$get","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","defaultValueSourcesLabels","_valueSourcesInfo$src","_valueSourcesInfo$src2","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_callSuper","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","renderFieldSources","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","_this$props6","onMouseDown","_this$props7","immutableGroupsMode","_this$props8","showLock","_this$props9","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props10","canRenderConjs","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_superPropGet","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","renderGroupHeader","renderSelfActions","canRenderHeader","canRenderChildrenActions","canRenderGroupHeader","renderChildrenActions","showChildrenActionsAsSelf","_config$operators$sel","_config$operators$sel2","_this$props11","_selectedFieldConfig$2","_this$props12","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","excludePropsNames","existingPropNames","existingProps","allowNegative","numericFormatter","_numericFormatter","numericParser","origStr","_numericFormatProps$d2","lastStrValue","lastNumValue","decimalSeparator","_numericFormatProps$d","fixDecimal","changeMeta","j","prevLength","newLength","end","findChangeRange","lastValue","getChangeMeta","typedDecimalSep","cleanStr","removeNumericFormat","num","parseFloat","decimalScale","isNegative","positiveWholeNumberPart","decimalStr","decimalPart","limitToScale","changedValueWithSep","extraLeadingZeros","allowLeadingZeros","_str$match","leadingZeros","startsWithZero","getExtraLeadingZeros","trailingZeros","_parts$","getTrailingZeros","addLeadingZeros","positiveStr","padStart","addTrailingZeros","hasDot","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","alpha","isDark","cssVar","baseColor","baseDarkColor","maxRatio","maxLevel","chr","ratio","tint","shade","isDarkColor","luminance","isColor","_unused","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaPriceWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","_ref25","VanillaValueSources","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","_config$settings$load","_config$settings$load2","_config$settings$type","useLoadMore","useAsyncSearch","forceAsyncSearch","fetchSelectedValuesOnInit","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","latestSelectedValue","nSelectedAsyncListValues","areSelectedAsyncListValuesNotResolved","listValuesToDisplay","canInitialLoadSelected","canFirstLoadOnOpened","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","fetchSelectedListValues","_callee2","selectedListValues","latestSelectedValues","_getItemInListValues","loadSelectedListValues","_callee3","loadListValues","_callee4","_args4","_context4","loadListValuesDebounced","debounce","_callee5","_context5","_callee6","_context6","_callee7","isLoadMoreClick","_context7","_callee8","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","valHasDuplicates","isBadCallAfterTokenization","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","_context8","_x4","_callee9","newInputValue","eventType","isRemoveOption","isSelectOption","isIgnoredBlur","shouldIgnore","_context9","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils"],"sourceRoot":""}