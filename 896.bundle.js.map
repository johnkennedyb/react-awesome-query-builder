{"version":3,"file":"896.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    // should not be possible\n    // if (field._isFuncArg) {\n    //   // it's func arg\n    //   return null;\n    // }\n    // if (field._isFunc) {\n    //   // it's field func\n    //   return \"func\";\n    // }\n    if (!field.func && field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type && !!field.widgets) {\n      // it's already a config\n      // but don't mess up with obj from `getFuncSignature`, it has `type` but no `widgets` and other keys !\n      return field;\n    }\n    if (field._isFuncArg) {\n      // it's func arg\n      return getFuncArgConfig(config, field._funcKey, field._argKey);\n    }\n    if (field._isFunc) {\n      // it's a func\n      return getFuncConfig(config, field._funcKey);\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's a func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n  loadMoreLabel: \"Load more...\",\n  loadingMoreLabel: \"Loading more...\",\n  typeToSearchLabel: \"Type to search\",\n  loadingLabel: \"Loading...\",\n  notFoundLabel: \"Not found\",\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"searchOrValues\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\", \"sqlDialect\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\", \"sqlDialect\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    // Note: because of desctructing, strict find would not be possible\n    //  (see commented line in `findExtended`)\n    //  (see issue #1187)\n    configStore.set({...config}, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    if (fieldConfig.type !== \"!struct\") {\n      // console.warn(`No type config for ${type}`);\n      fieldConfig.disabled = true;\n    }\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.unescapeLike = (val, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  let res = val;\n  // unescape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/\\\\\\\\([%_])/g, \"$1\");\n  } else {\n    res = res.replace(/\\\\([%_])/g, \"$1\");\n  }\n  return res;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/[%_\\\\]/g, \"\\\\\\\\$&\");\n  } else {\n    res = res.replace(/[%_]/g, \"\\\\$&\");\n  }\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const valFieldDefinition = valueSrc == \"field\" && getFieldConfig(config, currentValue) || {}; \n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        operator,\n        operatorDef,\n        valFieldDefinition,\n        config.settings.sqlDialect,\n      ];\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const isRevArgs = opConfig.jsonLogic2.startsWith(\"#\");\n      const jsonLogic = (\"\"+opConfig.jsonLogic2).replace(/^#/, \"\");\n      const opk = jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": jsonLogic,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n      if (jlDualMeaningOps.includes(match.newOp)) {\n        // use original order of args\n        havingVals = match.vals;\n      }\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func || dv?.get?.(\"func\")) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    const v = valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n    // Fix if func in LHS has `defaultValue: { func: ..., args: {...} }`\n    if (v?.func) {\n      valueFixes[i] = jsToImmutable(v);\n      valueSrcFixes[i] = \"func\";\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\nexport const setArgValueAsyncListValues = (value, argKey, asyncListValues, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"asyncListValues\"], asyncListValues);\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  \n  const isFetchSelectedValues = !!meta?.fetchSelectedValues && Array.isArray(search);\n  if (isFetchSelectedValues) {\n    const values = listValuesToArray(all)\n      .filter(({value}) => search.includes(value));\n    return {\n      values\n    };\n  }\n\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const isBetweenNormal = (child.type == \"op-and\" && child.children.length == 2 && child.children[0].type == \"op-ge\" && child.children[1].type == \"op-le\");\n      const isBetweenRev = (child.type == \"op-or\" && child.children.length == 2 && child.children[0].type == \"op-lt\" && child.children[1].type == \"op-gt\");\n      const isBetween = isBetweenNormal || isBetweenRev;\n      const canFlatize = child.type == type && !child.not && !isBetween;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1, right.value.length - 1), sqlDialect);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1), sqlDialect);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(0, right.value.length - 1), sqlDialect);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} >= ${valFrom} && ${field} <= ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef, sqlDialect) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef, sqlDialect) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc, setArgValueAsyncListValues} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${targetFV.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n      if (asyncListValues) {\n        targetFV = setArgValueAsyncListValues(targetFV, argKey, asyncListValues, argDefinition, config);\n      }\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, undefined, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, undefined, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n    const canUseOldConfig = isConfigChanged && !isTreeChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, canUseOldConfig ? oldConfig : undefined, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (!treeEl) {\n        console.error(\"Please change renderBuilder implementation of <Query>: wrap <Builder> with div.query-builder for drag-n-drop support\");\n        return;\n      }\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, parentDelta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get?.(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    parentDelta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    parentDelta: PropTypes.number,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\", \"parentDelta\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id, parentDelta,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      }]);\n    }\n    const widgets = (isFuncArg ? [0] : range(0, cardinality)).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta ?? delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue, parentDelta,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          parentDelta={parentDelta ?? delta}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    const { isFuncArg } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {(isFuncArg ? [0] : range(0, cardinality)).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    parentDelta: PropTypes.number,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, parentDelta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition, parentDelta} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue, parentDelta,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n    const asyncListValues = arg?.get(\"asyncListValues\");\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      asyncListValues,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n      parentDelta,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        parentDelta={this.props.parentDelta}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch, fetchSelectedValuesOnInit,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config, field\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = config.settings.loadMoreLabel ?? \"Load more...\";\n  const loadingMoreTitle = config.settings.loadingMoreLabel ?? \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? (config.settings.typeToSearchLabel ?? \"Type to search\") : placeholder;\n\n  // Import from JsonLogic fills `asyncListValues`, but import from SQL/SpEL does not. It's workaround\n  if (asyncFetch && fetchSelectedValuesOnInit && !selectedAsyncListValues && selectedValue != undefined) {\n    selectedAsyncListValues = Array.isArray(selectedValue) ? selectedValue : [selectedValue];\n  }\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n  const latestSelectedValue = React.useRef();\n  latestSelectedValue.current = selectedValue;\n  const latestInputValue = React.useRef();\n  latestInputValue.current = inputValue;\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  // if selectedAsyncListValues is array of strings/numbers => needs to be resolved\n  const areSelectedAsyncListValuesNotResolved = selectedAsyncListValues && Array.isArray(selectedAsyncListValues)\n    && selectedAsyncListValues.filter(v => v !== null && typeof v !== \"object\").length > 0;\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoadSelected = fetchSelectedValuesOnInit && !open && asyncFetch\n    && areSelectedAsyncListValuesNotResolved && selectedValue != null;\n  const canFirstLoadOnOpened = open && asyncFetch\n    && (asyncListValues === undefined)\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = (canFirstLoadOnOpened || canInitialLoadSelected) && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch - search\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  // fetch - selected values only\n  const fetchSelectedListValues = async () => {\n    const selectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    if (!selectedValues.length) {\n      return null;\n    }\n\n    const meta = { fetchSelectedValues: true };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, selectedValues, -1, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values: selectedListValues } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const latestSelectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    const nValues = latestSelectedValues.map(v => getItemInListValues(selectedListValues, v) ?? makeCustomListValue(v));\n\n    return nValues.length ? nValues : null;\n  };\n\n  const loadSelectedListValues = async () => {\n    setLoadingCnt(x => (x + 1));\n    const list = await fetchSelectedListValues();\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      setValue(latestSelectedValue.current, list);\n    }\n    setLoadingCnt(x => (x - 1));\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n      // if (!componentIsMounted.current && field) {\n      //   console.log(`Autocomplete for ${field} has been unmounted`)\n      // }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // Initial loading\n    if (canFirstLoadOnOpened && loadingCnt == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    if (canInitialLoadSelected && loadingCnt == 0) {\n      (async () => {\n        await loadSelectedListValues();\n      })();\n    }\n  }, [canFirstLoadOnOpened, canInitialLoadSelected, loadingCnt]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    const valHasDuplicates = multiple && val?.length && (new Set(val)).size !== val.length;\n    const isBadCallAfterTokenization = multiple && uif === \"antd\" && e === null && option === null && valHasDuplicates;\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput\n      || isBadCallAfterTokenization;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const isRemoveOption = uif === \"mui\" && eventType === \"removeOption\" && newInputValue === \"\" && multiple;\n    const isSelectOption = uif === \"mui\" && eventType === \"selectOption\" && newInputValue === \"\" && multiple;\n    const isIgnoredBlur = uif === \"mui\" && !multiple && eventType === \"blur\" && newInputValue === selectedListValue?.title;\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n      || isSelectOption || isRemoveOption || isIgnoredBlur\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (uif === \"mui\" && !multiple && eventType === \"selectOption\" && newInputValue !== \"\") {\n      // parity with Antd\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || (lv == null);\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n"],"names":["moment","Utils","xdpVersion","parseInt","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","e","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","sx","p","FormLabel","pt","pb","renderOptions","MuiTextWidget","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","fields","field","Array","isArray","some","pop","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","_props$customProps2","_ref2$W","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","call","isObjectOrArray","typeOf","t","isTypeOf","isNaN","shallowCopy","setIn","obj","opts","_opts","_opts2","canCreate","canIgnore","canChangeType","expectedObjType","concat","_step","newObj","pathToTarget","targetKey","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","expectedType","push","err","f","oldValue","mergeIn","mixin","_opts3","_opts4","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","isMixingArray","isMixingRealArray","indexDelta","_loop","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","mk","useSymbols","targetMixValue","isMixValueExplicit","left","right","mergeArraysSmart","_targetMix$mk5","splice","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","setTimeout","arr1","arr2","op","orig","next","slice","prevs","after","reverse","find","prev","before","isAfterDirectly","isBeforeDirectly","x","reduce","acc","newOp","rel","relOp","ind","offset","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","getLogger","devMode","process","_process3","NODE_ENV_TEST","console","log","debug","_process2","NODE_ENV","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","subfields","subfieldsKey","_callee","fieldSeparator","fieldConfig","_context3","t0","t1","getFieldRawConfig","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","_isFuncArg","_isFunc","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","reverseOperatorsForNot","canShortMongoQuery","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","loadMoreLabel","loadingMoreLabel","typeToSearchLabel","loadingLabel","notFoundLabel","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","fn","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","dim","add","toDate","toLowerCase","NOW","jsonLogic","jsonLogicCustomOps","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","RELATIVE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","method","charAt","spelImport","spel","_spel$methodName","matchRes","methodName","jsonLogicImport","abs","sqlImport","sqlObj","sqlDialect","_sqlObj$children","_sqlObj$children2","interval","_type","unit","escapeForFormat","mainWidgetProps","plus","minus","day","week","month","year","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","coef","bias","_spel$children","_a$children","_sqlObj$children3","_left$children","_sqlObj$children4","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","compileMetaFieldSettings","isArr","validateValue","compileMetaWidget","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","BasicFuncs","hasOwnProperty","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","this","argNames","bind","_ctx$components","_props","Cmp","components","O","commonMemo","memoId","configId","memos","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret2","_loop2","savedConfig","_ret3","_loop3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","_ret","basicConfig","extConfig","clearConfigMemo","clear","getSize","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","opKeys","_typeWidgetConfig$opP","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","jsonLogicFormat","ff","tmp","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","resultQuery","formattedField","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","varName","jsonLogicVar","groupVarKey","isRev","formatteOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","it","realParentPath","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","SqlString","SqlStringOrig","trim","substring","unescapeLike","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","_formatItemValue","_formatItemValue2","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue3","_formatItemValue4","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","realOp","_formatItemValue5","_formatItemValue6","formatLhs","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","_argValue2","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","jsonLogic2","isRevArgs","_step$value","funcPath","fk","_config$settings$json","varKeys","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","tKeys","jKeys","jlField","jlArgs","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_e$message","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","isEpoch","epoch","convertLhs","having","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","isAllOrSomeInForMultiselect","opName","_config$operators$opN","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","flatizeTernary","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","_dv$get","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapFn","searchListValue","search","getListValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","setArgValueAsyncListValues","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","_values","pageSize","currentOffset","newOffset","hasMore","fetchSelectedValues","abrupt","ceil","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","cls","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","isBetweenNormal","isBetweenRev","isBetween","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step3$value","valueFuncs","_step4$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step5","_iterator5","_step6","_step5$value","_iterator6","opFuncs","_loop4","_argsArr$filter","_step6$value","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setOperatorOption","fromPath","toPath","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","canUseOldConfig","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","parentDelta","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","_immValueError$get","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","defaultValueSourcesLabels","_valueSourcesInfo$src","_valueSourcesInfo$src2","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_callSuper","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","_config$settings$load","_config$settings$load2","_config$settings$type","useLoadMore","useAsyncSearch","forceAsyncSearch","fetchSelectedValuesOnInit","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","latestSelectedValue","nSelectedAsyncListValues","areSelectedAsyncListValuesNotResolved","listValuesToDisplay","canInitialLoadSelected","canFirstLoadOnOpened","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","fetchSelectedListValues","_callee2","selectedListValues","latestSelectedValues","_getItemInListValues","loadSelectedListValues","_callee3","loadListValues","_callee4","_args4","_context4","loadListValuesDebounced","debounce","_callee5","_context5","_callee6","_context6","_callee7","isLoadMoreClick","_context7","_callee8","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","valHasDuplicates","isBadCallAfterTokenization","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context8","_x4","_callee9","newInputValue","eventType","isRemoveOption","isSelectOption","isIgnoredBlur","shouldIgnore","_context9","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils"],"sourceRoot":""}