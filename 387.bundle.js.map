{"version":3,"file":"387.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/./src/demo_switch/select.tsx","webpack://@react-awesome-query-builder/examples/./src/demo_switch/spel_concat.tsx","webpack://@react-awesome-query-builder/examples/./src/demo_switch/index.tsx","webpack://@react-awesome-query-builder/examples/./src/demo_switch/config.tsx"],"sourcesContent":["import React, { FC, memo, useCallback, useMemo } from \"react\";\nimport Creatable from \"react-select/creatable\";\nimport { MultiValue } from \"react-select\";\nimport { SpelConcatPart, ListItem } from \"@react-awesome-query-builder/ui\";\n\ninterface OptionItem {\n  id: string\n  label: string\n  properties?: any\n  type?: any\n  __isNew__?: boolean\n}\n\n\ninterface Iprops {\n  k: string;\n  value?: SpelConcatPart[];\n  setValue(value: SpelConcatPart[]): void;\n  listValues: ListItem[];\n}\n\nconst MltSelector: FC<Iprops> = ({\n  k,\n  value,\n  setValue,\n  listValues,\n}) => {\n  const options: OptionItem[] = useMemo(() => listValues?.map(({value, title}) => ({\n    id: value?.toString(),\n    label: title ?? \"\",\n    properties: [\"REQUIRED\", \"CREATE\", \"UPDATE\"],\n    type: { format: \"INTEGER\" },\n  })), [listValues]);\n\n  const initMltSelectValueHandler = (list: OptionItem[], val: SpelConcatPart[]) => {\n    if (val) {\n      return val.map((item: SpelConcatPart) => {\n        let res = item.type != \"const\" && list && list.find((obj) => obj.id === item.value);\n        if (!res) {\n          res = { id: item.value, label: item.value, __isNew__: true };\n        }\n        return res;\n      });\n    }\n    return [];\n  };\n\n  const onChange = useCallback((values: MultiValue<OptionItem>, actionMeta: any): any[] => {\n    const res = values.map((val) => ({\n      value: val.id || val.label,\n      type: val.__isNew__ ? \"const\" : \"property\"\n    }));\n    setValue(res as SpelConcatPart[]);\n    return res;\n  }, [setValue]);\n\n  const getOptionValue = useCallback((option: OptionItem) => option.id, []);\n  const getOptionLabel = useCallback((option: OptionItem) => option.label, []);\n\n  const aValue = useMemo(() => initMltSelectValueHandler(options, value!), [value]);\n\n  return (\n    <Creatable\n      menuPortalTarget={document.body}\n      menuPosition={\"fixed\"}\n      key={k}\n      isMulti\n      options={options}\n      value={aValue}\n      getOptionValue={getOptionValue}\n      getOptionLabel={getOptionLabel}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default memo(MltSelector);\n","import React from \"react\";\nimport {\n  Utils as QbUtils, BasicConfig, CaseValueWidget, SpelConcatPart, WidgetProps, SelectFieldSettings, ListItem,\n} from \"@react-awesome-query-builder/ui\";\nimport ReactSelect from \"./select\";\n\n/**\n * @deprecated\n */\nconst jsonLogicFormatConcat = (parts: SpelConcatPart[]) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => part?.value ?? part)\n      .filter(r => r != undefined);\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * @deprecated\n */\nconst jsonLogicImportConcat = (val: any): SpelConcatPart[] => {\n  if (val == undefined)\n    return undefined;\n  const errors: string[] = [];\n  const parts = Array.isArray(val) ? val : [val];\n  const res = parts.filter(v => v != undefined).map(v => {\n    return {\n      type: \"property\", \n      value: val as string\n    } as SpelConcatPart;\n  });\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"));\n  }\n  return res;\n};\n\n/**\n * @deprecated\n */\nexport const getCaseValueWidgetConfig = (config: BasicConfig): CaseValueWidget => ({\n  ...config.widgets.case_value,\n  spelFormatValue: QbUtils.ExportUtils.spelFormatConcat,\n  spelImportValue: QbUtils.ExportUtils.spelImportConcat,\n  jsonLogic: jsonLogicFormatConcat,\n  jsonLogicImport: jsonLogicImportConcat,\n  factory: ({value, setValue, id, fieldDefinition}: WidgetProps) => \n    <ReactSelect \n      value={value as SpelConcatPart[]}\n      setValue={setValue}\n      listValues={(fieldDefinition.fieldSettings as SelectFieldSettings)?.listValues as ListItem[]}\n      k={id!}\n    />\n});\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Query, Builder, BuilderProps,\n  Utils as QbUtils,\n  JsonSwitchGroup,\n  Config,\n  ImmutableTree\n} from \"@react-awesome-query-builder/ui\";\nimport { LazyStyleModule } from \"../skins/utils\";\n// @ts-ignore\nimport styles from \"@react-awesome-query-builder/mui/css/styles.scss\";\nimport getConfig from \"./config\";\n\n(styles as LazyStyleModule).use();\n\nconst config: Config = getConfig();\n\nconst preStyle = { backgroundColor: \"darkgrey\", margin: \"10px\", padding: \"10px\" };\nconst preErrorStyle = { backgroundColor: \"lightpink\", margin: \"10px\", padding: \"10px\" };\n\nconst emptyJsonTree: JsonSwitchGroup = {\n  id: QbUtils.uuid(),\n  type: \"switch_group\",\n};\nconst emptyTree: ImmutableTree = QbUtils.loadTree(emptyJsonTree);\n\nconst ternaryJsonLogic = {\n  \"if\": [\n    {\n      \"and\": [\n        { \">\": [ { \"var\": \"discount\" }, 50 ] },\n        { \"==\": [ { \"var\": \"is_promotion\" }, true ] }\n      ]\n    },\n    \"Hot\",\n    {\n      \"if\": [\n        { \">\": [ { \"var\": \"qty\" }, 0 ] },\n        \"In stock\",\n        \"other\"\n      ]\n    }\n  ]\n};\nconst initialTreeFromJsonLogic: ImmutableTree = QbUtils.loadFromJsonLogic(ternaryJsonLogic, config);\nconst validationErrors = QbUtils.validateTree(initialTreeFromJsonLogic, config);\nif (validationErrors?.length) {\n  console.warn(\"Validation errors:\", validationErrors);\n}\n\nconst ternarySpel = \"((discount > 50 && is_promotion == true) ? 'Hot' : (qty > 0 ? 'In stock' : 'other'))\";\nconst [initialTreeFromSpel, spelLoadingErrors] = QbUtils.loadFromSpel(ternarySpel, config);\nif (spelLoadingErrors?.length) {\n  console.warn(\"Errors while importing from SpEL: \", spelLoadingErrors);\n}\n\nconst Demo: React.FC = () => {\n  const [state, setState] = useState({\n    tree: initialTreeFromJsonLogic,\n    // tree: initialTreeFromSpel,\n    // tree: emptyTree,\n    config: config,\n    spelStr: \"\",\n    spelErrors: [] as string[],\n  });\n\n  const onChange = useCallback((tree: ImmutableTree, config: Config) => {\n    setState(prevState => ({ ...prevState, tree, config }));\n  }, []);\n\n  const renderBuilder = useCallback((props: BuilderProps) => (\n    <div className=\"query-builder-container\" style={{ padding: \"10px\" }}>\n      <div className=\"query-builder qb-lite\">\n        <Builder {...props} />\n      </div>\n    </div>\n  ), []);\n\n  const onChangeSpelStr = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const spelStr = e.target.value;\n    setState({\n      ...state, \n      spelStr\n    });\n  };\n\n  const importFromSpel = () => {\n    const [tree, spelErrors] = QbUtils.loadFromSpel(state.spelStr, state.config);\n    const {fixedTree, fixedErrors} = QbUtils.sanitizeTree(tree!, state.config);\n    if (fixedErrors.length) {\n      console.warn(\"Fixed errors after import from SpEL:\", fixedErrors);\n    }\n    setState({\n      ...state, \n      tree: fixedTree ?? state.tree,\n      spelErrors\n    });\n  };\n\n  const renderQueryBuilder = () => (\n    <Query\n      {...config}\n      value={state.tree}\n      onInit={onChange}\n      onChange={onChange}\n      renderBuilder={renderBuilder}\n    />\n  );\n\n  const renderSpelInput = () => (\n    <div className=\"query-import-spel\">\n      Input SpEL:\n      <input type=\"text\" size={150} value={state.spelStr} onChange={onChangeSpelStr} />\n      <button onClick={importFromSpel}>import</button>\n      <br />\n      { state.spelErrors.length > 0 \n          && <pre style={preErrorStyle}>\n            {JSON.stringify(state.spelErrors, undefined, 2)}\n          </pre> \n      }\n    </div>\n  );\n\n  const renderSpelBlock = () => {\n    const [spel, spelErrors] = QbUtils._spelFormat(state.tree, state.config);\n\n    return (\n      <>\n        <div>\n          spelFormat: \n          { spelErrors.length > 0 \n            && <pre style={preErrorStyle}>\n              {JSON.stringify(spelErrors, undefined, 2)}\n            </pre> \n          }\n          <pre style={preStyle}>\n            {JSON.stringify(spel, undefined, 2)}\n          </pre>\n          Values:\n          <pre>\n            {JSON.stringify(QbUtils.getSwitchValues(state.tree), undefined, 2)}\n          </pre>\n        </div>\n        <hr/>\n      </>\n    );\n  };\n\n  const renderJsTreeBlock = () => {\n    const treeJs = QbUtils.getTree(state.tree);\n\n    return (\n      <>\n        Tree:\n        <pre>\n          {JSON.stringify(treeJs, undefined, 2)}\n        </pre>\n        <br/>\n        <hr/>\n        <br/>\n      </>\n    );\n  };\n\n  const renderJsonLogicBlock = () => {\n    const {logic, data: logicData, errors: logicErrors} = QbUtils.jsonLogicFormat(state.tree, state.config);\n\n    return (\n      <>\n        <div>\n          <a href=\"http://jsonlogic.com/play.html\" target=\"_blank\" rel=\"noopener noreferrer\">jsonLogicFormat</a>: \n          { (logicErrors?.length || 0) > 0 \n            && <pre style={preErrorStyle}>\n              {JSON.stringify(logicErrors, undefined, 2)}\n            </pre> \n          }\n          { !!logic\n            && <pre style={preStyle}>\n              {\"// Rule\"}:<br />\n              {JSON.stringify(logic, undefined, 2)}\n              <br />\n              <hr />\n              {\"// Data\"}:<br />\n              {JSON.stringify(logicData, undefined, 2)}\n            </pre>\n          }\n        </div>\n        <hr/>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {renderSpelInput()}\n      {renderQueryBuilder()}\n      <div className=\"query-builder-result\">\n        {renderSpelBlock()}\n        {renderJsonLogicBlock()}\n        {renderJsTreeBlock()}\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from \"react\";\nimport {\n  BasicFuncs, Widgets, Fields, Config, Settings, Funcs,\n} from \"@react-awesome-query-builder/ui\";\nimport { MuiConfig } from \"@react-awesome-query-builder/mui\";\nimport { getCaseValueWidgetConfig } from \"./spel_concat\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nexport default (): Config => {\n  const InitialConfig = MuiConfig;\n\n  const widgets: Widgets = {\n    ...InitialConfig.widgets,\n    case_value: getCaseValueWidgetConfig(InitialConfig),\n  };\n\n  const fields: Fields = {\n    text: {\n      label: \"Text\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n      excludeOperators: [\"proximity\"]\n    },\n    qty: {\n      label: \"Qty\",\n      type: \"number\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        min: 0,\n        max: 1000,\n      },\n      preferWidgets: [\"number\"]\n    },\n    discount: {\n      label: \"Discount\",\n      type: \"number\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        min: 0,\n        max: 100,\n        step: 5,\n      },\n      preferWidgets: [\"slider\", \"rangeslider\"],\n      widgets: {\n        slider: {\n          widgetProps: {\n            customProps: {\n              input: {\n                InputProps: {\n                  endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    price: {\n      label: \"Price\",\n      type: \"number\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        min: 10,\n        max: 100\n      },\n      preferWidgets: [\"slider\", \"rangeslider\"],\n      isSpelVariable: true\n    },\n    color: {\n      label: \"Color\",\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [\n          { value: \"yellow\", title: \"Yellow\" },\n          { value: \"blue\", title: \"Blue\" },\n          { value: \"green\", title: \"Green\" },\n          { value: \"orange\", title: \"Orange\" }\n        ]\n      }\n    },\n    is_promotion: {\n      label: \"Promotoion\",\n      type: \"boolean\",\n      operators: [\"equal\"],\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        hideOperator: true,\n        operatorInlineLabel: \"is\",\n      }\n    },\n  };\n\n  const settings: Settings = {\n    ...InitialConfig.settings,\n    caseValueField: {\n      // type: \"case_value\", // >> Uncomment to see deprecated using of SpelConcatPart (\"./spel_concat.tsx\")\n      type: \"select\",\n      valueSources: [\"value\"],\n      fieldSettings: {\n        listValues: [{\n          value: \"Hot\",\n          title: \"Hot\"\n        }, {\n          value: \"In stock\",\n          title: \"In stock\"\n        }, {\n          value: \"other\",\n          title: \"other\"\n        }],\n      },\n      mainWidgetProps: {\n        valueLabel: \"Then\",\n        valuePlaceholder: \"Then\",\n      },\n    },\n    maxNumberOfCases: 5,\n    canRegroupCases: true,\n    maxNesting: 3,\n    canLeaveEmptyCase: false,\n    showErrorMessage: true,\n  };\n\n  const funcs: Funcs = {\n    LOWER: BasicFuncs.LOWER,\n    UPPER: BasicFuncs.UPPER,\n    LINEAR_REGRESSION: BasicFuncs.LINEAR_REGRESSION,\n  };\n\n  const config: Config = {\n    ...InitialConfig,\n    funcs,\n    widgets,\n    fields,\n    settings\n  };\n\n  return config;\n};\n\n\n"],"names":["MltSelector","_ref","k","value","setValue","listValues","options","useMemo","map","_ref2","title","id","toString","label","properties","type","format","onChange","useCallback","values","actionMeta","res","val","__isNew__","getOptionValue","option","getOptionLabel","aValue","list","item","find","obj","React","Creatable","menuPortalTarget","document","body","menuPosition","key","isMulti","memo","jsonLogicFormatConcat","parts","Array","isArray","length","part","_part$value","filter","r","undefined","jsonLogicImportConcat","errors","v","Error","join","styles","use","InitialConfig","widgets","fields","settings","funcs","config","_objectSpread","MuiConfig","case_value","spelFormatValue","QbUtils","ExportUtils","spelFormatConcat","spelImportValue","spelImportConcat","jsonLogic","jsonLogicImport","factory","_fieldDefinition$fiel","fieldDefinition","ReactSelect","fieldSettings","text","valueSources","excludeOperators","qty","min","max","preferWidgets","discount","step","slider","widgetProps","customProps","input","InputProps","endAdornment","InputAdornment","position","price","isSpelVariable","color","is_promotion","operators","mainWidgetProps","hideOperator","operatorInlineLabel","caseValueField","valueLabel","valuePlaceholder","maxNumberOfCases","canRegroupCases","maxNesting","canLeaveEmptyCase","showErrorMessage","LOWER","BasicFuncs","UPPER","LINEAR_REGRESSION","preStyle","backgroundColor","margin","padding","preErrorStyle","emptyJsonTree","uuid","initialTreeFromJsonLogic","loadTree","loadFromJsonLogic","validationErrors","validateTree","console","warn","_QbUtils$loadFromSpel","loadFromSpel","_QbUtils$loadFromSpel2","_slicedToArray","spelLoadingErrors","treeJs","_QbUtils$jsonLogicFor","logic","logicData","logicErrors","_QbUtils$_spelFormat","_QbUtils$_spelFormat2","spel","spelErrors","_useState","useState","tree","spelStr","_useState2","state","setState","prevState","renderBuilder","props","className","style","Builder","size","e","target","onClick","_QbUtils$loadFromSpel3","_QbUtils$loadFromSpel4","_QbUtils$sanitizeTree","sanitizeTree","fixedTree","fixedErrors","JSON","stringify","Query","_extends","onInit","_spelFormat","getSwitchValues","jsonLogicFormat","data","href","rel","getTree"],"sourceRoot":""}