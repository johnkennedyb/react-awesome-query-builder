{"version":3,"file":"987.bundle.js","mappings":"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,QAAS,CACP+vD,KAAM,CACJvwD,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,YACA,WACA,eACA,UACA,eAEFmB,YAAa,CAAC,EACdR,QAAS,CAAC,GAEZ8vD,SAAU,CACRzwD,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFmB,YAAa,CAAC,EACdR,QAAS,CAAC,GAEZxE,MAAO,CACL6D,UAAW,CAET,QACA,YACA,gBAKRuhD,OAAQ,CACN1yC,gBAAiB,QACjBjM,WAAY,SACZpC,QAAS,CACP+gD,OAAQ,CACNvhD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJ6wD,OAAQ,CACN7wD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKR8Y,KAAM,CACJjK,gBAAiB,QACjBrO,QAAS,CACPsY,KAAM,CACJ9Y,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR41B,KAAM,CACJ/mB,gBAAiB,QACjBrO,QAAS,CACPo1B,KAAM,CACJ51B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR21B,SAAU,CACR9mB,gBAAiB,QACjBrO,QAAS,CACPm1B,SAAU,CACR31B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR8wD,OAAQ,CACNluD,WAAY,SACZiM,gBAAiB,gBACjBrO,QAAS,CACPswD,OAAQ,CACN9wD,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJgxD,YAAa,CACXhxD,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRgxD,YAAa,CACXniD,gBAAiB,qBACjBrO,QAAS,CACPwwD,YAAa,CACXhxD,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRwhD,QAAS,CACP3yC,gBAAiB,QACjBrO,QAAS,CACPghD,QAAS,CACPxhD,UAAW,CACT,QACA,YACA,UACA,eAEFmB,YAAa,CAGX,GAGJhF,MAAO,CAC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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: (sqlObj) => {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: (sqlObj) => {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const isRevArgs = opConfig.jsonLogic2.startsWith(\"#\");\n      const jsonLogic = (\"\"+opConfig.jsonLogic2).replace(/^#/, \"\");\n      const opk = jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": jsonLogic,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = right.value.substring(1, right.value.length - 1);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = right.value.substring(1);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = right.value.substring(0, right.value.length - 1);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","v","_typeof","Object","prototype","call","isObjectOrArray","typeOf","t","Array","isArray","isTypeOf","type","isNaN","shallowCopy","_toConsumableArray","_objectSpread","setIn","obj","path","newValue","opts","_opts","_opts2","canCreate","canIgnore","canChangeType","Error","length","expectedObjType","concat","_step","newObj","target","pathToTarget","targetKey","pop","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","k","value","expectedType","undefined","join","push","err","e","f","oldValue","mergeIn","mixin","_opts3","_opts4","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","_ref","arguments","isMixingArray","isMixingRealArray","indexDelta","_loop","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","Number","mk","useSymbols","targetMixValue","isMixValueExplicit","includes","left","right","mergeArraysSmart","filter","_targetMix$mk5","splice","omit","keys","fromEntries","entries","_ref2","_slicedToArray","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","stringify","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","key","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","val","map","el","_i","isDirtyJSX","_cleaned$props","cleaned","name","props","children","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","indexOf","_ref4","orig","_ref5","next","slice","prevs","after","reverse","find","_ref6","_ref7","prev","before","_ref8","_ref9","isAfterDirectly","isBeforeDirectly","x","reduce","acc","_ref10","_ref11","newOp","rel","relOp","ind","offset","Infinity","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","getLogger","devMode","process","_process3","NODE_ENV_TEST","console","log","debug","info","_process2","NODE_ENV","error","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","config","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","fields","subfields","subfieldsKey","_callee","_config$settings","fieldSeparator","fieldKey","fieldConfig","_context3","settings","t0","t1","getFieldRawConfig","field","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","split","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","_ref3","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","widgets","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","valueSrc","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","_isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","valueSources","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","res","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","types","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","id","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","item","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","index","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","max","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","options","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","not","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","label","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","placeholder","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","group","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","min","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","input","reverseOperatorsForNot","canShortMongoQuery","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldItemKeysForSearch","listKeysForSearch","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","locale","moment","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","notLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","fn","ctx","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","date","dim","add","toDate","toLowerCase","NOW","jsonLogic","jsonLogicCustomOps","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","RELATIVE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","method","charAt","spelImport","spel","_spel$methodName","matchRes","methodName","jsonLogicImport","abs","parseInt","sqlImport","sqlObj","_sqlObj$children","_sqlObj$children2","interval","_type","unit","escapeForFormat","mainWidgetProps","customProps","showSearch","listValues","plus","minus","day","week","month","year","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","_","coef","bias","_spel$children","_a$children","_sqlObj$children3","_left$children","_sqlObj$children4","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","compileMetaFieldSettings","asyncFetch","labelYes","labelNo","marks","isArr","validateValue","compileMetaWidget","factory","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","textSeparators","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderConfirm","useConfirm","renderField","renderOperator","renderFunc","renderConjs","renderButton","renderIcon","renderButtonGroup","renderValueSources","renderFieldSources","renderProvider","renderSwitch","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","hasOwnProperty","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","W","O","RCE","commonMemo","memoId","configId","memos","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret2","_loop2","savedConfig","_ret3","_loop3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","_ret","basicConfig","extConfig","clearConfigMemo","clear","getSize","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","momentLocale","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isFunc","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","opKeys","_typeWidgetConfig$opP","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","disabled","jsonLogicFormat","ff","tmp","p","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","some","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","resultQuery","formattedField","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","params","varName","jsonLogicVar","groupVarKey","isRev","formatteOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","it","realParentPath","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","SqlString","SqlStringOrig","trim","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","datetime","time","spelFormat","_spelFormat","_formatItemValue","_formatItemValue2","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue3","_formatItemValue4","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","realOp","_formatItemValue5","_formatItemValue6","formatLhs","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","_argValue2","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","parse","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","jsonLogic2","isRevArgs","conjKey","_step$value","funcPath","fk","_config$settings$json","varKeys","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","tKeys","jKeys","jlField","jlArgs","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_e$message","h","m","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","isEpoch","epoch","convertLhs","having","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","_e","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","isAllOrSomeInForMultiselect","opName","_config$operators$opN","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","flatizeTernary","buildCaseValProperties","_ref12","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","isValid","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","title","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapListValues","mapFn","searchListValue","search","shift","getListValue","selectedValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","allowCustomValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","maxLength","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","pageSize","filtered","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","newValues","toStart","hideNewValues","old","newFiltered","av","isHidden","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","groupTitle","grouplabel","renderTitle","rest","_objectWithoutProperties","_excluded","option","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","Utils","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","cls","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","number","boolean","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step3$value","valueFuncs","_step4$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step5","_iterator5","_step6","_step5$value","_iterator6","opFuncs","_loop4","_argsArr$filter","_step6$value","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","text","wgtDef","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","_this9","valsLabels","_this10","isCallable","dateFormat","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","timeFormat","use12Hours","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","rangeslider","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","_this12","_this13","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","setField","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","setValue","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","setConjunction","setNot","srcKey","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setValueSrc","setOperatorOption","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","xdpVersion","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","multiple","disableClearable","readonly","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","useCallback","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","defaultSelectWidth","defaultSearchWidth","width","customInputProps","customAutocompleteProps","minWidth","style","ariaLabel","theme","useTheme","GroupHeader","groupMaybeJson","groupLabel","tooltip","React","Tooltip","padding","color","palette","primary","main","backgroundColor","background","GroupItems","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","readOnly","groupBy","renderInput","_selectedListValue$ti","shouldRenderSelected","selectedTitle","renderValue","TextField","variant","inputProps","InputProps","endAdornment","CircularProgress","renderGroup","renderTags","getTagProps","Chip","renderOption","isGrouped","isSelected","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","altLabel","itemsToListValues","level","matchesType","prefix","repeat","_value2","_altLabel","fieldAdapter","selectedKey","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","onClick","icon","IconButton","Button","startIcon","Conj","checked","postfix","isDummyFn","Conjs","conjunctionOptions","showNot","conjsCount","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","handleChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","Boolean","ExpandMoreSharpIcon","Menu","component","sx","FormLabel","pt","pb","renderOptions","MuiTextWidget","errorMessage","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","pickerProps","slotProps","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","formatSingleValue","MuiDateTimeWidget","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","getListValueTitle","MuiNumberWidget","numberValue","useMemo","MuiSliderWidget","defaultSliderWidth","handleSliderChange","handleInputChange","handleInputBlur","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","stylesInputWrapper","MuiBooleanWidget","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","MuiProvider","settingsTheme","settingsLocale","themeConfig","createTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","_props$customProps","_ref$W","_props$customProps2","_ref2$W","_ref13","_ref14","_ref15","_ref16","_ref17","_ref17$W","_ref18","_ref18$W","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","MuiWidgets","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}