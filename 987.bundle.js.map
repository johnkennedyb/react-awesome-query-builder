{"version":3,"file":"987.bundle.js","mappings":"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FmB,YAAa,CAAC,EACdR,QAAS,CAAC,GAEZkvD,SAAU,CACR7vD,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFmB,YAAa,CAAC,EACdR,QAAS,CAAC,GAEZxE,MAAO,CACL6D,UAAW,CAET,QACA,YACA,gBAKR+gD,OAAQ,CACNpyC,gBAAiB,QACjB/L,WAAY,SACZpC,QAAS,CACPugD,OAAQ,CACN/gD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJiwD,OAAQ,CACNjwD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKR4Y,KAAM,CACJjK,gBAAiB,QACjBnO,QAAS,CACPoY,KAAM,CACJ5Y,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR21B,KAAM,CACJhnB,gBAAiB,QACjBnO,QAAS,CACPm1B,KAAM,CACJ31B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR01B,SAAU,CACR/mB,gBAAiB,QACjBnO,QAAS,CACPk1B,SAAU,CACR11B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRkwD,OAAQ,CACNttD,WAAY,SACZ+L,gBAAiB,gBACjBnO,QAAS,CACP0vD,OAAQ,CACNlwD,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJowD,YAAa,CACXpwD,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRowD,YAAa,CACXzhD,gBAAiB,qBACjBnO,QAAS,CACP4vD,YAAa,CACXpwD,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRghD,QAAS,CACPryC,gBAAiB,QACjBnO,QAAS,CACPwgD,QAAS,CACPhhD,UAAW,CACT,QACA,YACA,UACA,eAEFmB,YAAa,CAGX,GAGJhF,MAAO,CACL6D,UAAW,CACT,QACA,gBAKR,SAAU,CACR2O,gBAAiB,OACjB/L,WAAY,SACZpC,QAAS,CACPugD,OAAQ,CACN5/C,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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: (sqlObj) => {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: (sqlObj) => {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": opConfig.jsonLogic2,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType === \"time\" && typeof val === \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(config.ctx, val);\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  if (jlRangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = right.value.substring(1, right.value.length - 1);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = right.value.substring(1);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = right.value.substring(0, right.value.length - 1);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: (sqlObj) => {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","v","_typeof","Object","prototype","call","isObjectOrArray","typeOf","t","Array","isArray","isTypeOf","type","isNaN","shallowCopy","_toConsumableArray","_objectSpread","setIn","obj","path","newValue","opts","_opts","_opts2","canCreate","canIgnore","canChangeType","Error","length","expectedObjType","concat","_step","newObj","target","pathToTarget","targetKey","pop","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","k","value","expectedType","undefined","join","push","err","e","f","oldValue","mergeIn","mixin","_opts3","_opts4","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","_ref","arguments","isMixingArray","isMixingRealArray","indexDelta","_loop","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","Number","mk","useSymbols","targetMixValue","isMixValueExplicit","includes","left","right","mergeArraysSmart","filter","_targetMix$mk5","splice","omit","keys","fromEntries","entries","_ref2","_slicedToArray","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","stringify","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","key","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","val","map","el","_i","isDirtyJSX","_cleaned$props","cleaned","name","props","children","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","indexOf","_ref4","orig","_ref5","next","slice","prevs","after","reverse","find","_ref6","_ref7","prev","before","_ref8","_ref9","isAfterDirectly","isBeforeDirectly","x","reduce","acc","_ref10","_ref11","newOp","rel","relOp","ind","offset","Infinity","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","getLogger","devMode","process","_process3","NODE_ENV_TEST","console","log","debug","info","_process2","NODE_ENV","error","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","config","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","fields","subfields","subfieldsKey","_callee","_config$settings","fieldSeparator","fieldKey","fieldConfig","_context3","settings","t0","t1","getFieldRawConfig","field","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","split","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","_ref3","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","widgets","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","valueSrc","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","_isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","valueSources","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","res","fieldDefinition","_fieldDefinition$type","fieldType","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","types","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","id","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","item","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","index","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","max","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","options","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","not","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","label","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","placeholder","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","group","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","min","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","input","reverseOperatorsForNot","canShortMongoQuery","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldItemKeysForSearch","listKeysForSearch","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","locale","moment","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","notLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","fn","ctx","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","date","dim","add","toDate","toLowerCase","NOW","jsonLogic","jsonLogicCustomOps","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","RELATIVE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","method","charAt","spelImport","spel","_spel$methodName","matchRes","methodName","jsonLogicImport","abs","parseInt","sqlImport","sqlObj","_sqlObj$children","_sqlObj$children2","interval","_type","unit","escapeForFormat","mainWidgetProps","customProps","showSearch","listValues","plus","minus","day","week","month","year","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","_","coef","bias","_spel$children","_a$children","_sqlObj$children3","_left$children","_sqlObj$children4","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","compileMetaFieldSettings","asyncFetch","labelYes","labelNo","marks","isArr","validateValue","compileMetaWidget","factory","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","textSeparators","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderConfirm","useConfirm","renderField","renderOperator","renderFunc","renderConjs","renderButton","renderIcon","renderButtonGroup","renderValueSources","renderFieldSources","renderProvider","renderSwitch","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","hasOwnProperty","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","W","O","RCE","commonMemo","memoId","configId","memos","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret2","_loop2","savedConfig","_ret3","_loop3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","_ret","basicConfig","extConfig","clearConfigMemo","clear","getSize","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","momentLocale","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isFunc","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","opKeys","_typeWidgetConfig$opP","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","disabled","jsonLogicFormat","ff","tmp","p","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","some","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","resultQuery","formattedField","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","valueTypes","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","params","varName","jsonLogicVar","groupVarKey","isRev","formatteOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","it","realParentPath","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","SqlString","SqlStringOrig","trim","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","datetime","time","spelFormat","_spelFormat","_formatItemValue","_formatItemValue2","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue3","_formatItemValue4","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","realOp","_formatItemValue5","_formatItemValue6","formatLhs","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","_argValue2","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","parse","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","jsonLogic2","conjKey","_step$value","funcPath","fk","_config$settings$json","varKeys","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","tKeys","jKeys","jlField","jlArgs","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","h","m","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","toISOString","_e$message","argsArr","_vals","_toArray","funcKeys","fc","parsed","_e","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_parseRule","arity","isAllOrSomeInForMultiselect","opName","_config$operators$opN","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","flatizeTernary","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","isValid","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","title","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapListValues","mapFn","searchListValue","search","shift","getListValue","selectedValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","allowCustomValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","maxLength","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","pageSize","filtered","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","newValues","toStart","hideNewValues","old","newFiltered","av","isHidden","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","groupTitle","grouplabel","renderTitle","rest","_objectWithoutProperties","_excluded","option","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","Utils","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","cls","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","number","boolean","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step3$value","valueFuncs","_step4$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step5","_iterator5","_step6","_step5$value","_iterator6","opFuncs","_argsArr$filter$find","_step6$value","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","text","wgtDef","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","_this9","valsLabels","_this10","isCallable","dateFormat","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","timeFormat","use12Hours","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","rangeslider","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","_this12","_this13","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","setField","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","setValue","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","setConjunction","setNot","srcKey","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setValueSrc","setOperatorOption","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","xdpVersion","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","multiple","disableClearable","readonly","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","useCallback","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","defaultSelectWidth","defaultSearchWidth","width","customInputProps","customAutocompleteProps","minWidth","style","ariaLabel","theme","useTheme","GroupHeader","groupMaybeJson","groupLabel","tooltip","React","Tooltip","padding","color","palette","primary","main","backgroundColor","background","GroupItems","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","readOnly","groupBy","renderInput","_selectedListValue$ti","shouldRenderSelected","selectedTitle","renderValue","TextField","variant","inputProps","InputProps","endAdornment","CircularProgress","renderGroup","renderTags","getTagProps","Chip","renderOption","isGrouped","isSelected","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","altLabel","itemsToListValues","level","matchesType","prefix","repeat","_value2","_altLabel","fieldAdapter","selectedKey","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","onClick","icon","IconButton","Button","startIcon","Conj","checked","postfix","isDummyFn","Conjs","conjunctionOptions","showNot","conjsCount","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","handleChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","Boolean","ExpandMoreSharpIcon","Menu","component","sx","FormLabel","pt","pb","renderOptions","MuiTextWidget","errorMessage","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","pickerProps","slotProps","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","formatSingleValue","MuiDateTimeWidget","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","getListValueTitle","MuiNumberWidget","numberValue","useMemo","MuiSliderWidget","defaultSliderWidth","handleSliderChange","handleInputChange","handleInputBlur","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","stylesInputWrapper","MuiBooleanWidget","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","MuiProvider","settingsTheme","settingsLocale","themeConfig","createTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","_props$customProps","_ref$W","_props$customProps2","_ref2$W","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref17$W","_ref18","_ref18$W","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","MuiWidgets","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}