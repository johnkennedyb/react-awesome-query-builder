{"version":3,"file":"987.bundle.js","mappings":"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AAM,CACJjZ,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRg2B,KAAM,CACJrnB,gBAAiB,QACjBjP,QAAS,CACPs2B,KAAM,CACJh2B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR+1B,SAAU,CACRpnB,gBAAiB,QACjBjP,QAAS,CACPq2B,SAAU,CACR/1B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRuxD,OAAQ,CACN7uD,WAAY,SACZiM,gBAAiB,gBACjBjP,QAAS,CACP6xD,OAAQ,CACNvxD,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJyxD,YAAa,CACXzxD,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRyxD,YAAa,CACX9iD,gBAAiB,qBACjBjP,QAAS,CACP+xD,YAAa,CACXzxD,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRmiD,QAAS,CACPxzC,gBAAiB,QACjBjP,QAAS,CACPyiD,QAAS,CACPniD,UAAW,CACT,QACA,YACA,UACA,eAEFkB,YAAa,CAGX,GAGJlF,MAAO,CACLgE,UAAW,CACT,QACA,gBAKR,SAAU,CACR2O,gBAAiB,OACjBjM,WAAY,SACZhD,QAAS,CACPwiD,OAAQ,CACNhhD,YAAa,CACXiR,IAAK,GAEPnS,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEFU,QAAS,CACP0oD,MAAO,CACL75C,MAAO,YAETg6C,UAAW,CACTh6C,MAAO,YAETo6C,KAAM,CACJp6C,MAAO,WAETw6C,cAAe,CACbx6C,MAAO,YAET46C,QAAS,CACP56C,MAAO,WAETg7C,iBAAkB,CAChBh7C,MAAO,YAETy8C,QAAS,CACPz8C,MAAO,iBAET68C,YAAa,CACX78C,MAAO,yBASjB,WAAc,CACZ7M,WAAY,aACZhD,QAAS,CACPmzD,WAAY,CACV3xD,YAAa,CAAC,MAwXpBtF,SAAAA,GACAuc,IAAAA,IASF,SANAxd,GAASu5D,GAA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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    // should not be possible\n    // if (field._isFuncArg) {\n    //   // it's func arg\n    //   return null;\n    // }\n    // if (field._isFunc) {\n    //   // it's field func\n    //   return \"func\";\n    // }\n    if (!field.func && field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type && !!field.widgets) {\n      // it's already a config\n      // but don't mess up with obj from `getFuncSignature`, it has `type` but no `widgets` and other keys !\n      return field;\n    }\n    if (field._isFuncArg) {\n      // it's func arg\n      return getFuncArgConfig(config, field._funcKey, field._argKey);\n    }\n    if (field._isFunc) {\n      // it's a func\n      return getFuncConfig(config, field._funcKey);\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's a func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n  loadMoreLabel: \"Load more...\",\n  loadingMoreLabel: \"Loading more...\",\n  typeToSearchLabel: \"Type to search\",\n  loadingLabel: \"Loading...\",\n  notFoundLabel: \"Not found\",\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"searchOrValues\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\", \"sqlDialect\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\", \"sqlDialect\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    // Note: because of desctructing, strict find would not be possible\n    //  (see commented line in `findExtended`)\n    //  (see issue #1187)\n    configStore.set({...config}, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    if (fieldConfig.type !== \"!struct\") {\n      // console.warn(`No type config for ${type}`);\n      fieldConfig.disabled = true;\n    }\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.unescapeLike = (val, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  let res = val;\n  // unescape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/\\\\\\\\([%_])/g, \"$1\");\n  } else {\n    res = res.replace(/\\\\([%_])/g, \"$1\");\n  }\n  return res;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/[%_\\\\]/g, \"\\\\\\\\$&\");\n  } else {\n    res = res.replace(/[%_]/g, \"\\\\$&\");\n  }\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const valFieldDefinition = valueSrc == \"field\" && getFieldConfig(config, currentValue) || {}; \n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        operator,\n        operatorDef,\n        valFieldDefinition,\n        config.settings.sqlDialect,\n      ];\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const isRevArgs = opConfig.jsonLogic2.startsWith(\"#\");\n      const jsonLogic = (\"\"+opConfig.jsonLogic2).replace(/^#/, \"\");\n      const opk = jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": jsonLogic,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func || dv?.get?.(\"func\")) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    const v = valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n    // Fix if func in LHS has `defaultValue: { func: ..., args: {...} }`\n    if (v?.func) {\n      valueFixes[i] = jsToImmutable(v);\n      valueSrcFixes[i] = \"func\";\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\nexport const setArgValueAsyncListValues = (value, argKey, asyncListValues, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"asyncListValues\"], asyncListValues);\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  \n  const isFetchSelectedValues = !!meta?.fetchSelectedValues && Array.isArray(search);\n  if (isFetchSelectedValues) {\n    const values = listValuesToArray(all)\n      .filter(({value}) => search.includes(value));\n    return {\n      values\n    };\n  }\n\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const isBetweenNormal = (child.type == \"op-and\" && child.children.length == 2 && child.children[0].type == \"op-ge\" && child.children[1].type == \"op-le\");\n      const isBetweenRev = (child.type == \"op-or\" && child.children.length == 2 && child.children[0].type == \"op-lt\" && child.children[1].type == \"op-gt\");\n      const isBetween = isBetweenNormal || isBetweenRev;\n      const canFlatize = child.type == type && !child.not && !isBetween;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1, right.value.length - 1), sqlDialect);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1), sqlDialect);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(0, right.value.length - 1), sqlDialect);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} >= ${valFrom} && ${field} <= ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef, sqlDialect) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef, sqlDialect) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc, setArgValueAsyncListValues} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${targetFV.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n      if (asyncListValues) {\n        targetFV = setArgValueAsyncListValues(targetFV, argKey, asyncListValues, argDefinition, config);\n      }\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, undefined, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, undefined, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n    const canUseOldConfig = isConfigChanged && !isTreeChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, canUseOldConfig ? oldConfig : undefined, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (!treeEl) {\n        console.error(\"Please change renderBuilder implementation of <Query>: wrap <Builder> with div.query-builder for drag-n-drop support\");\n        return;\n      }\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, parentDelta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get?.(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    parentDelta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    parentDelta: PropTypes.number,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\", \"parentDelta\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id, parentDelta,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      }]);\n    }\n    const widgets = (isFuncArg ? [0] : range(0, cardinality)).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta ?? delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue, parentDelta,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          parentDelta={parentDelta ?? delta}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    const { isFuncArg } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {(isFuncArg ? [0] : range(0, cardinality)).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    parentDelta: PropTypes.number,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, parentDelta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition, parentDelta} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue, parentDelta,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n    const asyncListValues = arg?.get(\"asyncListValues\");\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      asyncListValues,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n      parentDelta,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        parentDelta={this.props.parentDelta}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch, fetchSelectedValuesOnInit,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config, field\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = config.settings.loadMoreLabel ?? \"Load more...\";\n  const loadingMoreTitle = config.settings.loadingMoreLabel ?? \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? (config.settings.typeToSearchLabel ?? \"Type to search\") : placeholder;\n\n  // Import from JsonLogic fills `asyncListValues`, but import from SQL/SpEL does not. It's workaround\n  if (asyncFetch && fetchSelectedValuesOnInit && !selectedAsyncListValues && selectedValue != undefined) {\n    selectedAsyncListValues = Array.isArray(selectedValue) ? selectedValue : [selectedValue];\n  }\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n  const latestSelectedValue = React.useRef();\n  latestSelectedValue.current = selectedValue;\n  const latestInputValue = React.useRef();\n  latestInputValue.current = inputValue;\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  // if selectedAsyncListValues is array of strings/numbers => needs to be resolved\n  const areSelectedAsyncListValuesNotResolved = selectedAsyncListValues && Array.isArray(selectedAsyncListValues)\n    && selectedAsyncListValues.filter(v => v !== null && typeof v !== \"object\").length > 0;\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoadSelected = fetchSelectedValuesOnInit && !open && asyncFetch\n    && areSelectedAsyncListValuesNotResolved && selectedValue != null;\n  const canFirstLoadOnOpened = open && asyncFetch\n    && (asyncListValues === undefined)\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = (canFirstLoadOnOpened || canInitialLoadSelected) && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch - search\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  // fetch - selected values only\n  const fetchSelectedListValues = async () => {\n    const selectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    if (!selectedValues.length) {\n      return null;\n    }\n\n    const meta = { fetchSelectedValues: true };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, selectedValues, -1, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values: selectedListValues } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const latestSelectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    const nValues = latestSelectedValues.map(v => getItemInListValues(selectedListValues, v) ?? makeCustomListValue(v));\n\n    return nValues.length ? nValues : null;\n  };\n\n  const loadSelectedListValues = async () => {\n    setLoadingCnt(x => (x + 1));\n    const list = await fetchSelectedListValues();\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      setValue(latestSelectedValue.current, list);\n    }\n    setLoadingCnt(x => (x - 1));\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n      // if (!componentIsMounted.current && field) {\n      //   console.log(`Autocomplete for ${field} has been unmounted`)\n      // }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // Initial loading\n    if (canFirstLoadOnOpened && loadingCnt == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    if (canInitialLoadSelected && loadingCnt == 0) {\n      (async () => {\n        await loadSelectedListValues();\n      })();\n    }\n  }, [canFirstLoadOnOpened, canInitialLoadSelected, loadingCnt]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    const valHasDuplicates = multiple && val?.length && (new Set(val)).size !== val.length;\n    const isBadCallAfterTokenization = multiple && uif === \"antd\" && e === null && option === null && valHasDuplicates;\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput\n      || isBadCallAfterTokenization;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const isRemoveOption = uif === \"mui\" && eventType === \"removeOption\" && newInputValue === \"\" && multiple;\n    const isSelectOption = uif === \"mui\" && eventType === \"selectOption\" && newInputValue === \"\" && multiple;\n    const isIgnoredBlur = uif === \"mui\" && !multiple && eventType === \"blur\" && newInputValue === selectedListValue?.title;\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n      || isSelectOption || isRemoveOption || isIgnoredBlur\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (uif === \"mui\" && !multiple && eventType === \"selectOption\" && newInputValue !== \"\") {\n      // parity with Antd\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || (lv == null);\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","v","_typeof","Object","prototype","call","isObjectOrArray","typeOf","t","Array","isArray","isTypeOf","type","isNaN","shallowCopy","_toConsumableArray","_objectSpread","setIn","obj","path","newValue","opts","_opts","_opts2","canCreate","canIgnore","canChangeType","Error","length","expectedObjType","concat","_step","newObj","target","pathToTarget","targetKey","pop","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","k","value","expectedType","undefined","join","push","err","e","f","oldValue","mergeIn","mixin","_opts3","_opts4","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","_ref","arguments","isMixingArray","isMixingRealArray","indexDelta","_loop","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","Number","mk","useSymbols","targetMixValue","isMixValueExplicit","includes","left","right","mergeArraysSmart","filter","_targetMix$mk5","splice","omit","keys","fromEntries","entries","_ref2","_slicedToArray","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","stringify","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","key","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","val","map","el","_i","isDirtyJSX","_cleaned$props","cleaned","name","props","children","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","indexOf","_ref4","orig","_ref5","next","slice","prevs","after","reverse","find","_ref6","_ref7","prev","before","_ref8","_ref9","isAfterDirectly","isBeforeDirectly","x","reduce","acc","_ref10","_ref11","newOp","rel","relOp","ind","offset","Infinity","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","getLogger","devMode","process","_process3","NODE_ENV_TEST","console","log","debug","info","_process2","NODE_ENV","error","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","config","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","fields","subfields","subfieldsKey","_callee","_config$settings","fieldSeparator","fieldKey","fieldConfig","_context3","settings","t0","t1","getFieldRawConfig","field","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","split","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","_ref3","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","widgets","_isFuncArg","_isFunc","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","valueSrc","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","valueSources","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","res","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","types","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","id","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","item","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","index","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","max","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","options","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","not","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","label","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","placeholder","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","group","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","min","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","input","reverseOperatorsForNot","canShortMongoQuery","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldItemKeysForSearch","listKeysForSearch","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","locale","moment","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","notLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","loadMoreLabel","loadingMoreLabel","typeToSearchLabel","loadingLabel","notFoundLabel","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","fn","ctx","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","date","dim","add","toDate","toLowerCase","NOW","jsonLogic","jsonLogicCustomOps","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","RELATIVE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","method","charAt","spelImport","spel","_spel$methodName","matchRes","methodName","jsonLogicImport","abs","parseInt","sqlImport","sqlObj","_","sqlDialect","_sqlObj$children","_sqlObj$children2","interval","_type","unit","escapeForFormat","mainWidgetProps","customProps","showSearch","listValues","plus","minus","day","week","month","year","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","coef","bias","_spel$children","_a$children","_sqlObj$children3","_left$children","_sqlObj$children4","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","compileMetaFieldSettings","asyncFetch","labelYes","labelNo","marks","isArr","validateValue","compileMetaWidget","factory","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","textSeparators","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderConfirm","useConfirm","renderField","renderOperator","renderFunc","renderConjs","renderButton","renderIcon","renderButtonGroup","renderValueSources","renderFieldSources","renderProvider","renderSwitch","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","hasOwnProperty","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","W","O","RCE","commonMemo","memoId","configId","memos","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret2","_loop2","savedConfig","_ret3","_loop3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","_ret","basicConfig","extConfig","clearConfigMemo","clear","getSize","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","momentLocale","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","opKeys","_typeWidgetConfig$opP","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","disabled","jsonLogicFormat","ff","tmp","p","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","some","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","resultQuery","formattedField","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","params","varName","jsonLogicVar","groupVarKey","isRev","formatteOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","it","realParentPath","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","SqlString","SqlStringOrig","trim","substring","unescapeLike","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","datetime","time","spelFormat","_spelFormat","_formatItemValue","_formatItemValue2","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue3","_formatItemValue4","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","realOp","_formatItemValue5","_formatItemValue6","formatLhs","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","_argValue2","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","parse","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","jsonLogic2","isRevArgs","conjKey","_step$value","funcPath","fk","_config$settings$json","varKeys","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","tKeys","jKeys","jlField","jlArgs","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_e$message","h","m","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","isEpoch","epoch","convertLhs","having","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","_e","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","isAllOrSomeInForMultiselect","opName","_config$operators$opN","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","flatizeTernary","buildCaseValProperties","_ref12","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","isValid","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","_dv$get","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","title","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapListValues","mapFn","searchListValue","search","shift","getListValue","selectedValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","allowCustomValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","maxLength","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","setArgValueAsyncListValues","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","_values","pageSize","filtered","currentOffset","newOffset","hasMore","fetchSelectedValues","abrupt","ceil","_x","_x2","_x3","mergeListValues","newValues","toStart","hideNewValues","old","newFiltered","av","isHidden","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","groupTitle","grouplabel","renderTitle","rest","_objectWithoutProperties","_excluded","option","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","Utils","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","cls","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","isBetweenNormal","isBetweenRev","isBetween","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","number","boolean","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step3$value","valueFuncs","_step4$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step5","_iterator5","_step6","_step5$value","_iterator6","opFuncs","_loop4","_argsArr$filter","_step6$value","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","text","wgtDef","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","_this9","valsLabels","_this10","isCallable","dateFormat","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","timeFormat","use12Hours","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","rangeslider","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","_this12","_this13","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","setField","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","setValue","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","setConjunction","setNot","srcKey","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setValueSrc","setOperatorOption","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","xdpVersion","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","multiple","disableClearable","readonly","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","useCallback","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","defaultSelectWidth","defaultSearchWidth","width","customInputProps","customAutocompleteProps","minWidth","style","ariaLabel","theme","useTheme","GroupHeader","groupMaybeJson","groupLabel","tooltip","React","Tooltip","padding","color","palette","primary","main","backgroundColor","background","GroupItems","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","readOnly","groupBy","renderInput","_selectedListValue$ti","shouldRenderSelected","selectedTitle","renderValue","TextField","variant","inputProps","InputProps","endAdornment","CircularProgress","renderGroup","renderTags","getTagProps","Chip","renderOption","isGrouped","isSelected","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","altLabel","itemsToListValues","level","matchesType","prefix","repeat","_value2","_altLabel","fieldAdapter","selectedKey","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","onClick","icon","IconButton","Button","startIcon","Conj","checked","postfix","isDummyFn","Conjs","conjunctionOptions","showNot","conjsCount","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","handleChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","Boolean","ExpandMoreSharpIcon","Menu","component","sx","FormLabel","pt","pb","renderOptions","MuiTextWidget","errorMessage","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","pickerProps","slotProps","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","formatSingleValue","MuiDateTimeWidget","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","getListValueTitle","MuiNumberWidget","numberValue","useMemo","MuiSliderWidget","defaultSliderWidth","handleSliderChange","handleInputChange","handleInputBlur","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","stylesInputWrapper","MuiBooleanWidget","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","MuiProvider","settingsTheme","settingsLocale","themeConfig","createTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","_props$customProps","_ref$W","_props$customProps2","_ref2$W","_ref13","_ref14","_ref15","_ref16","_ref17","_ref17$W","_ref18","_ref18$W","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","MuiWidgets","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","canUseOldConfig","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","parentDelta","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","_immValueError$get","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","defaultValueSourcesLabels","_valueSourcesInfo$src","_valueSourcesInfo$src2","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","_config$settings$load","_config$settings$load2","_config$settings$type","useLoadMore","useAsyncSearch","forceAsyncSearch","fetchSelectedValuesOnInit","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","latestSelectedValue","nSelectedAsyncListValues","areSelectedAsyncListValuesNotResolved","listValuesToDisplay","canInitialLoadSelected","canFirstLoadOnOpened","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","fetchSelectedListValues","_callee2","selectedListValues","latestSelectedValues","_getItemInListValues","loadSelectedListValues","_callee3","loadListValues","_callee4","_args4","_context4","loadListValuesDebounced","debounce","_callee5","_context5","_callee6","_context6","_callee7","isLoadMoreClick","_context7","_callee8","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","valHasDuplicates","isBadCallAfterTokenization","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context8","_x4","_callee9","newInputValue","eventType","isRemoveOption","isSelectOption","isIgnoredBlur","shouldIgnore","_context9","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}