{"version":3,"file":"987.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": opConfig.jsonLogic2,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType === \"time\" && typeof val === \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(config.ctx, val);\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  if (jlRangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n/**\n * @deprecated\n */\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    convVal = convertArg(val, conv, config, meta, spel);\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\n// const wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n//       not: false,\n//       field: groupField,\n//     }\n//   };\n// };\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, getFieldId, _getFromConfigCache, _saveToConfigCache,\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import pick from \"lodash/pick\";\nimport { extendConfig } from \"./configExtend\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = () => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo();\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport * from \"./configMemo\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["moment","Utils","xdpVersion","parseInt","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","e","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","sx","p","FormLabel","pt","pb","renderOptions","MuiTextWidget","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","fields","field","Array","isArray","some","pop","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","_props$customProps2","_ref2$W","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","call","shallowCopy","obj","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","fieldConfig","getFieldConfig","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","multiselectOps","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","immTree","operators","combinationOperators","opKey","opConfig","jsonLogic","opk","jsonLogic2","_jsonLogicIsExclamationOp","conjunctions","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","match","tKeys","jKeys","jlField","jlArgs","expectedTypes","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","arg","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","mainWidget","widgetConfig","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","jsonLogicImport","_e$message","message","valueType","_meta$settings","normalizeField","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","from","Set","parts","ancs","fp","conjunction","groupToId","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultGroupConjunction","_parseRule","arity","_meta$settings2","isAllOrSomeInForMultiselect","opName","_config$operators$opN","isGroup0","groupOperators","opKeys","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","submeta","parseRule","conj","havingVals","parentFieldConfig","opCanReverse","reversedOp","isInRuleGroup","canRev","reverseOperatorsForNot","needRev","havingNot","canRevHaving","getWidgetForFieldOp","convertedArgs","_res$properties","groupFieldConfig","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","flatizeTernary","cond","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","List","defaultConjunction","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","isRev","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","forExport","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","cls","_val","isVar","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","_spel$_groupField","parentSpel","_groupField","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","buildCase","convertArg","sw","buildSimpleSwitch","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","reversedOpConfig","opNeedsReverse","needWrapWithNot","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$_groupField2","_config$settings$case","_spel$children","at","_values$","caseValueField","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_ret","_loop5","_argsArr$filter$find","_step10$value","_field3","_opConfig2","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_processConcatChildren","convertedChild","_config$settings$case2","_convVal","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","getDefaultField","canGetFirst","parentRuleGroupField","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","getFirstOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","_groupFieldConfig","_groupFieldConfig2","conjs","defaultGroupProperties","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","createListWithOneElement","createListFromArray","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","_config$settings$form","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","minMaxContext","context","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","_config$settings2","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","hasValueErrorChanged","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","fieldCacheKey","getFieldId","cacheKey","cached","_getFromConfigCache","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","_saveToConfigCache","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","getOneChildOrDescendant","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMetaFieldLike","compileMetaField","mainWidgetProps","compileMetaSettings","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","bind","_ctx$components","_props","Cmp","components","O","canShortMongoQuery","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","commonMemo","memoId","configId","memos","getCommonMemo","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","findExtended","findConfig","_ret2","savedConfig","_ret3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","__cache","typeConfig","excludeOperators","typeWidgetConfig","defOp","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_argKey","_funcKey","_isFunc","_isCaseValue","_fieldConfig$fieldSet2","_keysToPutInFieldSett","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_typeWidgetConfig$opP","_fieldWidgetConfig$op","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_context3","t0","t1","_config$settings3","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$split","getFieldPathParts","onlyKeys","_field$get3","bucketKey","_config$__cache","_field$get4","_field$get5","_widgetConfig$opProps","widgetOpProps","fieldWidgetOpProps","mergedConfig","_fieldConfig$widgets","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","_not","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","origNot","groupOperatorDef","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","resultQuery","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","formatteOp","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","mergeIn","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","currentFielType","_getNewValueForFieldO3","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","_Utils$ConfigUtils","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","expectedType","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}