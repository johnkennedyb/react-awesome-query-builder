{"version":3,"file":"987.bundle.js","mappings":"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A,cACA,YACA,WACA,eACA,UACA,eAEFmB,YAAa,CAAC,EACdR,QAAS,CAAC,GAEZxE,MAAO,CACL6D,UAAW,CAET,QACA,YACA,gBAKRgiD,OAAQ,CACNnzC,gBAAiB,QACjBjM,WAAY,SACZpC,QAAS,CACPwhD,OAAQ,CACNhiD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJsxD,OAAQ,CACNtxD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRmZ,KAAM,CACJtK,gBAAiB,QACjBrO,QAAS,CACP2Y,KAAM,CACJnZ,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRm2B,KAAM,CACJtnB,gBAAiB,QACjBrO,QAAS,CACP21B,KAAM,CACJn2B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRk2B,SAAU,CACRrnB,gBAAiB,QACjBrO,QAAS,CACP01B,SAAU,CACRl2B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRuxD,OAAQ,CACN3uD,WAAY,SACZiM,gBAAiB,gBACjBrO,QAAS,CACP+wD,OAAQ,CACNvxD,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJyxD,YAAa,CACXzxD,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRyxD,YAAa,CACX5iD,gBAAiB,qBACjBrO,QAAS,CACPixD,YAAa,CACXzxD,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRiiD,QAAS,CACPpzC,gBAAiB,QACjBrO,QAAS,CACPyhD,QAAS,CACPjiD,UAAW,CACT,QACA,YACA,UACA,eAEFmB,YAAa,CAGX,GAGJhF,MAAO,CACL6D,UAAW,CACT,QACA,gBAKR,SAAU,CACR6O,gBAAiB,OACjBjM,WAAY,SACZpC,QAAS,CACPwhD,OAAQ,CACN7gD,YAAa,CACXkR,IAAK,GAEPrS,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBAC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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n  loadMoreLabel: \"Load more...\",\n  loadingMoreLabel: \"Loading more...\",\n  typeToSearchLabel: \"Type to search\",\n  loadingLabel: \"Loading...\",\n  notFoundLabel: \"Not found\",\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"searchOrValues\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\", \"sqlDialect\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\", \"sqlDialect\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    if (fieldConfig.type !== \"!struct\") {\n      // console.warn(`No type config for ${type}`);\n      fieldConfig.disabled = true;\n    }\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let resultQuery = {};\n  if (preserveSingleRuleGroup)\n    resultQuery[conj] = list.toList().toJS();\n  else\n    resultQuery = list.first();\n  \n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.unescapeLike = (val, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  let res = val;\n  // unescape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/\\\\\\\\([%_])/g, \"$1\");\n  } else {\n    res = res.replace(/\\\\([%_])/g, \"$1\");\n  }\n  return res;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/[%_\\\\]/g, \"\\\\\\\\$&\");\n  } else {\n    res = res.replace(/[%_]/g, \"\\\\$&\");\n  }\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const valFieldDefinition = valueSrc == \"field\" && getFieldConfig(config, currentValue) || {}; \n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        operator,\n        operatorDef,\n        valFieldDefinition,\n        config.settings.sqlDialect,\n      ];\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlArgsMarker = \"jlArgs\";\nconst jlEqOps = [\"==\", \"!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const isRevArgs = opConfig.jsonLogic2.startsWith(\"#\");\n      const jsonLogic = (\"\"+opConfig.jsonLogic2).replace(/^#/, \"\");\n      const opk = jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker), \n        \"jsonLogic2\": jsonLogic,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.jsonLogic2;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": []}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special jsonlogic2 value\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const isGroup0 = config.settings.groupOperators.includes(op) && !isAllOrSomeInForMultiselect;\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  \n  const isFetchSelectedValues = !!meta?.fetchSelectedValues && Array.isArray(search);\n  if (isFetchSelectedValues) {\n    const values = listValuesToArray(all)\n      .filter(({value}) => search.includes(value));\n    return {\n      values\n    };\n  }\n\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1, right.value.length - 1), sqlDialect);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1), sqlDialect);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(0, right.value.length - 1), sqlDialect);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic:  (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef, sqlDialect) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef, sqlDialect) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (!treeEl) {\n        console.error(\"Please change renderBuilder implementation of <Query>: wrap <Builder> with div.query-builder for drag-n-drop support\");\n        return;\n      }\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange = \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch, fetchSelectedValuesOnInit,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config, field\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = config.settings.loadMoreLabel ?? \"Load more...\";\n  const loadingMoreTitle = config.settings.loadingMoreLabel ?? \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? (config.settings.typeToSearchLabel ?? \"Type to search\") : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n  const latestSelectedValue = React.useRef();\n  latestSelectedValue.current = selectedValue;\n  const latestInputValue = React.useRef();\n  latestInputValue.current = inputValue;\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  // if selectedAsyncListValues is array of strings/numbers => needs to be resolved\n  const areSelectedAsyncListValuesNotResolved = selectedAsyncListValues && Array.isArray(selectedAsyncListValues)\n    && selectedAsyncListValues.filter(v => v !== null && typeof v !== \"object\").length > 0;\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoadSelected = fetchSelectedValuesOnInit && !open && asyncFetch\n    && areSelectedAsyncListValuesNotResolved && selectedValue != null;\n  const canFirstLoadOnOpened = open && asyncFetch\n    && (asyncListValues === undefined)\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = (canFirstLoadOnOpened || canInitialLoadSelected) && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch - search\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  // fetch - selected values only\n  const fetchSelectedListValues = async () => {\n    const selectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    if (!selectedValues.length) {\n      return null;\n    }\n\n    const meta = { fetchSelectedValues: true };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, selectedValues, -1, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values: selectedListValues } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const latestSelectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    const nValues = latestSelectedValues.map(v => getItemInListValues(selectedListValues, v) ?? makeCustomListValue(v));\n\n    return nValues.length ? nValues : null;\n  };\n\n  const loadSelectedListValues = async () => {\n    setLoadingCnt(x => (x + 1));\n    const list = await fetchSelectedListValues();\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      setValue(latestSelectedValue.current, list);\n    }\n    setLoadingCnt(x => (x - 1));\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n      // if (!componentIsMounted.current && field) {\n      //   console.log(`Autocomplete for ${field} has been unmounted`)\n      // }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // Initial loading\n    if (canFirstLoadOnOpened && loadingCnt == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    if (canInitialLoadSelected && loadingCnt == 0) {\n      (async () => {\n        await loadSelectedListValues();\n      })();\n    }\n  }, [canFirstLoadOnOpened, canInitialLoadSelected, loadingCnt]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    const valHasDuplicates = multiple && val?.length && (new Set(val)).size !== val.length;\n    const isBadCallAfterTokenization = multiple && uif === \"antd\" && e === null && option === null && valHasDuplicates;\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput\n      || isBadCallAfterTokenization;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const isRemoveOption = uif === \"mui\" && eventType === \"removeOption\" && newInputValue === \"\" && multiple;\n    const isSelectOption = uif === \"mui\" && eventType === \"selectOption\" && newInputValue === \"\" && multiple;\n    const isIgnoredBlur = uif === \"mui\" && !multiple && eventType === \"blur\" && newInputValue === selectedListValue?.title;\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n      || isSelectOption || isRemoveOption || isIgnoredBlur\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (uif === \"mui\" && !multiple && eventType === \"selectOption\" && newInputValue !== \"\") {\n      // parity with Antd\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || (lv == null);\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","v","_typeof","Object","prototype","call","isObjectOrArray","typeOf","t","Array","isArray","isTypeOf","type","isNaN","shallowCopy","_toConsumableArray","_objectSpread","setIn","obj","path","newValue","opts","_opts","_opts2","canCreate","canIgnore","canChangeType","Error","length","expectedObjType","concat","_step","newObj","target","pathToTarget","targetKey","pop","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","k","value","expectedType","undefined","join","push","err","e","f","oldValue","mergeIn","mixin","_opts3","_opts4","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","_ref","arguments","isMixingArray","isMixingRealArray","indexDelta","_loop","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","Number","mk","useSymbols","targetMixValue","isMixValueExplicit","includes","left","right","mergeArraysSmart","filter","_targetMix$mk5","splice","omit","keys","fromEntries","entries","_ref2","_slicedToArray","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","stringify","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","key","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","val","map","el","_i","isDirtyJSX","_cleaned$props","cleaned","name","props","children","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","indexOf","_ref4","orig","_ref5","next","slice","prevs","after","reverse","find","_ref6","_ref7","prev","before","_ref8","_ref9","isAfterDirectly","isBeforeDirectly","x","reduce","acc","_ref10","_ref11","newOp","rel","relOp","ind","offset","Infinity","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","getLogger","devMode","process","_process3","NODE_ENV_TEST","console","log","debug","info","_process2","NODE_ENV","error","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","config","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","fields","subfields","subfieldsKey","_callee","_config$settings","fieldSeparator","fieldKey","fieldConfig","_context3","settings","t0","t1","getFieldRawConfig","field","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","split","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","_ref3","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","widgets","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","valueSrc","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","_isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","valueSources","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","res","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","types","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","id","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","item","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","index","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","max","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","options","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","not","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","label","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","placeholder","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","group","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","min","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","input","reverseOperatorsForNot","canShortMongoQuery","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldItemKeysForSearch","listKeysForSearch","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","locale","moment","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","notLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","loadMoreLabel","loadingMoreLabel","typeToSearchLabel","loadingLabel","notFoundLabel","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","fn","ctx","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","date","dim","add","toDate","toLowerCase","NOW","jsonLogic","jsonLogicCustomOps","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","RELATIVE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","method","charAt","spelImport","spel","_spel$methodName","matchRes","methodName","jsonLogicImport","abs","parseInt","sqlImport","sqlObj","_","sqlDialect","_sqlObj$children","_sqlObj$children2","interval","_type","unit","escapeForFormat","mainWidgetProps","customProps","showSearch","listValues","plus","minus","day","week","month","year","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","coef","bias","_spel$children","_a$children","_sqlObj$children3","_left$children","_sqlObj$children4","_left$children2","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","compileMetaFieldSettings","asyncFetch","labelYes","labelNo","marks","isArr","validateValue","compileMetaWidget","factory","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","textSeparators","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderConfirm","useConfirm","renderField","renderOperator","renderFunc","renderConjs","renderButton","renderIcon","renderButtonGroup","renderValueSources","renderFieldSources","renderProvider","renderSwitch","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","hasOwnProperty","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","W","O","RCE","commonMemo","memoId","configId","memos","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret2","_loop2","savedConfig","_ret3","_loop3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","_ret","basicConfig","extConfig","clearConfigMemo","clear","getSize","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","momentLocale","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isFunc","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","opKeys","_typeWidgetConfig$opP","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","disabled","jsonLogicFormat","ff","tmp","p","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","some","_currentChild$get","_config$operators","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","resultQuery","formattedField","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","params","varName","jsonLogicVar","groupVarKey","isRev","formatteOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","it","realParentPath","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","SqlString","SqlStringOrig","trim","substring","unescapeLike","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","datetime","time","spelFormat","_spelFormat","_formatItemValue","_formatItemValue2","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue3","_formatItemValue4","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","realOp","_formatItemValue5","_formatItemValue6","formatLhs","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","_argValue2","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","parse","jlFieldMarker","jlArgsMarker","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","jsonLogic2","isRevArgs","conjKey","_step$value","funcPath","fk","_config$settings$json","varKeys","altVarKey","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","template","tKeys","jKeys","jlField","jlArgs","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_e$message","h","m","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","isEpoch","epoch","convertLhs","having","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","_e","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","isAllOrSomeInForMultiselect","opName","_config$operators$opN","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","flatizeTernary","buildCaseValProperties","_ref12","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","isValid","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","title","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapListValues","mapFn","searchListValue","search","shift","getListValue","selectedValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","allowCustomValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","maxLength","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","_values","pageSize","filtered","currentOffset","newOffset","hasMore","fetchSelectedValues","abrupt","ceil","_x","_x2","_x3","mergeListValues","newValues","toStart","hideNewValues","old","newFiltered","av","isHidden","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","groupTitle","grouplabel","renderTitle","rest","_objectWithoutProperties","_excluded","option","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","Utils","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","cls","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","number","boolean","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step3$value","valueFuncs","_step4$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step5","_iterator5","_step6","_step5$value","_iterator6","opFuncs","_loop4","_argsArr$filter","_step6$value","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","text","wgtDef","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","_this9","valsLabels","_this10","isCallable","dateFormat","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","timeFormat","use12Hours","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","rangeslider","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","_this12","_this13","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","setField","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","setValue","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","setConjunction","setNot","srcKey","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setValueSrc","setOperatorOption","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","xdpVersion","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","multiple","disableClearable","readonly","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","useCallback","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","defaultSelectWidth","defaultSearchWidth","width","customInputProps","customAutocompleteProps","minWidth","style","ariaLabel","theme","useTheme","GroupHeader","groupMaybeJson","groupLabel","tooltip","React","Tooltip","padding","color","palette","primary","main","backgroundColor","background","GroupItems","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","readOnly","groupBy","renderInput","_selectedListValue$ti","shouldRenderSelected","selectedTitle","renderValue","TextField","variant","inputProps","InputProps","endAdornment","CircularProgress","renderGroup","renderTags","getTagProps","Chip","renderOption","isGrouped","isSelected","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","altLabel","itemsToListValues","level","matchesType","prefix","repeat","_value2","_altLabel","fieldAdapter","selectedKey","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","onClick","icon","IconButton","Button","startIcon","Conj","checked","postfix","isDummyFn","Conjs","conjunctionOptions","showNot","conjsCount","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","handleChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","Boolean","ExpandMoreSharpIcon","Menu","component","sx","FormLabel","pt","pb","renderOptions","MuiTextWidget","errorMessage","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","pickerProps","slotProps","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","formatSingleValue","MuiDateTimeWidget","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","getListValueTitle","MuiNumberWidget","numberValue","useMemo","MuiSliderWidget","defaultSliderWidth","handleSliderChange","handleInputChange","handleInputBlur","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","stylesInputWrapper","MuiBooleanWidget","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","MuiProvider","settingsTheme","settingsLocale","themeConfig","createTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","_props$customProps","_ref$W","_props$customProps2","_ref2$W","_ref13","_ref14","_ref15","_ref16","_ref17","_ref17$W","_ref18","_ref18$W","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","MuiWidgets","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","defaultValueSourcesLabels","_valueSourcesInfo$src","_valueSourcesInfo$src2","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","_ruleGroupFieldConfig","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_get","_getPrototypeOf","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","_config$settings$load","_config$settings$load2","_config$settings$type","useLoadMore","useAsyncSearch","forceAsyncSearch","fetchSelectedValuesOnInit","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","latestSelectedValue","nSelectedAsyncListValues","areSelectedAsyncListValuesNotResolved","listValuesToDisplay","canInitialLoadSelected","canFirstLoadOnOpened","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","fetchSelectedListValues","_callee2","selectedListValues","latestSelectedValues","_getItemInListValues","loadSelectedListValues","_callee3","loadListValues","_callee4","_args4","_context4","loadListValuesDebounced","debounce","_callee5","_context5","_callee6","_context6","_callee7","isLoadMoreClick","_context7","_callee8","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","valHasDuplicates","isBadCallAfterTokenization","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context8","_x4","_callee9","newInputValue","eventType","isRemoveOption","isSelectOption","isIgnoredBlur","shouldIgnore","_context9","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}