{"version":3,"file":"819.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getTreeBadFields} from \"./validation\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n  // for backward compatibility\n  getTreeBadFields\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      parentType: parentId ? items[parentId].type : null,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {checkTree, isValidTree} from \"../utils/validation\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n  // for backward compatibility:\n  checkTree, isValidTree\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType === \"time\" && typeof val === \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(config.ctx, val);\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: not,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta(meta));\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect\n    = (op === \"all\" || op === \"some\")\n    && isJsonLogic(vals[1])\n    && Object.keys(vals[1])[0] == \"in\"\n    && vals[1][\"in\"][0]?.[\"var\"] === \"\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op === \"all\" || op === \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    const isEmptyVar = vals[1][op2][0]?.[\"var\"] === \"\";\n    if (op2 === \"in\" && isEmptyVar) {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    while (conj == \"!\") {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n/**\n * @deprecated\n */\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    convVal = convertArg(val, conv, config, meta, spel);\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\n// const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, getFieldId, _getFromConfigCache, _saveToConfigCache,\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import pick from \"lodash/pick\";\nimport { extendConfig } from \"./configExtend\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = () => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo();\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport * from \"./configMemo\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot && !shouldPreserveGroups)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n\n  // reverse filter\n  if (filterNot) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator, null, fieldDefinition);\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  const isReverseArgs = operatorDefinition._jsonLogicIsRevArgs ?? false;\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n    && !!config.settings.canShortMongoQuery && !!config.settings.reverseOperatorsForNot;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) {\n      // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, filterNot, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    resultQuery = { \"$not\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") === \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["moment","Utils","xdpVersion","parseInt","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","e","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","sx","p","FormLabel","pt","pb","renderOptions","MuiTextWidget","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","fields","field","Array","isArray","some","pop","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","call","shallowCopy","obj","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","_res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","caseId","childNo","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","node","parent","parentType","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","jsonLogic2","conjunctions","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedTypes","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","mainWidget","widgetConfig","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","jsonLogicImport","_e$message","message","valueType","_meta$settings","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","from","Set","parts","ancs","fp","conjunction","groupToId","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","_vals$1$in$","_meta$settings2","isGroup0","groupOperators","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_opConfig","_isOneRuleInRuleGroup","_vals$1$op2$","op2","isEmptyVar","parseRes","submeta","parseRule","conj","havingVals","parentFieldConfig","opCanReverse","reversedOp","isInRuleGroup","canRev","reverseOperatorsForNot","needRev","havingNot","getWidgetForFieldOp","convertedArgs","_res$properties","defaultGroupConjunction","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","flatizeTernary","cond","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","wrapWithBrackets","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","isRev","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","forExport","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","cls","_val","isVar","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","_spel$_groupField","parentSpel","_groupField","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","buildCase","convertArg","sw","buildSimpleSwitch","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","reversedOpConfig","opNeedsReverse","needWrapWithNot","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$_groupField2","_config$settings$case","_spel$children","at","_values$","caseValueField","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_ret","_loop5","_argsArr$filter$find","_step10$value","_field3","_opConfig2","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_processConcatChildren","convertedChild","_config$settings$case2","_convVal","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","getFirstOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListWithOneElement","createListFromArray","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","_config$settings$form","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","minMaxContext","context","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","_config$settings2","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","hasValueErrorChanged","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","fieldCacheKey","getFieldId","cacheKey","cached","_getFromConfigCache","arg","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","_saveToConfigCache","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","getOneChildOrDescendant","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMetaFieldLike","compileMetaField","mainWidgetProps","compileMetaSettings","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","bind","_ctx$components","_props","Cmp","components","O","canShortMongoQuery","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","commonMemo","memoId","configId","memos","getCommonMemo","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","findExtended","findConfig","_ret2","savedConfig","_ret3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","__cache","typeConfig","excludeOperators","typeWidgetConfig","defOp","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_argKey","_funcKey","_isFunc","_isCaseValue","_fieldConfig$fieldSet2","_keysToPutInFieldSett","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_typeWidgetConfig$opP","_fieldWidgetConfig$op","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_context3","t0","t1","_config$settings3","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$split","getFieldPathParts","onlyKeys","_field$get3","bucketKey","_config$__cache","_field$get4","_field$get5","_widgetConfig$opProps","widgetOpProps","fieldWidgetOpProps","mergedConfig","_fieldConfig$widgets","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","_not","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","origNot","groupOperatorDef","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","resultQuery","formatLogic","var","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","_operatorDefinition$_","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_canWrapExpr","_formatFieldName","_value","_groupOperatorDef$car","_conjunction","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","formattedChild","totalQuery","filterQuery","as","_f","_operatorDefinition4","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","targetItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","_addChildren1","isLastDefaultCase","newChildrenWithLast","mergeIn","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","currentFielType","_getNewValueForFieldO3","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","_Utils$ConfigUtils","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","expectedType","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}