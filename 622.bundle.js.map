{"version":3,"file":"622.bundle.js","mappings":"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,CACLgE,UAAW,CAET,QACA,YACA,gBAKRqpD,OAAQ,CACN36C,gBAAiB,QACjBhM,WAAY,SACZhD,QAAS,CACP2pD,OAAQ,CACNrpD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJ84D,OAAQ,CACN94D,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKR8Z,KAAM,CACJpL,gBAAiB,QACjBhP,QAAS,CACPoa,KAAM,CACJ9Z,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRu8B,KAAM,CACJ7tB,gBAAiB,QACjBhP,QAAS,CACP68B,KAAM,CACJv8B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRqa,SAAU,CACR3L,gBAAiB,QACjBhP,QAAS,CACP2a,SAAU,CACRra,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR+4D,OAAQ,CACNr2D,WAAY,SACZgM,gBAAiB,gBACjBhP,QAAS,CACPq5D,OAAQ,CACN/4D,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJi5D,YAAa,CACXj5D,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRi5D,YAAa,CACXvqD,gBAAiB,qBACjBhP,QAAS,CACPu5D,YAAa,CACXj5D,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRspD,QAAS,CACP56C,gBAAiB,QACjBhP,QAAS,CACP4pD,QAAS,CACPtpD,UAAW,CACT,QACA,YACA,UACA,eAEFkB,YAAa,CAGX,GAGJlF,MAAO,CACLgE,UAAW,CACT,QACA,gBAKR,SAAU,CACR0O,gBAAiB,OACjBhM,WAAY,SACZhD,QAAS,CACP2pD,OAAQ,CACNnoD,YAAa,CACXgR,IAAK,GAEPlS,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEFU,QAAS,CACP+vD,MAAO,CACLnhD,MAAO,YAETyhD,UAAW,CACTzhD,MAAO,YAET6hD,KAAM,CACJ7hD,MAAO,WAETiiD,cAAe,CACbjiD,MAAO,YAETqiD,QAAS,CACPriD,MAAO,WAETyiD,iBAAkB,CAChBziD,MAAO,YAETkkD,QAAS,CACPlkD,MAAO,iBAETskD,YAAa,CACXtkD,MAAO,yBASjB,WAAc,CACZ5M,WAAY,aACZhD,QAAS,CACP26D,WAAY,CACVn5D,YAAa,CAAC,MAwXpBtF,SAAAA,GACAyc,IAAAA,IASF,SANA1d,GAAS+gE,GAAU/gE,GAAQ,CACzB,cACA,aACA,oBC5wDK,IAAM2hE,GAAY,YACZC,GAAiB,iBACjBC,GAAe,eACfC,GAAkB,kBAClBC,GAAU,UACVC,GAAW,WACXC,GAAc,cACdC,GAAY,YACZC,GAAgB,gBAChBC,GAAe,eACfC,GAAY,YACZC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAsB,sBACtBC,GAAW,WAEXC,GAAW,WAEXC,GAAY,YAEZC,GAAkB,QAClBC,GAAmB,SACnBC,GAAmB,SACnBC,GAAoB,UAEpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAe,e,ylDCI5B,IAAMC,GAAc,SAACC,EAAOnwE,EAAMZ,EAAMgxE,EAAalyD,EAAYnR,GAAuC,IAAAs6B,EAA/Bh/B,EAAQlF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAMiQ,EAAIjQ,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEhG,IADmBgtE,EAAM73D,MAAM5B,GAAe1W,IAG5C,OAAOmwE,EAGT,IAAME,GAAYnyD,SAAe,QAALmpB,EAAVnpB,EAAYvN,WAAG,IAAA02B,OAAA,EAAfA,EAAAxoC,KAAAqf,EAAkB,QAASkyD,EACtCzoD,EAA0B5a,EAAOiB,SAAjC2Z,uBACDm1B,EAAY98C,EAAK2B,KAAK0uE,GACtBC,GAAiB3oD,EACjBjL,IAAkBtJ,UAAAA,EAAMsJ,eAExB6zD,EAAYJ,EAelB,OAdAA,EAAQK,GAAQL,EAAOnwE,EAAMZ,EAAMixE,EAAWrwD,GAAuBjT,GAAQwrB,OAAMzZ,EAAAA,EAAAA,IAAOZ,IAAe,CAAC,GAAInR,EAAQ1E,MACxGkoE,IACPloE,GAAaqU,IAChByzD,EAAQA,EAAMpwE,MAAM2W,GAAeomC,EAAW,aAAc,IAAIh2C,EAAAA,GAAAA,YAG5DwpE,IACFH,EAAQK,GAAQL,EAAOrzB,EAAW,OAAQ9jC,IAAQg7C,GAAsBjnD,EAAQqG,aAAI,EAAJA,EAAMO,sBAAuB5G,KAIjHojE,EAAQz3D,GAAey3D,IAGlBA,CACT,EAkJMK,GAAU,SAACL,EAAOnwE,EAAMZ,EAAMgxE,EAAalyD,EAAYnR,GAA4B,IAAA4nC,EAApBtsC,EAAQlF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAC9E,GAAa,iBAAT/D,EACF,MAAM,IAAImB,MAAM,2CAElB,IADmB4vE,EAAM73D,MAAM5B,GAAe1W,IAG5C,OAAOmwE,EAET,IASIM,EAAeC,EATbl5D,GAAK0G,SAAe,QAALy2B,EAAVz2B,EAAYvN,WAAG,IAAAgkC,OAAA,EAAfA,EAAA91C,KAAAqf,EAAkB,QAASkyD,EACtCziE,EAA2DZ,EAAOiB,SAA1D2iE,EAAgBhjE,EAAhBgjE,iBAAkBC,EAAgBjjE,EAAhBijE,iBAAkBp1D,EAAU7N,EAAV6N,WAEtCq1D,EAAyB,iBADdV,EAAMx/D,IAAI,QAErBmgE,EAAYD,EAAYV,EAAM73D,MAAM5B,GAAe1W,EAAK8X,KAAK,KAAO,KACpEi5D,EAAer6D,GAAe1W,EAAM,aACpCgxE,EAAiBb,EAAM73D,MAAMy4D,GAC7B31D,IAAgB41D,GAAkBA,EAAe13D,KACjD23D,EAAqB71D,EAAc41D,EAAe13D,KAAO,KAE/D,GAAa,eAATla,EACFqxE,EAAgBQ,EAChBP,EAAYC,OACP,GAAa,UAATvxE,EAAkB,CAC3B,IAAM8xE,EAAav5D,GAAsBw4D,EAAOnwE,GAChD,GAAIkxE,EAAW1wE,OAAQ,CAErB,IAAA2wE,EAAuDD,EAAW,GAApDE,EAAaD,EAAnBnxE,KAA4BqxE,EAAcF,EAArB/iE,MACvBkjE,EAAuB1/D,GAAe7E,EAAQskE,GACpDZ,EAAgBzwE,EAAKsZ,KAAO83D,EAAc5wE,OAC1CkwE,EAAYY,aAAoB,EAApBA,EAAsB91D,UACpC,MACEi1D,EAAgBzwE,EAAKsZ,KACrBo3D,EAAYl1D,CAEhB,KAAO,CACL,IAAM01D,EAAav5D,GAAsBw4D,EAAOnwE,GAChD,GAAIkxE,EAAW1wE,OAAQ,CAErB,IAAA+wE,EAAuDL,EAAW,GAApDE,EAAaG,EAAnBvxE,KAA4BqxE,EAAcE,EAArBnjE,MACvBkjE,EAAuB1/D,GAAe7E,EAAQskE,GAC9CG,EAAgBn6D,GAAc84D,EAAOiB,GAC3CV,EAAYY,aAAoB,EAApBA,EAAsBV,iBAClCH,EAAgB3yD,GAAyB0zD,EAC3C,MACEf,EAA4B3yD,GAAZ+yD,EAAqCC,EAAsCX,GAC3FO,EAAYE,CAEhB,CACA,IAAMx8D,GAASs8D,IAAaD,GAAiBA,EAAgBC,EAEvD34D,EAAO,CAAC3Y,KAAAA,EAAMoY,GAAAA,EAAI0G,WAAAA,GACxBuzD,GAAc1kE,EAAQgL,EAAM1P,GAE5B,IAAMqpE,EAA6B,eAATtyE,GAAyBgc,GAAyD,MAA1C41D,EAAervD,OAAOhR,IAAI,aAE5F,GAAIyD,EAAQ,CACV,IAAM2oD,EAAc,IAAIj2D,EAAAA,GAAAA,YAAoByQ,EAAAA,EAAAA,GAAC,CAAC,EAC3CC,EAAK,IAAI1Q,EAAAA,GAAAA,IAAciR,KAE1B,GAAKqD,EAEE,GAAIs2D,EAAmB,CAC5B,IAAM/vD,EAAOqvD,EAAervD,OACtBgwD,EAAsB,IAAI7qE,EAAAA,GAAAA,YAAoByQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACnDC,EAAK,IAAI1Q,EAAAA,GAAAA,IAAciR,IACvB4J,EAAKhR,IAAI,MAAQgR,IAGpBwuD,GADAA,EAAQA,EAAM53D,SAAS7B,GAAeq6D,EAAc,YAAapvD,EAAKhR,IAAI,SAC5D3O,QAAQ+uE,EAAcY,EACtC,MACExB,EAAQA,EAAMnuE,QAAQ+uE,EAAchU,QAVpCoT,EAAQA,EAAMpwE,MAAMgxE,EAAchU,GAYpCoT,EAAQz3D,GAAey3D,EACzB,CACA,OAAOA,CACT,EAMMyB,GAAa,SAACzB,EAAOnwE,GAGzB,OAFAmwE,EAAQA,EAAM53D,SAAS7B,GAAe1W,IAC9B0Y,GAAey3D,EAEzB,EAsNM0B,GAAW,SAAC1B,EAAOnwE,EAAMojD,EAAUr2C,EAAQy4B,GAAgC,IAAAssC,EAAAhvB,EAAAC,EAAAC,EAAf+uB,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnE6uE,EAAc7B,EAAM73D,MAAM5B,GAAe1W,IAC/C,IAAKgyE,EAEH,MAAO,CAAC7B,MAAAA,GAEV,IAAQ3sB,EAA4BuuB,EAA5BvuB,WAAYC,EAAgBsuB,EAAhBtuB,YACpB,IAAKL,EAEH,MAAO,CAAC+sB,MADRA,EAAQyB,GAAWzB,EAAOnwE,IAI5B,IAAAsO,EAA+DvB,EAAOiB,SAA/DJ,EAAcU,EAAdV,eAAgBsa,EAAkB5Z,EAAlB4Z,mBAAoBD,EAAgB3Z,EAAhB2Z,iBACvChpB,MAAMC,QAAQkkD,KAChBA,EAAWA,EAAS1hD,KAAKkM,IAE3B,IAAMk3C,EAAcktB,EAAYrhE,IAAI,QAC9BshE,EAAoBD,EAAYrhE,IAAI,cACpCuhE,EAA8B,cAAfptB,EACfb,EAAkBguB,aAAiB,EAAjBA,EAAmBthE,IAAI,YAEzCi0C,EAAiBhzC,GAAe7E,EAAQq2C,GAC9C,IAAKwB,EAEH,OADAh5C,QAAQO,KAAK,qBAADzL,OAAsB0iD,IAC3B,CAAC+sB,MAAAA,GAEV,IAAI96D,EAAYuvC,EAAexlD,KACb,WAAdiW,GAAwC,YAAdA,IAC5BA,EAAY,MAGd,IAAM6uC,EAAkB+tB,aAAiB,EAAjBA,EAAmBthE,IAAI,YACzCwhE,EAAyBF,aAAiB,EAAjBA,EAAmBthE,IAAI,mBAChDmzC,EAAemuB,aAAiB,EAAjBA,EAAmBthE,IAAI,SAMtCoK,EAAqC,UAAvB6pC,EAAexlD,KAC7BgzE,EAAiBr3D,GAAsC,SAAvB6pC,EAAe9hC,KAC/CuvD,EAAwBH,GAAgBn3D,EAKxCu3D,EAAS1tB,IAA0E,KAAhC,QAAxBktB,EAAAltB,EAAexyC,iBAAS,IAAA0/D,OAAA,EAAxBA,EAA0B7oE,QAAQi7C,IAA0BA,EAAkB,KAEzGquB,EADiC,SAApBtuB,IAA8BH,SAAiB,QAALhB,EAAZgB,EAAcnzC,WAAG,IAAAmyC,OAAA,EAAjBA,EAAAjkD,KAAAilD,EAAoB,YAAoB,QAAbf,EAAKK,SAAQ,IAAAL,GAAK,QAALC,EAARD,EAAUpyC,WAAG,IAAAqyC,OAAA,EAAbA,EAAAnkD,KAAAkkD,EAAgB,YAC7DuvB,EAChCjvB,EAAc,KACZ2K,EAA+B,SAApB/J,EACbluC,GAAoBhJ,EAAQsI,GAC5Ba,GAAqBnJ,EAAQq2C,GACjC,GAAI4K,GAA+B,GAAnBA,EAASxtD,OACvB6iD,EAAc2K,EAAS,QACpB,GAAIukB,EACPlvB,EAAcivB,OACX,GAAItkB,GAAYA,EAASxtD,OAAS,EAAG,KACDu3B,EADCO,EAAAn3B,GACnB+mB,GAAkB,IAAvC,IAAAoQ,EAAAl3B,MAAA22B,EAAAO,EAAAj3B,KAAAC,MAAyC,KAAhCkxE,EAAQz6C,EAAAx2B,MAOf,GANgB,QAAZixE,GAAuBH,EAEN,WAAZG,EACPnvB,EAAc1iC,GAAmB5T,EAAQq2C,GAAU,GAChC,SAAZovB,IACPnvB,EAAcltC,GAAiBpJ,EAAQq2C,IAJvCC,EAAcivB,EAKZjvB,EACF,KACJ,CAAC,OAAAzhD,GAAA02B,EAAAz2B,EAAAD,EAAA,SAAA02B,EAAAx2B,GAAA,CACH,CAEA,IAAKiZ,IAAgB6pC,EAAexyC,UAElC,OADAxG,QAAQO,KAAK,QAADzL,OAASkkD,EAAexlD,KAAI,sBACjC,CAAC+wE,MAAAA,GAGN+B,IAAiBn3D,IAGnBo1D,GADAA,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,QAAS,SACpCuY,SAAS7B,GAAe1W,EAAM,eAC9BD,MAAM2W,GAAe1W,EAAM,cAAe,IAAI8G,EAAAA,GAAAA,aAGzDmrE,IACH9B,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,cAAe,IAAI8G,EAAAA,GAAAA,aAG9D,IAAMy8C,GAAUt7B,EAChB,GAAIlN,EAAa,CACfo1D,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,QAAS,cAClD,IAAAiuD,EAAkFrL,GAChF,CAAE/uB,cAAAA,GAAeovB,cAAAA,IACjBl2C,EAAQA,EAAQklE,EAAmB7uB,EAAUC,EAAa,QAASE,EAAQC,EAAYC,GAFnExjD,GAAFguD,EAAb3I,cAAuB2I,EAARhuD,UAAU6nD,EAAWmG,EAAXnG,YAAaE,EAAYiG,EAAZjG,aAActD,EAAmBuJ,EAAnBvJ,oBAIvD+tB,EAAkBzyD,GAAuBjT,EAAQ63C,EAAgBxB,GAAU7qB,MAAM,CACnFnqB,MAAOg1C,EACPl/B,SAAU,QACVpB,KAAM8hC,EAAe9hC,OAEnBsvD,IACFK,EAAkBA,EAAgBl6C,MAAM,CACtCrmB,SAAUmxC,EACV9hD,MAAOtB,EACPkT,SAAU20C,EACV1jC,UAAW4jC,KAIfmoB,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,IAAI8G,EAAAA,GAAAA,aAC7C/G,MAAM2W,GAAe1W,EAAM,cAAeyyE,GACpD7tB,EAAe8tB,mBAA4C,GAAvBhuB,IAGtCyrB,EAAQK,GAAQL,EAAOnwE,EAAM,OAAQgZ,IAAQg7C,GAAsBjnD,EAAQq2C,GAAWr2C,IAExFojE,EAAQz3D,GAAey3D,EACzB,MACEA,EAAQA,EAAMwC,SAASj8D,GAAe1W,EAAM,eAAe,SAAC6H,GAAG,OAAKA,EAAIiP,eAAc,SAACqsC,GACrF,IAAAyvB,EAEIhwB,GACF,CAAE/uB,cAAAA,GAAeovB,cAAAA,IACjBl2C,EAAQA,EAAQo2C,EAASC,EAAUC,EAAa,QAASE,EAAQC,EAAYC,GAH7E6B,EAAastB,EAAbttB,cAAerlD,EAAQ2yE,EAAR3yE,SAAU6nD,EAAW8qB,EAAX9qB,YAAaE,EAAY4qB,EAAZ5qB,aAAcO,EAAaqqB,EAAbrqB,cAAexE,EAAa6uB,EAAb7uB,cAAe0B,EAAUmtB,EAAVntB,WAMhFotB,EAAkBzvB,EACAqC,IAAerC,IAEnCyvB,EAAkBptB,GAQhBx9B,IAEFk7B,GADAA,EAAUA,EAAQvnB,IAAI,aAAcmoB,IAClBnoB,IAAI,aAAc2sB,IAEtC,IAAMuqB,EAAqBxtB,EAAgB6sB,EAAyB5yD,GAAuBxS,EAAQs2C,EAAawvB,GAahH,OAZA1vB,EAAUA,EACPvnB,IAAI,QAASi3C,GAAgB,OACtB,aACPj3C,IAAI,WAAYqoB,GAChBroB,IAAI,WAAYynB,GAChBznB,IAAI,kBAAmBk3C,GACvBl3C,IAAI,QAAS37B,GACb27B,IAAI,WAAYksB,GAChBlsB,IAAI,YAAaosB,GACf1C,IACHnC,EAAUA,EAAO,OAAQ,oBAEpBA,CACT,GAAE,IAGJ,MAAO,CAACgtB,MAAAA,EACV,EAuEM4C,GAAW,SAAC5C,EAAOnwE,EAAM6hB,EAAOtgB,EAAO6iB,EAAWrX,EAAQy4B,GAAgC,IAAfusC,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAExF,IADoBgtE,EAAM73D,MAAM5B,GAAe1W,IAG7C,MAAO,CAACmwE,MAAAA,GAEV,IAAQ1sB,EAA4BsuB,EAA5BtuB,YAAaD,EAAeuuB,EAAfvuB,WACrBn1C,EAA2CtB,EAAOiB,SAA3CJ,EAAcS,EAAdT,eAAgBqa,EAAgB5Z,EAAhB4Z,iBACjB9U,EAAWg9D,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAY6hB,EAAQ,MAAQ,KAC3E,UAAb1O,GAAwBlU,MAAMC,QAAQqC,KACxCA,EAAQA,EAAMG,KAAKkM,IAErB,IAAMQ,EAAQ+hE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAa,KAEpEkS,EAAWi+D,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,cAAgB,KAC1Ewf,EAAiBvN,GAAkBlF,EAAQmF,EAAU9D,GACrDs2C,EAAsBxyC,EAAWlN,EAAiBwa,GAAkB,KAEpE+B,EAAsB6C,GAAa9C,GAAmB/f,EAAO4R,EAAUpG,GAE7Ew4C,EAAgC1xB,GAC9B9mB,EAAQqB,EAAOA,EAAO8D,EAAU3Q,EAAOggB,EAAqBpO,EAAUqyB,GAFxDvd,EAEiFu7B,EAAYC,GAC5G+B,GAAAzgD,EAAAA,EAAAA,GAAAwgD,EAAA,GAFM4B,EAAU3B,EAAA,GAAE4B,EAAS5B,EAAA,GAGtBS,EAAamB,aAAS,EAATA,EAAW19C,MAAK,SAAA7H,GAAC,OAAKA,EAAEikD,QAAUjkD,EAAE8yB,MAAM,IACvDq+C,EAAkB/sB,EAAatD,GAAoBsD,GAAc,KAGnEL,EAAUuB,IAAe5lD,EACzBqkD,IACFrkD,EAAQ4lD,GAIVgpB,EAAQ8C,GAAoB9C,EAAOnwE,EAAM+M,EAAQ23C,GAGjD,IAAMtmC,EAASnf,MAAM6+B,KAAK,CAACt9B,OAAQkkD,IAAsB,SAACr1B,EAAGlpB,GAAC,OAC3DA,GAAK0b,EAAQtgB,EAAQ4uE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,QAASmG,EAAI,MAAQ,IAAI,IAC1F8N,EAAYhV,MAAM6+B,KAAK,CAACt9B,OAAQkkD,IAAsB,SAACr1B,EAAGlpB,GAAC,OAC9DgqE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAYmG,EAAI,MAAQ,IAAI,IACxE+hD,EAAgBjF,GAAcl2C,EAAQqB,EAAO8D,EAAUkM,EAAQnK,GAC/Dk0C,EAAuBD,EAAgBvF,GAAoBuF,GAAiB,KAyClF,SAtCoBjgC,IADH+qD,IAAoB7qB,GACoBvC,KAWvDuqB,EAAQA,EAAM53D,SAAS7B,GAAe1W,EAAM,aAAc,yBACrC,IAAVuB,EAET4uE,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,QAAS6hB,QAAQpgB,IAC1D1B,MAAM2W,GAAe1W,EAAM,aAAc,YAAa6hB,GAAQ,OAExE2jB,IACF2qC,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,mBAAoBwlC,IAG7E2qC,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,QAAS6hB,GAAQtgB,IAC1DxB,MAAM2W,GAAe1W,EAAM,aAAc,YAAa6hB,GAAQN,KAG5E0G,IAEwBkoD,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,iBAEvEmwE,EAAQA,EACLpwE,MAAM2W,GAAe1W,EAAM,aAAc,cAAe,IAAI8G,EAAAA,GAAAA,KAAe,IAAI7H,MAAMylD,MAG1FyrB,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,aAAc6hB,GAAQmxD,GAEzEtuB,GAAuB,IACzByrB,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,aAAc0kD,GAAsByD,KAIxF,CAACgoB,MAAAA,EACV,EA0FM8C,GAAsB,SAAC9C,EAAOnwE,EAAM+M,EAAQ23C,GAChD,IAAKA,EAAqB,CACxB,IAAMt2C,EAAQ+hE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAa,KACpEkS,EAAWi+D,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,cAAgB,KAC1Ewf,EAAiBvN,GAAkBlF,EAAQmF,EAAU9D,GAC3Ds2C,EAAsBxyC,EAAWlN,EAAiBwa,GAAkB,IACtE,CAEA,IAAK,IAALzX,EAAA,EAAA4kD,EAAgB,CAAC,QAAS,YAAa,aAAc,YAAW5kD,EAAA4kD,EAAAnsD,OAAAuH,IAAE,CAA7D,IAAMrI,EAACitD,EAAA5kD,GACLooE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAcN,MAClDywE,EAAQA,EACLpwE,MAAM2W,GAAe1W,EAAM,aAAcN,GAAI,IAAIoH,EAAAA,GAAAA,KAChD49C,EAAsBzlD,MAAM6+B,KAAK,CAACt9B,OAAQkkD,IAAwB,KAG1E,CAEA,OAAOyrB,CACT,EAGMsB,GAAgB,SAAC1kE,EAAQgL,EAAM1P,GAC/BA,GAAYpJ,MAAMC,QAAQmJ,KAC5B0P,EAAK8F,UAAY,IAAI/W,EAAAA,GAAAA,WACnBuB,EAAS+B,QAAO,SAACvC,EAAK2hC,GAAO,IAAA0pC,EACrBC,EAAW,QAARD,EAAG1pC,EAAGhyB,UAAE,IAAA07D,EAAAA,EAAIl6D,IACfo6D,EAAG5zE,GAAAA,GAAA,GACJgqC,GAAE,IACLtrB,WAAYm2C,GAAsBtnD,EAAQy8B,GAAIjR,OAAMzZ,EAAAA,EAAAA,IAAO0qB,EAAGtrB,aAAe,CAAC,GAC9E1G,GAAI27D,IAIN,OAFA1B,GAAc1kE,EAAQqmE,EAAKA,EAAIv1D,WAE/Bre,GAAAA,GAAA,GACKqI,GAAG,IAAA0P,EAAAA,EAAAA,GAAA,GACL47D,EAAM,IAAIrsE,EAAAA,GAAAA,IAAcssE,IAE7B,GAAG,CAAC,IAGV,EAOMC,GAAY,CAChBC,SAAU,CACR97D,GAAI,KACJrN,EAAG,KACH0hB,EAAG,KACHlX,EAAG,KACH0lC,EAAG,MAELk5B,SAAU,CAAC,EACXC,UAAW,CACTh8D,GAAI,OAgCR,kBAAgBi8D,EAAen8D,EAAMo8D,EAAiBC,EAAaC,GACjE,IACMC,EAAUr0E,GAAA,CACd8X,KAFeA,GAGZ+7D,IAGL,OAAO,WAAgC,IAAAzjE,EAAAkkE,EAA/B3D,EAAKhtE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG0wE,EAAYE,EAAM5wE,UAAA3C,OAAA,EAAA2C,UAAA,QAAA1B,EAC1BsL,EAA4C,QAAtC6C,EAAoB,QAApBkkE,EAAGF,aAAa,EAAbA,WAAiB,IAAAE,EAAAA,EAAIC,aAAM,EAANA,EAAQhnE,cAAM,IAAA6C,EAAAA,EAAI6jE,EAElD73C,EAAM,CAAC,EACPo4C,EAvCc,SAACD,EAAQ5D,GAC7B,IAAK4D,IAAWA,EAAO30E,KACrB,OAAO,KACT,IAWmB60E,EARbC,EAAsB,CAC1B/xB,GACAA,GACAA,GACAA,IAEE/uC,EAAO+gE,KAAUzvE,KAAKqvE,EATD,CACvB,SAAU,oBAQyC/sE,IACjDotE,EAAgBL,EAAO/zE,MAhCZ,SAACmwE,EAAOnwE,GAEvB,OADcmwE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAa,IAE5E,CA6BqCq0E,CAASlE,EAAM74D,KAAMy8D,EAAO/zE,OAAS+zE,EAAO3lE,MAQ/E,OAPIgmE,IACe,QAAjBH,EAAIG,SAAa,IAAAH,GAAbA,EAAertE,OACjBwtE,EAAgBA,EAAcxtE,QAChCwM,EAAKghE,cAAgBA,IAEnBF,EAAoBv0E,SAASo0E,EAAO30E,OAA2C,GAAlC20E,EAAO30E,KAAK6J,QAAQ,cACnEmK,EAAO,MACFA,CACT,CAiBqBkhE,CAAcP,EAAQ5D,GAEvC,OAAQ4D,aAAM,EAANA,EAAQ30E,MAChB,KAAK+iD,GACH,IAAMoyB,EAAgBb,EAAgB3mE,EAAQgnE,EAAOz8D,MACrDskB,EAAItkB,KAAOi9D,EACX,MAGF,KAAKpyB,GACHvmB,EAAItkB,KAAO44D,GAAYC,EAAM74D,KAAMy8D,EAAO/zE,KAAM,aAAc+zE,EAAOv8D,GAAIu8D,EAAO71D,WAAYnR,EAASgnE,EAAO1rE,SAAU0rE,EAAO3gE,MAC7H,MAGF,KAAK+uC,GACHvmB,EAAItkB,KAAO44D,GAAYC,EAAM74D,KAAMy8D,EAAO/zE,KAAM,QAAS+zE,EAAOv8D,GAAIu8D,EAAO71D,WAAYnR,EAASgnE,EAAO1rE,SAAU0rE,EAAO3gE,MACxH,MAGF,KAAK+uC,GACHvmB,EAAItkB,KA57BU,SAAC64D,EAAOnwE,EAAM+M,GAEhC,IADmBojE,EAAM73D,MAAM5B,GAAe1W,IAG5C,OAAOmwE,EAGTA,EAAQyB,GAAWzB,EAAOnwE,GAE1B,IAAO0nB,EAAsB3a,EAAOiB,SAA7B0Z,mBACDrX,EAAarQ,EAAKsJ,MAAM,GAAI,GAkBlC,OAjB4B8R,GAAY+0D,EAAO9/D,IACpBqX,IAEzByoD,EAAQh3D,GAAqBg3D,IAEzB3xD,GAAY2xD,IAAWzoD,KAIzByoD,EAAQK,GACNL,EAAO,IAAIrpE,EAAAA,GAAAA,KAAkB,OAAQkS,IACrCg7C,GAAsBjnD,OAAQtL,OAAWA,GAJX,GACZ,GAIlBsL,IAIE2L,GAAey3D,EAEzB,CA+5BiBqE,CAAYrE,EAAM74D,KAAMy8D,EAAO/zE,KAAM+M,GAChD,MAGF,KAAKo1C,GACHvmB,EAAItkB,KAAOk5D,GAAQL,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOU,SAAUV,EAAOv8D,GAAIu8D,EAAO71D,WAAYnR,EAAQgnE,EAAO1rE,UAC1G,MAGF,KAAK85C,GACHvmB,EAAItkB,KAn6BS,SAAC64D,EAAOnwE,EAAM+M,GAE/B,IADmBojE,EAAM73D,MAAM5B,GAAe1W,IAG5C,OAAOmwE,EAGTA,EAAQyB,GAAWzB,EAAOnwE,GAE1B,IAAO0nB,EAAsB3a,EAAOiB,SAA7B0Z,mBACDrX,EAAarQ,EAAKgB,MAClBwb,EAAS2zD,EAAM73D,MAAM5B,GAAerG,IAEpCrB,EAAcwN,EAAOlE,MAAM,CAAC,aAAc,UAC1Co8D,EAAiBl4D,EAAOlE,MAAM,CAAC,aAAc,aAE7C+lC,EAAoBrvC,EAAc4C,GAAe7E,EAAQiC,GAAe,KACxE2lE,EAAuBD,EAAiBziE,GAAkBlF,EAAQ2nE,EAAgB1lE,GAAe,KACjG4lE,EAAoB5lE,GAAe0lE,GAAsD,GAApCC,EAAqBxvE,YAE1E0vE,EAA0C,cAAtBr4D,EAAO7L,IAAI,QAC/BmkE,GAAsB15D,GAAY+0D,EAAO9/D,GACzC0kE,EAAgBF,EAClBD,GAAqBv2B,EAAkBq0B,kBACvChrD,EAuBJ,OArBIotD,IAAuBC,IACrBF,IAEF1E,EAAQA,EAAM53D,SAAS7B,GAAerG,KAIxC8/D,EAAQh3D,GAAqBg3D,GAEzB3xD,GAAY2xD,KAAWzoD,KAIzByoD,EAAQK,GACNL,EAAO,IAAIrpE,EAAAA,GAAAA,KAAkB,OAAQkS,IACrCg7C,GAAsBjnD,OAAQtL,OAAWA,GAJX,GACZ,GAIlBsL,IAIE2L,GAAey3D,EAEzB,CAm3BiB6E,CAAW7E,EAAM74D,KAAMy8D,EAAO/zE,KAAM+M,GAC/C,MAGF,KAAKo1C,GACHvmB,EAAItkB,KAn1Ba,SAAC64D,EAAOnwE,EAAMigB,GAEnC,OADmBkwD,EAAM73D,MAAM5B,GAAe1W,IAK9CmwE,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,eAAgBigB,GAF9DkwD,CAIX,CA20BiB8E,CAAe9E,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAO9zD,aAC1D,MAGF,KAAKkiC,GACHvmB,EAAItkB,KAt3BK,SAAC64D,EAAOnwE,EAAMkgB,GAE3B,OADmBiwD,EAAM73D,MAAM5B,GAAe1W,IAK9CmwE,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,OAAQkgB,GAFtDiwD,CAIX,CA82BiB+E,CAAO/E,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAO7zD,KAClD,MAGF,KAAKiiC,GACH,IAAclqC,EAAW45D,GACvB1B,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAO3lE,MAAOrB,EACvCgnE,EAAOvuC,gBAAiBuuC,EAAOhC,OAF1B5B,MAIPv0C,EAAItkB,KAAOW,EACX,MAGF,KAAKkqC,GACHvmB,EAAItkB,KAtqBU,SAAC64D,EAAOnwE,EAAMm1E,EAAQpoE,GACxC,IAAMilE,EAAc7B,EAAM73D,MAAM5B,GAAe1W,IAC/C,IAAKgyE,EAEH,OAAO7B,EAGT,IAAO/oD,EAA6Bra,EAAOiB,SAApCoZ,0BACD6qD,EAAoBD,EAAYrhE,IAAI,cACpCmzC,EAAemuB,aAAiB,EAAjBA,EAAmBthE,IAAI,SACtCykE,EAAkBnD,aAAiB,EAAjBA,EAAmBthE,IAAI,aACzCg0C,EAAqB/yC,GAAe7E,EAAQ+2C,GAK9CzuC,GAAYsvC,aAAkB,EAAlBA,EAAoBvlD,OAAQg2E,EACvC//D,GAA2B,WAAdA,GAAwC,YAAdA,IAC1CA,EAAY,MAEd,IAAMiwC,GAAiBx4C,GAAYnN,SAAS0V,GAoB5C,OANE86D,EAbgB/oD,IAA8BvE,GAAYmvD,EAAajlE,IAAWu4C,GAWlF6qB,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,SAAU,OACnDuY,SAAS7B,GAAe1W,EAAM,aAAc,gBAE5CD,MAAM2W,GAAe1W,EAAM,aAAc,aAAcqV,GAT7D86D,EAAMpwE,MACZ2W,GAAe1W,EAAM,cACrBg0D,GAAsBjnD,EAAQ,KAAM,MAAM,KAWhChN,MAAM2W,GAAe1W,EAAM,aAAc,YAAam1E,EAGtE,CA6nBiBE,CAAYlF,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOoB,OAAQpoE,GAC/D,MAGF,KAAKo1C,GACHvmB,EAAItkB,KA13BM,SAAC64D,EAAOnwE,EAAMs1E,GAE5B,OADmBnF,EAAM73D,MAAM5B,GAAe1W,IAK9CmwE,EAAQn4D,GAAqBm4D,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,YAAas1E,IAFhFnF,CAIX,CAk3BiBoF,CAAQpF,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOuB,MACnD,MAGF,KAAKnzB,GACHvmB,EAAItkB,KAjZU,SAAC64D,EAAOnwE,EAAMqjD,EAAat2C,GAC7C,IAAMilE,EAAc7B,EAAM73D,MAAM5B,GAAe1W,IAC/C,IAAKgyE,EAEH,OAAO7B,EAET,IAAOloD,EAAoBlb,EAAOiB,SAA3Bia,iBACD/J,EAAa8zD,EAAYrhE,IAAI,cAC7BtI,EAAW2pE,EAAYrhE,IAAI,aAC3BmzC,EAAe5lC,EAAWvN,IAAI,SAE9B7C,GADkBoQ,EAAWvN,IAAI,YACnBiB,GAAe7E,EAAQ+2C,IACrC/oC,EAAmC,WAArBjN,aAAW,EAAXA,EAAa1O,MAC3BogB,EAAiBvN,GAAkBlF,EAAQs2C,EAAaS,GACxDY,EAAsBllC,EAAiBxa,EAAiBwa,GAAkB,KAuChF,OApCA2wD,EAAQA,EAAMwC,SAASj8D,GAAe1W,EAAM,eAAe,SAAC6H,GAAG,OAAKA,EAAIiP,eAAc,SAACqsC,GACrF,IAAMW,EAAeX,EAAQxyC,IAAI,SAC3BwhE,EAAyBhvB,EAAQxyC,IAAI,mBAK3C6kE,GAJsBryB,EAAQxyC,IAAI,QAAS,IAAI7J,EAAAA,GAAAA,MACtBq8C,EAAQxyC,IAAI,WAAY,IAAI7J,EAAAA,GAAAA,MAC5Bq8C,EAAQxyC,IAAI,YAEuCiyC,GAC1E,CAAE/uB,cAAAA,GAAeovB,cAAAA,IACjBl2C,EAAQA,EAAQo2C,EAASW,EAAcT,EAAa,YAXzC,IASNiC,EAAakwB,EAAblwB,cAAerlD,EAAQu1E,EAARv1E,SAAU6nD,EAAW0tB,EAAX1tB,YAAaE,EAAYwtB,EAAZxtB,aAAcO,EAAaitB,EAAbjtB,cAIvDtgC,IACFk7B,EAAUA,EACPvnB,IAAI,aAAc2sB,IAEvB,IAAMuqB,EAAqBxtB,EAAgB6sB,EAAyB5yD,GAAuBxS,EAAQs2C,EAAaS,GAOhH,OALKwB,IACHnC,EAAUA,EAAO,OACP,oBAGLA,EACJvnB,IAAI,WAAYynB,GAChBznB,IAAI,kBAAmBk3C,GACvBl3C,IAAI,QAAS37B,GACb27B,IAAI,WAAYksB,GAChBlsB,IAAI,YAAaosB,EACtB,GAAE,IAEEjtC,GACyB,GAAvB2pC,GAA6C,GAAjBr8C,EAASiR,OACvC62D,EAAQK,GAAQL,EAAOnwE,EAAM,OAAQgZ,IAAQg7C,GAAsBjnD,EAAQ+2C,GAAe/2C,IAIvFojE,CACT,CA2ViBsF,CAAYtF,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAO7hE,SAAUnF,GACjE,MAGF,KAAKo1C,GACH,IAAclqC,EAAW86D,GACvB5C,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOlyD,MAAOkyD,EAAOxyE,MAAOwyE,EAAO3vD,UAAYrX,EACxEgnE,EAAOvuC,gBAAiBuuC,EAAOhC,OAF1B5B,MAIPv0C,EAAItkB,KAAOW,EACX,MAGF,KAAKkqC,GACH,IAAAuzB,EAzoBe,SAAC3oE,EAAQojE,EAAOnwE,EAAM6hB,EAAO8zD,EAAa1lE,EAAQ0U,EAAUP,EAAWohB,GAAgC,IAAfusC,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9G6uE,EAAc7B,EAAM73D,MAAM5B,GAAe1W,IAC/C,IAAKgyE,EAEH,OAAO7B,EAET,IAS6C/3C,EATvCw9C,GAAmB,IAAX/zD,EACRowD,EAAoBD,EAAYrhE,IAAI,cACpCmzC,EAAemuB,EAAkBthE,IAAI,SACrCg1B,EAAessC,EAAkBthE,IAAI,SAIvCklE,EAAY,GACZC,EAJaF,EAAQ9xB,EAAene,EAAartB,MAAM,CAACuJ,IAIpCwW,EAAAl3B,GACIw0E,GAAe,IAAE,IAA7C,IAAAt9C,EAAAj3B,MAAAg3B,EAAAC,EAAAh3B,KAAAC,MAA+C,KAAAwxC,GAAA/tC,EAAAA,EAAAA,GAAAqzB,EAAA72B,MAAA,GAAnCw0E,EAAKjjC,EAAA,GAAEkjC,EAAIljC,EAAA,GAErB,GADA+iC,EAAUl0E,KAAK,CAACo0E,EAAOC,EAAMF,IACzBC,IAAUD,EAASnlE,IAAI,QAAS,CAClC,IAAMunC,EAAW29B,EAAUhuE,KAAI,SAAA3E,GAAA,IAAA4B,GAAAC,EAAAA,EAAAA,GAAA7B,EAAA,GAAEpB,EAACgD,EAAA,GAAEe,EAACf,EAAA,YAAApE,OAASoB,EAAC,KAAApB,OAAImF,EAAC,QAAKnE,KAAK,MAAQ,OACtE,MAAM,IAAInB,MAAM,MAADG,OACPk1E,EAAQ,MAAQ,MAAK,cAAAl1E,OAAaw3C,EAAQ,uBAAAx3C,OAAsBq1E,EAAK,aAAAr1E,OAAYo1E,EAASnlE,IAAI,SAExG,CACAmlE,EAAWA,EAASx9D,MAAM,CAAC,OAAQ09D,EAAM,SAC3C,CAEA,OAAAp0E,GAAAy2B,EAAAx2B,EAAAD,EAAA,SAAAy2B,EAAAv2B,GAAA,CACA,GAAKmO,EAOE,CACL,IAAMD,EAAU8lE,EAASnlE,IAAI,QAGvBslE,EAFiBnmE,GAAc/C,EAAQiD,GACtCL,KACoBM,GAET,cAAdmU,EACF0xD,EAAW1iB,GAAe0iB,EAAU7lE,EAAQ0U,EAAUsxD,EAAelpE,IAErE+oE,EAAWrwD,GAAYqwD,EAAU7lE,EAAQ0U,EAAUsxD,EAAelpE,GAC9Dy4B,IACFswC,EAAWtiB,GAA2BsiB,EAAU7lE,EAAQu1B,EAAiBywC,EAAelpE,IAG9F,MAlBE+oE,EAAWljB,GAAQkjB,EAFAnxD,EAEsB5X,GADtB,GAInBglE,EAAMtuB,aAAc,EAmBtB,IADA,IAAIyyB,EAAOJ,EACJD,EAAUr1E,QAAQ,CACvB,IAAA21E,EAAgCN,EAAU70E,MAAKo1E,GAAArxE,EAAAA,EAAAA,GAAAoxE,EAAA,GAAxCJ,EAAKK,EAAA,GAAEJ,EAAII,EAAA,GAAEC,EAAQD,EAAA,GAGtBH,EAFiBnmE,GAAc/C,EAAQgpE,GACtCpmE,KACoBqmE,GAC3BE,EAAOzwD,GAAY4wD,EAAUL,EAAME,EAAMD,EAAelpE,EAC1D,CAEA,OAAI6oE,EACK/D,GAAS1B,EAAOnwE,EAAMk2E,EAAMnpE,OAAQtL,EAAWswE,GAE/CgB,GAAS5C,EAAOnwE,EAAM6hB,EAAOq0D,OAAMz0E,EAAWsL,OAAQtL,EAAWswE,EAE5E,CAwkB+BuE,CACvBvpE,EAAQojE,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOlyD,MAAOkyD,EAAO4B,YACtD5B,EAAO9jE,OAAQ8jE,EAAOxyE,MAAOwyE,EAAO3vD,UACpC2vD,EAAOvuC,gBAAiBuuC,EAAOhC,OAHnB95D,EAAOy9D,EAAdvF,MAKPv0C,EAAItkB,KAAOW,EACX,MAGF,KAAKkqC,GACHvmB,EAAItkB,KA9QU,SAAC64D,EAAOnwE,EAAM6hB,EAAOszD,EAAQpoE,GAE/C,IADoBojE,EAAM73D,MAAM5B,GAAe1W,IAG7C,OAAOmwE,EAGT,IAAOloD,EAAoBlb,EAAOiB,SAA3Bia,iBACD7Z,EAAQ+hE,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,WAAa,KAEpEkS,EAAWi+D,EAAM73D,MAAM5B,GAAe1W,EAAM,aAAc,cAAgB,KAC1Ewf,EAAiBvN,GAAkBlF,EAAQmF,EAAU9D,GACrDs2C,EAAsBxyC,EAAWlN,EAAiBwa,GAAkB,KA2B1E,GApBA2wD,GADAA,GADAA,GAFAA,EAAQ8C,GAAoB9C,EAAOnwE,EAAM+M,EAAQ23C,IAEnC3kD,MAAM2W,GAAe1W,EAAM,aAAc,QAAS6hB,EAAQ,SAAKpgB,IAC/D1B,MAAM2W,GAAe1W,EAAM,aAAc,YAAa6hB,EAAQ,IAAK,OACnEtJ,SAAS7B,GAAe1W,EAAM,aAAc,oBAEtDioB,IAEFkoD,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,aAAc6hB,GAAQ,MAGzErC,SAAAA,EAAgBizC,iBAClB0d,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,aAAc0kD,GAAsB,QAM7FyrB,OADoB,IAAXgF,EACDhF,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,WAAY6hB,EAAQ,IAAK,MAExEsuD,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,WAAY6hB,EAAQ,IAAKszD,GAI9EA,EAAQ,CACV,IAAMj3D,EAAaiyD,EAAM73D,MAAM5B,GAAe1W,EAAM,eAGpDu2E,EAA4E3zB,GAC1E,CAAE/uB,cAAAA,GAAeovB,cAAAA,IACjBl2C,EAAQA,EAAQmR,EAAY9P,EAAO8D,EAAU,YAHhC,GACRozC,EAAaixB,EAAbjxB,cAAerlD,EAAQs2E,EAARt2E,SAAU6nD,EAAWyuB,EAAXzuB,YAAaE,EAAYuuB,EAAZvuB,aAA2BuuB,EAAbhuB,cAItDjD,GAAiBwC,EAAYn3C,IAAIkR,IAAUszD,IAE9ChF,GADAA,EAAQA,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,QAAS6hB,EAAQ,IAAK5hB,EAAS0Q,IAAIkR,KAC5E9hB,MAAM2W,GAAe1W,EAAM,aAAc,YAAa6hB,EAAQ,IAAKmmC,EAAar3C,IAAIkR,IAEtG,CAEA,OAAOsuD,CACT,CAwNiBqG,CAAYrG,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAOlyD,MAAOkyD,EAAOoB,OAAQpoE,EAAQgnE,EAAOhC,OAC5F,MAGF,KAAK5vB,GACHvmB,EAAItkB,KArNgB,SAAC64D,EAAOnwE,EAAMmI,EAAM5G,GAE5C,OADoB4uE,EAAM73D,MAAM5B,GAAe1W,IAKxCmwE,EAAMpwE,MAAM2W,GAAe1W,EAAM,aAAc,kBAAmBmI,GAAO5G,GAFvE4uE,CAGX,CA8MiBsG,CAAkBtG,EAAM74D,KAAMy8D,EAAO/zE,KAAM+zE,EAAO5rE,KAAM4rE,EAAOxyE,OAC1E,MAGF,KAAK4gD,GACHvmB,EAAItkB,KAlyBO,SAAC64D,EAAOuG,EAAUC,EAAQC,GACzC,IAAM94C,EAAOzmB,GAAc84D,EAAOuG,GAC5BG,EAAaH,EAAS11E,MACtBy5D,EAASic,EAASp9D,KAAO,EAAIjC,GAAc84D,EAAO0G,GAAc,KAChEC,EAAiBrc,EAASA,EAAO9pD,IAAI,aAAe,KAEpD+rD,EAAKrlD,GAAc84D,EAAOwG,GAC1BI,EAAcH,GAAaz0B,IAA8By0B,GAAaz0B,GAA+Bw0B,EAASA,EAAO31E,MACrHH,EAAU+1E,GAAaz0B,IAA8By0B,GAAaz0B,GACpEua,EACAia,EAAOr9D,KAAO,EAAIjC,GAAc84D,EAAO4G,GAAc,KACnD/F,EAAiBnwE,EAASA,EAAO8P,IAAI,aAAe,KAE1D,IAAK8pD,IAAW55D,IAAWi9B,EAEzB,OAAOqyC,EAGT,IAAM6G,EAAgBvc,EAAO9pD,IAAI,OAAS9P,EAAO8P,IAAI,MAC/CsmE,EAAuBF,EAAWz9D,KAAOu9D,EAAWv9D,MACjDlU,EAAU2xE,EAAWj8D,UAAW+7D,EAAW/7D,UAAUxR,MAAM,EAAGytE,EAAWz9D,OAC5E49D,EAAuBH,EAAWz9D,KAAOu9D,EAAWv9D,MACjDlU,EAAUyxE,EAAW/7D,UAAWi8D,EAAWj8D,UAAUxR,MAAM,EAAGutE,EAAWv9D,OAC9E69D,EAA0B,KAC1BC,EAA0B,KAC1BH,EACFE,EAA0BrwE,EAAAA,GAAAA,KAAe+vE,EAAW/7D,UAAUxR,MAAMytE,EAAWz9D,OACtE49D,IACTE,EAA0BtwE,EAAAA,GAAAA,KAAeiwE,EAAWj8D,UAAUxR,MAAMutE,EAAWv9D,QAGjF,IAAI+9D,EAAoBrG,EAAgBsG,EAAoBR,EAwC5D,OAvCKI,IACHI,EAAoBA,EAAiB,OAAQx5C,EAAKntB,IAAI,QACpDqmE,EACFK,EAAoBC,EACXL,IACTI,EAAoBA,EAAkB1E,SAASz7D,GAAkBigE,EAAyB,cAAc,SAACI,GAAY,OAAKD,CAAiB,KAGzIV,GAAaz0B,IAA8By0B,GAAaz0B,GAC1Dk1B,EAAoBvwE,EAAAA,GAAAA,aAAuBgQ,eAAc,SAAA5Y,GAAK,IACNyC,EADMO,EAAAC,GACjCk2E,EAAkBxyE,WAAS,IAAtD,IAAA3D,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAAwD,KAAA22C,GAAAlzC,EAAAA,EAAAA,GAAApE,EAAAY,MAAA,GAA9CwX,EAAMk/B,EAAA,GAAElgC,EAAIkgC,EAAA,GAChBl/B,IAAU2jD,aAAE,EAAFA,EAAI/rD,IAAI,QAASimE,GAAaz0B,IAC1CjkD,EAAE09B,IAAIkC,EAAKntB,IAAI,MAAOmtB,GAGxB5/B,EAAE09B,IAAI7iB,EAAQhB,GAEVgB,IAAU2jD,aAAE,EAAFA,EAAI/rD,IAAI,QAASimE,GAAaz0B,IAC1CjkD,EAAE09B,IAAIkC,EAAKntB,IAAI,MAAOmtB,EAE1B,CAAC,OAAAl8B,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACH,IACS80E,GAAaz0B,GACtBk1B,EAAoBA,EAAkB9+C,MAAMzxB,EAAAA,GAAAA,YAAoByQ,EAAAA,EAAAA,GAAC,CAAC,EAACumB,EAAKntB,IAAI,MAAQmtB,KAC3E84C,GAAaz0B,KACtBk1B,EAAoBvwE,EAAAA,GAAAA,YAAoByQ,EAAAA,EAAAA,GAAC,CAAC,EAACumB,EAAKntB,IAAI,MAAQmtB,IAAOvF,MAAM8+C,IAGvEH,IAEFI,GADAA,EAAoBA,EAAkB3E,SAASz7D,GAAkBkgE,EAAyB,cAAc,SAACG,GAAY,OAAKF,CAAiB,KACtG,OAAQv5C,EAAKntB,IAAI,QAGnDqmE,GAAiBC,IACpB9G,EAAQA,EAAMwC,SAASj8D,GAAemgE,EAAY,cAAc,SAACU,GAAY,OAAKD,CAAiB,KAChGJ,IACH/G,EAAQA,EAAMwC,SAASj8D,GAAeqgE,EAAY,cAAc,SAACQ,GAAY,OAAKF,CAAiB,KAE7F3+D,GAAey3D,EAEzB,CA0tBiBqH,CAASrH,EAAM74D,KAAMy8D,EAAO2C,SAAU3C,EAAO4C,OAAQ5C,EAAO6C,WACvE,MAGF,KAAKz0B,GACHvmB,EAAI43C,UAAYO,EAAOP,UACvB53C,EAAI03C,SAAWS,EAAOT,SACtB13C,EAAI23C,SAAWQ,EAAOR,SACtB,MAGF,KAAKpxB,GACHvmB,EAAI23C,SAAWQ,EAAOR,SACtB33C,EAAI03C,SAAWS,EAAOT,SACtB,MAGF,KAAKnxB,GACHvmB,EAAItkB,KAhOe,SAAC64D,EAAOpjE,GAK/B,OAJ6BA,EAAOiB,SAA7B0Z,qBAELyoD,EAAQh3D,GAAqBg3D,IAExBA,CACT,CA0NiBsH,CAAiBtH,EAAM74D,KAAMvK,GACxC6uB,EAAGp8B,GAAAA,GAAA,GAAQo8B,GAAQy3C,IAiBrB,OARIW,IACFp4C,EAAI87C,aAAe1D,GAGjBL,GAAe/3C,EAAItkB,MAAQ64D,EAAM74D,MACnCq8D,EAAYxD,EAAM74D,MAGpB9X,GAAAA,GAAAA,GAAA,GAAW2wE,GAxIG,CAACuH,kBAAcj2E,IAwIEm6B,EACjC,CAED,ECzmCM,IAAM+7C,GAAU,SAAC5qE,EAAQuK,GAAI,MAAM,CACxClY,KAAM+iD,GACN7qC,KAAMA,EACNvK,OAAQA,EACT,EAOY6qE,GAAU,SAAC7qE,EAAQ/M,EAAMke,GAAU,IAAsCvK,EAAoBxQ,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACrH/D,KAAM+iD,GACNsyB,SAFwDtxE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,OAG3DkF,SAH2ElF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAI9EnD,KAAM+G,GAAgB/G,GACtBwX,GAAIwB,IACJkF,WAAY81C,GAAsBjnD,EAAQ4G,GAAsB4kB,OAAMzZ,EAAAA,EAAAA,IAAOZ,IAAe,CAAC,GAC7FnR,OAAQA,EACRqG,KAAM,CACJO,qBAAAA,GAEH,EAMYqhE,GAAa,SAACjoE,EAAQ/M,GAAI,MAAM,CAC3CZ,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtB+M,OAAQA,EACT,EAOY8qE,GAAsB,SAAC9qE,EAAQ/M,EAAMke,GAAU,IAAE7V,EAAQlF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACjF/D,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBqI,SAAUA,EACVmP,GAAIwB,IACJkF,WAAY8B,GAAuBjT,GAAQwrB,OAAMzZ,EAAAA,EAAAA,IAAOZ,IAAe,CAAC,GACxEnR,OAAQA,EACRqG,KAAM,CACJsJ,eAAe,GAElB,EAOYo7D,GAAe,SAAC/qE,EAAQ/M,EAAMke,GAAU,IAAE7V,EAAQlF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CAC1E/D,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBqI,SAAUA,EACVmP,GAAIwB,IACJkF,WAAY8B,GAAuBjT,GAAQwrB,OAAMzZ,EAAAA,EAAAA,IAAOZ,IAAe,CAAC,GACxEnR,OAAQA,EACT,EAOYgrE,GAAW,SAAChrE,EAAQ/M,EAAMke,GAAU,IAAE7V,EAAQlF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAMwQ,EAAoBxQ,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CACnG/D,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBqI,SAAUA,EACVmP,GAAIwB,IACJkF,WAAY8B,GAAuBjT,EAAQ4G,GAAsB4kB,OAAMzZ,EAAAA,EAAAA,IAAOZ,IAAe,CAAC,GAC9FnR,OAAQA,EACRqG,KAAM,CACJO,qBAAAA,GAEH,EAMY6gE,GAAc,SAACznE,EAAQ/M,GAAI,MAAM,CAC5CZ,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtB+M,OAAQA,EACT,EAQYyqE,GAAW,SAACzqE,EAAQ2pE,EAAUC,EAAQC,GAAS,MAAM,CAChEx3E,KAAM+iD,GACNu0B,SAAU3vE,GAAgB2vE,GAC1BC,OAAQ5vE,GAAgB4vE,GACxBC,UAAWA,EACX7pE,OAAQA,EACT,EC3GYkoE,GAAiB,SAACloE,EAAQ/M,EAAMigB,GAAW,MAAM,CAC5D7gB,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBigB,YAAaA,EACd,EAOYi1D,GAAS,SAACnoE,EAAQ/M,EAAMkgB,GAAG,MAAM,CAC5C9gB,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBkgB,IAAKA,EACN,EAOYq1D,GAAU,SAACxoE,EAAQ/M,EAAMs1E,GAAI,MAAM,CAC9Cl2E,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBs1E,KAAMA,EACP,EC1BYzD,GAAW,SAAC9kE,EAAQ/M,EAAMoO,EAAOo3B,EAAiBusC,GAAK,MAAM,CACxE3yE,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBoO,MAAAA,EACArB,OAAAA,EACAy4B,gBAAAA,EACAusC,MAAAA,EACD,EAOYsD,GAAc,SAACtoE,EAAQ/M,EAAMm1E,GAAM,MAAM,CACpD/1E,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBm1E,OAAQA,EACRpoE,OAAQA,EACT,EAOY0oE,GAAc,SAAC1oE,EAAQ/M,EAAMkS,GAAQ,MAAM,CACtD9S,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBkS,SAAUA,EACVnF,OAAQA,EACT,EAUYgmE,GAAW,SAAChmE,EAAQ/M,EAAM6hB,EAAOtgB,EAAO6iB,EAAWohB,EAAiBusC,GAAK,MAAM,CAC1F3yE,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtB6hB,MAAAA,EACAtgB,MAAAA,EACA6iB,UAAAA,EACAohB,gBAAAA,EACAz4B,OAAAA,EACAglE,MAAAA,EACD,EAQYyE,GAAc,SAACzpE,EAAQ/M,EAAM6hB,EAAOszD,EAAQpD,GAAK,MAAM,CAClE3yE,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtB6hB,MAAAA,EACAszD,OAAAA,EACApoE,OAAAA,EACAglE,MAAAA,EACD,EAYYuE,GAAe,SAACvpE,EAAQ/M,EAAM6hB,EAAO8zD,EAAa1lE,EAAQ1O,EAAO6iB,EAAWohB,EAAiBusC,GAAK,MAAM,CACnH3yE,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtB6hB,MAAAA,EACA8zD,YAAAA,EACA1lE,OAAAA,EACA1O,MAAAA,EACA6iB,UAAAA,EACAohB,gBAAAA,EACAz4B,OAAAA,EACAglE,MAAAA,EACD,EAQY0E,GAAoB,SAAC1pE,EAAQ/M,EAAMmI,EAAM5G,GAAK,MAAM,CAC/DnC,KAAM+iD,GACNniD,KAAM+G,GAAgB/G,GACtBmI,KAAMA,EACN5G,MAAOA,EACPwL,OAAQA,EACT,E,ykBCrGD,IAAM2qD,GAAKl4D,GAAAA,GAAAA,GAAA,GACNw4E,GAAU,IACbC,OAAAA,EAAQC,OAAAA,EAER9J,aAAAA,IAEG6J,GAAWC,E,2CCfhB,IAAIrwE,EAAM,CACT,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,OAIZ,SAASswE,EAAeC,GACvB,IAAI5gE,EAAK6gE,EAAsBD,GAC/B,OAAOE,EAAoB9gE,EAC5B,CACA,SAAS6gE,EAAsBD,GAC9B,IAAIE,EAAoB5+C,EAAE7xB,EAAKuwE,GAAM,CACpC,IAAIv2E,EAAI,IAAItB,MAAM,uBAAyB63E,EAAM,KAEjD,MADAv2E,EAAE02E,KAAO,mBACH12E,CACP,CACA,OAAOgG,EAAIuwE,EACZ,CACAD,EAAexzE,KAAO,WACrB,OAAOhG,OAAOgG,KAAKkD,EACpB,EACAswE,EAAevvE,QAAUyvE,EACzBG,EAAOC,QAAUN,EACjBA,EAAe3gE,GAAK,K,0+BCxBpB,QAAekhE,EAAS,GCCxB,EAAeC,EAAAA,gB,0BCiBFhJ,EAAkB,QAClBC,EAAmB,SACnBC,EAAmB,SACnBC,EAAoB,UCfpB8I,EAAkB,SAACrF,EAAUD,GAAQ,MAAM,CACtDl0E,KDgB+B,oBCf/Bm0E,SAAUA,EACVD,SAAUA,EACX,EAOYuF,EAAe,SAACrF,EAAWF,EAAUC,GAAQ,MAAM,CAC9Dn0E,KDM4B,iBCL5Bo0E,UAAWA,EACXF,SAAUA,EACVC,SAAUA,EACX,EAKYuF,EAAa,WAAH,MAAU,CAC/B15E,KDH0B,eCI3B,EC5BOkY,EAAsByhE,EAAAA,GAAAA,GAAhBr1D,EAAgBq1D,EAAAA,GAAAA,GAATn1D,EAASm1D,EAAAA,GAAAA,G,mmBCDvB,IAIMC,EAAiB,SAACjuD,EAAK1pB,EAAG43E,GACrC,IAAK53E,IAAM0pB,GAAOA,EAAIvqB,QAAUa,EAAK,OAAO0pB,EAC5C,IAAImuD,EAAYnuD,EAAIhtB,OAAO,EAAGsD,EAAE,GAChC,OAAQ43E,EACJC,EAAUn7E,OAAO,EAAGm7E,EAAUC,YAAY,MAC1CD,GAAa,KACnB,EAEaE,EAAiB,SAAS/zE,EAAIC,GACzC,OAAID,IAAOC,IAGFD,aAAE,EAAFA,EAAII,OAAOH,GAEtB,EAaaM,EAAe,SAACC,EAAGC,GAAoB,IAAjBC,EAAI5C,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GACrC,OAAI0C,IAAMC,IAEC7G,MAAMC,QAAQ2G,GAU3B,SAA4BG,EAAMC,GAAoB,IAAdF,EAAI5C,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GAC1C,GAAI6C,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAMF,EAAKxF,OAEf,GAAIyF,EAAKzF,SAAW0F,EAClB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAEvB,KADcJ,EAAOH,EAAaI,EAAKG,GAAIF,EAAKE,GAAIJ,GAAQC,EAAKG,KAAOF,EAAKE,IAE3E,OAAO,EAIX,OAAO,CACT,CAhCWC,CAAmBP,EAAGC,EAAGC,GACzBF,GAAyB,mBAAbA,EAAEJ,OACdI,EAAEJ,OAAOK,GACI,YAAbpH,EAAAA,EAAAA,GAAOmH,GA+BlB,SAA6BQ,EAAMC,GAAoB,IAAdP,EAAI5C,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GAC3C,GAAIkD,IAASC,EACX,OAAO,EAGT,IAAKD,IAASC,EACZ,OAAO,EAGT,IAAIC,EAAQ5H,OAAOgG,KAAK0B,GACpBG,EAAQ7H,OAAOgG,KAAK2B,GACpBJ,EAAMK,EAAM/F,OAEhB,GAAIgG,EAAMhG,SAAW0F,EACnB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAIM,EAAMF,EAAMJ,GAEhB,KADcJ,EAAOH,EAAaS,EAAKI,GAAMH,EAAKG,GAAMV,GAAQM,EAAKI,KAASH,EAAKG,IAEjF,OAAO,CAEX,CAEA,OAAO,CACT,CAxDWC,CAAoBb,EAAGC,EAAGC,GAE1BF,IAAMC,EACjB,EAwDA,IAuBayG,OAtB4B,IAAZd,GAA0D,SAA/B,MAAAA,GAAY,QAAL4tE,EAAPA,CAAAA,SAAAA,qBAAY,IAAAA,OAAA,EAAZA,EAAc1tE,eAIlEnM,EAAAA,EAAA,GACKoM,SAAO,IACVC,IAAK,WAAO,EACZC,MAAO,WAAO,EACdC,KAAM,WAAO,SATqB,IAAZN,GAAqD,gBAA1B,MAAAA,GAAY,QAALzI,EAAPA,CAAAA,SAAAA,qBAAY,IAAAA,OAAA,EAAZA,EAAciJ,UAalDL,QAAU,CACzBM,MAAO,WAAO,EACdL,IAAK,WAAO,EACZM,KAAM,WAAO,EACbL,MAAO,WAAO,EACdC,KAAM,WAAO,GCnHTi/C,EAAuB0M,EAAAA,GAAM4hB,WAA7BtuB,mB,oBCYFuuB,EAAuB,SAACj9D,GAC5B,GAAKA,EAAL,CAGA,IAd6BxU,EAcvB1I,GAduB0I,EAcMwU,GAb5Bk9D,oBACE,OAEL76E,OAAO86E,oBAAoB3xE,GAAIvD,QAAO,SAAA7E,GAAC,OAAIA,EAAE2P,WAAW,mBAAmB,IAAE7O,OAAS,EACjF,iBADT,EAWA,YAAaiB,IAATrC,EACKA,EAEAm6E,EAAqBj9D,EAAKo9D,WALnC,CAOF,EAEaC,EAA8B,SAACr9D,GAC1C,MAAsC,SAA/Bi9D,EAAqBj9D,EAC9B,EAGas9D,EAA4B,SAACC,EAAM9sE,GAAM,OAAK,SAAC+sE,EAAWC,GACrE,IAAMC,EAAYH,EAAKzxE,MACjB6xE,EAAYJ,EAAK1J,MAEnB+J,EAASJ,GAAaE,GAAaD,GAAaE,EACpD,GAAIC,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IAAIK,EAAM,GACV,IAAK,IAAIz6E,KAAKo6E,EAAW,CACvB,IAAIM,EAAWN,EAAUp6E,IAAMs6E,EAAUt6E,GACrC06E,IACe,UAAbrtE,EAAOrN,GACT06E,GAAU,EACU,gBAAbrtE,EAAOrN,GACd06E,GAAWx0E,EAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IAAI,GAChC,WAAbqN,EAAOrN,GACd06E,GAAWx0E,EAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IACrB,mBAAbqN,EAAOrN,KACrB06E,EAAUrtE,EAAOrN,GAAGo6E,EAAUp6E,GAAIs6E,EAAUt6E,GAAIo6E,EAAWE,KAE3DI,GACFD,EAAIx4E,KAAKjC,EACb,CACKy6E,EAAI35E,SACP05E,GAAS,EACb,CAEF,OAAOA,CACT,CAAC,EAEYG,EAA4B,SAACR,GAAI,OAAK,SAASC,EAAWC,GACrE,OACGn0E,EAAai0E,EAAKzxE,MAAO0xE,KACtBl0E,EAAai0E,EAAK1J,MAAO4J,EAEjC,CAAC,EAOYO,EAAoB,SAACz6E,GAShC,GAJKA,EAAI06E,wBACP16E,EAAI06E,sBAAwBF,EAA0Bx6E,IATzC,KADTpB,EAAIk6E,EAAAA,QAAc1pE,MAAM,KAAKpH,IAAI+pB,SAASiI,KAAK,KAAM,MAClD,IAAYp7B,EAAE,GAAK,GAAKA,EAAE,GAAK,GActCoB,EAAI26E,0BAA4B,SAACV,GAC/Bj6E,EAAI46E,eAAeX,EACrB,MACK,CAEL,IAAMY,EAA4B76E,EAAI06E,sBAStC16E,EAAI06E,sBAR6B,SAAST,EAAWC,GAMnD,OALsBn0E,EAAa/F,EAAIuI,MAAO0xE,IAE5Cj6E,EAAI46E,eAAeX,GAEAY,EAA0B77E,KAAKgB,EAAKi6E,EAAWC,EAEtE,EACqDlgD,KAAKh6B,EAC5D,CA/ByC,IACnCpB,CA+BR,EAEak8E,EAAqB,SAACC,EAAgB7tE,EAAQ8tE,GAAQ,OACjE1G,IAAUyG,GAAgB,SAACE,GAAa,OACtC,mBAAAnkE,EAAAxT,UAAA3C,OAAImP,EAAI,IAAA1Q,MAAA0X,GAAArP,EAAA,EAAAA,EAAAqP,EAAArP,IAAJqI,EAAIrI,GAAAnE,UAAAmE,GAAA,OAAKuzE,EAASC,EAAa7jE,WAAC,EAAD,CAAClK,GAAMrM,OAAKiP,IAAM,IACtD,E,+tBClGkG,IAG/ForE,EAAK,SAAAC,GAcT,SAAAD,EAAY3yE,GAAO,IAAAkrB,E,OAAA2nD,EAAAA,EAAAA,GAAA,KAAAF,G,EACjB,K,EAAAA,E,EAAA,CAAM3yE,G,cAANkrB,G,8EAoBFinD,sBAAwBX,EAAyBtmD,EAAO,CACtDhc,KAAM,SAAC4jE,GACL,OAAIA,IAAc5nD,EAAK6nD,kBAAoB7nD,EAAK6nD,mBAAqB7nD,EAAKihD,aAM5E,IA3BA+F,EAAiBhnD,GAEjBA,EAAK8nD,eAAehzE,GAKpBkrB,EAAKihD,cAAgBnsE,EAAMsrE,gBAAgBtrE,EAAM2E,OAAQ3E,EAAMkP,UAAM7V,EAAW2G,EAAMwiD,cACtFt3B,EAAK6nD,iBAAmB7nD,EAAKihD,cAE7B,IAAM/3C,EAAcp0B,EAAMm0B,eAAen0B,EAAM2E,QACwC,OAAvF3E,EAAMizE,QAAUjzE,EAAMizE,OAAO/nD,EAAKihD,cAAe/3C,OAAa/6B,EAAW6xB,EAAKgoD,SAAShoD,CACzF,CAAC,OAAAioD,EAAAA,EAAAA,GAAAR,EAAAC,IAAAQ,EAAAA,EAAAA,GAAAT,EAAA,EAAAt0E,IAAA,iBAAAlF,MAED,SAAgB6G,GACd,IAAO2E,EAAoB3E,EAApB2E,OAAQ8tE,EAAYzyE,EAAZyyE,SACflhD,KAAK2hD,QAAUX,EAAkBn7E,EAAAA,EAAAA,EAAC,CAAC,EAAG87E,GAAiBA,GAAkBA,GAAevuE,EAAQ8tE,EAClG,GAAC,CAAAp0E,IAAA,iBAAAlF,MAaD,SAAeu4E,GACb,IAAO2B,EAAY3B,EAAZ2B,SACDv4B,EAAYvpB,KAAKvxB,MAAM2E,OACvBkL,EAAU6hE,EAAUxiE,KAEpB4zC,GADUvxB,KAAKvxB,MAAMkP,KACTwiE,EAAU/sE,QAU5B,GARA4sB,KAAKwhD,iBAAmBxhD,KAAK46C,cAC7B56C,KAAK46C,cAAgBt8D,EACjBirC,IAAcgI,IAChBvxB,KAAKyhD,eAAetB,GACpBngD,KAAK46C,cAAgBuF,EAAUpG,gBAAgBxoB,EAAWjzC,EAASirC,KAGvCk2B,EAAez/C,KAAK46C,cAAe56C,KAAKwhD,kBAC5C,CACxB,IAAMO,EAAiB5B,EAAUv9C,eAAe2uB,GAChDuwB,GAAYA,EAAS9hD,KAAK46C,cAAemH,EAAgB5B,EAAUpC,aAAc/9C,KAAK2hD,QACxF,CACF,GAAC,CAAA70E,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAA0ChiD,KAAKvxB,MAAxC2E,EAAM4uE,EAAN5uE,OAAQ6uE,EAAaD,EAAbC,cAAef,EAAQc,EAARd,SAQ9B,OAAOe,EAPc,CACnBtkE,KAAMqiB,KAAK46C,cACX+G,QAAS3hD,KAAK2hD,QACdvuE,OAAQA,EACR8tE,SAAUA,GAId,IAAC,CA7EQ,CAASgB,EAAAA,WAAdd,EACGe,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzBP,SAAUM,IAAAA,KACVV,OAAQU,IAAAA,KACRH,cAAeG,IAAAA,KACfzkE,KAAMykE,IAAAA,KA2EV,IAAME,GAAiBC,EAAAA,EAAAA,KACrB,SAAC/L,GACC,MAAO,CACL74D,KAAM64D,EAAM74D,KACZogE,aAAcvH,EAAMuH,aAExB,GACA,KACA,KACA,CACEpmB,QAAAA,GAVmB4qB,CAYrBnB,GACFkB,EAAeE,YAAc,iBAG7B,U,mJC/FA,IAAO5nB,GAAemD,EAAAA,GAAM0kB,aAArB7nB,YACP8nB,GAAyC3kB,EAAAA,GAAM4kB,YAAxCxhD,GAAgBuhD,GAAhBvhD,iBAAkBD,GAAYwhD,GAAZxhD,aAGJ0hD,GAAc,SAAAvB,GAiBjC,SAAAuB,EAAYn0E,EAAOkpD,GAAS,IAAAkrB,EAAAC,EAAAnpD,E,OAAA2nD,EAAAA,EAAAA,GAAA,KAAAsB,G,EAC1B,K,EAAAA,E,EAAA,CAAMn0E,EAAOkpD,G,cAAbh+B,G,+EAoCFqgD,YAAc,SAAC+I,GACTppD,EAAKqpD,WACPrpD,EAAKspD,aAAetpD,EAAKqpD,UAE3BrpD,EAAKqpD,SAAWD,CAClB,EAACppD,EAEDupD,UAAY,WACV,OAAOvpD,EAAKvmB,MACd,EAACumB,EAEDinD,sBAAwBX,EAAyBtmD,EAAO,CACtD/xB,MAAO,SAAC25E,EAAW4B,GAAgB,OAAO,CAAO,IA/CjDxC,EAAiBhnD,GAEjB,IAAAypD,EAA+DjiD,GAAiB,CAC9EC,WAAuC,QAA7ByhD,EAAsB,QAAtBC,EAAEnpD,EAAK0pD,uBAAe,IAAAP,OAAA,EAApBA,EAAsBlgE,aAAK,IAAAigE,EAAAA,GAAK,EAC5CxhD,QAAS,EACTC,YAAY,EACZJ,aAAAA,KAJMsB,EAAiB4gD,EAAjB5gD,kBAAmBI,EAAcwgD,EAAdxgD,eAAgBG,EAAeqgD,EAAfrgD,gBAM3CpJ,EAAK2pD,kBAAoB9gD,EACzB7I,EAAKiJ,eAAiBA,EACtBjJ,EAAKoJ,gBAAkBA,EACvBpJ,EAAKogD,gBH1C2B,WAClC,IAAIwJ,EACA3I,EACAh6C,EAEJ,OAAO,SAACxtB,EAAQuK,GAAqD,IAA/C4rC,EAAS//C,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,QAAG1B,EAAWmpD,IAAYznD,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,KAAAA,UAAA,GACvD,OAAKmU,EAGDvK,EAAOgwB,aAAexC,IAAa6+C,EAAe9hE,EAAM4lE,IAAiB9D,EAAe9hE,EAAMi9D,IACzFA,GAEPh6C,EAAWxtB,EAAOgwB,WAClBmgD,EAAe5lE,EAEbi9D,GADmB,IAAjB3pB,EACcI,EAAmB1zC,EAAM,KAAMvK,EAAQm2C,GAAan2C,GAAQ,GAAO,GAAO,GAE1Ei+C,EAAmB1zC,EAAM,KAAMvK,EAAQm2C,GAAan2C,IAV/D,IAcX,CACF,CGoB2BowE,GAEvB,IAAMpwE,EAASumB,EAAK2pD,kBAAkB70E,GAC/Buf,EAA0B5a,EAAOiB,SAAjC2Z,uBAEDy1D,EAAY7oB,GAAYxnD,GADH4a,GAErBijC,IAAiBxiD,EAAM7G,MACvB+V,EAAOlP,EAAM7G,OAAS67E,EACtB7I,EAAgBjhD,EAAKogD,gBAAgB3mE,EAAQuK,OAAM7V,EAAWmpD,GAE9DyyB,EAAUC,EAAiBvwE,EAAQwnE,EAAejhD,EAAKogD,gBAAiBpgD,EAAKqgD,YAAargD,EAAKupD,WAC/FU,GAAQC,EAAAA,EAAAA,IAAYH,GAMiD,OAJ3E/pD,EAAKvmB,OAASA,EACdumB,EAAK68C,MAAQ,CACXoN,MAAAA,GAEFjqD,EAAKmqD,aAAe,SAACC,GAAE,OAAK3wE,EAAOiB,SAASsoB,eAAeonD,EAAI3wE,EAAO0d,IAAI,EAAC6I,CAC7E,CAAC,OAAAioD,EAAAA,EAAAA,GAAAgB,EAAAvB,IAAAQ,EAAAA,EAAAA,GAAAe,EAAA,EAAA91E,IAAA,uBAAAlF,MAED,WACEo4B,KAAK+C,iBACP,GAAC,CAAAj2B,IAAA,iBAAAlF,MAiBD,SAAeu4E,GAEb,IAAME,EAAYrgD,KAAKvxB,MACjB86C,EAAYvpB,KAAK5sB,OACjB4wE,EAAahkD,KAAKsjD,kBAAkBnD,GACpC8D,EAAkB16B,IAAcy6B,EAGhCE,EAAalkD,KAAKw2C,MAAMoN,MAAMO,WAAWxmE,KACzCymE,GAAiB3E,EAAeU,EAAUv4E,MAAOo4B,KAAKvxB,MAAM7G,SAAW63E,EAAeU,EAAUv4E,MAAOs8E,GACvGG,EAAcD,EAAiBjE,EAAUv4E,OAASgzD,GAAYulB,GAAc+D,EAC5EI,EAAqBF,IAAkB3E,EAAeU,EAAUv4E,MAAOo4B,KAAKgjD,YAAcvD,EAAeU,EAAUv4E,MAAOo4B,KAAKijD,cACrIjjD,KAAKixB,aAAeqzB,GAAsBL,EAC1C,IAAMM,EAAkBN,IAAoBG,EAS5C,GAPIH,IACE5D,EAAUhsE,SAASsoB,iBAAmBwjD,EAAU9rE,SAASsoB,iBAC3DqD,KAAK8jD,aAAe,SAACr1E,GAAK,OAAKu1E,EAAW3vE,SAASsoB,eAAeluB,EAAOu1E,EAAWlzD,IAAI,GAE1FkP,KAAK5sB,OAAS4wE,GAGZI,GAAiBH,EAAiB,CACpC,IAAMrJ,EAAgB56C,KAAK+5C,gBAAgBiK,EAAYK,EAAaE,EAAkBh7B,OAAYzhD,EAAWk4B,KAAKixB,cAElHjxB,KAAKw2C,MAAMoN,MAAM1C,SACfS,EAAa3D,QAAQgG,EAAYpJ,GAGrC,CACF,GAAC,CAAA9tE,IAAA,SAAAlF,MAED,WAEE,IAAAo6E,EAAwDhiD,KAAKvxB,MAAtDwzE,EAAaD,EAAbC,cAAeuC,EAAYxC,EAAZwC,aAAc1C,EAAQE,EAARF,SAAUJ,EAAMM,EAANN,OACvCkC,EAAS5jD,KAAKw2C,MAAdoN,MACDxwE,EAAS4sB,KAAK5sB,OACd0wE,EAAe9jD,KAAK8jD,aAE1B,OACE9E,EAAAA,cAAC8E,EAAY,CAAC1wE,OAAQA,GACpB4rE,EAAAA,cAACyF,EAAAA,GAAQ,CAACb,MAAOA,EAAOjsB,QAASA,GAC/BqnB,EAAAA,cAACsD,EAAc,CACblvE,OAAQA,EACR2mE,gBAAiB/5C,KAAK+5C,gBACtBn3C,eAAgB5C,KAAK4C,eACrBquB,aAAcjxB,KAAKixB,aACnB6wB,SAAUA,EACVJ,OAAQA,EACRO,cAAeA,GAAiBuC,KAK1C,IAAC,CA3HgC,CAAStC,EAAAA,WAAvBU,GACZT,UAAY,CAEjB/7D,aAAcg8D,IAAAA,OAAiBC,WAC/BzuE,OAAQwuE,IAAAA,OAAiBC,WACzB/lE,MAAO8lE,IAAAA,OAAiBC,WACxB5pE,UAAW2pE,IAAAA,OAAiBC,WAC5BlqE,QAASiqE,IAAAA,OAAiBC,WAC1BhuE,SAAU+tE,IAAAA,OAAiBC,WAC3BvxD,IAAKsxD,IAAAA,OAAiBC,WAEtBP,SAAUM,IAAAA,KACVV,OAAQU,IAAAA,KACRH,cAAeG,IAAAA,KACfx6E,MAAOw6E,IAAAA,K,iNCvBX,IAAOnqE,GAAkB8lD,EAAAA,GAAM4kB,YAAxB1qE,e,mJCEP,IAAO9O,GAAS40D,EAAAA,GAAM2mB,WAAfv7E,MACAyW,GAAem+C,EAAAA,GAAM4mB,UAArB/kE,YAEHglE,IAAoB,E,oMCNxB,kBAAgBC,GAAS,OAAK,SAACC,GAAW,IAAAC,EAAA,OAAAA,EAAA,SAAAC,GAWtC,SAAAC,EAAYx2E,GAAO,IAAAkrB,E,MAEgB,OAFhB2nD,EAAAA,EAAAA,GAAA,KAAA2D,G,EACjB,K,EAAAA,E,EAAA,CAAMx2E,G,cAANkrB,G,+EAIFurD,uBAAyB,SAACh9E,GACxB,IAAI+W,EAAS0a,EAAKlrB,MAAMoP,GACpBsnE,EAAMxrD,EAAKyrD,QAAQ57B,QAEnB7vB,EAAKlrB,MAAM42E,aACb1rD,EAAKlrB,MAAM42E,YAAYpmE,EAAQkmE,EAAKj9E,EAExC,EAVEyxB,EAAKyrD,QAAUpG,EAAAA,YAAkBrlD,CACnC,CAAC,OAAAioD,EAAAA,EAAAA,GAAAqD,EAAAD,IAAAnD,EAAAA,EAAAA,GAAAoD,EAAA,EAAAn4E,IAAA,SAAAlF,MAWD,WACE,IAAAo6E,EAKIhiD,KAAKvxB,MAJP62E,EAAetD,EAAfsD,gBACAC,EAAYvD,EAAZuD,aACA5L,EAAQqI,EAARrI,SACG6L,GAAUpoB,EAAAA,GAAAA,GAAA4kB,EAAA3kB,IAGbooB,EACED,EADFC,aAGEC,EAAS,CAAC,EACVH,GAAgBD,IACdV,KAGFc,EAAS,CACPrjE,IAAKs3D,EAASznD,EACdznB,KAAMkvE,EAASnpE,EACfm1E,MAAOhM,EAAS3+D,KAKtB,IAAM4qE,EAAKC,KAAWhB,EAAW,gBAC/BU,GAAgBD,EAAkB,eAAiB,KACnDC,IAAiBD,EAAkB,iBAAmB,KACtDG,EAAe,SAAW,MAG5B,OACEzG,EAAAA,cAAA,OACE6F,UAAWe,EACXE,MAAOJ,EACPK,IAAK/lD,KAAKolD,QACV,UAASplD,KAAKvxB,MAAMoP,IAEpBmhE,EAAAA,cAAC8F,GAAWkB,EAAAA,GAAAA,GAAA,CACVd,uBAAwBllD,KAAKklD,uBAC7BK,aAAcA,EACdD,gBAAiBA,GACbE,IAIZ,IAAC,CAtEqC,CAChBS,EAAAA,eAAalB,EAC5B5C,UAAY,CACjBmD,gBAAiBlD,IAAAA,KACjBmD,aAAcnD,IAAAA,KACdiD,YAAajD,IAAAA,KACbzI,SAAUyI,IAAAA,OACV1jE,SAAU0jE,IAAAA,KACVqD,aAAcrD,IAAAA,MACf2C,CAAA,CA+DF,E,kaCvEH,IAAArC,GAA4C3kB,EAAAA,GAAM4kB,YAA3C1qE,GAAcyqE,GAAdzqE,eAAgBK,GAAiBoqE,GAAjBpqE,kBAGF4tE,GAAQ,SAAA7E,GAgB3B,SAAA6E,EAAYz3E,GAAO,IAAAkrB,E,MAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAA4E,G,EACjB,K,EAAAA,E,EAAA,CAAMz3E,G,cAANkrB,G,+EAgBFinD,sBAAwBX,EAAyBtmD,EAAO,CAEtDwsD,cAAe,SAAC5E,EAAW4B,GAAgB,OAAO,CAAO,IAjBzDxC,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAAsE,EAAA7E,IAAAQ,EAAAA,EAAAA,GAAAqE,EAAA,EAAAp5E,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,QAECuxB,KAAKvmB,MADT,CAAC,SAAU,gBAAiB,mBAAoB,oBAAqB,oBACxCvL,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAGnHm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,GAE7B,GAAC,CAAArzE,IAAA,UAAAlF,MAOD,SAAO2B,GAA+D,IAAA88E,EAA7DjzE,EAAM7J,EAAN6J,OAAQ+yE,EAAa58E,EAAb48E,cAAeG,EAAiB/8E,EAAjB+8E,kBAAmBC,EAAgBh9E,EAAhBg9E,iBAC3CpyE,EAAc8D,GAAe7E,EAAQ+yE,GACvC1tE,GAAS7S,EAAAA,GAAAA,IAAQuO,aAAW,EAAXA,EAAasE,aAA4C,QAAnC4tE,EAAIjzE,EAAOkJ,MAAMgqE,UAAkB,IAAAD,OAAA,EAA/BA,EAAiC5tE,YAAa,IACxF0tE,GAAkB1tE,EAAUzS,SAASugF,IAGxC9tE,EAAUzQ,KAAKu+E,GAGjB,IAAMC,EACFhM,IACAiM,KACErzE,EAAOqF,WACP,SAAC2F,EAAMtR,GAAG,OAAkC,KAA7B2L,aAAS,EAATA,EAAWnJ,QAAQxC,GAAW,KAE/C,SAACtG,EAAO6I,GAAE,OAAKiJ,GAAkBlF,EAAQ/D,EAAI82E,EAAc,IAGzDrmE,EAAQkgB,KAAK0mD,aAAatzE,EAAQozE,EAAkB/tE,GAEpDkuE,EAAeH,EAAiBD,IAAqB,CAAC,EAGtDK,EADcL,EACe,CADfA,GAC+B,KAMnD,MAAO,CACLj+D,YATkB0X,KAAKvxB,MAAM2E,OAAOiB,SAAS2a,oBAShClP,MAAAA,EACb+mE,YATkBN,EASLK,aAAAA,EAAcE,aAPRF,EAOsBG,cANrBJ,EAAa5+D,MAMuBi/D,iBAJjCL,EAAap5D,QAAUo5D,EAAaM,QAIeN,aAAAA,EAAcxyE,YAAAA,EAE5F,GAAC,CAAArH,IAAA,eAAAlF,MAED,SAAawL,EAAQQ,EAAQszE,GAC3B,OAAKtzE,GAAWszE,EAGTl8E,KAAK4I,GAAQwH,MAAK,SAAClP,EAAGC,GAAC,OAAM+6E,EAAI53E,QAAQpD,GAAKg7E,EAAI53E,QAAQnD,EAAE,IAAG+B,KAAI,SAAAgG,GACxE,IAAMO,EAAQb,EAAOM,GAIrB,MAAO,CACLpH,IAAKoH,EACL7N,KAAM6N,EACN6T,MANYtT,EAAMsT,MAOlBo/D,SANe1yE,EAAM8Y,OAOrB05D,QANcxyE,EAAMwyE,QAQxB,IAdS,IAeX,GAAC,CAAAn6E,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAAkEhiD,KAAKvxB,MAAhE2E,EAAM4uE,EAAN5uE,OAAQqkB,EAAWuqD,EAAXvqD,YAAaqkD,EAAWkG,EAAXlG,YAAasL,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAChDnnB,EAAkB/oB,EAAOiB,SAAzB8nB,eACDkrD,E,uWAAWxhF,CAAA,CACfgY,GAAAA,EACAylC,QAAAA,EACAlwC,OAAAA,EACAqkB,YAAAA,EACA2vD,SAAAA,EACAlP,SAAU4D,GACP97C,KAAKvmB,MAEV,OAAK4tE,EAAYvnE,MAEVqc,EAAekrD,EAAaj0E,EAAO0d,KADjC,IAEX,IAAC,CA3G0B,CAASoxD,EAAAA,WAAjBgE,GACZ/D,UAAY,CACjBtkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OACThvE,OAAQgvE,IAAAA,OAAiBC,WACzB8D,cAAe/D,IAAAA,IACfkF,gBAAiBlF,IAAAA,OACjBkE,kBAAmBlE,IAAAA,OACnBmF,iBAAkBnF,IAAAA,OAClBmE,iBAAkBnE,IAAAA,OAClBgF,SAAUhF,IAAAA,KACV3qD,YAAa2qD,IAAAA,OAEbtG,YAAasG,IAAAA,KAAeC,Y,gCCrB1BmF,GAAM,SAAHj+E,GAAA,IAAKmF,EAAQnF,EAARmF,SAAaD,GAAK2uD,EAAAA,GAAAA,GAAA7zD,EAAA8zD,IAAA,OAAO2hB,EAAAA,cAAA,MAASvwE,EAAQC,EAAe,EAEjE+4E,GAAU,WAAO,EAEjBC,GAAW,WAAH,OACZ1I,EAAAA,cAAA,OAAK2I,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,OAAOlC,MAAM,OAAOviE,OAAO,QAC1F47D,EAAAA,cAAA,QAAM1sD,EAAE,kBAAkBu1D,KAAK,SAC/B7I,EAAAA,cAAA,QAAM1sD,EAAE,kDACJ,EAGFw1D,GAAgB,SAACznD,GAAG,OACxB,SAAA5xB,GACE,IAAOwtB,EAAcxtB,EAAM2E,OAAOiB,SAA3B4nB,WACD8rD,EAAY9rD,EAAaA,EAAW/2B,KAAKuJ,EAAM2E,OAAO0d,IAAKriB,EAAM2E,OAAO0d,KAAO,KACrF,OAAOkuD,EAAAA,cAAC3+C,GAAG2lD,EAAAA,GAAAA,GAAA,GAAKv3E,EAAK,CAAEs5E,UAAWA,IACpC,CAAC,EAGGC,GAAc,SAAH78E,GAEX,IADJ0S,EAAE1S,EAAF0S,GAAIo+D,EAAK9wE,EAAL8wE,MAAO/zD,EAAK/c,EAAL+c,MAEX,MAAO,CACLrK,EACAo+D,EAAQ,IAAM,IACdA,GAAS,EAAK/zD,GAAS,GALI/c,EAAX6wE,aAMA,IAAI9tE,KAAI,SAAA+H,GAAA,IAAA1G,GAAAnE,EAAAA,GAAAA,GAAA6K,EAAA,GAAE9N,EAACoH,EAAA,GAAErD,EAACqD,EAAA,YAAAxI,OAASoB,EAAC,KAAApB,OAAImF,EAAC,QAAKnE,KAAK,MACvDA,KAAK,IACT,EAEMkgF,GAAsB,SAAC70E,EAAQ80E,GACnC,IAAI7nD,EAOJ,MANwB,mBAAb6nD,GACT7nD,EAAM,SAAC0jD,GAAE,OAAKmE,aAAQ,EAARA,EAAWnE,EAAI3wE,EAAO0d,IAAI,GACpC0xD,YAAc0F,EAAS15E,KAE3B6xB,EAAM6nD,EAED7nD,CACT,E,mJCvC6B,IAGR8nD,GAAe,SAAAnD,GAAA,SAAAmD,IAAA,OAAA7G,EAAAA,EAAAA,GAAA,KAAA6G,G,EAAA,K,EAAAA,E,EAAA3+E,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAAuG,EAAAnD,IAAAnD,EAAAA,EAAAA,GAAAsG,EAAA,EAAAr7E,IAAA,SAAAlF,MAClC,WACE,IAAAo6E,EAGIhiD,KAAKvxB,MAFP2E,EAAM4uE,EAAN5uE,OAAQ+yE,EAAanE,EAAbmE,cAAeoB,EAAgBvF,EAAhBuF,iBAAkBjB,EAAiBtE,EAAjBsE,kBAAmBC,EAAgBvE,EAAhBuE,iBAAkBzK,EAAWkG,EAAXlG,YAC9EwL,EAAetF,EAAfsF,gBAAiBc,EAAYpG,EAAZoG,aAAcC,EAAiBrG,EAAjBqG,kBAAmBC,EAAyBtG,EAAzBsG,0BAA2BlB,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAiC7F,MAAO,CA/BU8kC,GACNpJ,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,iBAAiBw6E,EAAiBzC,UAAU,kBACrDzxE,EAAOiB,SAASuwB,YACTo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAezxE,EAAOiB,SAASua,eAEzDowD,EAAAA,cAACkH,GAAQ,CACPp5E,IAAI,WACJsG,OAAQA,EACR+yE,cAAeA,EACfoB,iBAAkBA,EAClBjB,kBAAmBA,EACnBgB,gBAAiBA,EACjBf,iBAAkBA,EAClBzK,YAAaA,EACbrkD,YAAarkB,EAAOiB,SAASk0E,0BAC7BnB,SAAUA,EACVvpE,GAAIA,EACJylC,QAASA,KAGE+kC,GACZrJ,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,iBAAiBw6E,EAAiBzC,UAAU,kBACvD7F,EAAAA,cAAA,OAAK6F,UAAU,0BACZzxE,EAAOiB,SAASuwB,WACbo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAc,KAC/B,KACJ7F,EAAAA,cAAA,OAAK6F,UAAU,+BACb7F,EAAAA,cAAA,QAAM6F,UAAU,uBAAuByD,EAA0BE,wBAQjF,IAAC,CAzCiC,CAASvC,EAAAA,e,yYCE7C,IAAOn+D,GAAsBi2C,EAAAA,GAAM0qB,UAA5B3gE,mBACP46D,GAA2D3kB,EAAAA,GAAM4kB,YAA1D1qE,GAAcyqE,GAAdzqE,eAAgBlD,GAAa2tE,GAAb3tE,cAAekC,GAAiByrE,GAAjBzrE,kBAGjByxE,GAAK,SAAArH,GAgBxB,SAAAqH,EAAYj6E,GAAO,IAAAkrB,E,MAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAAoH,G,EACjB,K,EAAAA,E,EAAA,CAAMj6E,G,cAANkrB,G,+EAkIFu+C,SAAW,SAACzjE,EAAOo3B,GAAgC,IAAfusC,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpCqU,EAAM8b,EAAKlrB,MAAXoP,GACP,IAAKu6D,EAAMuQ,SAAU,CACnB,IAAMA,EAAW,CACf9qE,EACA,KACC,GACD9V,KAAK,KACPqwE,EAAMuQ,SAAWA,CACnB,CACAhvD,EAAKlrB,MAAMypE,SAASzjE,EAAOo3B,EAAiBusC,EAC9C,EA5IEuI,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA8G,EAAArH,IAAAQ,EAAAA,EAAAA,GAAA6G,EAAA,EAAA57E,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,QAECuxB,KAAKvmB,MADT,CAAC,gBAAiB,mBAAoB,oBAAqB,SAAU,eACxCvL,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAGnHm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,GAE7B,GAAC,CAAArzE,IAAA,UAAAlF,MAED,SAAO2B,GAA0D,IAAxD48E,EAAa58E,EAAb48E,cAAeG,EAAiB/8E,EAAjB+8E,kBAAmBlzE,EAAM7J,EAAN6J,OAAQiC,EAAW9L,EAAX8L,YAC7CwxE,EAAcV,EAClBnyE,EAAmFZ,EAAOiB,SAAnFu0E,EAAe50E,EAAf40E,gBAAiBh7D,EAAqB5Z,EAArB4Z,sBAAuBkB,EAAgB9a,EAAhB8a,iBACzC+5D,GADyE70E,EAAdC,iBACvCkyE,GACpB79D,EAAeugE,EAAsE,KAApDxJ,EAAevwD,EAAkB85D,GAClEE,EAAYD,EAAkB5wE,GAAe7E,EAAQyzE,GAAe,KACpEF,EAAemC,GAAa,CAAC,EAE7BlC,EAAe3vE,GAAkB4vE,EAAazzE,GAC9C0zE,EAAe7vE,GAAkB4vE,EAAazzE,GAAQ,GACtD2zE,EAAgB/mD,KAAK+oD,cAAcD,EAAWjC,EAAazzE,GAC3D41E,EAAclhE,GAAmB++D,EAAazzE,GAChD61E,EAAoBD,EAAcA,EAAYjhF,KAAK6lB,GAAyB,MAC5Eq7D,GAAqBlC,GAAiB1xE,KACxC4zE,EAAoB,MACtB,IAAMjC,EAAmBL,EAAap5D,QAAUo5D,EAAaM,QAEvDiC,EAAkBn0E,GAAcM,EAAajC,GAC7CsxC,EAAoBrvC,EAAc4C,GAAe7E,EAAQiC,GAAe,KACxE8zE,EAAe9zE,EAAcqvC,GAAqBA,EAAkB7wC,UAAYT,EAAOQ,OACvFw1E,GAAuBP,GAAmBvC,EAC1CxmE,EAAQkgB,KAAK0mD,aAAawC,EAAiB91E,EAAQ+1E,EAAcC,EAAqBF,GAGtFG,EAAYD,EAAsB,sBAAwB,KAOhE,OALIvC,GAAsC,YAAvB9hF,EAAAA,EAAAA,GAAO8hF,KAExBA,OAAc/+E,GAGT,CACLwgB,YAAAA,EAAaxI,MAAAA,EAAOzK,YAAAA,EACpBwxE,YAAAA,EAAaD,aAAAA,EAAcE,aAAAA,EAAcC,cAAAA,EAAeJ,aAAAA,EAAcK,iBAAAA,EAAkBiC,kBAAAA,EACxFI,UAAAA,EAEJ,GAAC,CAAAv8E,IAAA,gBAAAlF,MAED,SAAc0hF,EAAWp1E,EAAUd,GACjC,IAAKc,EAAU,OAAO,KACtB,IAAI00E,EAAkBx1E,EAAOiB,SAASu0E,gBAClCjgE,EAAa5T,GAAcb,EAAUd,GACrC2U,GAAQuhE,aAAS,EAATA,EAAWvhE,QAASC,KAAKW,GAErC,OADQ02D,EAAet3D,EAAO6gE,EAEhC,GAAC,CAAA97E,IAAA,eAAAlF,MAED,SAAashF,EAAiB91E,EAAQQ,GAA6D,IAAAw3D,EAAA,KAArD1vD,EAASlS,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,QAAG1B,EAAWzB,EAAImD,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAM+/E,EAAQ//E,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAC3F,IAAKoK,EACH,OAAO,KACT,IAAAe,EAAgDvB,EAAOiB,SAAhDJ,EAAcU,EAAdV,eAAgB2Z,EAAqBjZ,EAArBiZ,sBACjB47D,EAASnjF,SAAAA,EAAMQ,OAASR,EAAK0B,KAAKkM,GAAkBA,EAAiB,GAErEw1E,EAAyB,SAAC71E,GAC9B,OAAO5O,OAAOgG,KAAK4I,GAAU,CAAC,GAAGnD,QAAO,SAACC,EAAKwD,GAC5C,IAAMO,EAAQb,EAAOM,GACrB,MAAmB,YAAfO,EAAMhP,KACDiL,EAAM+4E,EAAuBh1E,EAAMZ,WAEnCnD,GAAO+D,EAAMhP,OAASiW,EAAY,EAAI,EAEjD,GAAG,EACL,EAEA,OAAO1Q,KAAK4I,GAAQ1F,KAAI,SAAAgG,GACtB,IAAMw1E,EAAgB,GAAH3iF,QAAAnB,EAAAA,GAAAA,GAAQS,QAAAA,EAAQ,IAAK,CAAA6N,IAClCO,EAAQb,EAAOM,GACf6T,EAAQqjD,EAAK2d,cAAct0E,EAAOi1E,EAAet2E,GAEnDu2E,EADgB7hE,GAAmB4hE,EAAet2E,GAC1BrL,KAAK6lB,IAC7B+7D,GAAa5hE,GAASmhE,SAAAA,EAAiBriF,UACzC8iF,EAAY,MACd,IAAMxC,EAAW1yE,EAAM8Y,OACjB05D,EAAUxyE,EAAMwyE,QAChBlgD,EAAWtyB,EAAMsyB,SAEvB,IAAItyB,EAAMm1E,cAAV,CAGA,GAAkB,WAAdn1E,EAAMhP,KAAmB,CAC3B,IAAMqa,EAAQsrD,EAAKsb,aAAawC,EAAiB91E,EAAQqB,EAAMZ,UAAW6H,EAAWguE,EAAe,CAClG3hE,MAAAA,EACAk/D,QAAAA,IAEI4C,EAAsBJ,EAAuBh1E,EAAMZ,WAAa,EACtE,MAAO,CACLkzB,SAAAA,EACAj6B,IAAKoH,EACL7N,KAAMmjF,EAAOt1E,EACb6T,MAAAA,EACA4hE,UAAAA,EACAxC,SAAAA,EACAF,QAAAA,EACAnnE,MAAAA,EACAgqE,YAAaD,EAEjB,CACE,IAAMC,OAA4BhiF,IAAd4T,EAA0BjH,EAAMhP,OAASiW,OAAY5T,EACzE,MAAO,CACLi/B,SAAAA,EACAj6B,IAAKoH,EACL7N,KAAMmjF,EAAOt1E,EACb6T,MAAAA,EACA4hE,UAAAA,EACAxC,SAAAA,EACAF,QAAAA,EACAhqB,WAAYssB,aAAQ,EAARA,EAAUxhE,MACtBgC,MAAOw/D,EACPO,YAAAA,EA/Bc,CAkCpB,IAAGl/E,QAAO,SAAAm1B,GAAC,QAAMA,CAAC,GACpB,GAAC,CAAAjzB,IAAA,SAAAlF,MAeD,WACE,IAAAo6E,EAAkEhiD,KAAKvxB,MAAhE2E,EAAM4uE,EAAN5uE,OAAQqkB,EAAWuqD,EAAXvqD,YAAaikD,EAAWsG,EAAXtG,YAAa0L,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAChDpnB,EAAe9oB,EAAOiB,SAAtB6nB,YACP,IAAK8D,KAAKvmB,KAAKqG,MACb,OAAO,KAET,IAAMunE,E,uWAAWxhF,CAAA,CACfgY,GAAAA,EACAylC,QAAAA,EACAlwC,OAAAA,EACAqkB,YAAAA,EACA2vD,SAAAA,EACAlP,SAAUl4C,KAAKk4C,SACfwD,YAAAA,GACG17C,KAAKvmB,MAEV,OAAOyiB,EAAYmrD,EAAaj0E,EAAO0d,IACzC,IAAC,CAjLuB,CAASoxD,EAAAA,W,kXAAdwG,GACZvG,UAAY,CACjBtkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OACThvE,OAAQgvE,IAAAA,OAAiBC,WACzB8D,cAAe/D,IAAAA,IACfmF,iBAAkBnF,IAAAA,OAClBkE,kBAAmBlE,IAAAA,OACnB/sE,YAAa+sE,IAAAA,OACb3qD,YAAa2qD,IAAAA,OACbgF,SAAUhF,IAAAA,KAEVlK,SAAUkK,IAAAA,KAAeC,WACzB3G,YAAa0G,IAAAA,MCjBjB,IAAQj5E,GAAU40D,EAAAA,GAAV50D,MACRu5E,GAA+F3kB,EAAAA,GAAM4kB,YAA9F1qE,GAAcyqE,GAAdzqE,eAAgB9B,GAAausE,GAAbvsE,cAAepB,GAAa2tE,GAAb3tE,cAAekC,GAAiByrE,GAAjBzrE,kBAAmB8B,GAAmB2pE,GAAnB3pE,oBACjE8O,GAAqBk2C,EAAAA,GAAM0qB,UAA3B5gE,kBACA5b,GAAgB8xD,EAAAA,GAAM2mB,WAAtBz4E,aAIc89E,GAAU,SAAA1I,GAmB7B,SAAA0I,EAAYt7E,GAAO,IAAAkrB,E,MAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAAyI,G,EACjB,K,EAAAA,E,EAAA,CAAMt7E,G,aAANkrB,G,8EACAgnD,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAAmI,EAAA1I,IAAAQ,EAAAA,EAAAA,GAAAkI,EAAA,EAAAj9E,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,MAGjBu7E,GAAmBhqD,KAAKlgB,OAFT,CAAC,SAAU,QAAS,YAAa,WAAY,WAAY,YAAa,QAAS,eAEhD5R,KAAI,SAAAnI,GAAC,MAChD,gBAANA,GAAuBkG,GAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IAAI,GAAQo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IACtG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,IACJm5B,KAAKvmB,MAJT,CAAC,SAAU,QAAS,YAAa,WAAY,QAAS,SAIzBvL,KAAI,SAAAnI,GAAC,OACpDo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAC7B6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAG1Bm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,IAEvB6J,IACFhqD,KAAKlgB,MAAQkgB,KAAKiqD,SAAS9J,EAAWngD,KAAKvmB,MAE/C,GAAC,CAAA3M,IAAA,WAAAlF,MAED,SAAQ2B,EAAA4B,GAA8G,IAA5GiI,EAAM7J,EAAN6J,OAAQqB,EAAKlL,EAALkL,MAAOiH,EAASnS,EAATmS,UAAWugE,EAAK1yE,EAAL0yE,MAAO1jE,EAAQhP,EAARgP,SAAUyjE,EAAWzyE,EAAXyyE,YAAaxgE,EAAejS,EAAfiS,gBAAiBjB,EAAShR,EAATgR,UAAa6uE,EAAmBj+E,EAAnBi+E,oBACvFc,EAAsB92E,EAAOiB,SAA7B61E,mBACDC,EAAgBnqD,KAAKoqD,YACzBh3E,EAAQA,EAAOI,MAAOiB,EAAOiH,EAAWugE,EAAO1jE,EAAU2xE,EAAoBlO,EAAazhE,EAAWiB,GAGvG,OADcwkB,KAAK0mD,aAAatzE,EAAQ+2E,EAAef,EAEzD,GAAC,CAAAt8E,IAAA,UAAAlF,MAED,SAAOqO,GAAuD,IAArD7C,EAAM6C,EAAN7C,OAAgBsI,GAAFzF,EAANi+C,OAAiBj+C,EAATyF,WAAW9T,EAAKqO,EAALrO,MAAOq0E,EAAKhmE,EAALgmE,MAAO1hE,EAAStE,EAATsE,UAChDvG,EAAiDZ,EAAOiB,SAAjD0a,EAAe/a,EAAf+a,gBAAiBnB,EAAqB5Z,EAArB4Z,sBAClBy8D,EAAkBziF,EAClB0iF,IAAmB1iF,EAKnB0gB,EAAegiE,EAAmC,KAAlBv7D,EAEhCw7D,EAAWD,EAAiBn0E,GAAc/C,EAAQi3E,GAAmB,KACrE1D,EAAe4D,GAAY,CAAC,EAE5B3D,EAAe3vE,GAAkBozE,EAAiBj3E,GAClD0zE,EAAe7vE,GAAkBozE,EAAiBj3E,GAAQ,GAC1D2zE,EAAgB/mD,KAAKwqD,aAAaD,EAAUF,EAAiBj3E,GAC7D41E,EAAcnhE,GAAkBwiE,EAAiBj3E,GACnD61E,EAAoBD,EAAcA,EAAYjhF,KAAK6lB,GAAyB,KAC5Eq7D,GAAqBlC,IACvBkC,EAAoB,MAEtB,IACMG,EADkBnN,IAAU1hE,IACc+vE,GAAkB5uE,EAIlE,MAAO,CACL4M,YAAAA,EACAu+D,YAAawD,EAAiBzD,aAAAA,EAAcE,aAAAA,EAAcC,cAAAA,EAAeJ,aAAAA,EAAcsC,kBAAAA,EACvFI,UALgBD,EAAsB,yBAA2B,KAMjEA,oBAAAA,EAEJ,GAAC,CAAAt8E,IAAA,cAAAlF,MAED,SAAYwL,EAAQI,EAAOi3E,EAAkB/uE,EAAWugE,EAAO1jE,EAAU2xE,EAAoBlO,EAAazhE,EAAWiB,GACnHhI,EAAQrK,GAAMqK,GACd,IAGI3L,EAHEoM,EAAiBb,EAAOiB,SAASJ,eACjC6jD,EAAkB7/C,GAAe7E,EAAQq3E,GAG3CC,EAAmB5yB,EACjBh/C,EAASC,GAAoB3F,EAAQq3E,EAAkBlyE,EAAU,SAyCvE,OAxCqBO,GAAU1F,EAAO+E,QAAQW,GAC1CyB,GACFmwE,EAAmBlvE,EACnB3T,EAAe2T,aAAe,EAAfA,EAAiB/V,MAGvBqyD,EACTjwD,EAAeiwD,EAAgBryD,KACrBw2E,IAEVp0E,EAAe6T,GAGjB,SAASivE,EAAQvtE,EAAM/W,GACrB,IAAK,IAAIgQ,KAAW+G,EAAM,CACxB,IAAIvJ,EAAYuJ,EAAK/G,GAASxC,UAC1B+2E,GAAWvkF,GAAc,IAAIU,OAAOsP,GACpCw0E,EAAcD,EAAQ7iF,KAAKkM,GAC3B6B,EAAaK,GAAc/C,EAAQy3E,GACvC,GAAuB,WAAnB/0E,EAAWrQ,KACqB,GAA/BklF,EAAQ92E,EAAW+2E,WACbxtE,EAAK/G,OACT,KAAAy0E,EACDC,GAAUljF,GAAgBiO,EAAWC,YAAclO,EACnC,QAApBijF,EAAIJ,SAAgB,IAAAI,GAAhBA,EAAkBt3E,QACpBu3E,EAASA,GAAUL,EAAiBl3E,MAAMxN,SAAS6kF,IACjDX,IACFa,EAASA,GAAUb,EAAmBO,EAAkB3yB,EAAiB+yB,EAAa/0E,EAAYyC,KAE/FzC,EAAWk1E,kBAAoBhP,GAAeA,EAAY9tE,KAAI,SAAAqB,GAAA,IAAAE,GAAArE,EAAAA,GAAAA,GAAAmE,EAAA,GAAEsG,EAAIpG,EAAA,GAAM,OAAAA,EAAA,GAAMoG,CAAI,IAAE7P,SAAS6kF,KAClGE,GAAS,GACNA,UACI3tE,EAAK/G,EAChB,CACF,CACA,OAAOrL,KAAKoS,GAAMvW,MACpB,CAEA8jF,CAAQn3E,EAAO,IAERA,CACT,GAAC,CAAA1G,IAAA,eAAAlF,MAED,SAAawL,EAAQI,GAA4D,IAAA43D,EAAA,KAArD1vD,EAASlS,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,QAAG1B,EAAWzB,EAAImD,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAM+/E,EAAQ//E,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KACzE,IAAKgK,EACH,OAAO,KACT,IAAAmB,EAAgDvB,EAAOiB,SAAhDJ,EAAcU,EAAdV,eAAgB2Z,EAAqBjZ,EAArBiZ,sBACjB47D,EAASnjF,SAAAA,EAAMQ,OAASR,EAAK0B,KAAKkM,GAAkBA,EAAiB,GAErEw1E,EAAyB,SAAC71E,GAC9B,OAAO5O,OAAOgG,KAAK4I,GAAU,CAAC,GAAGnD,QAAO,SAACC,EAAKwD,GAC5C,IAAMO,EAAQb,EAAOM,GACrB,MAAmB,YAAfO,EAAMhP,KACDiL,EAAM+4E,EAAuBh1E,EAAMZ,WAEnCnD,GAAO+D,EAAMhP,OAASiW,EAAY,EAAI,EAEjD,GAAG,EACL,EAEA,OAAO1Q,KAAKwI,GAAOtF,KAAI,SAAAmI,GACrB,IAAM40E,EAAe,GAAHlkF,QAAAnB,EAAAA,GAAAA,GAAQS,QAAAA,EAAQ,IAAK,CAAAgQ,IACjCR,EAAOrC,EAAM6C,GACb0R,EAAQqjD,EAAKof,aAAa30E,EAAMo1E,EAAc73E,GAEhDu2E,EADgB9hE,GAAkBojE,EAAc73E,GACxBrL,KAAK6lB,GAC7B+7D,GAAa5hE,IACf4hE,EAAY,MACd,IAAM1C,EAAUpxE,EAAKoxE,QAErB,GAAiB,WAAbpxE,EAAKpQ,KAAmB,CAC1B,IAAMqa,EAAQsrD,EAAKsb,aAAatzE,EAAQyC,EAAKhC,UAAW6H,EAAWuvE,EAAc,CAC/EljE,MAAAA,EACAk/D,QAAAA,IAEI4C,EAAsBJ,EAAuB5zE,EAAKhC,WAAa,EACrE,MAAO,CACL/G,IAAKuJ,EACLhQ,KAAMmjF,EAAOnzE,EACb0R,MAAAA,EACA4hE,UAAAA,EACA1C,QAAAA,EACAnnE,MAAAA,EACAgqE,YAAaD,EAEjB,CACE,IAAMC,OAA4BhiF,IAAd4T,EAA0B7F,EAAKE,aAAe2F,OAAY5T,EAC9E,MAAO,CACLgF,IAAKuJ,EACLhQ,KAAMmjF,EAAOnzE,EACb0R,MAAAA,EACA4hE,UAAAA,EACA1C,QAAAA,EACAhqB,WAAYssB,aAAQ,EAARA,EAAUxhE,MACtBgC,MAAOw/D,EACPO,YAAAA,EAGN,GACF,GAAC,CAAAh9E,IAAA,eAAAlF,MAED,SAAasjF,EAAU70E,EAASjD,GAC9B,IAAKiD,EAAS,OAAO,KACrB,IAAIuyE,EAAkBx1E,EAAOiB,SAASu0E,gBAClCr8C,EAAYx3B,GAAcsB,EAASjD,GACnC2U,GAAQmjE,aAAQ,EAARA,EAAUnjE,QAASC,KAAKukB,GAEpC,OADQ8yC,EAAet3D,EAAO6gE,EAEhC,GAAC,CAAA97E,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAA+DhiD,KAAKvxB,MAA7D2E,EAAM4uE,EAAN5uE,OAAQqkB,EAAWuqD,EAAXvqD,YAAa2hD,EAAQ4I,EAAR5I,SAAUgO,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAC7ClnB,EAAchpB,EAAOiB,SAArB+nB,WACDirD,E,uWAAWxhF,CAAA,CACfuN,OAAAA,EACAqkB,YAAAA,EACA2vD,SAAAA,EACAlP,SAAUkB,EACVt5D,MAAOkgB,KAAKlgB,MACZjC,GAAAA,EACAylC,QAAAA,GACGtjB,KAAKvmB,MAEV,OAAO2iB,EAAWirD,EAAaj0E,EAAO0d,IACxC,IAAC,CA5N4B,CAASoxD,EAAAA,WAAnB6H,GACZ5H,UAAY,CACjBtkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OACThvE,OAAQgvE,IAAAA,OAAiBC,WACzB5tE,MAAO2tE,IAAAA,IACP1mE,UAAW0mE,IAAAA,OACX73D,SAAU63D,IAAAA,OACV7pE,SAAU6pE,IAAAA,OACV3qD,YAAa2qD,IAAAA,OACbx6E,MAAOw6E,IAAAA,OACPhJ,SAAUgJ,IAAAA,KAAeC,WACzB+E,SAAUhF,IAAAA,KACVpG,YAAaoG,IAAAA,MACb5mE,gBAAiB4mE,IAAAA,OACjB7nE,UAAW6nE,IAAAA,KACXnG,MAAOmG,IAAAA,M,srBC3BX,IAAQ7yB,GAAyBwO,EAAAA,GAAMotB,UAA/B57B,qBACAt8C,GAAyB8qD,EAAAA,GAAM4kB,YAA/B1vE,qBACRm4E,GAA4CrtB,EAAAA,GAAM4mB,UAA1C7/D,GAAkBsmE,GAAlBtmE,mBAAoB9X,GAAWo+E,GAAXp+E,YAEtBq+E,IAAoBC,EAAAA,EAAAA,OAAK,SAAA/hF,GAGzB,IAFJgiF,EAAahiF,EAAbgiF,cACG5xE,GAAWyjD,EAAAA,GAAAA,GAAA7zD,EAAA8zD,IAENjqD,EAAuCuG,EAAvCvG,OAAQmH,EAA+BZ,EAA/BY,UAChBpP,EAD+CwO,EAApB6B,iBAC8C,CAAC,EAAlE3B,EAAa1O,EAAb0O,cAAeqR,EAAY/f,EAAZ+f,aAAcpQ,EAAY3P,EAAZ2P,aAC/B0wE,EAAUjxE,GAAqC,IAAxBO,aAAY,EAAZA,EAAcjU,SAAqC,WAAtBiU,aAAY,EAAZA,EAAe,IACnE6c,GAAa9d,aAAa,EAAbA,EAAeurB,cAAcvrB,aAAa,EAAbA,EAAe8d,YAE/D,OAAI6zD,GAAWtgE,EACe,kBAAjBA,EACFA,EAAgBvR,EAAYmgB,UAAY,MAAUngB,EAAYogB,SAAW,KACvEpC,EACLryB,MAAMC,QAAQ2lB,GACTA,EAAahd,KAAI,SAAApJ,GAAC,OAAIyqD,GAAqB53B,EAAY7yB,IAAMA,CAAC,IAAEiD,KAAK,MAEpEwnD,GAAqB53B,EAAYzM,IAAiBA,EAEvD,GAAGA,EAGPqgE,EAIEA,EAAc5xE,EAAavG,EAAO0d,KAHhC,GAIX,IAEAu6D,GAAkB7I,YAAc,oBAEhC,IAAMiJ,GAAgB,SAAHx1E,GAMb,IALJiS,EAAKjS,EAALiS,MAAOwjE,EAAWz1E,EAAXy1E,YAAanxE,EAAStE,EAATsE,UAAWf,EAAQvD,EAARuD,SACxBmyE,EAAQ11E,EAAfrO,MAA6BgkF,EAAa31E,EAAzBk6C,WAA2BC,EAAUn6C,EAAVm6C,WAAYvkB,EAAe51B,EAAf41B,gBACxD1jB,EAAclS,EAAdkS,eAAgB3M,EAAevF,EAAfuF,gBAChB1C,EAAM7C,EAAN6C,OAAQ+yE,EAAgB51E,EAAhB41E,iBAAkBC,EAAgB71E,EAAhB61E,iBAAkBzjE,EAAWpS,EAAXoS,YAAa6S,EAAcjlB,EAAdilB,eAAgBk+C,EAAQnjE,EAARmjE,SAAUuD,EAAY1mE,EAAZ0mE,aACnFvpE,EAAM6C,EAAN7C,OAAQqB,EAAKwB,EAALxB,MAAO8V,EAAQtU,EAARsU,SAAUwhE,EAAS91E,EAAT81E,UAAWrwE,EAASzF,EAATyF,UAAWugE,EAAKhmE,EAALgmE,MAAO1jE,EAAQtC,EAARsC,SAAU6uE,EAAQnxE,EAARmxE,SAAU/xE,EAAWY,EAAXZ,YAAa2mE,EAAW/lE,EAAX+lE,YAAan+D,EAAE5H,EAAF4H,GAAIylC,EAAOrtC,EAAPqtC,QAASqlC,EAAQ1yE,EAAR0yE,SAEjG4C,EAAsCM,EAA/CzxD,QAA2B1gB,GAAgB0jD,EAAAA,GAAAA,GAAIyuB,EAAgBG,IAIhEC,EAAgBN,EAAWA,EAASz9E,KAAI,SAAApJ,GAAC,OAAIggB,GAAmBhgB,EAAE,SAAIgD,EACtEF,GAAQskF,EAAAA,EAAAA,UAAQ,WACpB,GAAI/jE,EAAgB,CAClB,IAAIvgB,EAAQ,CAAEqkF,aAAa,EAAbA,EAAej1E,IAAI,GAAIi1E,aAAa,EAAbA,EAAej1E,IAAI,IAGxD,YAFiBlP,IAAbF,EAAM,SAAiCE,IAAbF,EAAM,KAClCA,OAAQE,GACHF,CACT,CACA,OAAOqkF,aAAa,EAAbA,EAAej1E,IAAIkR,EAC5B,GAAG,CAAEC,EAAgBwjE,IACfx7B,GAAa+7B,EAAAA,EAAAA,UAAQ,WAAM,IAAAC,EAC/B,OAAKP,EAGDzjE,EACK,CAAEyjE,EAAc50E,IAAI,GAAI40E,EAAc50E,IAAI,GAAI40E,EAAc50E,IAAI,IAElE40E,SAAkB,QAALO,EAAbP,EAAe50E,WAAG,IAAAm1E,OAAA,EAAlBA,EAAAjnF,KAAA0mF,EAAqB1jE,GALnB,IAMX,GAAG,CAAEC,EAAgBwjE,IACfS,EAAenQ,EAAQ7rB,EAAaD,EAClCt2C,GAAkB2B,GAAmB,CAAC,GAAtC3B,cACAkO,EAAuB+jE,EAAvB/jE,MAAOO,EAAgBwjE,EAAhBxjE,YACT+jE,EAAehkE,EAAcA,EAAYC,YAAc,KACvDgkE,EAAct/E,GAAYyH,GAAS,KAAOA,EAE1CkF,EAAc5O,KAAIlF,GAAAA,GAAAA,GAAC,CAAC,EACrB6T,GACAG,GAAa,IAChBzG,OAAAA,EACAqB,MAAO63E,EACPP,UAAAA,EACAxhE,SAAAA,EACA7O,UAAAA,EACAugE,MAAAA,EACA5mE,YAAAA,EACA2mE,YAAAA,EACAxgE,gBAAAA,EACAjD,SAAAA,EACA2P,MAAAA,EACAwjE,YAAAA,EACAvjE,eAAAA,EACA5N,UAAAA,EACA3S,MAAAA,EACA4R,SAAAA,EACA22C,WAAAA,EACAC,WAAAA,EACAg8B,aAAAA,EACArkE,MAAAA,EACAO,YAAAA,EACA+jE,aAAAA,EACAnxD,eAAAA,EACAk+C,SAAAA,EACAuD,aAAAA,EACAyK,SAAAA,EACAv7C,gBAAAA,EACAhuB,GAAAA,EACAylC,QAAAA,EACAqlC,SAAAA,EACA4C,cAAAA,EACAzyE,OAAAA,IAAM,GAAA/R,QAAAnB,EAAAA,GAAAA,GAEHqN,IAAoB,CACvB,UAGF,OAAO+rE,EAAAA,cAACqM,IAAiBrF,EAAAA,GAAAA,GAAA,CACvBuF,cAAeA,GACX5xE,GAER,EAEA8xE,GAAcjJ,YAAc,gBAE5B,Y,mJC/GA,IAAAE,GAAkH3kB,EAAAA,GAAM4kB,YAAjH1qE,GAAcyqE,GAAdzqE,eAAgBK,GAAiBoqE,GAAjBpqE,kBAAmBgB,GAAoBopE,GAApBppE,qBAAsBP,GAAmB2pE,GAAnB3pE,oBAAqBmD,GAAyBwmE,GAAzBxmE,0BAC9E+L,GAAiB81C,EAAAA,GAAM0qB,UAAvBxgE,cACCT,GAA6Bu2C,EAAAA,GAAM0kB,aAAnCj7D,yBACDvb,GAAgB8xD,EAAAA,GAAM2mB,WAAtBz4E,aAGDsgF,IAFkBxuB,EAAAA,GAAM4mB,UAAtB33E,YAEkB,CAACxB,YAAa,IAEnBghF,GAAM,SAAAnL,GAoCzB,SAAAmL,EAAY/9E,GAAO,IAAAkrB,E,MAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAAkL,G,EACjB,K,EAAAA,E,EAAA,CAAM/9E,G,cAANkrB,G,+EA0CF8yD,UAAY,SACVtkE,EAAgBD,EAAOwkE,EAAY/D,EACnC/gF,EAAOikC,GACJ,IADqBusC,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjC,GAHK4uE,EAAMuQ,WACTvQ,EAAMuQ,SAAWA,GAEfxgE,GAAkB7iB,MAAMC,QAAQqC,GAAQ,CAC1C,IAAM+kF,EAAW,CAAChzD,EAAKlrB,MAAM7G,MAAMoP,IAAI,GAAI2iB,EAAKlrB,MAAM7G,MAAMoP,IAAI,IAC5D21E,EAAS,IAAM/kF,EAAM,IACvB+xB,EAAKlrB,MAAM2qE,SAAS,EAAGxxE,EAAM,GAAI8kF,EAAY7gD,EAAiBusC,GAC5DuU,EAAS,IAAM/kF,EAAM,IACvB+xB,EAAKlrB,MAAM2qE,SAAS,EAAGxxE,EAAM,GAAI8kF,EAAY7gD,EAAiBusC,EAClE,MACEz+C,EAAKlrB,MAAM2qE,SAASlxD,EAAOtgB,EAAO8kF,EAAY7gD,EAAiBusC,EAEnE,EAACz+C,EAEDizD,aAAe,SACb1kE,EAAOygE,EACPnN,GAEA,IAAMpD,EAAQ,CACZuQ,SAAAA,GAEFhvD,EAAKlrB,MAAMouE,YAAY30D,EAAOszD,EAAQpD,EACxC,EAACz+C,EAyIDkzD,aAAe,SAAC3kE,EAAOzO,EAAMhL,GAC3B,IACE2E,EAEE3E,EAFF2E,OAAQmH,EAEN9L,EAFM8L,UAAW06C,EAEjBxmD,EAFiBwmD,UAAW18C,EAE5B9J,EAF4B8J,SAAiBkM,EAE7ChW,EAFsC7G,MAAeuoD,EAErD1hD,EAFqD0hD,WAAYC,EAEjE3hD,EAFiE2hD,WACnEg3B,EACE34E,EADF24E,SAAU/xE,EACR5G,EADQ4G,YAAa2mE,EACrBvtE,EADqButE,YAAan+D,EAClCpP,EADkCoP,GAAIylC,EACtC70C,EADsC60C,QAAS/4B,EAC/C9b,EAD+C8b,SAAU7O,EACzDjN,EADyDiN,UAAWugE,EACpExtE,EADoEwtE,MAAOU,EAC3EluE,EAD2EkuE,aAAc+O,EACzFj9E,EADyFi9E,YAEtFr3E,EAAYjB,EAAZiB,SACC8D,EAA2CsB,EAA3CtB,QAAS20E,EAAkCrzE,EAAlCqzE,QAASC,EAAyBtzE,EAAzBszE,OAAQjyE,EAAiBrB,EAAjBqB,aAC5BlT,EAAQ2S,EAAYuyE,EAAUroE,EAC9BhQ,EAAQ8F,EAAY06C,EAAY83B,EACtCC,EAA2C70E,EAAQ+P,GAA3C1O,EAAQwzE,EAARxzE,SAAU+O,EAAUykE,EAAVzkE,WAAYogE,EAAQqE,EAARrE,SACxBsE,EAAkBnyE,EAAajU,OAAS,IAAMugF,EAE9C8F,EAAc74E,EAASuwB,WACzBo6C,EAAAA,cAAA,SAAOlyE,IAAK,SAAS67E,EAAU9D,UAAU,eAAet8D,EAAWR,OACnE,KACJ,OACEi3D,EAAAA,cAAA,OAAKlyE,IAAK,WAAW67E,EAAU9D,UAAWgB,KAC3B,SAAbrsE,EAAsB,eAAiB,iBACvCyzE,EAAkB,wBAA0B,6BAE9B,SAAbzzE,EAAsB,KAAO0zE,EAC9BlO,EAAAA,cAACyM,IAAazF,EAAAA,GAAAA,GAAA,CACZl5E,IAAK67E,EACL9qE,GAAIA,EACJylC,QAASA,EACTqlC,SAAUA,EACVnvE,SAAUA,EACV0O,MAAOA,EACPtgB,MAAOA,EACPuoD,WAAYA,EACZC,WAAYA,EACZ71C,UAAWA,EACX0hE,MAAOA,GACH/lE,KAAKuD,EAAM,CAAC,iBAAkB,kBAAmB,oBACjDvD,KAAKiC,EAAQ+P,GAAQ,CACvB,SAAU,mBAAoB,mBAAoB,cAAe,iBAAkB,aACnF,CACFy0D,aAAcA,EACdvpE,OAAQA,EACRqB,MAAOA,EACP8V,SAAUA,EACV7O,UAAWA,EACXrG,YAAaA,EACb2mE,YAAaA,EACb0P,YAAaA,QAAAA,EAAexjE,EAC5B3P,SAAUA,EACV6uE,SAAUA,KAIlB,EAACztD,EAED8C,mBAAqB,SAACvU,EAAOzO,EAAMhL,GACjC,IAAO2E,EAAoD3E,EAApD2E,OAAQmH,EAA4C9L,EAA5C8L,UAAW06C,EAAiCxmD,EAAjCwmD,UAAW18C,EAAsB9J,EAAtB8J,SAAU6uE,EAAY34E,EAAZ24E,SACxC/yE,EAAYjB,EAAZiB,SACCyG,EAAuDrB,EAAvDqB,aAAc3C,EAAyCsB,EAAzCtB,QAAS40E,EAAgCtzE,EAAhCszE,OAAQI,EAAwB1zE,EAAxB0zE,oBACjC14E,EAAQ8F,EAAY06C,EAAY83B,EACtCK,EAAgCj1E,EAAQ+P,GAAjC1O,EAAQ4zE,EAAR5zE,SAAUqjE,EAAWuQ,EAAXvQ,YACXwQ,EAAe1zD,EAAK0zD,aAEpBC,EAAcj5E,EAASuwB,WACzBo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAc,KAC/B,KAEJ,OAAO/pE,EAAajU,OAAS,IAAMugF,GAC9BpI,EAAAA,cAAA,OAAKlyE,IAAK,oBAAuBob,EAAO28D,UAAU,oBAClDyI,EACDtO,EAAAA,cAACqO,EAAY,CACXvgF,IAAK,YAAYob,EACjBA,MAAOA,EACPpN,aAAcqyE,EACd3zE,SAAUA,EACVpG,OAAQA,EACRqB,MAAOA,EACP8D,SAAUA,EACVskE,YAAaA,EACbuK,SAAUA,EACVr4B,MAAO16C,EAASyb,yBAGxB,EAAC6J,EAED4zD,UAAY,SAACrlE,EAAOzO,EAAMhL,GACxB,IAAO2E,EAAU3E,EAAV2E,OACA+E,EAAWsB,EAAXtB,QACA9D,EAAYjB,EAAZiB,SACAm5E,EAAWr1E,EAAQ+P,GAAnBslE,QAEDC,EAAWp5E,EAASuwB,WACtBo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAc,KAC/B,KAEJ,OAAO2I,GACFxO,EAAAA,cAAA,OAAKlyE,IAAK,qBAAqBob,EAAO28D,UAAWgB,KAClD,cACS,GAAT39D,GAAc,sBAEbulE,EACDzO,EAAAA,cAAA,YAAOwO,GAEb,EAAC7zD,EAED+zD,kBAAoB,SAACxlE,GAKnB,MAAO,CAJKyR,EAAK4zD,UAAUrlE,EAAOyR,EAAKlgB,KAAMkgB,EAAKlrB,OAClCkrB,EAAK8C,mBAAmBvU,EAAOyR,EAAKlgB,KAAMkgB,EAAKlrB,OAC7CkrB,EAAKkzD,aAAa3kE,EAAOyR,EAAKlgB,KAAMkgB,EAAKlrB,OAO7D,EA5TEkyE,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA4K,EAAAnL,IAAAQ,EAAAA,EAAAA,GAAA2K,EAAA,EAAA1/E,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,MACjBk/E,GAAiB3tD,KAAKqtD,eAAgBhN,aAAS,EAATA,EAAWjtE,WAAW+sE,aAAS,EAATA,EAAW/sE,QAMvEw6E,EALc,CAClB,SAAU,KAAM,cAChB,QAAS,UAAW,WAAY,YAAa,YAAa,WAAY,YAAa,WAAY,WAAY,kBAC3G,QAAS,YAAa,iBAAkB,cAAe,QAAS,eAG/DhjF,QAAO,SAAA7E,GACN,MAAU,gBAANA,GACMkG,GAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IAAI,GAMzC,UAANA,EAGKo6E,EAAmB,UAAME,EAAmB,QAE9CF,EAAUp6E,KAAOs6E,EAAUt6E,EACpC,IAMF,KAJwBi6B,KAAKvmB,MAAQm0E,EAAY/mF,OAAS,KAExDm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,EAAWyN,IAElCD,EAAe,CACjB,IAAQv6E,EAAW+sE,EAAX/sE,OACAqpB,EAAuBrpB,EAAOiB,SAA9BooB,mBACRuD,KAAKqtD,aAAepF,GAAoB70E,EAAQqpB,EAClD,CACF,GAAC,CAAA3vB,IAAA,UAAAlF,MA8BD,SAAO2B,GAGc,IAAAskF,EAAAC,EAAAC,EAAAC,EAAA5iB,EAAA,KAFnBh4D,EAAM7J,EAAN6J,OAAek5E,EAAW/iF,EAAlBkL,MAA8BiH,GAAFnS,EAARghB,SAAmBhhB,EAATmS,WAAWuyE,EAAS1kF,EAAT0kF,UAAWC,EAAQ3kF,EAAR2kF,SAAU31E,EAAQhP,EAARgP,SAAoB+B,EAAS/Q,EAAnBiQ,SAA4BiL,EAAMlb,EAAb3B,MACrGumF,EAAc5kF,EAAd4kF,eAAgBxpD,EAAWp7B,EAAXo7B,YAAapqB,EAAShR,EAATgR,UAAsBsxB,GAAFtiC,EAAT0rD,UAA0B1rD,EAAfsiC,iBAAiBmwC,EAAWzyE,EAAXyyE,YAAaC,EAAK1yE,EAAL0yE,MAAOp+D,EAAEtU,EAAFsU,GAAI6tE,EAAWniF,EAAXmiF,YAC3FkC,EAAWpkF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,GACRqS,EAAoBzI,EAAOiB,SAA3BwH,iBACDpH,EAAQ8F,EAAY,CAAC1E,KAAMo4E,EAAWz2E,IAAK02E,GAAY5B,EACvDphC,GAAoBohC,GAAe5wE,EACrC0yE,EAAa9zE,EACbwyE,EAAUroE,GACVlK,GAAa4zE,GAAkBxpD,KACjCypD,EAAa5mE,GAAyBlN,GACtCwyE,EAAUtlE,GAAyB/C,IAGrC,IAAIjJ,EAAkBvD,GAAe7E,EAAQqB,IACxC+G,GAAmB0vC,IACtB1vC,EAAkBpI,EAAOkJ,MAAMZ,IAEjC,IACwCW,EADpC2wB,EAAgBj0B,GAAoB3F,EAAQqB,EAAO8D,IAClDy0B,GAAiBke,IACpBle,EAAuC,QAA1B3wB,EAAGjJ,EAAOkJ,MAAMZ,UAAU,IAAAW,OAAA,EAAvBA,EAAyBlB,YAE3C,IAAM2R,EAAqBvS,EACvBgyE,GACAj0E,GAAkBlF,EAAQmF,EAAU9D,GACxC,IAAwB,MAAnB+G,GAAiD,MAAtBsR,KAAgC6X,EAC9D,OAAO,KAET,IdxJ6Br5B,EAAUC,EcwJjC4c,EAAiB2E,aAAkB,EAAlBA,EAAoB3E,eACrCkmE,EAA4BlmE,IAA0C,WAAb,QAAV0lE,EAAAO,SAAU,IAAAP,OAAA,EAAVA,EAAY72E,IAAI,KAAyC,WAAb,QAAV82E,EAAAM,SAAU,IAAAN,OAAA,EAAVA,EAAY92E,IAAI,KACjGs3E,EAAqBnmE,IAAmBkmE,EACxC7iF,EAAc8iF,EAAqB,Ed1JlB,QAAzB/iF,EAAOD,OADwBA,Ec2JiCwhB,Qd1JpD,EAALxhB,EAAOE,mBAAW,IAAAD,EAAAA,EAAI,Ec2J3B,GAAoB,IAAhBC,EACF,OAAO,KAGT,IAAIsP,EAAwB,QAAZizE,EAAG/tD,KAAKvmB,YAAI,IAAAs0E,OAAA,EAATA,EAAWjzE,aAC1BqyE,EAA+B,QAAZa,EAAGhuD,KAAKvmB,YAAI,IAAAu0E,OAAA,EAATA,EAAWb,oBAC/BoB,EAA4B,CAChC3mF,MAAO,QACP6M,MAAO,QACPoB,KAAM,YAEHiF,IAAgB,CAAC,QAAS,WAAY,SAAU,kBAAmB,kBAAkBlQ,QAAO,SAAA7E,GAAC,OAAI6nF,EAAY5nF,SAASD,EAAE,IAAEc,SAC7HiU,EAAeoB,GAA0B9I,EAAQqB,EAAO8D,EAAUiD,GAC9D2yE,IAEFrzE,EAAe,CAAC,UAEbrG,IACHqG,EAAe9V,OAAOgG,KAAK6Q,IAE7BsxE,EAAsBryE,EAAa5M,KAAI,SAAAstE,GAAM,IAAArwE,EAAAqjF,EAAAC,EAAA,MAAI,CAACjT,EAAQ,CACxDzzD,MAA2E,QAAtE5c,EAAiC,QAAjCqjF,EAA0B,QAA1BC,EAAE5yE,EAAiB2/D,UAAO,IAAAiT,OAAA,EAAxBA,EAA0B1mE,aAAK,IAAAymE,EAAAA,EAAID,EAA0B/S,UAAO,IAAArwE,EAAAA,EAAIqwE,GAC/E,KAEJ,IAAMrjE,GAAWoC,EAAY,CAAC,GAAKm0E,KAAM,EAAGljF,IAAc0C,KAAI,SAAAga,GAAS,IAAAymE,EAAAC,EAAAC,EAAAC,EAC/DC,EAAyB,QAAZJ,EAAGvjB,EAAK3xD,YAAI,IAAAk1E,GAAS,QAATA,EAATA,EAAWx2E,eAAO,IAAAw2E,OAAA,EAAlBA,EAAqBzmE,GACrC1O,GAAqB,QAAVo1E,EAAAR,SAAU,IAAAQ,OAAA,EAAVA,EAAY53E,IAAIkR,KAAU,KACvCpP,EAASC,GAAoB3F,EAAQqB,EAAO8D,EAAUiB,GACtDqyE,EAAmBvyE,GAAqBlG,EAAQqB,EAAO8D,EAAUO,EAAQU,GACzE60E,IACFv1E,EAAS+yE,EAAiBxX,aAC1BwX,EAAmBvyE,GAAqBlG,EAAQqB,EAAO8D,EAAUO,EAAQU,KAEtEqyE,GAAoB3gC,IACvBpyC,EAAS,CAAC,OAAQ,SAAS9S,SAASwT,GAAYA,EAAWwzB,EAC3D6+C,EAAmBz4E,EAAO+E,QAAQW,IAEpC,IAAM4zE,EAA6B,QAAnBmC,EAAGhD,SAAgB,IAAAgD,OAAA,EAAhBA,EAAkBppF,KAC/B8iB,EAAaN,GAAc7U,EAAQqB,EAAO8D,EAAU2P,EAAO1O,EAAU80E,GACrExC,EAAmB7jE,GAAc7U,EAAQqB,EAAO8D,EAAU2P,EAAO,KAAMomE,GACvEd,EAAU1gE,SAAAA,EAAoBoO,eAAiBpO,aAAkB,EAAlBA,EAAoBoO,eAAehT,GAAS,KAE7FG,EAAc,KACd6S,EAAiB,KACjB/S,IAKFE,EAAc,CACZC,YAAa,EALfD,EAAc,CACZJ,GAAc7U,EAAQqB,EAAO8D,EAAU,GACvC0P,GAAc7U,EAAQqB,EAAO8D,EAAU,KAGZ,GAAG+P,YAAaD,EAAY,GAAGC,aAC1DP,MAAO,CAAEM,EAAY,GAAGN,MAAOM,EAAY,GAAGN,QAEhDmT,EAAiBpO,aAAkB,EAAlBA,EAAoBoO,gBAGvC,IAAMytD,EAAWX,GAAY,CAAEnqE,GAAAA,EAAIo+D,MAAAA,EAAO/zD,MAAOwjE,QAAAA,EAAexjE,EAAO8zD,YAAAA,IACjEgT,EAAOrG,QAET9L,EAAckS,aAAa,EAAbA,EAAelS,YAC5BA,IAAekS,aAAa,EAAbA,EAAepG,YAAaA,IAC9C9L,EAAczR,EAAKwhB,aAAa1sD,KAAKkrC,EAAMljD,EAAO8mE,IAEpD,IAAI5V,EAAW2V,aAAa,EAAbA,EAAe3V,SAS9B,OARKA,IACA2V,aAAa,EAAbA,EAAepG,YAAaA,IAC5BoG,aAAa,EAAbA,EAAerC,cAAeA,IACrB,QAAToC,EAAA1jB,EAAK3xD,YAAI,IAAAq1E,OAAA,EAATA,EAAW3mE,kBAAmBA,IAEjCixD,EAAWhO,EAAKqhB,UAAUvsD,KAAKkrC,EAAMjjD,EAAgBD,EAAOwkE,EAAY/D,IAGnE,CACLnvE,SAAAA,EACA+O,WAAAA,EACAzP,OAAAA,EACA00E,QAAAA,EACA3B,iBAAAA,EACAC,iBAAAA,EACAzjE,YAAAA,EACA6S,eAAAA,EACA2hD,YAAAA,EACAzD,SAAAA,EACAuP,SAAAA,EACA+D,WAAAA,EAEJ,IAEA,MAAO,CACL1/C,cAAAA,EACAxxB,gBAAAA,EACAsR,mBAAAA,EACA3E,eAAgBmmE,EAChB9iF,YAAAA,EACAsP,aAAAA,EACAqyE,oBAAAA,EACAh1E,QAAAA,EACA20E,QAAAA,EACAC,OAAQt4E,EACRo3B,gBAAAA,EAEJ,GAAC,CAAA/+B,IAAA,SAAAlF,MAoHD,WACE,IAAKo4B,KAAKvmB,KAAM,OAAO,KACvB,IAAAw1E,EAAuCjvD,KAAKvmB,KAApCuzB,EAAaiiD,EAAbjiD,cAAexhC,EAAWyjF,EAAXzjF,YACf+O,EAAcylB,KAAKvmB,KAAnBc,UACR,IAAKyyB,EAAe,OAAO,KAC3B,IAAMx+B,EAAOw+B,EAEb,OACEgyC,EAAAA,cAACwI,GAAG,CACF3C,UAAS,8BAAA99E,OAAgCyH,EAAKme,eAC9C7f,IAAK,cAAc0B,IAEjB+L,EAAY,CAAC,GAAKm0E,KAAM,EAAGljF,IAAc0C,IAAI8xB,KAAK0tD,mBAG1D,IAAC,CAnXwB,CAASxL,EAAAA,W,yQAAfsK,GACZrK,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzBz6E,MAAOw6E,IAAAA,IACP5oE,SAAU4oE,IAAAA,IACVjyB,WAAYiyB,IAAAA,IACZhyB,WAAYgyB,IAAAA,OACZ3tE,MAAO2tE,IAAAA,IACP73D,SAAU63D,IAAAA,OACV1mE,UAAW0mE,IAAAA,OACX8M,QAAS9M,IAAAA,OACT7pE,SAAU6pE,IAAAA,OACVgF,SAAUhF,IAAAA,KACVv2C,gBAAiBu2C,IAAAA,MACjBvkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OAEThJ,SAAUgJ,IAAAA,KACVvF,YAAauF,IAAAA,KACbzF,aAAcyF,IAAAA,KAEd7nE,UAAW6nE,IAAAA,KACX6L,UAAW7L,IAAAA,OACX8L,SAAU9L,IAAAA,OACVntB,UAAWmtB,IAAAA,IAEX+L,eAAgB/L,IAAAA,KAChB/sE,YAAa+sE,IAAAA,OAEbpG,YAAaoG,IAAAA,MACbnG,MAAOmG,IAAAA,KACPsJ,YAAatJ,IAAAA,OAEbz9C,YAAay9C,IAAAA,MC5CjB,IAAOjsE,GAAiB4nD,EAAAA,GAAM4kB,YAAvBxsE,cACAlK,GAAgB8xD,EAAAA,GAAM2mB,WAAtBz4E,aAGckjF,GAAU,SAAA9N,GAuB7B,SAAA8N,EAAY1gF,GAAO,IAAAkrB,EAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAA6N,IACjBx1D,EAAAy1D,GAAA,KAAAD,EAAA,CAAM1gF,KA2BRwqD,QAAU,SAAC5iD,GAAwB,IAAf+hE,EAAK5uE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3Bw4E,EAAgDroD,EAAKlrB,MAA7CwtE,EAAK+F,EAAL/F,MAAOyP,EAAW1J,EAAX0J,YAAa1P,EAAWgG,EAAXhG,YAAan+D,EAAEmkE,EAAFnkE,GACzC,IAAKu6D,EAAMuQ,SAAU,CACnB,IAAMA,EAAWX,GAAY,CAAEnqE,GAAAA,EAAIo+D,MAAAA,EAAO/zD,MAAOwjE,EAAa1P,YAAAA,IAC9D5D,EAAMuQ,SAAWA,CACnB,CAEAhvD,EAAKlrB,MAAMkuE,aACTV,GAAS,EAAKyP,GAAe,EAAI1P,EAAa,KAAM3lE,EAAS,aAASvO,EAAWswE,EAErF,EAACz+C,EAED7N,YAAc,SAACxV,EAAQyU,EAAQ2hE,EAAY7gD,EAAiBusC,GAC1D,IAAAiX,EAAkD11D,EAAKlrB,MAAxCi9E,GAAF2D,EAANj8E,OAAmBi8E,EAAX3D,aAAazP,EAAKoT,EAALpT,MAAOD,EAAWqT,EAAXrT,YAEnCriD,EAAKlrB,MAAMkuE,aACTV,GAAS,EAAKyP,GAAe,EAAI1P,EAAa1lE,EAAQyU,EAAQ2hE,EAAY7gD,EAAiBusC,EAE/F,EAACz+C,EAED8/B,eAAiB,SAACnjD,EAAQojD,EAAW0e,GACnC,IAAAkX,EAAkD31D,EAAKlrB,MAAxCi9E,GAAF4D,EAANl8E,OAAmBk8E,EAAX5D,aAAazP,EAAKqT,EAALrT,MAAOD,EAAWsT,EAAXtT,YAEnCriD,EAAKlrB,MAAMkuE,aACTV,GAAS,EAAKyP,GAAe,EAAI1P,EAAa1lE,EAAQojD,EAAW,iBAAa5xD,EAAWswE,EAE7F,EAACz+C,EAED41D,iBAAmB,WAAM,IAAA1kE,EAAA2kE,EACvBC,EAA+J91D,EAAKlrB,MAA7J2E,EAAMq8E,EAANr8E,OAAQqB,EAAKg7E,EAALh7E,MAAOiH,EAAS+zE,EAAT/zE,UAAW6O,EAAQklE,EAARllE,SAAU0xD,EAAKwT,EAALxT,MAAO1jE,EAAQk3E,EAARl3E,SAAUkf,EAAWg4D,EAAXh4D,YAAa7vB,EAAK6nF,EAAL7nF,MAAOw/E,EAAQqI,EAARrI,SAAUpL,EAAWyT,EAAXzT,YAAan+D,EAAE4xE,EAAF5xE,GAAIylC,EAAOmsC,EAAPnsC,QAAS/oC,EAASk1E,EAATl1E,UAAWiB,EAAei0E,EAAfj0E,gBAEzHk0E,GAFqJD,EAAX/D,YAE5H,CAClB9jF,MAFkC,QAAvBijB,EAAGjjB,SAAU,QAAL4nF,EAAL5nF,EAAOoP,WAAG,IAAAw4E,OAAA,EAAVA,EAAAtqF,KAAA0C,EAAa,eAAO,IAAAijB,EAAAA,EAAI,KAGtCuuD,SAAUz/C,EAAKs/B,QACf7lD,OAAAA,EAAQqB,MAAAA,EAAOiH,UAAAA,EAAW6O,SAAAA,EAAU0xD,MAAAA,EAAO1jE,SAAAA,EAAUkf,YAAAA,EAAa2vD,SAAAA,EAAUpL,YAAAA,EAC5EzhE,UAAAA,EAAWiB,gBAAAA,EACXqC,GAAAA,EAAIylC,QAAAA,IAENtvC,EAAgCZ,EAAOiB,SAAhCuwB,EAAU5wB,EAAV4wB,WAAY/V,EAAS7a,EAAT6a,UACbq+D,EAActoD,EAChBo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAeh2D,GAChC,KAEJ,OACEmwD,EAAAA,cAACwI,GAAG,CAAC16E,IAAI,OAAO+3E,UAAU,cACvBqI,EACDlO,EAAAA,cAAC+K,GAAe2F,GAGtB,EAAC/1D,EAEDg2D,eAAiB,SAACr5E,EAAQgmE,GACxB,IAAOxhE,EAAyCwhE,EAAzCxhE,aAAcrV,EAA2B62E,EAA3B72E,KAAMmqF,EAAqBtT,EAArBsT,WAAY7nE,EAASu0D,EAATv0D,MAChC3U,EAAUumB,EAAKlrB,MAAf2E,OACDo4E,EAAU1wE,GAAuC,GAAvBA,EAAajU,QAAkC,SAAnBiU,EAAa,GAEzE,OADmB1H,EAAOiB,SAASuwB,YAAuB,WAARn/B,IAAqB+lF,IAAYoE,EAC5D,KAErB5Q,EAAAA,cAACwI,GAAG,CAAC3C,UAAU,yBACZ98D,GAASzR,EAGhB,EAACqjB,EAEDk2D,kBAAoB,SAACv5E,EAAQgmE,GAC3B,IAAOxhE,EAAkCwhE,EAAlCxhE,aAAcrV,EAAoB62E,EAApB72E,KAAMmqF,EAActT,EAAdsT,WACpBx8E,EAAUumB,EAAKlrB,MAAf2E,OACDo4E,EAAU1wE,GAAuC,GAAvBA,EAAajU,QAAkC,SAAnBiU,EAAa,GAEzE,OADmB1H,EAAOiB,SAASuwB,YAAuB,WAARn/B,IAAqB+lF,IAAYoE,EAC5D,KAErB5Q,EAAAA,cAACwI,GAAG,CAAC3C,UAAU,6BACZ,IAGP,EAAClrD,EAEDm2D,aAAe,SAACz5E,EAASC,EAAQgmE,GAC/B,IAAAyT,EAGIp2D,EAAKlrB,MAFP2E,EAAM28E,EAAN38E,OAAQqB,EAAKs7E,EAALt7E,MAAOiH,EAASq0E,EAATr0E,UAAW6O,EAAQwlE,EAARxlE,SAAU0xD,EAAK8T,EAAL9T,MAAiBr0E,GAAFmoF,EAARx3E,SAAew3E,EAALnoF,OAAOw/E,EAAQ2I,EAAR3I,SAAUpL,EAAW+T,EAAX/T,YAAan+D,EAAEkyE,EAAFlyE,GAAIylC,EAAOysC,EAAPzsC,QACvF8M,EAAU2/B,EAAV3/B,WAAYD,EAAU4/B,EAAV5/B,WAAYwsB,EAAYoT,EAAZpT,aAAc+O,EAAWqE,EAAXrE,YAElCl0E,EAAM5P,EAAQA,EAAM+W,MAAM,CAAC,OAAQrI,IAAW,KAC9CyU,EAASvT,EAAMA,EAAIR,IAAI,cAAWlP,EAClCkoF,EAA0D,GAArC1T,EAAcxhE,aAAajU,OAAcy1E,EAAcxhE,aAAa,QAAKhT,EAI9F6R,EAAc,CAClBvG,OAAAA,EACA66E,UAAW53E,EACX63E,SAAU53E,EACV2+C,UAAWxgD,EACXiH,UAAAA,EACA6O,SAAAA,EACA6lC,WAAAA,EACAD,WAAAA,EACA8rB,MAAAA,EACA1jE,SAAU,KACV3Q,MAAOmjB,EACPvR,SAfgBhC,EAAOA,EAAIR,IAAI,aAAeg5E,GAAsB,QAAWA,EAgB/EnkD,gBAfsBr0B,aAAG,EAAHA,EAAKR,IAAI,mBAgB/BoiE,SAAUz/C,EAAK7N,YACf+wD,YAAaljD,EAAK8/B,eAClBkjB,aAAAA,EACAtmE,QAAAA,EACAC,OAAAA,EACAgmE,cAAAA,EACA8K,SAAAA,EACApL,YAAAA,EACAn+D,GAAAA,EACAylC,QAAAA,EACAooC,YAAAA,GAIF,OACE1M,EAAAA,cAACwI,GAAG,CAAC3C,UAAU,yBACb7F,EAAAA,cAACiR,GAAct2E,GAGrB,EAACggB,EAEDu2D,aAAe,SAAC55E,EAAQgmE,EAAe6T,EAAQ5mF,GAAmB,IAAhB0sB,EAAU1sB,EAAV0sB,WAChD,OAAKk6D,EAEHnR,EAAAA,cAACwI,GAAG,CAAC3C,UAAU,uBACZ5uD,EAAaA,EAAWk6D,EAAW,GAAK,MAHvB,IAMxB,EAACx2D,EAEDy2D,oBAAsB,SAAAjlF,GAAsB,IAApB6qB,EAAc7qB,EAAd6qB,eACtB,OACEgpD,EAAAA,cAACwI,GAAG,CAAC16E,IAAI,cAAc+3E,UAAU,8BAC9B7uD,EAAiBA,EAAe,GAAK,IAG5C,EAAC2D,EAED02D,mBAAqB,SAAAp6E,GAAsB,IAApB+f,EAAc/f,EAAd+f,eACrB,OACEgpD,EAAAA,cAACwI,GAAG,CAAC16E,IAAI,aAAa+3E,UAAU,6BAC7B7uD,EAAiBA,EAAe,GAAK,IAG5C,EAAC2D,EAED22D,eAAiB,WACf,IAAAvC,EAAkCp0D,EAAKlgB,KAAhC82E,EAAcxC,EAAdwC,eAAgBl6E,EAAO03E,EAAP13E,QACvB,IAAKA,EAAS,OAAO,KACrB,IAAOL,GAAQu6E,GAAkB,CAAC,GAA3Bv6E,KACP,OAAKA,EAGHgpE,EAAAA,cAAAA,EAAAA,SAAA,KACGrlD,EAAKy2D,oBAAoBG,GAC1BvR,EAAAA,cAACwI,GAAG,CAAC16E,IAAG,QAAA/F,OAAUsP,GAAWwuE,UAAS,gCAAA99E,OAAkCsP,EAAO,WAC5ErR,OAAOgG,KAAKgL,GAAM9H,KAAI,SAACoI,EAAQ65E,GAAQ,OACtCnR,EAAAA,cAACwI,GAAG,CAAC16E,IAAG,OAAA/F,OAASuP,EAAM,KAAAvP,OAAIopF,GAAYtL,UAAS,+BAAA99E,OAAiCsP,EAAO,WAAAtP,OAAUuP,IAC/FqjB,EAAKu2D,aAAa55E,EAAQN,EAAKM,GAAS65E,EAAUI,GAClD52D,EAAKg2D,eAAer5E,EAAQN,EAAKM,IACjCqjB,EAAKk2D,kBAAkBv5E,EAAQN,EAAKM,IACpCqjB,EAAKm2D,aAAaz5E,EAASC,EAAQN,EAAKM,IACrC,KAGTqjB,EAAK02D,mBAAmBE,IAfX,IAkBpB,EApME5P,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAAuN,EAAA9N,IAAAQ,EAAAA,EAAAA,GAAAsN,EAAA,EAAAriF,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,QAECuxB,KAAKvmB,MADT,CAAC,SAAU,QAAS,WAAY,QAAS,WAAY,YAAa,SACrCvL,KAAI,SAAAnI,GAAC,MAC7C,gBAANA,GAAuBkG,GAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IAAI,GAAQo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IACtG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAG1Bm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,GAE7B,GAAC,CAAArzE,IAAA,UAAAlF,MAED,SAAO6H,GAAmC,IAAA+gF,EAAAC,EAAjCr9E,EAAM3D,EAAN2D,OAAyBxL,GAAZ6H,EAALgF,MAAehF,EAAR8I,SAAe9I,EAAL7H,OAC1ByO,EAA8B,QAAvBm6E,EAAG5oF,SAAU,QAAL6oF,EAAL7oF,EAAOoP,WAAG,IAAAy5E,OAAA,EAAVA,EAAAvrF,KAAA0C,EAAa,eAAO,IAAA4oF,EAAAA,EAAI,KAGxC,MAAO,CACLD,eAHqBl6E,EAAUF,GAAc/C,EAAQiD,GAAW,KAGhDA,QAAAA,EAEpB,GAAC,CAAAvJ,IAAA,SAAAlF,MA8KD,WACE,IAAQo0E,EAAgBh8C,KAAKvxB,MAArButE,YACFz9B,EAAWy9B,EAAcA,EAAY9tE,KAAI,SAAA8B,GAAA,IAAAC,GAAA7E,EAAAA,GAAAA,GAAA4E,EAAA,GAAE7H,EAAC8H,EAAA,GAAE/D,EAAC+D,EAAA,YAAAlJ,OAASoB,EAAC,KAAApB,OAAImF,EAAC,IAAInE,KAAK,KAAO,OAC9E2oF,GAAY1U,aAAW,EAAXA,EAAan1E,SAAU,EACzC,OACEm4E,EAAAA,cAACwI,GAAG,CAAC3C,UAAS,kDAAA99E,OAAoDw3C,EAAQ,8BAAAx3C,OAA6B2pF,IACpG1wD,KAAKuvD,mBACLvvD,KAAKswD,iBAGZ,IAAC,CAzO4B,CAASpO,EAAAA,WAAnBiN,GACZhN,UAAY,CACjBtkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OACThvE,OAAQgvE,IAAAA,OAAiBC,WACzB5tE,MAAO2tE,IAAAA,IACP73D,SAAU63D,IAAAA,OACV1mE,UAAW0mE,IAAAA,OACXhyB,WAAYgyB,IAAAA,OACZ7pE,SAAU6pE,IAAAA,OACV3qD,YAAa2qD,IAAAA,OACbx6E,MAAOw6E,IAAAA,OACPhJ,SAAUgJ,IAAAA,KAAeC,WACzB1F,aAAcyF,IAAAA,KACdgF,SAAUhF,IAAAA,KACVpG,YAAaoG,IAAAA,MACbsJ,YAAatJ,IAAAA,OACb5mE,gBAAiB4mE,IAAAA,OACjB7nE,UAAW6nE,IAAAA,KACXnG,MAAOmG,IAAAA,KACPjyB,WAAYiyB,IAAAA,QApBe,IA6OzB6N,GAAS,SAAAU,GAab,SAAAV,EAAYxhF,GAAO,IAAA28D,EAIU,OAJVkW,EAAAA,EAAAA,GAAA,KAAA2O,IACjB7kB,EAAAgkB,GAAA,KAAAa,EAAA,CAAMxhF,KA0BR2qE,SAAW,SAACwX,EAAQhpF,EAAO8kF,EAAY7gD,EAAiBusC,GACtD,IAAAyY,EAA2BzlB,EAAK38D,OAChC2qE,EADeyX,EAARzX,UAAgByX,EAANv6E,OACA1O,EAAO8kF,EAAY7gD,EAAiBusC,EACvD,EAAChN,EAEDyR,YAAc,SAAC+T,EAAQp3E,EAAU4+D,GAC/B,IAAA0Y,EAA8B1lB,EAAK38D,OACnCouE,EADkBiU,EAAXjU,aAAmBiU,EAANx6E,OACAkD,EAAU4+D,EAChC,EAjCEuI,EAAiBvV,GAEjBA,EAAK0V,eAAeryE,GAAO28D,CAC7B,CAAC,OAAAwW,EAAAA,EAAAA,GAAAqO,EAAAU,IAAA9O,EAAAA,EAAAA,GAAAoO,EAAA,EAAAnjF,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,QAECuxB,KAAKvmB,MADT,CAAC,cAAe,UAAW,UACEvL,KAAI,SAAAnI,GAAC,MAC7C,gBAANA,GAAuBkG,GAAak0E,EAAUp6E,GAAIs6E,EAAUt6E,IAAI,GAAQo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IACtG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAG1Bm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,GAE7B,GAAC,CAAArzE,IAAA,UAAAlF,MAED,SAAOwI,GAAiC,IAA/B4rE,EAAW5rE,EAAX4rE,YAAa3lE,EAAOjG,EAAPiG,QAASC,EAAMlG,EAANkG,OAG7B,MAAO,CACL0lE,YAHqB,GAAHj1E,QAAAnB,EAAAA,GAAAA,GAAQo2E,GAAe,IAAK,EAAC3lE,EAASC,KAK5D,GAAC,CAAAxJ,IAAA,SAAAlF,MAYD,WACE,IAAOo0E,EAAeh8C,KAAKvmB,KAApBuiE,YACP,OACEgD,EAAAA,cAACwN,IAAMxG,EAAAA,GAAAA,GAAA,GACDhmD,KAAKvxB,MAAK,CACdi9E,YAAa1rD,KAAKvxB,MAAMi9E,YACxBtS,SAAUp5C,KAAKo5C,SACfyD,YAAa78C,KAAK68C,YAClBtiE,WAAW,EACXyhE,YAAaA,IAGnB,IAAC,CA9DY,CAASkG,EAAAA,W,mJAAlB+N,GACG9N,UAAY,CACjB9rE,QAAS+rE,IAAAA,OAAiBC,WAC1B/rE,OAAQ8rE,IAAAA,OAAiBC,WACzBjJ,SAAUgJ,IAAAA,KAAeC,WACzBxF,YAAauF,IAAAA,KAAeC,WAC5B+E,SAAUhF,IAAAA,KACVnG,MAAOmG,IAAAA,KACPpG,YAAaoG,IAAAA,MACbvkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,QC9P4C,IAGpC2O,GAAY,SAAA1P,GAC/B,SAAA0P,EAAYtiF,GAAO,IAAAkrB,E,MAGU,OAHV2nD,EAAAA,EAAAA,GAAA,KAAAyP,G,EACjB,K,EAAAA,E,EAAA,CAAMtiF,G,cAANkrB,G,+EAyDFuC,YAAc,WACZ,IAAA8lD,EAIIroD,EAAKlrB,MAHP2E,EAAM4uE,EAAN5uE,OAAQ49E,EAAShP,EAATgP,UAAW7K,EAAanE,EAAbmE,cAAeoB,EAAgBvF,EAAhBuF,iBAAkBjB,EAAiBtE,EAAjBsE,kBACpDpO,EAAQ8J,EAAR9J,SAAUyE,EAAYqF,EAAZrF,aAActnE,EAAW2sE,EAAX3sE,YAAa+xE,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QACnD8M,EAAU4xB,EAAV5xB,WAAYD,EAAU6xB,EAAV7xB,WAGd,IAD2B,CAAC,OAAQ,SACZnqD,SAASuhF,GAC/B,MAAO,IAET,IAAM9yE,EAA6B,SAArB8yE,EACZvI,EAAAA,cAACmQ,GAAU,CACTlT,OAAO,EACP7oE,OAAQA,EACRxL,MAAOu+E,EACP57D,SAAUg9D,EACV7rE,UAAW4qE,EACXl2B,WAAYA,EACZD,WAAYA,EACZ96C,YAAaA,EACb+jE,SAAUlB,EACVyE,aAAcA,EACdyK,SAAUA,EACVvpE,GAAIA,EACJylC,QAASA,EACTx2C,IAAK,cAAgB+Q,IAGvBmhE,EAAAA,cAAC0J,GAAK,CACJt1E,OAAQA,EACR+yE,cAAeA,EACfoB,iBAAkBA,EAClBjB,kBAAmBA,EACnBjxE,YAAaA,EACb6iE,SAAUA,EACVzgD,YAAarkB,EAAOiB,SAAS48E,uBAC7B7J,SAAUA,EACVvpE,GAAIA,EACJylC,QAASA,EACTx2C,IAAK,SAAW+Q,IAGd8Q,EAAkC,SAArB44D,EAA8Bn0E,EAAOiB,SAASwa,UAAYzb,EAAOiB,SAASsa,WACvF5G,EAAQ3U,EAAOiB,SAASuwB,YAAmC,SAArB2iD,GAA+BvI,EAAAA,cAAA,SAAO6F,UAAU,eAAel2D,GAC3G,OACEqwD,EAAAA,cAAA,OAAKlyE,IAAKy6E,EAAkB1C,UAAWmM,GACpCjpE,EACAtT,EAGP,EAACklB,EAED+C,mBAAqB,WACnB,IAAK/C,EAAKlgB,KAAM,OAAO,KACvB,IAAA41E,EAAgE11D,EAAKlrB,MAA7D2E,EAAMi8E,EAANj8E,OAAQg0E,EAAQiI,EAARjI,SAAUG,EAAgB8H,EAAhB9H,iBAAkB7L,EAAW2T,EAAX3T,YAAa79D,EAAEwxE,EAAFxxE,GACjDqzE,EAAwBv3D,EAAKlgB,KAA7By3E,oBACA78E,EAAajB,EAAbiB,SACFg5E,EAAe1zD,EAAK0zD,aAEpBC,EAAcj5E,EAASuwB,WAC3Bo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAc,KAC7B,KAEJ,OACEqM,EAAoBrqF,OAAS,IAAMugF,GACjCpI,EAAAA,cAAA,OAAKlyE,IAAK,WAAY+3E,UAAW,kBAC9ByI,EACDtO,EAAAA,cAACqO,EAAY,CACXvgF,IAAK,YAAc+Q,EACnB/C,aAAco2E,EACd13E,SAAU+tE,EACVn0E,OAAQA,EACRypE,YAAanB,EACb0L,SAAUA,EACVr4B,MAAO16C,EAASwb,yBAK1B,EAvIE8wD,EAAiBhnD,GACjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAAmP,EAAA1P,IAAAQ,EAAAA,EAAAA,GAAAkP,EAAA,EAAAjkF,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,MACjBk/E,GAAiB3tD,KAAKqtD,eAAgBhN,aAAS,EAATA,EAAWjtE,WAAW+sE,aAAS,EAATA,EAAW/sE,QAO7E,KALwB4sB,KAAKvmB,MADT,CAAC,UAC4BvL,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAGnHm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,IAEvBwN,EAAe,CACjB,IAAQv6E,EAAW+sE,EAAX/sE,OACAqpB,EAAuBrpB,EAAOiB,SAA9BooB,mBACRuD,KAAKqtD,aAAe,SAACtJ,GAAE,OAAKtnD,EAAmBsnD,EAAI3wE,EAAO0d,IAAI,CAChE,CACF,GAAC,CAAAhkB,IAAA,UAAAlF,MAED,SAAO2B,GAEJ,IADD6J,EAAM7J,EAAN6J,OAEMm7E,EAA4B,CAChC3mF,MAAO,QACP6M,MAAO,QACPoB,KAAM,YAER7B,EAAyCZ,EAAOiB,SAAzCwH,EAAgB7H,EAAhB6H,iBAOP,MAAO,CACLq1E,oBARmCl9E,EAAZ+S,aACgB7Y,KAAI,SAACstE,GAAM,IAAArwE,EAAAqjF,EAAAC,EAAA,MAAK,CACvDjT,EACA,CACEzzD,MAA2E,QAAtE5c,EAAiC,QAAjCqjF,EAA0B,QAA1BC,EAAE5yE,EAAiB2/D,UAAO,IAAAiT,OAAA,EAAxBA,EAA0B1mE,aAAK,IAAAymE,EAAAA,EAAID,EAA0B/S,UAAO,IAAArwE,EAAAA,EAAIqwE,GAElF,IAIH,GAAC,CAAA1uE,IAAA,SAAAlF,MAED,WACE,IAAA0nF,EAA0CtvD,KAAKvxB,MAA7B0iF,GAAF7B,EAAT0B,UAA+B1B,EAApB6B,sBACZpqE,EAAeoqE,GAAwBnxD,KAAKtD,qBAC5CjoB,EAAQurB,KAAK9D,cACnB,OAAKi1D,EAIDnS,EAAAA,cAACwI,GAAG,CAAC3C,UAAW,uBACb99D,EACAtS,GALEA,CASX,IAAC,CAzD8B,CAASytE,EAAAA,W,kKCJ1C,IAAO5pE,GAAqBylD,EAAAA,GAAM4kB,YAA3BrqE,kBAEc84E,GAAe,SAAApM,GAAA,SAAAoM,IAAA,OAAA9P,EAAAA,EAAAA,GAAA,KAAA8P,G,EAAA,K,EAAAA,E,EAAA5nF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAAwP,EAAApM,IAAAnD,EAAAA,EAAAA,GAAAuP,EAAA,EAAAtkF,IAAA,SAAAlF,MAYlC,WACE,IAAKo4B,KAAKvxB,MAAM83E,iBACd,OAAO,KACT,IAAM8K,EAAsB/4E,GAAkB0nB,KAAKvxB,MAAM2E,OAAQ4sB,KAAKvxB,MAAM83E,iBAAkBvmD,KAAKvxB,MAAM03E,eACzG,QAA2C,IAAhCkL,EAAoBvrE,QAC7B,OAAO,KAGT,IAAAwrE,EAA0DD,EAAoBvrE,QAA7DyrE,EAAcD,EAAvBl3D,QAA4Bo3D,GAAiBp0B,EAAAA,GAAAA,GAAAk0B,EAAAj0B,IAU/Co0B,EAAaF,EATEvsF,OAAO6e,OAAO,CAAC,EAAG2tE,EAAmB,CACxDp+E,OAAQ4sB,KAAKvxB,MAAM2E,OACnBqB,MAAOurB,KAAKvxB,MAAM03E,cAClB57D,SAAUyV,KAAKvxB,MAAM84E,iBACrBhvE,SAAUynB,KAAKvxB,MAAM83E,iBACrBzgE,QAASka,KAAKvxB,MAAM+V,gBACpBktE,UAAW1xD,KAAKvxB,MAAMquE,kBACtBsK,SAAUpnD,KAAKvxB,MAAM24E,WAEyBpnD,KAAKvxB,MAAM2E,OAAO0d,KAC5DtiB,EAAOwxB,KAAKvxB,MAAM83E,iBAExB,OACEvH,EAAAA,cAAA,OAAK6F,UAAS,kCAAA99E,OAAoCyH,EAAKme,gBACpD8kE,EAGP,IAAC,CAtCiC,CAASxL,EAAAA,e,4tBAAxBmL,GACZjP,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzB79D,gBAAiB49D,IAAAA,IAAcC,WAC/B8D,cAAe/D,IAAAA,IACfmF,iBAAkBnF,IAAAA,OAClBmE,iBAAkBnE,IAAAA,OAAiBC,WACnC+E,SAAUhF,IAAAA,KAEVtF,kBAAmBsF,IAAAA,KAAeC,YCFtC,IAAAK,GAA8E3kB,EAAAA,GAAM4kB,YAA7E1qE,GAAcyqE,GAAdzqE,eAAgBK,GAAiBoqE,GAAjBpqE,kBAAmBgB,GAAoBopE,GAApBppE,qBAAsBlC,GAAUsrE,GAAVtrE,WACzDyS,GAAyBk0C,EAAAA,GAAM0qB,UAA/B5+D,sBAGD8nE,GAAI,SAAAtQ,GAuCR,SAAAsQ,EAAYljF,GAAO,IAAAkrB,E,MAOU,OAPV2nD,EAAAA,EAAAA,GAAA,KAAAqQ,G,EACjB,K,EAAAA,E,EAAA,CAAMljF,G,aAANkrB,G,8EACAgnD,EAAiBhnD,GAEjBA,EAAKi4D,WAAaj4D,EAAKi4D,WAAW1xD,KAAIvG,GACtCA,EAAKiiD,QAAUjiD,EAAKiiD,QAAQ17C,KAAIvG,GAEhCA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA+P,EAAAtQ,IAAAQ,EAAAA,EAAAA,GAAA8P,EAAA,EAAA7kF,IAAA,iBAAAlF,MAED,SAAeu4E,GAAW,IAAA/U,EAAA,KAClBiV,EAAYrgD,KAAKvxB,MACjBk/E,GAAiB3tD,KAAK6xD,OAAQxR,aAAS,EAATA,EAAWjtE,WAAW+sE,aAAS,EAATA,EAAW/sE,QAOrE,KALwB4sB,KAAKvmB,MADT,CAAC,gBAAiB,mBAAoB,oBAAqB,mBAAoB,SAAU,oBAAqB,WAAY,cAAe,yBAC5GvL,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,KAGnHm5B,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,IAEvBwN,EAAe,CACjB,IAAQv6E,EAAW+sE,EAAX/sE,OACRY,EAEIZ,EAAOiB,SADTkoB,EAAUvoB,EAAVuoB,WAAYD,EAAYtoB,EAAZsoB,aAAcE,EAAiBxoB,EAAjBwoB,kBAAmBI,EAAY5oB,EAAZ4oB,aAAcG,EAAkB/oB,EAAlB+oB,mBAAoBC,EAAiBhpB,EAAjBgpB,kBAAmBK,EAAerpB,EAAfqpB,gBAEpG2C,KAAK6xD,KAAO5J,GAAoB70E,EAAQmpB,GACxCyD,KAAK8xD,IAAM7J,GAAoB70E,EAAQkpB,GACvC0D,KAAK+xD,OAAS9J,GAAoB70E,EAAQopB,GAC1CwD,KAAKgyD,OAAS/J,GAAoB70E,EAAQwpB,GAC1CoD,KAAKiyD,aAAehK,GAAoB70E,EAAQ2pB,GAChDiD,KAAKkyD,YAAcjK,GAAoB70E,EAAQ4pB,GAC/CgD,KAAKmyD,UAAYlK,GAAoB70E,EAAQiqB,EAC/C,CACA2C,KAAKoyD,SAAW,WACdhnB,EAAK38D,MAAMmjF,YACb,CACF,GAAC,CAAA9kF,IAAA,UAAAlF,MAED,SAAO2B,GAAgI,IAA9H48E,EAAa58E,EAAb48E,cAAeG,EAAiB/8E,EAAjB+8E,kBAAmBC,EAAgBh9E,EAAhBg9E,iBAAkBnzE,EAAM7J,EAAN6J,OAAQi/E,EAAiB9oF,EAAjB8oF,kBAAmB3zE,EAAQnV,EAARmV,SAAUrJ,EAAW9L,EAAX8L,YAAai9E,EAAqB/oF,EAArB+oF,sBACtG7kE,EAA6Bra,EAAOiB,SAApCoZ,0BACD65D,EAAkBlwE,GAAW+uE,EAAe/yE,GAC5Cm/E,EAAsBt6E,GAAe7E,EAAQ+yE,GAC7CqM,EAAkBD,GAAoD,YAA7BA,EAAoB9sF,KAE7DojF,IAAoB1C,GADD14D,GAA6B64D,EAEhDmM,EAAuB5J,GAAmBtC,EAC1CmM,EAAyBp6E,GAAkBlF,EAAQmzE,EAAkBJ,GACrEwM,EAA6BD,GAA4D,MAAlCA,EAAuB5sE,QAC9EwiE,EAA4BhvE,GAAqBlG,EAAQ+yE,EAAeI,EAAkB,KAAM,OAAS,CAAC,EAC1GqM,EAAetK,EAA0BsK,aAE3CC,EAAez/E,EAAOiB,SAASwZ,YAAcwkE,EAAoB,IAAM3zE,EAS3E,OARIrJ,IACFw9E,EAAeA,GAAgBP,GAO1B,CACLhL,gBAAAA,EAAiBgB,0BAAAA,EACjBuK,aAAAA,EAAczK,aAPKS,IAAoB+J,EAOXvK,kBANJQ,GAAmB+J,GAAgBtK,EAA0BE,oBAMtCsK,WAL9BL,IAAyBD,EAKiBO,oBAJjCN,GAAwBE,EAMtD,GAAC,CAAA7lF,IAAA,UAAAlF,MAED,SAAQ+zE,GACN37C,KAAKvxB,MAAMmtE,QAAQD,EACrB,GAAC,CAAA7uE,IAAA,aAAAlF,MAED,WACE,IAAAo6E,EAA4BhiD,KAAKvxB,MAA1Bs5E,EAAS/F,EAAT+F,UAAW30E,EAAM4uE,EAAN5uE,OAClBuB,EAAkEvB,EAAOiB,SAAlE2nB,EAAarnB,EAAbqnB,cAAyCg3D,EAAcr+E,EAAxCob,yBAClBijE,IAAmBhzD,KAAKizD,qBAC1Bj3D,EAAc92B,KAAKkO,EAAO0d,IAAGjrB,GAAAA,GAAA,GAAMmtF,GAAc,IAC/CE,KAAMlzD,KAAKoyD,SACXe,SAAU,KACVpL,UAAWA,IACV30E,EAAO0d,KAEVkP,KAAKoyD,UAET,GAAC,CAAAtlF,IAAA,oBAAAlF,MAED,SAAiBuD,EAAA8K,GAOd,IANDkwE,EAAah7E,EAAbg7E,cAAeoB,EAAgBp8E,EAAhBo8E,iBAAkBjB,EAAiBn7E,EAAjBm7E,kBACjCC,EAAgBp7E,EAAhBo7E,iBAAkB/hE,EAAerZ,EAAfqZ,gBAClB5c,EAAKuD,EAALvD,MAAO6iB,EAAStf,EAATsf,UAAWjR,EAAQrO,EAARqO,SAAUqyB,EAAe1gC,EAAf0gC,gBAAiBskB,EAAUhlD,EAAVglD,WAAYC,EAAUjlD,EAAVilD,WACzD/6C,EAAWlK,EAAXkK,YAIA,MAAO,CACLZ,MAAO0xE,EACP57D,SAAUg9D,EACV7rE,UAAW4qE,EACX4I,QANaj5E,EAAfqxE,gBAOE/uE,SAAUguE,EACV/hE,gBAAAA,EACA5c,MAAAA,EACA6iB,UAAAA,EACAjR,SAAAA,EACAqyB,gBAAAA,EACAskB,WAAAA,EACAC,WAAAA,EACA/6C,YAAAA,EAEJ,GAAC,CAAAvI,IAAA,qBAAAlF,MAED,WACE,IAAOwL,EAAU4sB,KAAKvxB,MAAf2E,OACDggF,EAAWpzD,KAAKqzD,kBAAkBrzD,KAAKvxB,MAAOuxB,KAAKvmB,MACzD,OAAOoQ,GAAsBupE,EAAUhgF,EACzC,GAAC,CAAAtG,IAAA,cAAAlF,MAED,WACE,IAAAynF,EAGIrvD,KAAKvxB,MAFP2E,EAAMi8E,EAANj8E,OAAQsL,EAAQ2wE,EAAR3wE,SAAUrJ,EAAWg6E,EAAXh6E,YAAaiuC,EAAO+rC,EAAP/rC,QAASzlC,EAAEwxE,EAAFxxE,GACxC0pE,EAAgB8H,EAAhB9H,iBAAkBpB,EAAakJ,EAAblJ,cAAeG,EAAiB+I,EAAjB/I,kBAAmBpO,EAAQmX,EAARnX,SAAUyE,EAAY0S,EAAZ1S,aAAcjB,EAAW2T,EAAX3T,YAAatrB,EAAUi/B,EAAVj/B,WAEnFkjC,EAAwBlgF,EAAOiB,SAA/Bi/E,oBACAhM,EAAoBtnD,KAAKvmB,KAAzB6tE,gBAGR,OAAOtI,EAAAA,cAAC+R,GAAY,CAClBjkF,IAAI,QACJkkF,UAAWnL,KACW,QAApB0B,EAA6B,oBAAsB,eAErDn0E,OAAQA,EACR+9E,sBAAuB97E,EACvB8wE,cAAeA,EACfoB,iBAAkBA,EAClBjB,kBAAmBA,EACnBgB,gBAAiBA,EACjBl3B,WAAYA,EACZ8nB,SAAWob,EAAiC7L,GAAXvP,EACjCyE,aAAe2W,EAAqC7L,GAAf9K,EACrCjB,YAAc4X,EAAoC7L,GAAd/L,EACpCrmE,YAAaA,EACb+xE,SAAUkM,GAAuB50E,EACjCb,GAAIA,EACJylC,QAASA,GAEb,GAAC,CAAAx2C,IAAA,iBAAAlF,MAED,WACE,IAAA0nF,EAA2BtvD,KAAKvxB,MAAzB2E,EAAMk8E,EAANl8E,OAAQsL,EAAQ4wE,EAAR5wE,SACfqvE,EAEI/tD,KAAKvmB,KADP6tE,EAAeyG,EAAfzG,gBAAiBgB,EAAyByF,EAAzBzF,0BAA2BF,EAAY2F,EAAZ3F,aAAcC,EAAiB0F,EAAjB1F,kBAEpDkL,EAAqBngF,EAAOiB,SAA5Bk/E,iBAER,OAAOvU,EAAAA,cAACmJ,GAAe,CACrBr7E,IAAI,WACJsG,OAAQA,EACR+yE,cAAenmD,KAAKvxB,MAAM03E,cAC1BoB,iBAAkBvnD,KAAKvxB,MAAM84E,iBAC7BjB,kBAAmBtmD,KAAKvxB,MAAM63E,kBAC9BgB,gBAAiBA,EACjBf,iBAAkBvmD,KAAKvxB,MAAM83E,iBAC7BzK,YAAcyX,EAA4C9L,GAAzBznD,KAAKvxB,MAAMqtE,YAC5CsM,aAAcA,EACdC,kBAAmBA,EACnBC,0BAA2BA,EAC3BlB,SAAUmM,GAAoB70E,EAC9Bb,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,SAExB,GAAC,CAAAx2C,IAAA,eAAAlF,MAED,WACE,IAAA6nF,EAA2BzvD,KAAKvxB,MAAzB2E,EAAMq8E,EAANr8E,OAAQsL,EAAQ+wE,EAAR/wE,SACPo0E,EAAe9yD,KAAKvmB,KAApBq5E,WACAU,EAAwBpgF,EAAOiB,SAA/Bm/E,oBACR,IAAKV,EAAY,OAAO,KAExB,IAAMh6E,EAASkmE,EAAAA,cAACwN,IAAMxG,EAAAA,GAAAA,GAAA,CACpBl5E,IAAI,UACAkzB,KAAKqzD,kBAAkBrzD,KAAKvxB,MAAOuxB,KAAKvmB,MAAK,CACjDrG,OAAQA,EACRgmE,SAAWoa,EAA4C/L,GAAtBznD,KAAKvxB,MAAM2qE,SAC5CyD,YAAc2W,EAA+C/L,GAAzBznD,KAAKvxB,MAAMouE,YAC/CF,aAAe6W,EAAgD/L,GAA1BznD,KAAKvxB,MAAMkuE,aAChDyK,SAAUoM,GAAuB90E,EACjCb,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,WAGtB,OACE07B,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,cAAckzB,KAAKvxB,MAAM83E,iBAAkB1B,UAAU,eAC5D/rE,EAGP,GAAC,CAAAhM,IAAA,wBAAAlF,MAED,WACE,IAAOwL,EAAU4sB,KAAKvxB,MAAf2E,OACC2/E,EAAwB/yD,KAAKvmB,KAA7Bs5E,oBACRr+E,EAAkDtB,EAAOiB,SAAjDk/E,EAAgB7+E,EAAhB6+E,iBAAkBC,EAAmB9+E,EAAnB8+E,oBAC1B,IAAKT,EAAqB,OAAO,KAEjC,IAAM/kD,EAASgxC,EAAAA,cAACoS,GAAe,CAC7BtkF,IAAI,kBACJq5E,cAAenmD,KAAKvxB,MAAM03E,cAC1BI,iBAAkBvmD,KAAKvxB,MAAM83E,iBAC7B/hE,gBAAiBwb,KAAKvxB,MAAM+V,gBAC5Bs4D,kBAAoByW,EAAkD9L,GAA/BznD,KAAKvxB,MAAMquE,kBAClD1pE,OAAQA,EACRg0E,SAAUoM,IAGZ,OACExU,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,kBAAkBkzB,KAAKvxB,MAAM83E,iBAAkB1B,UAAU,0BAChE72C,EAGP,GAAC,CAAAlhC,IAAA,qBAAAlF,MAED,WACE,IAAMqqF,EAAejyD,KAAKiyD,aAC1B,OAAKA,EAEEjT,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,qBAAsBkzB,KAAKvxB,MAAM83E,iBAAkB1B,UAAU,uBAC5E7F,EAAAA,cAACiT,EAAiBjyD,KAAKvxB,QAFhB,IAIX,GAAC,CAAA3B,IAAA,oBAAAlF,MAED,WACE,IAAMsqF,EAAclyD,KAAKkyD,YACzB,OAAKA,EAEElT,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,oBAAqBkzB,KAAKvxB,MAAM83E,iBAAkB1B,UAAU,sBAC3E7F,EAAAA,cAACkT,EAAgBlyD,KAAKvxB,QAFf,IAIX,GAAC,CAAA3B,IAAA,cAAAlF,MAED,WACE,IAAAmoF,EAAyC/vD,KAAKvxB,MAAvC2E,EAAM28E,EAAN38E,OAAQ+8C,EAAU4/B,EAAV5/B,WAAYC,EAAU2/B,EAAV3/B,WACnB9hC,EAAqBlb,EAAOiB,SAA5Bia,iBACF6jE,EAAYnyD,KAAKmyD,UACjBsB,EAAW,CAACrjC,GAAUrpD,QAAAnB,EAAAA,GAAAA,IAAMuqD,aAAU,EAAVA,EAAYhvC,YAAa,KAAKvW,QAAO,SAAA1C,GAAC,QAAMA,CAAC,IAAE2nD,SAAW,KAC5F,OAAOvhC,GAAoBmlE,GACtBzU,EAAAA,cAAA,OAAK6F,UAAU,eACfsN,EAAYnT,EAAAA,cAACmT,EAAS,CAAC5/E,MAAOkhF,IAAeA,EAEpD,GAAC,CAAA3mF,IAAA,aAAAlF,MAED,WACE,IAAQs9E,EAA2BllD,KAAKvxB,MAAhCy2E,uBACA2N,EAAiB7yD,KAAKvmB,KAAtBo5E,aACFhB,EAAO7xD,KAAK6xD,KACZ6B,EAAO1U,EAAAA,cAAC6S,EAAI,CAChBpsF,KAAK,SAEP,OAAOotF,GAAiB7T,EAAAA,cAAA,OACtBlyE,IAAI,iBACJ6mF,YAAazO,EACbL,UAAW,sCACX6O,EACJ,GAAC,CAAA5mF,IAAA,YAAAlF,MAED,WACE,IAAAgsF,EAA2B5zD,KAAKvxB,MAAzB2E,EAAMwgF,EAANxgF,OAAQsL,EAAQk1E,EAARl1E,SACflI,EAIIpD,EAAOiB,SAHT8a,EAAW3Y,EAAX2Y,YACA0kE,EAAmBr9E,EAAnBq9E,oBACA/lE,EAAetX,EAAfsX,gBAEI+jE,EAAO7xD,KAAK6xD,KACZC,EAAM9xD,KAAK8xD,IAEjB,OAAQ+B,KAAyBn1E,GAAYA,GAAYoP,IACvDkxD,EAAAA,cAAC8S,EAAG,CACFhlF,IAAI,WACJrH,KAAK,UACLquF,QAAS9zD,KAAK4xD,WACd7pE,MAAOoH,EACP/b,OAAQA,EACRmpB,WAAYs1D,GAGlB,GAAC,CAAA/kF,IAAA,aAAAlF,MAED,WACE,IAAAmsF,EAA6C/zD,KAAKvxB,MAA3C2E,EAAM2gF,EAAN3gF,OAAQsL,EAAQq1E,EAARr1E,SAAU+mE,EAAYsO,EAAZtO,aAAc5nE,EAAEk2E,EAAFl2E,GACvClH,EAEIvD,EAAOiB,SADT4a,EAAStY,EAATsY,UAAWC,EAAWvY,EAAXuY,YAAa8kE,EAAQr9E,EAARq9E,SAEpBhC,EAAShyD,KAAKgyD,OAEpB,OAAOgC,KAAct1E,IAAa+mE,IAChCzG,EAAAA,cAACgT,EAAM,CACLllF,IAAI,YACJrH,KAAK,OACLoY,GAAIA,EACJjW,MAAO8W,EACP06D,SAAUp5C,KAAK47C,QACf7zD,MAAOkH,EACPglE,aAAc/kE,EACdglE,WAAW,EACX9gF,OAAQA,GAGd,GAAC,CAAAtG,IAAA,SAAAlF,MAED,WACE,IAAAomF,EAA2DhuD,KAAKvmB,KAAxDs5E,EAAmB/E,EAAnB+E,oBAAqBzK,EAAyB0F,EAAzB1F,0BAC7B6L,EAAoCn0D,KAAKvxB,MAAjC+K,EAAQ26E,EAAR36E,SAAU5R,EAAKusF,EAALvsF,MAAOwL,EAAM+gF,EAAN/gF,OACnBghF,EAAsC,UAArB56E,aAAQ,EAARA,EAAUqS,WAAuBknE,GAAqC,GAAdnrF,EAAM+X,MAAa2oE,EAA0BlX,UACtH2gB,EAAS/xD,KAAK+xD,OAEdj9E,EAAQ,CACZkrB,KAAK9D,cACL8D,KAAK7D,iBACL6D,KAAKjD,qBACLiD,KAAK6sD,eACL7sD,KAAKhD,oBACLgD,KAAKq0D,yBAEDC,EAAOtV,EAAAA,cAAA,OAAKlyE,IAAI,YAAY+3E,UAAWgB,KAAW,aAAcuO,GAAkB,uBAAwBt/E,GAE1GvC,EAAQytB,KAAKu0D,cACbC,EAAOx0D,KAAKy0D,aACZ9Y,EAAO37C,KAAK00D,aACZC,EAAM30D,KAAK40D,YAEjB,OACE5V,EAAAA,cAAAA,EAAAA,SAAA,KACGwV,EACDxV,EAAAA,cAAA,OAAKlyE,IAAI,oBAAoB+3E,UAAU,uBACpCyP,EAAM/hF,GAETysE,EAAAA,cAAA,OAAKlyE,IAAI,sBAAsB+3E,UAAU,gBACvC7F,EAAAA,cAAC+S,EAAM,CAACjlF,IAAI,oBAAoBsG,OAAQA,GACrCuoE,EACAgZ,IAKX,IAAC,CA3XO,CAASzS,EAAAA,WAAbyP,GACGxP,UAAY,CACjBtkE,GAAIukE,IAAAA,OAAiBC,WACrB/+B,QAAS8+B,IAAAA,OACT+D,cAAe/D,IAAAA,IACfmF,iBAAkBnF,IAAAA,OAClBkE,kBAAmBlE,IAAAA,OACnBmE,iBAAkBnE,IAAAA,OAClB59D,gBAAiB49D,IAAAA,OACjBhvE,OAAQgvE,IAAAA,OAAiBC,WACzBz6E,MAAOw6E,IAAAA,IACP5oE,SAAU4oE,IAAAA,IACV33D,UAAW23D,IAAAA,IACXv2C,gBAAiBu2C,IAAAA,MACjBmD,aAAcnD,IAAAA,KACdkD,gBAAiBlD,IAAAA,KACjB/sE,YAAa+sE,IAAAA,OACbjyB,WAAYiyB,IAAAA,IACZhyB,WAAYgyB,IAAAA,OACZ1jE,SAAU0jE,IAAAA,KACVqD,aAAcrD,IAAAA,KAGd8C,uBAAwB9C,IAAAA,KACxBlK,SAAUkK,IAAAA,KACV1G,YAAa0G,IAAAA,KACbtG,YAAasG,IAAAA,KACbtF,kBAAmBsF,IAAAA,KACnBxG,QAASwG,IAAAA,KACTwP,WAAYxP,IAAAA,KACZhJ,SAAUgJ,IAAAA,KACVvF,YAAauF,IAAAA,KACbzF,aAAcyF,IAAAA,KACdiQ,kBAAmBjQ,IAAAA,OACnByS,cAAezS,IAAAA,OACf0S,wBAAyB1S,IAAAA,OACzBkQ,sBAAuBlQ,IAAAA,MA4V3B,Sb3LA,SAAgBuP,GACd,IAAMoD,GAAyBxS,EAAAA,EAAAA,KAC7B,SAAC/L,GACC,MAAO,CACLmD,SAAUnD,EAAMmD,SAEpB,GACA,KACA,KACA,CACEhiB,QAAAA,GAT2B4qB,CA5ML,SAACoP,GAAI,IAAAqD,EAAA,OAAAA,EAAA,SAAA3T,GA4B7B,SAAA4T,EAAYxmF,GAAO,IAAAkrB,E,MAIa,OAJb2nD,EAAAA,EAAAA,GAAA,KAAA2T,G,EACjB,K,EAAAA,E,EAAA,CAAMxmF,G,cAANkrB,G,+EAMF8tD,QAAU,WAAO,EAAC9tD,EAElBi4D,WAAa,WACXj4D,EAAKlrB,MAAMkzE,QAAQtG,WAAW1hD,EAAKlrB,MAAMpI,KAC3C,EAACszB,EAEDiiD,QAAU,WAAiB,IAAhBD,EAAInyE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAChBmwB,EAAKlrB,MAAMkzE,QAAQ/F,QAAQjiD,EAAKlrB,MAAMpI,KAAMs1E,EAC9C,EAAChiD,EAEDu+C,SAAW,SAACzjE,EAAOo3B,EAAiBusC,GAClCz+C,EAAKlrB,MAAMkzE,QAAQzJ,SAASv+C,EAAKlrB,MAAMpI,KAAMoO,EAAOo3B,EAAiBusC,EACvE,EAACz+C,EAED+hD,YAAc,SAACF,GACb7hD,EAAKlrB,MAAMkzE,QAAQjG,YAAY/hD,EAAKlrB,MAAMpI,KAAMm1E,EAClD,EAAC7hD,EAEDmiD,YAAc,SAACvjE,GACbohB,EAAKlrB,MAAMkzE,QAAQ7F,YAAYniD,EAAKlrB,MAAMpI,KAAMkS,EAClD,EAACohB,EAEDmjD,kBAAoB,SAACtuE,EAAM5G,GACzB+xB,EAAKlrB,MAAMkzE,QAAQ7E,kBAAkBnjD,EAAKlrB,MAAMpI,KAAMmI,EAAM5G,EAC9D,EAAC+xB,EAEDy/C,SAAW,SAAClxD,EAAOtgB,EAAOnC,EAAMomC,EAAiBusC,GAC/Cz+C,EAAKlrB,MAAMkzE,QAAQvI,SAASz/C,EAAKlrB,MAAMpI,KAAM6hB,EAAOtgB,EAAOnC,EAAMomC,EAAiBusC,EACpF,EAACz+C,EAEDkjD,YAAc,SAAC30D,EAAOszD,EAAQpD,GAC5Bz+C,EAAKlrB,MAAMkzE,QAAQ9E,YAAYljD,EAAKlrB,MAAMpI,KAAM6hB,EAAOszD,EAAQpD,EACjE,EAEAz+C,EACAgjD,aAAe,SAACz0D,EAAO8zD,EAAa1lE,EAAQ1O,EAAOnC,EAAMomC,EAAiBusC,GACxEz+C,EAAKlrB,MAAMkzE,QAAQhF,aAAahjD,EAAKlrB,MAAMpI,KAAM6hB,EAAO8zD,EAAa1lE,EAAQ1O,EAAOnC,EAAMomC,EAAiBusC,EAC7G,EA1CEz+C,EAAK+mD,0BAA4BA,EAAyB/mD,GAE1DA,EAAK8tD,QAAQyN,WAAY,EAAKv7D,CAChC,CAAC,OAAAioD,EAAAA,EAAAA,GAAAqT,EAAA5T,IAAAQ,EAAAA,EAAAA,GAAAoT,EAAA,EAAAnoF,IAAA,wBAAAlF,MAyCD,SAAsBu4E,EAAWC,GAC/B,IAAIC,EAAYrgD,KAAKvxB,MACjB6xE,EAAYtgD,KAAKw2C,MAEjB+J,EAASvgD,KAAK0gD,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IACMoF,GADcpF,EAAUxG,SAAS97D,IAAMwiE,EAAU1G,SAAS97D,KAC7BsiE,EAAUtiE,GACzC2iE,EAAM,GACV,IAAK,IAAIz6E,KAAKo6E,EAAW,CACvB,IAAIM,EAAWN,EAAUp6E,IAAMs6E,EAAUt6E,GAChC,YAALA,GAAoBw/E,IACtB9E,GAAU,GAERA,GACFD,EAAIx4E,KAAKjC,EAEb,CACKy6E,EAAI35E,SACP05E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAzzE,IAAA,SAAAlF,MAED,WACE,IAAM29E,EAAevlD,KAAKvxB,MAAMkrE,SAAS97D,IAAMmiB,KAAKvxB,MAAMoP,GACpD1J,EAAc8D,GAAe+nB,KAAKvxB,MAAM2E,OAAQ4sB,KAAKvxB,MAAMgG,OAC3DiH,EAAYskB,KAAKvxB,MAAMiN,YAAavH,aAAW,EAAXA,EAAa1O,OAAQ,KACxD6oB,EAAoB0R,KAAKvxB,MAAM2E,OAAOiB,SAAtCia,iBAED6mE,GADWhhF,GAAeA,EAAY1O,MACjB8/E,GAAgBvlD,KAAKvxB,MAAM62E,iBAEtDtD,EAAiChiD,KAAKvxB,MAA/B0hD,EAAU6xB,EAAV7xB,WAEDilC,EAAuB,OADZ,CADYpT,EAAV5xB,YACSrpD,QAAAnB,EAAAA,GAAAA,IAAMuqD,aAAU,EAAVA,EAAYhvC,YAAa,KAAKvW,QAAO,SAAA1C,GAAC,QAAMA,CAAC,IAAE2nD,SAAW,OACvDvhC,EAErC,OACE0wD,EAAAA,cAAA,OACE6F,UAAWgB,KAAW,0BAA2B,iBAAkBuP,EAAW,kBAAoB,MAClG,UAASp1D,KAAKvxB,MAAMoP,IAEnB,CACC0nE,EAAevG,EAAAA,cAAC2S,EAAI,CAClB7kF,IAAK,WACL+Q,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,QACpBtkC,IAAKghB,KAAKvxB,MAAMpI,KAAKsZ,KAAO,EAC5B4lE,cAAc,EACdD,iBAAiB,EACjB3L,SAAU35C,KAAKvxB,MAAMkrE,SACrBzB,SAAUl4C,KAAKynD,QACf/L,YAAa17C,KAAKynD,QAClB9K,aAAc38C,KAAKynD,QACnB3L,YAAa97C,KAAKynD,QAClB3K,kBAAmB98C,KAAKynD,QACxB7L,QAAS57C,KAAKynD,QACdmK,WAAY5xD,KAAKynD,QACjBrO,SAAUp5C,KAAKynD,QACf5K,YAAa78C,KAAKynD,QAClBtB,cAAenmD,KAAKvxB,MAAMgG,OAAS,KACnC8yE,iBAAkBvnD,KAAKvxB,MAAM8b,UAAY,QACzC+7D,kBAAmB5qE,EACnBrG,YAAa2qB,KAAKvxB,MAAM4G,aAAe,KACvCggF,oBAAqBr1D,KAAKvxB,MAAM4mF,oBAChC/C,sBAAuBtyD,KAAKvxB,MAAM6jF,sBAClC/L,iBAAkBvmD,KAAKvxB,MAAM8J,UAAY,KACzC3Q,MAAOo4B,KAAKvxB,MAAM7G,OAAS,KAC3B4R,SAAUwmB,KAAKvxB,MAAM+K,UAAY,KACjCiR,UAAWuV,KAAKvxB,MAAMgc,WAAa,KACnC0lC,WAAYnwB,KAAKvxB,MAAM0hD,YAAc,KACrCC,WAAYpwB,KAAKvxB,MAAM2hD,YAAc,KACrC5rC,gBAAiBwb,KAAKvxB,MAAM+V,gBAC5BpR,OAAQ4sB,KAAKvxB,MAAM2E,OACnBi/E,kBAAmBryD,KAAKvxB,MAAM4jF,kBAC9BwC,cAAe70D,KAAKvxB,MAAMomF,cAC1BhpD,gBAAiB7L,KAAKvxB,MAAMo9B,gBAC5BntB,SAAUshB,KAAKvxB,MAAMiQ,SACrB+mE,aAAczlD,KAAKvxB,MAAMg3E,aACzBqP,wBAAyB90D,KAAKvxB,MAAMqmF,0BACjC,KAEL9V,EAAAA,cAAC2S,EAAI,CACH7kF,IAAKkzB,KAAKvxB,MAAMoP,GAChBA,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,QACpBtkC,IAAKghB,KAAKvxB,MAAMpI,KAAKsZ,KAAO,EAC5B4lE,aAAcA,EACdD,gBAAiB6P,EACjB9P,YAAarlD,KAAKvxB,MAAM42E,YACxBzJ,QAASuZ,EAAoBn1D,KAAKynD,QAAUznD,KAAK47C,QACjDgW,WAAYuD,EAAoBn1D,KAAKynD,QAAUznD,KAAK4xD,WACpD1Z,SAAUid,EAAoBn1D,KAAKynD,QAAUznD,KAAKk4C,SAClDwD,YAAayZ,EAAoBn1D,KAAKynD,QAAUznD,KAAK07C,YACrDiB,aAAcwY,EAAoBn1D,KAAKynD,QAAUznD,KAAK28C,aACtDb,YAAaqZ,EAAoBn1D,KAAKynD,QAAUznD,KAAK87C,YACrDgB,kBAAmBqY,EAAoBn1D,KAAKynD,QAAUznD,KAAK88C,kBAC3D1D,SAAU+b,EAAoBn1D,KAAKynD,QAAUznD,KAAKo5C,SAClDyD,YAAasY,EAAoBn1D,KAAKynD,QAAUznD,KAAK68C,YACrDsJ,cAAenmD,KAAKvxB,MAAMgG,OAAS,KACnC8yE,iBAAkBvnD,KAAKvxB,MAAM8b,UAAY,QACzC+7D,kBAAmB5qE,EACnBrG,YAAa2qB,KAAKvxB,MAAM4G,aAAe,KACvCggF,oBAAqBr1D,KAAKvxB,MAAM4mF,oBAChC/C,sBAAuBtyD,KAAKvxB,MAAM6jF,sBAClC/L,iBAAkBvmD,KAAKvxB,MAAM8J,UAAY,KACzC3Q,MAAOo4B,KAAKvxB,MAAM7G,OAAS,KAC3B4R,SAAUwmB,KAAKvxB,MAAM+K,UAAY,KACjCiR,UAAWuV,KAAKvxB,MAAMgc,WAAa,KACnC0lC,WAAYnwB,KAAKvxB,MAAM0hD,YAAc,KACrCC,WAAYpwB,KAAKvxB,MAAM2hD,YAAc,KACrC5rC,gBAAiBwb,KAAKvxB,MAAM+V,gBAC5BpR,OAAQ4sB,KAAKvxB,MAAM2E,OACnBi/E,kBAAmBryD,KAAKvxB,MAAM4jF,kBAC9BwC,cAAe70D,KAAKvxB,MAAMomF,cAC1BhpD,gBAAiB7L,KAAKvxB,MAAMo9B,gBAC5BntB,SAAUshB,KAAKvxB,MAAMiQ,SACrB+mE,aAAczlD,KAAKvxB,MAAMg3E,aACzBqP,wBAAyB90D,KAAKvxB,MAAMqmF,2BAK9C,IAAC,CAtM4B,CACH5S,EAAAA,WAAS8S,EAC5B7S,UAAY,CACjBtkE,GAAIukE,IAAAA,OAAiBC,WACrB/+B,QAAS8+B,IAAAA,OACThvE,OAAQgvE,IAAAA,OAAiBC,WACzBh8E,KAAM+7E,IAAAA,IAAcC,WACpB9pE,SAAU6pE,IAAAA,OACV3tE,MAAO2tE,IAAAA,IACP73D,SAAU63D,IAAAA,OACV1mE,UAAW0mE,IAAAA,OACXT,QAASS,IAAAA,OAAiBC,WAC1BgD,YAAajD,IAAAA,KACbx6E,MAAOw6E,IAAAA,IACP5oE,SAAU4oE,IAAAA,IACVv2C,gBAAiBu2C,IAAAA,MACjBjyB,WAAYiyB,IAAAA,IACZhyB,WAAYgyB,IAAAA,OACZ59D,gBAAiB49D,IAAAA,OACjBiQ,kBAAmBjQ,IAAAA,OACnB/sE,YAAa+sE,IAAAA,OACb1jE,SAAU0jE,IAAAA,KACVqD,aAAcrD,IAAAA,KAEdzI,SAAUyI,IAAAA,OACVkD,gBAAiBlD,IAAAA,MAClB4S,CAAA,CA6LDM,CAAoB3D,IAGtB,OAFAoD,EAAuBvS,YAAc,yBAE9BuS,CACR,Ca2KD,CAA6B9P,GAAU,OAAVA,CAAkB6C,GAAc6J,M,8KCxY7D,IAAOhsE,GAA2Bo4C,EAAAA,GAAM0kB,aAAjC98D,wBACA1N,GAAkB8lD,EAAAA,GAAM4kB,YAAxB1qE,eAiSP,kBAAgBs9E,EAAOC,GACrB,IAAMC,GAA0BlT,EAAAA,EAAAA,KAC9B,SAAC/L,GACC,MAAO,CACLmD,SAAUnD,EAAMmD,SAEpB,GACA,KACA,KACA,CACEhiB,QAAAA,GAT4B4qB,CA/RL,SAACgT,EAAOC,GAAQ,IAAAE,EAAA,OAAAA,EAAA,SAAArU,GA2BzC,SAAAsU,EAAYlnF,GAAO,IAAAkrB,E,MAOa,OAPb2nD,EAAAA,EAAAA,GAAA,KAAAqU,G,EACjB,K,EAAAA,E,EAAA,CAAMlnF,G,cAANkrB,G,+EAuDFi8D,qBAAuB,SAACnnF,GAEtB,OADAA,EAAQA,GAASkrB,EAAKlrB,OACT6X,aAAeX,GAAwBlX,EAAM2E,OAAQ3E,EAAMgG,MAC1E,EAACklB,EAED2hD,eAAiB,WAAiB,IAAhBrzC,EAAIz+B,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KACvBmwB,EAAKlrB,MAAMkzE,QAAQrG,eAAe3hD,EAAKlrB,MAAMpI,KAAM4hC,EACrD,EAACtO,EAED4hD,OAAS,WAAgB,IAAfh1D,EAAG/c,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KACdmwB,EAAKlrB,MAAMkzE,QAAQpG,OAAO5hD,EAAKlrB,MAAMpI,KAAMkgB,EAC7C,EAACoT,EAEDiiD,QAAU,WAAiB,IAAhBD,EAAInyE,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAChBmwB,EAAKlrB,MAAMkzE,QAAQ/F,QAAQjiD,EAAKlrB,MAAMpI,KAAMs1E,EAC9C,EAAChiD,EAED8tD,QAAU,WAAO,EAAC9tD,EAElBi4D,WAAa,WACXj4D,EAAKlrB,MAAMkzE,QAAQ9G,YAAYlhD,EAAKlrB,MAAMpI,KAC5C,EAACszB,EAEDykD,SAAW,WACT,IAAMpkE,EAAmC,cAAZw7E,EAA2B77D,EAAKlrB,MAAMgG,MAAQklB,EAAKlrB,MAAM4G,YACtFskB,EAAKlrB,MAAMkzE,QAAQvD,SAASzkD,EAAKlrB,MAAMpI,UAAMyB,OAAWA,EAAWkS,EACrE,EAAC2f,EAEDwkD,aAAe,WACbxkD,EAAKlrB,MAAMkzE,QAAQxD,aAAaxkD,EAAKlrB,MAAMpI,KAC7C,EAACszB,EAEDukD,oBAAsB,WACpBvkD,EAAKlrB,MAAMkzE,QAAQzD,oBAAoBvkD,EAAKlrB,MAAMpI,KACpD,EAACszB,EAEDskD,QAAU,WACR,IAAMjkE,EAAmC,cAAZw7E,EAA2B77D,EAAKlrB,MAAMgG,MAAQklB,EAAKlrB,MAAM4G,YACtFskB,EAAKlrB,MAAMkzE,QAAQ1D,QAAQtkD,EAAKlrB,MAAMpI,UAAMyB,OAAWA,OAAWA,EAAWkS,EAC/E,EAEA2f,EACAu+C,SAAW,SAACzjE,EAAOo3B,EAAiBusC,GAClCz+C,EAAKlrB,MAAMkzE,QAAQzJ,SAASv+C,EAAKlrB,MAAMpI,KAAMoO,EAAOo3B,EAAiBusC,EACvE,EAEAz+C,EACAmiD,YAAc,SAACvjE,GACbohB,EAAKlrB,MAAMkzE,QAAQ7F,YAAYniD,EAAKlrB,MAAMpI,KAAMkS,EAClD,EAEAohB,EACAy/C,SAAW,SAAClxD,EAAOtgB,EAAOnC,EAAMomC,EAAiBusC,GAC/Cz+C,EAAKlrB,MAAMkzE,QAAQvI,SAASz/C,EAAKlrB,MAAMpI,KAAM6hB,EAAOtgB,EAAOnC,EAAMomC,EAAiBusC,EACpF,EAACz+C,EAEDkjD,YAAc,SAAC30D,EAAOszD,EAAQpD,GAC5Bz+C,EAAKlrB,MAAMkzE,QAAQ9E,YAAYljD,EAAKlrB,MAAMpI,KAAM6hB,EAAOszD,EAAQpD,EACjE,EAEAz+C,EACAgjD,aAAe,SAACz0D,EAAO8zD,EAAa1lE,EAAQ1O,EAAOnC,EAAMomC,EAAiBusC,GACxEz+C,EAAKlrB,MAAMkzE,QAAQhF,aAAahjD,EAAKlrB,MAAMpI,KAAM6hB,EAAO8zD,EAAa1lE,EAAQ1O,EAAOnC,EAAMomC,EAAiBusC,EAC7G,EArHEz+C,EAAK+mD,0BAA4BA,EAAyB/mD,GAC1DgnD,EAAiBhnD,GAEjBA,EAAKk8D,oBAAsBl8D,EAAKi8D,qBAAqBnnF,GACrDkrB,EAAKm8D,mBAAqBn8D,EAAKo8D,uBAAuBtnF,GACtDkrB,EAAK8tD,QAAQyN,WAAY,EAAKv7D,CAChC,CAAC,OAAAioD,EAAAA,EAAAA,GAAA+T,EAAAtU,IAAAQ,EAAAA,EAAAA,GAAA8T,EAAA,EAAA7oF,IAAA,wBAAAlF,MAED,SAAsBu4E,EAAWC,GAC/B,IAAIC,EAAYrgD,KAAKvxB,MACjB6xE,EAAYtgD,KAAKw2C,MAEjB+J,EAASvgD,KAAK0gD,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IACMoF,GADcpF,EAAUxG,SAAS97D,IAAMwiE,EAAU1G,SAAS97D,KAC7BsiE,EAAUtiE,GACzC2iE,EAAM,GACV,IAAK,IAAIz6E,KAAKo6E,EAAW,CACvB,IAAIM,EAAWN,EAAUp6E,IAAMs6E,EAAUt6E,GAChC,YAALA,GAAoBw/E,IACtB9E,GAAU,GAERA,GACFD,EAAIx4E,KAAKjC,EAEb,CACKy6E,EAAI35E,SACP05E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAzzE,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAO/sE,EAA2B+sE,EAA3B/sE,OAAYkT,GAAe65D,EAAnBtiE,GAAmBsiE,EAAf75D,aACbijC,EAAYvpB,KAAKvxB,MAAM2E,OACvB4iF,EAAiBh2D,KAAKvxB,MAAM6X,YAC9BijC,GAAan2C,GAAU4iF,GAAkB1vE,IAC3C0Z,KAAK61D,oBAAsB71D,KAAK41D,qBAAqBzV,GACrDngD,KAAK81D,mBAAqB91D,KAAK+1D,uBAAuB5V,GAE1D,GAAC,CAAArzE,IAAA,yBAAAlF,MAED,SAAwB6G,GAAO,IAAA28D,EAAA,KAC7B,OAAOoP,IAAU/rE,EAAM2E,OAAOgT,cAAc,SAAChI,EAAMwE,GAAK,MAAM,CAC5D/E,GAAI,eAAF9W,OAAiB0H,EAAMoP,GAAE,KAAA9W,OAAI6b,GAC/BpU,KAAM,eAAFzH,OAAiB0H,EAAMoP,GAAE,KAC7B/Q,IAAK8V,EACLmF,MAAO3J,EAAK2J,MACZkuE,QAASrzE,IAAUwoD,EAAKwqB,qBAAqBnnF,GAC9C,GACH,GAAC,CAAA3B,IAAA,SAAAlF,MAmED,WACE,IAAO0mB,EAAoB0R,KAAKvxB,MAAM2E,OAAOiB,SAAtCia,iBACDi3D,EAAevlD,KAAKvxB,MAAMkrE,SAAS97D,IAAMmiB,KAAKvxB,MAAMoP,GACtDq4E,EAAiBl2D,KAAKvxB,MAAMpI,KAAKsZ,KACjCkC,EAAame,KAAKvxB,MAAM2E,OAAOiB,SAASwN,WACxCf,EAA2B,GAAlBo1E,EACb,GAAIl2D,KAAKvxB,MAAM4G,aAAe2qB,KAAKvxB,MAAM4mF,oBAAqB,CAE5D,IAAM1d,EAAuB1/D,GAAe+nB,KAAKvxB,MAAM2E,OAAQ4sB,KAAKvxB,MAAM4G,aAC1E6gF,EAAiBl2D,KAAKvxB,MAAMpI,KAAKsZ,KAAOqgB,KAAKvxB,MAAM4mF,oBAAsB,EACzExzE,EAAa81D,aAAoB,EAApBA,EAAsB91D,WACnCf,GAAS,CACX,MAAO,GAAIkf,KAAKvxB,MAAMgG,MAAO,CAE3B,IAAMkjE,EAAuB1/D,GAAe+nB,KAAKvxB,MAAM2E,OAAQ4sB,KAAKvxB,MAAMgG,OAC1EyhF,EAAiB,EACjBr0E,EAAa81D,aAAoB,EAApBA,EAAsB91D,WACnCf,GAAS,CACX,CACA,IAAMq0E,GAAqB5P,GAAgBvlD,KAAKvxB,MAAM62E,gBAChD5pE,EAAYskB,KAAKvxB,MAAMiN,WAAa,KAEnCy0C,EAAcnwB,KAAKvxB,MAAnB0hD,WAEDilC,EAAuB,QADZxvF,EAAAA,GAAAA,IAAKuqD,aAAU,EAAVA,EAAYhvC,YAAa,IAAKvW,QAAO,SAAA1C,GAAC,QAAMA,CAAC,IAAE2nD,SAAW,OAC3CvhC,EAI/B6nE,OAA4C,IAAft0E,GAA8Bq0E,EAAiBr0E,EAC5Eu0E,EAAuBv0E,GAAcq0E,EAAiBr0E,EAE5D,OACEm9D,EAAAA,cAAA,OACE6F,UAAWgB,KAAW,0BAA2B,kBAAmBuP,EAAW,mBAAqB,MACpG,UAASp1D,KAAKvxB,MAAMoP,IAEnB,CACC0nE,EAAevG,EAAAA,cAACuW,EAAK,CACnBzoF,IAAK,WACL+Q,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,QACpBiiC,cAAc,EACdD,iBAAiB,EACjB3L,SAAU35C,KAAKvxB,MAAMkrE,SACrB74D,OAAQA,EACR9B,IAAKghB,KAAKvxB,MAAMpI,KAAKsZ,KAAO,EAC5Bw2E,oBAAqBA,EACrBC,qBAAsBA,EACtBN,mBAAoB91D,KAAK81D,mBACzBvvE,IAAKyZ,KAAKvxB,MAAM8X,IAChBsvE,oBAAqB71D,KAAK61D,oBAC1Bva,eAAgBt7C,KAAKynD,QACrBlM,OAAQv7C,KAAKynD,QACb7L,QAAS57C,KAAKynD,QACdmK,WAAY5xD,KAAKynD,QACjBrJ,SAAUp+C,KAAKynD,QACftJ,aAAcn+C,KAAKynD,QACnBvJ,oBAAqBl+C,KAAKynD,QAC1BxJ,QAASj+C,KAAKynD,QACdvP,SAAUl4C,KAAKynD,QACf9K,aAAc38C,KAAKynD,QACnB3L,YAAa97C,KAAKynD,QAClBrO,SAAUp5C,KAAKynD,QACf5K,YAAa78C,KAAKynD,QAClB7/E,MAAOo4B,KAAKvxB,MAAM7G,OAAS,KAC3BuoD,WAAYnwB,KAAKvxB,MAAM0hD,YAAc,KACrC32C,SAAUwmB,KAAKvxB,MAAM+K,UAAY,KACjCpG,OAAQ4sB,KAAKvxB,MAAM2E,OACnB8Q,UAAW8b,KAAKvxB,MAAMyV,UACtBy9D,QAAS3hD,KAAKvxB,MAAMkzE,QACpB0Q,kBAAmBryD,KAAKvxB,MAAM4jF,kBAC9BwC,cAAe70D,KAAKvxB,MAAMomF,cAC1B1O,cAAenmD,KAAKvxB,MAAMgG,OAAS,KACnC8yE,iBAAkBvnD,KAAKvxB,MAAM8b,UAAY,QACzC+7D,kBAAmB5qE,EACnBrG,YAAa2qB,KAAKvxB,MAAM4G,aAAe,KACvCggF,oBAAqBr1D,KAAKvxB,MAAM4mF,oBAChC/C,sBAAuBtyD,KAAKvxB,MAAM6jF,sBAClC/L,iBAAkBvmD,KAAKvxB,MAAM8J,UAAY,KACzCmG,SAAUshB,KAAKvxB,MAAMiQ,SACrB+mE,aAAczlD,KAAKvxB,MAAMg3E,aACzBqP,wBAAyB90D,KAAKvxB,MAAMqmF,0BACjC,KAEL9V,EAAAA,cAACuW,EAAK,CACJzoF,IAAKkzB,KAAKvxB,MAAMoP,GAChBA,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,QACpBiiC,aAAcA,EACdD,gBAAiB6P,EACjB9P,YAAarlD,KAAKvxB,MAAM42E,YACxBvkE,OAAQA,EACR9B,IAAKghB,KAAKvxB,MAAMpI,KAAKsZ,KAAO,EAC5Bw2E,oBAAqBA,EACrBC,qBAAsBA,EACtBN,mBAAoB91D,KAAK81D,mBACzBvvE,IAAKyZ,KAAKvxB,MAAM8X,IAChBsvE,oBAAqB71D,KAAK61D,oBAC1Bva,eAAgB6Z,EAAoBn1D,KAAKynD,QAAUznD,KAAKs7C,eACxDC,OAAQ4Z,EAAoBn1D,KAAKynD,QAAUznD,KAAKu7C,OAChDK,QAASuZ,EAAoBn1D,KAAKynD,QAAUznD,KAAK47C,QACjDgW,WAAYuD,EAAoBn1D,KAAKynD,QAAUznD,KAAK4xD,WACpDxT,SAAU+W,EAAoBn1D,KAAKynD,QAAUznD,KAAKo+C,SAClDD,aAAcgX,EAAoBn1D,KAAKynD,QAAUznD,KAAKm+C,aACtDD,oBAAqBiX,EAAoBn1D,KAAKynD,QAAUznD,KAAKk+C,oBAC7DD,QAASkX,EAAoBn1D,KAAKynD,QAAUznD,KAAKi+C,QACjD/F,SAAUid,EAAoBn1D,KAAKynD,QAAUznD,KAAKk4C,SAClDyE,aAAcwY,EAAoBn1D,KAAKynD,QAAUznD,KAAK28C,aACtDb,YAAaqZ,EAAoBn1D,KAAKynD,QAAUznD,KAAK87C,YACrD1C,SAAU+b,EAAoBn1D,KAAKynD,QAAUznD,KAAKo5C,SAClDyD,YAAasY,EAAoBn1D,KAAKynD,QAAUznD,KAAK68C,YACrDj1E,MAAOo4B,KAAKvxB,MAAM7G,OAAS,KAC3BuoD,WAAYnwB,KAAKvxB,MAAM0hD,YAAc,KACrC32C,SAAUwmB,KAAKvxB,MAAM+K,UAAY,KACjCpG,OAAQ4sB,KAAKvxB,MAAM2E,OACnB8Q,UAAW8b,KAAKvxB,MAAMyV,UACtBy9D,QAAS3hD,KAAKvxB,MAAMkzE,QACpB0Q,kBAAmBryD,KAAKvxB,MAAM4jF,kBAC9BwC,cAAe70D,KAAKvxB,MAAMomF,cAC1B1O,cAAenmD,KAAKvxB,MAAMgG,OAAS,KACnC8yE,iBAAkBvnD,KAAKvxB,MAAM8b,UAAY,QACzC+7D,kBAAmB5qE,EACnBrG,YAAa2qB,KAAKvxB,MAAM4G,aAAe,KACvCggF,oBAAqBr1D,KAAKvxB,MAAM4mF,oBAChC/C,sBAAuBtyD,KAAKvxB,MAAM6jF,sBAClC/L,iBAAkBvmD,KAAKvxB,MAAM8J,UAAY,KACzCmG,SAAUshB,KAAKvxB,MAAMiQ,SACrB+mE,aAAczlD,KAAKvxB,MAAMg3E,aACzBqP,wBAAyB90D,KAAKvxB,MAAMqmF,2BAK9C,IAAC,CAzRwC,CACd5S,EAAAA,WAASwT,EAC7BvT,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzBV,QAASS,IAAAA,OAAiBC,WAC1Bh8E,KAAM+7E,IAAAA,IAAcC,WACpBxkE,GAAIukE,IAAAA,OAAiBC,WACrB/+B,QAAS8+B,IAAAA,OACT77D,IAAK67D,IAAAA,KACL97D,YAAa87D,IAAAA,OACbl+D,UAAWk+D,IAAAA,IACXiD,YAAajD,IAAAA,KACbiQ,kBAAmBjQ,IAAAA,OACnB3tE,MAAO2tE,IAAAA,IACP73D,SAAU63D,IAAAA,OACV1mE,UAAW0mE,IAAAA,OACX/sE,YAAa+sE,IAAAA,OACbx6E,MAAOw6E,IAAAA,IACP5oE,SAAU4oE,IAAAA,IACVjyB,WAAYiyB,IAAAA,IACZ1jE,SAAU0jE,IAAAA,KACVqD,aAAcrD,IAAAA,KAEdzI,SAAUyI,IAAAA,OACVkD,gBAAiBlD,IAAAA,MAClBsT,CAAA,CAiRDW,CAAqBd,EAAOC,IAG9B,OAFAC,EAAwBjT,YAAc,0BAE/BiT,CACR,E,mJCxTD,IAAMa,GAA2B,CAC/BC,QAAS,qBACTC,UAAW,qBACXC,SAAU,qBACVC,WAAY,qBACZC,aAAc,qBACdC,YAAa,sBAKFC,GAAY,SAAA7R,GAAA,SAAA6R,IAAA,OAAAvV,EAAAA,EAAAA,GAAA,KAAAuV,G,EAAA,K,EAAAA,E,EAAArtF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAAiV,EAAA7R,IAAAnD,EAAAA,EAAAA,GAAAgV,EAAA,EAAA/pF,IAAA,SAAAlF,MACvB,WACE,IAAAo6E,EAIIhiD,KAAKvxB,MAHP2E,EAAM4uE,EAAN5uE,OACA6qE,EAAO+D,EAAP/D,QAASG,EAAQ4D,EAAR5D,SAAUwT,EAAU5P,EAAV4P,WAAYhW,EAAOoG,EAAPpG,QAASl9D,EAAQsjE,EAARtjE,SAAU+mE,EAAYzD,EAAZyD,aAAc5nE,EAAEmkE,EAAFnkE,GAAIxI,EAAW2sE,EAAX3sE,YACpEyhF,EAAW9U,EAAX8U,YAAaC,EAAU/U,EAAV+U,WAAYC,EAAchV,EAAdgV,eAE3BhjF,EAKIZ,EAAOiB,SAJTw/E,EAAmB7/E,EAAnB6/E,oBAAqBrkE,EAAYxb,EAAZwb,aAAcJ,EAAapb,EAAbob,cAAeK,EAAezb,EAAfyb,gBAAiBC,EAAgB1b,EAAhB0b,iBACnEC,EAAa3b,EAAb2b,cAAesnE,EAAoBjjF,EAApBijF,qBACf36D,EAAYtoB,EAAZsoB,aAAcC,EAAUvoB,EAAVuoB,WAAYK,EAAY5oB,EAAZ4oB,aAAcJ,EAAiBxoB,EAAjBwoB,kBACxCvN,EAASjb,EAATib,UAAWC,EAAWlb,EAAXkb,YAAa8kE,EAAQhgF,EAARggF,SAAUlmE,EAAe9Z,EAAf8Z,gBAE9B+jE,EAAO,SAAC9N,GAAE,OAAKxnD,EAAWwnD,EAAI3wE,EAAO0d,IAAI,EACzCghE,EAAM,SAAC/N,GAAE,OAAKznD,EAAaynD,EAAI3wE,EAAO0d,IAAI,EAC1CkhE,EAAS,SAACjO,GAAE,OAAKnnD,EAAamnD,EAAI3wE,EAAO0d,IAAI,EAC7CihE,EAAS,SAAChO,GAAE,OAAKvnD,EAAkBunD,EAAI3wE,EAAO0d,IAAI,EAClD5O,EAAWo0E,GAAyBW,GApBtB,YAsBdC,EAAgBlD,KAAct1E,IAAa+mE,IAAiBzG,EAAAA,cAACgT,EAAM,CACvEvsF,KAAK,OAAOoY,GAAIA,EAAIjW,MAAO8W,EAAU06D,SAAUwC,EAAS7zD,MAAOkH,EAAWglE,aAAc/kE,EAAa9b,OAAQA,IAGzG+jF,GAActD,GAAuBkD,IAAer4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CACxErsF,KAAM4P,EAAc,aAAe,UAAWy+E,QAAS7V,EAASl2D,MAAO1S,EAAcoa,EAAkBD,EAAc43D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAEjKuF,GAAevD,GAAuBiD,IAAgBp4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CAC1ErsF,KAAM4P,EAAc,cAAgB,WAAYy+E,QAAS1V,EAAUr2D,MAAO1S,EAAcqa,EAAmBN,EAAeg4D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAEtKwF,GAAexD,GAAuBmD,KAAoBt4E,GAAYA,GAAYoP,IAAoBkxD,EAAAA,cAAC8S,EAAG,CAC9GrsF,KAAK,WAAWquF,QAASlC,EAAY7pE,MAAO4H,EAAevc,OAAQA,EAAQmpB,WAAYs1D,IAGzF,OACE7S,EAAAA,cAAA,OAAK6F,UAAS,kBAAA99E,OAAoBmb,IAChC88D,EAAAA,cAAC+S,EAAM,CAAC3+E,OAAQA,GACb8jF,EACAC,EACAC,EACAC,GAIT,IAAC,CA3CsB,CAASpR,EAAAA,e,m0BCFlC,IAAOhuE,GAAkB8lD,EAAAA,GAAM4kB,YAAxB1qE,eACA6R,GAAwBi0C,EAAAA,GAAM0qB,UAA9B3+D,qBACPshE,GAAsErtB,EAAAA,GAAM4mB,UAAlCxgE,IAAFinE,GAAjCpnE,kCAA2DonE,GAAxBjnE,0BAK7BmzE,GAAU,SAAAjW,GA+BrB,SAAAiW,EAAY7oF,GAAO,IAAAkrB,E,MAQ4B,OAR5B2nD,EAAAA,EAAAA,GAAA,KAAAgW,G,EACjB,K,EAAAA,E,EAAA,CAAM7oF,G,cAANkrB,G,+EAmGF49D,kBAAoB,iBAAM,EAAE,EAAA59D,EA+B5BsD,oBAAsB,WACpB,IAAMu6D,EAAgB79D,EAAK69D,cAC3B,OAAqB1vF,MAAjB0vF,EACK,KACFxY,EAAAA,cAACwY,GAAaxR,EAAAA,GAAAA,GAAA,CACnBl5E,IAAI,wBACA6sB,EAAKlrB,OAEb,EAACkrB,EAEDuD,mBAAqB,WACnB,IAAMu6D,EAAe99D,EAAK89D,aAC1B,OAAoB3vF,MAAhB2vF,EACK,KACFzY,EAAAA,cAACyY,GAAYzR,EAAAA,GAAAA,GAAA,CAClBl5E,IAAI,uBACA6sB,EAAKlrB,OAEb,EAlJEkyE,EAAiBhnD,GACjBA,EAAKmnD,eAAeryE,GAEpBkrB,EAAKi4D,WAAaj4D,EAAKi4D,WAAW1xD,KAAIvG,GACtCA,EAAKiiD,QAAUjiD,EAAKiiD,QAAQ17C,KAAIvG,GAChCA,EAAKmD,WAAanD,EAAKmD,WAAWoD,KAAIvG,GAAOA,CAC/C,CAAC,OAAAioD,EAAAA,EAAAA,GAAA0V,EAAAjW,IAAAQ,EAAAA,EAAAA,GAAAyV,EAAA,EAAAxqF,IAAA,iBAAAlF,MAED,SAAeu4E,GAAW,IAAA/U,EAAA,KAClBiV,EAAYrgD,KAAKvxB,MAGvB,IAFuBuxB,KAAK6xD,OAAQxR,aAAS,EAATA,EAAWjtE,WAAW+sE,aAAS,EAATA,EAAW/sE,QAElD,CACjB,IAAQA,EAAW+sE,EAAX/sE,OACRY,EAA6EZ,EAAOiB,SAA5EkoB,EAAUvoB,EAAVuoB,WAAYF,EAAWroB,EAAXqoB,YAAaY,EAAmBjpB,EAAnBipB,oBAAqBC,EAAkBlpB,EAAlBkpB,mBACtD8C,KAAK6xD,KAAO5J,GAAoB70E,EAAQmpB,GACxCyD,KAAK03D,MAAQzP,GAAoB70E,EAAQipB,GACzC2D,KAAKw3D,cAAgBvP,GAAoB70E,EAAQ6pB,GACjD+C,KAAKy3D,aAAexP,GAAoB70E,EAAQ8pB,EAClD,CAEA8C,KAAKoyD,SAAW,WACdhnB,EAAK38D,MAAMmjF,YACb,CACF,GAAC,CAAA9kF,IAAA,qBAAAlF,MAED,WACE,OAAO8N,KAAWsqB,KAAKvxB,MAAM2E,OAAOiB,SAAS4iF,sBAhEzB,WAgEkE,MACxF,GAAC,CAAAnqF,IAAA,UAAAlF,MAED,SAAQ+zE,GACN37C,KAAKvxB,MAAMmtE,QAAQD,EACrB,GAAC,CAAA7uE,IAAA,aAAAlF,MAED,WACE,IAAAo6E,EAA4BhiD,KAAKvxB,MAA1Bs5E,EAAS/F,EAAT+F,UAAW30E,EAAM4uE,EAAN5uE,OAClBuB,EAAmEvB,EAAOiB,SAAnE2nB,EAAarnB,EAAbqnB,cAA0Cg3D,EAAcr+E,EAAzCqb,0BAClBgjE,IAAmBhzD,KAAK23D,sBAC1B37D,EAAc92B,KAAKkO,EAAO0d,IAAGjrB,GAAAA,GAAA,GAAMmtF,GAAc,IAC/CE,KAAMlzD,KAAKoyD,SACXe,SAAU,KACVpL,UAAWA,IACV30E,EAAO0d,KAEVkP,KAAKoyD,UAET,GAAC,CAAAtlF,IAAA,sBAAAlF,MAED,WACE,IAAAynF,EAA4BrvD,KAAKvxB,MAA1ByV,EAASmrE,EAATnrE,UAAW9Q,EAAMi8E,EAANj8E,OAClB,OAAO0W,GAAqB5F,EAAW9Q,EACzC,GAAC,CAAAtG,IAAA,UAAAlF,MAED,WACE,IAAA0nF,EAA8BtvD,KAAKvxB,MAA5B2E,EAAMk8E,EAANl8E,OAAQiC,EAAWi6E,EAAXj6E,YACXuiF,EAAUxkF,EAAOiB,SAASujF,QAC9B,GAAIviF,EAAa,KAAAwiF,EACTlgB,EAAuB1/D,GAAe7E,EAAQiC,GACpDuiF,EAAUA,IAAyC,QAAlCC,EAAKlgB,aAAoB,EAApBA,EAAsBigB,eAAO,IAAAC,GAAAA,EACrD,CACA,OAAOD,CACT,GAEA,CAAA9qF,IAAA,YAAAlF,MACA,WACE,IACOkwF,EADU93D,KAAKvxB,MAAf2E,OACwBiB,SAAxByjF,cACDhC,EAAqB91D,KAAK81D,qBAEhC,OADyB9wF,OAAOgG,KAAK8qF,GAAoBjvF,OAC/B,IAAMm5B,KAAK+3D,cAAgB/3D,KAAK43D,WAAaE,CACzE,GAAC,CAAAhrF,IAAA,eAAAlF,MAED,WACE,IAAOsc,EAAa8b,KAAKvxB,MAAlByV,UACP,OAAOA,GAA8B,GAAlBA,EAAUvE,IAC/B,GAAC,CAAA7S,IAAA,aAAAlF,MAGD,WACE,IAAOsc,EAAa8b,KAAKvxB,MAAlByV,UACP,OAAOA,GAAYA,EAAUvE,KAAO,CACtC,GAAC,CAAA7S,IAAA,wBAAAlF,MAED,WAGE,OAFoBo4B,KAAKvxB,MAAlByV,WAGL86D,EAAAA,cAAA,OAAKlyE,IAAI,iBAAiB+3E,UAAWgB,KACnC,kBACC7lD,KAAKg4D,YAA8B,GAAhB,cACpBh4D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAKu3D,sBACHv3D,KAAKi4D,iBAEb,GAAC,CAAAnrF,IAAA,sBAAAlF,MAID,WACE,IAAMswF,EAAqBl4D,KAAKk4D,qBAChC,OACElZ,EAAAA,cAAA,OAAKlyE,IAAI,eAAe+3E,UAAWgB,KACjC,gBACA7lD,KAAK+3D,aAAe,aAAe,GAClC/3D,KAAKg4D,YAA8B,GAAhB,cACpBh4D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAKm4D,eAAiB,eAAiB,KAEtCn4D,KAAKo4D,eACLF,GAAsBl4D,KAAK/C,sBAC3Bi7D,GAAsBl4D,KAAKq4D,gBAC3BH,GAAsBl4D,KAAK9C,qBAGlC,GAAC,CAAApwB,IAAA,sBAAAlF,MAED,WAEE,OAD2Bo4B,KAAKk4D,sBAE9BlZ,EAAAA,cAAA,OAAKlyE,IAAI,eAAe+3E,UAAU,iBAC/B7kD,KAAK/C,sBACL+C,KAAKq4D,gBACLr4D,KAAK9C,qBAGZ,GAAC,CAAApwB,IAAA,gBAAAlF,MAsBD,WACE,IAAA6nF,EAA6EzvD,KAAKvxB,MAA3E2E,EAAMq8E,EAANr8E,OAAQ6qE,EAAOwR,EAAPxR,QAASG,EAAQqR,EAARrR,SAAU1/D,EAAQ+wE,EAAR/wE,SAAU+mE,EAAYgK,EAAZhK,aAAc5nE,EAAE4xE,EAAF5xE,GAAIxI,EAAWo6E,EAAXp6E,YAE9D,OAAO2pE,EAAAA,cAAC6X,GAAY,CAClB/pF,IAAI,gBACJsG,OAAQA,EACR6qE,QAASA,EACTG,SAAUA,EACV0Y,YAAa92D,KAAK82D,cAClBC,WAAY/2D,KAAK+2D,aACjBC,eAAgBh3D,KAAKg3D,iBACrBpF,WAAY5xD,KAAK4xD,WACjBhW,QAAS57C,KAAK47C,QACdl9D,SAAUA,EACV+mE,aAAcA,EACd5nE,GAAIA,EACJxI,YAAaA,GAEjB,GAAC,CAAAvI,IAAA,cAAAlF,MAED,WACE,OAAOo4B,KAAKvxB,MAAM0nF,mBACpB,GAAC,CAAArpF,IAAA,aAAAlF,MAED,WACE,IAAAmoF,EAA6D/vD,KAAKvxB,MAA1DomF,EAAa9E,EAAb8E,cAAeuB,EAAoBrG,EAApBqG,qBAAsB/gF,EAAW06E,EAAX16E,YACvC4hE,EAAqBj3C,KAAKvxB,MAAM2E,OAAOiB,SAAvC4iE,iBAKN,OAJI5hE,IAEF4hE,EAD6Bh/D,GAAe+nB,KAAKvxB,MAAM2E,OAAQiC,GACvB4hE,mBAEtCmf,KAGAnf,GACK4d,EAAgB5d,EAG3B,GAAC,CAAAnqE,IAAA,iBAAAlF,MAED,WACE,OAAQo4B,KAAKvxB,MAAMqS,MACrB,GAAC,CAAAhU,IAAA,iBAAAlF,MAED,WACE,IAAOsc,EAAa8b,KAAKvxB,MAAlByV,UACP,OAAOA,EAAYA,EAAUhD,WAAWC,UAAUjT,IAAI8xB,KAAKlD,YAAc,IAC3E,GAAC,CAAAhwB,IAAA,aAAAlF,MAED,SAAWwW,GACT,GAAKA,EAAL,CAGA,IAAM3P,EAAQuxB,KAAKvxB,MACZ2E,EAAmG3E,EAAnG2E,OAAQuuE,EAA2FlzE,EAA3FkzE,QAAS0D,EAAkF52E,EAAlF42E,YAAa3mE,EAAqEjQ,EAArEiQ,SAAUrJ,EAA2D5G,EAA3D4G,YAAaggF,EAA8C5mF,EAA9C4mF,oBAAqB/C,EAAyB7jF,EAAzB6jF,sBAE3E7sF,EADkC,SAApB2Y,EAAKpH,IAAI,SAA6D,MAAvCoH,EAAKO,MAAM,CAAC,aAAc,UAClD,aAAeP,EAAKpH,IAAI,QAEnD,OACEgoE,EAAAA,cAACsZ,IAAItS,EAAAA,GAAAA,GAAA,CACHl5E,IAAKsR,EAAKpH,IAAI,MACd6G,GAAIO,EAAKpH,IAAI,MACbssC,QAAS70C,EAAMoP,GACfxX,KAAM+X,EAAKpH,IAAI,QACfvR,KAAMA,EACN8e,WAAYnG,EAAKpH,IAAI,cACrB5D,OAAQA,EACRuuE,QAASA,EACTz9D,UAAW9F,EAAKpH,IAAI,aACpB3B,YAAaA,EACbggF,oBAAqBA,EACrB/C,sBAAuBA,EACvBD,kBAAmBryD,KAAKu4D,yBAAyBn6E,GACjDy2E,cAAe70D,KAAKw4D,qBAAqBp6E,GACzC02E,wBAAyB90D,KAAKqyD,oBAC9BhN,YAAaA,EACbC,gBAAiBtlD,KAAKvxB,MAAM62E,gBAC5B9mE,eAAgBE,GACZshB,KAAKy4D,kBAAkBr6E,IA1B/B,CA6BF,GAAC,CAAAtR,IAAA,oBAAAlF,MAED,SAAkB8wF,GAChB,MAAO,CAAC,CACV,GAAC,CAAA5rF,IAAA,oBAAAlF,MAED,WACE,OAAIo4B,KAAKvxB,MAAMiQ,SACN,EACFshB,KAAKvxB,MAAM4jF,iBACpB,GAAC,CAAAvlF,IAAA,uBAAAlF,MAED,SAAqBwW,GACnB,MAAyB,eAArBA,EAAKpH,IAAI,QACJmN,GAAyB/F,GAE3B4hB,KAAKvxB,MAAMomF,aACpB,GAAC,CAAA/nF,IAAA,2BAAAlF,MAED,SAAyB8wF,GACvB,OAAI14D,KAAKvxB,MAAMiQ,SACN,EACFshB,KAAKqyD,mBACd,GAAC,CAAAvlF,IAAA,eAAAlF,MAED,WACE,IAAAgsF,EAAyE5zD,KAAKvxB,MAAtE2E,EAAMwgF,EAANxgF,OAAQ0N,EAAM8yE,EAAN9yE,OAAQpC,EAAQk1E,EAARl1E,SAAUrJ,EAAWu+E,EAAXv+E,YAAai9E,EAAqBsB,EAArBtB,sBACzCD,EAAoBryD,KAAKqyD,oBAC3BxkE,EAAaza,EAAOiB,SAASwZ,aAAe/M,GAAUuxE,EAAoB,IAAM3zE,EAIpF,OAHIrJ,IACFwY,EAAaA,GAAcykE,GAEtBzkE,CACT,GAAC,CAAA/gB,IAAA,aAAAlF,MAED,WACE,IAAQs9E,EAA2BllD,KAAKvxB,MAAhCy2E,uBACF2M,EAAO7xD,KAAK6xD,KACZ6B,EAAO1U,EAAAA,cAAC6S,EAAI,CAChBpsF,KAAK,SAEP,OAAOu6B,KAAK6yD,gBAAmB7T,EAAAA,cAAA,OAC7BlyE,IAAI,kBACJ6mF,YAAazO,EACbL,UAAW,uCACX6O,EACJ,GAAC,CAAA5mF,IAAA,qBAAAlF,MAED,WACE,IAAAmsF,EAA4C/zD,KAAKvxB,MAAzC4G,EAAW0+E,EAAX1+E,YAAaygF,EAAkB/B,EAAlB+B,mBAErB,OAAOzgF,EAAc2qB,KAAK24D,gCAAgCtjF,GAAeygF,CAC3E,GAAC,CAAAhpF,IAAA,kCAAAlF,MAED,WAAmD,IAAnBygC,EAAU7+B,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAC3C2qF,EAAqCn0D,KAAKvxB,MAAnC2E,EAAM+gF,EAAN/gF,OAAQ0iF,EAAkB3B,EAAlB2B,mBACT5vE,EAAmBjO,GAAe7E,EAAQi1B,GAChD,GAAIniB,SAAAA,EAAkBE,aAAc,CAClC,IAC2Cpf,EADvCo0D,EAAW,CAAC,EAAE7zD,E,+4BAAAC,CACJ0e,EAAiBE,cAAY,IAA3C,IAAA7e,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA6C,KAApC5B,EAACiB,EAAAY,MACFke,EAAUgwE,EAAmB/vF,GAC/B+f,IACFs1C,EAASr1D,GAAK+f,EAElB,CAAC,OAAA7d,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACD,OAAOizD,CACT,CACA,OAAO06B,CACT,GAAC,CAAAhpF,IAAA,cAAAlF,MAED,WACE,IAAAgxF,EAGI54D,KAAKvxB,MAFP2E,EAAMwlF,EAANxlF,OAAQ8Q,EAAS00E,EAAT10E,UAAWrG,EAAE+6E,EAAF/6E,GACnBg4E,EAAmB+C,EAAnB/C,oBAAqBva,EAAcsd,EAAdtd,eAAgB/0D,EAAGqyE,EAAHryE,IAAKg1D,EAAMqd,EAANrd,OAAQ78D,EAAQk6E,EAARl6E,SAGpDhK,EAAwCtB,EAAOiB,SAAxCw/E,EAAmBn/E,EAAnBm/E,oBAAqBjkE,EAAQlb,EAARkb,SACtBkmE,EAAqB91D,KAAK81D,qBAChC,IAAK91D,KAAKg4D,YACR,OAAO,KACT,IAAK9zE,IAAcA,EAAUvE,KAC3B,OAAO,KAET,IAAM0nE,EAAc,CAClBtgD,SAAU/G,KAAK+3D,aACf3Q,SAAUyM,GAAuBn1E,EACjCm3E,oBAAqBA,EACrBva,eAAgBuY,EAAsBpM,GAAUnM,EAChDwa,mBAAoBA,EACpB1iF,OAAQA,EACRmT,IAAKA,IAAO,EACZ1I,GAAIA,EACJ09D,OAAQsY,EAAsBpM,GAAUlM,EACxC3rD,SAAUA,EACVgoE,QAAS53D,KAAK43D,UACdl5E,SAAUA,GAENg5E,EAAQ13D,KAAK03D,MACnB,OACE1Y,EAAAA,cAAC0Y,GAAK1R,EAAAA,GAAAA,GAAA,CACJl5E,IAAI,eACAu6E,GAGV,GAAC,CAAAv6E,IAAA,eAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAA,OAAKlyE,IAAI,qBAAqB+3E,UAAW,uBACtC7kD,KAAK3D,cACL2D,KAAKy0D,aAGZ,GAAC,CAAA3nF,IAAA,SAAAlF,MAED,WACE,OAAOo3E,EAAAA,cAAAA,EAAAA,SAAA,KACJh/C,KAAK64D,sBACL74D,KAAK84D,wBACL94D,KAAK+4D,sBAEV,IAAC,CAhYoB,CAAS7W,EAAAA,WAAnBoV,GACJnV,UAAY,CACjBkQ,kBAAmBjQ,IAAAA,OACnB0T,mBAAoB1T,IAAAA,OAAiBC,WACrC8T,oBAAqB/T,IAAAA,KAAeC,WACpC+T,qBAAsBhU,IAAAA,KACtBthE,OAAQshE,IAAAA,KAAeC,WACvB97D,IAAK67D,IAAAA,KACLyT,oBAAqBzT,IAAAA,OACrBhvE,OAAQgvE,IAAAA,OAAiBC,WACzBxkE,GAAIukE,IAAAA,OAAiBC,WACrB/+B,QAAS8+B,IAAAA,OACT/7E,KAAM+7E,IAAAA,IACNl+D,UAAWk+D,IAAAA,IACXmD,aAAcnD,IAAAA,KACdkD,gBAAiBlD,IAAAA,KACjB1jE,SAAU0jE,IAAAA,KACVqD,aAAcrD,IAAAA,KACd/sE,YAAa+sE,IAAAA,OAEb8C,uBAAwB9C,IAAAA,KACxBiD,YAAajD,IAAAA,KACbnE,QAASmE,IAAAA,KAAeC,WACxBjE,SAAUgE,IAAAA,KAAeC,WACzBuP,WAAYxP,IAAAA,KAAeC,WAC3B/G,eAAgB8G,IAAAA,KAAeC,WAC/B9G,OAAQ6G,IAAAA,KAAeC,WACvBzG,QAASwG,IAAAA,KAAeC,WACxBV,QAASS,IAAAA,OAAiBC,YAuW9B,SAAesT,GAAe1Q,GAAU,QAAVA,CAAmB6C,GAAcwP,KAAc,S,mKCnZtE,IAAM0B,GAAgB,SAAAhU,GAAA,SAAAgU,IAAA,OAAA1X,EAAAA,EAAAA,GAAA,KAAA0X,G,EAAA,K,EAAAA,E,EAAAxvF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAAoX,EAAAhU,IAAAnD,EAAAA,EAAAA,GAAAmX,EAAA,EAAAlsF,IAAA,SAAAlF,MAC3B,WACE,IAAAo6E,EAIIhiD,KAAKvxB,MAHP2E,EAAM4uE,EAAN5uE,OACA6qE,EAAO+D,EAAP/D,QAAS8Y,EAAU/U,EAAV+U,WAAYC,EAAchV,EAAdgV,eAAgBpF,EAAU5P,EAAV4P,WACrChW,EAAOoG,EAAPpG,QAASl9D,EAAQsjE,EAARtjE,SAAU+mE,EAAYzD,EAAZyD,aAAc5nE,EAAEmkE,EAAFnkE,GAEnC7J,EAIIZ,EAAOiB,SAHTw/E,EAAmB7/E,EAAnB6/E,oBAAqBrkE,EAAYxb,EAAZwb,aAAcG,EAAa3b,EAAb2b,cACnC2M,EAAYtoB,EAAZsoB,aAAcC,EAAUvoB,EAAVuoB,WAAYK,EAAY5oB,EAAZ4oB,aAAcJ,EAAiBxoB,EAAjBwoB,kBACxCvN,EAASjb,EAATib,UAAWC,EAAWlb,EAAXkb,YAAa8kE,EAAQhgF,EAARggF,SAAUlmE,EAAe9Z,EAAf8Z,gBAE9B+jE,EAAO,SAAC9N,GAAE,OAAKxnD,EAAWwnD,EAAI3wE,EAAO0d,IAAI,EACzCghE,EAAM,SAAC/N,GAAE,OAAKznD,EAAaynD,EAAI3wE,EAAO0d,IAAI,EAC1CkhE,EAAS,SAACjO,GAAE,OAAKnnD,EAAamnD,EAAI3wE,EAAO0d,IAAI,EAC7CihE,EAAS,SAAChO,GAAE,OAAKvnD,EAAkBunD,EAAI3wE,EAAO0d,IAAI,EAElDomE,EAAgBlD,KAAct1E,IAAa+mE,IAAiBzG,EAAAA,cAACgT,EAAM,CACvEvsF,KAAK,OAAOoY,GAAIA,EAAIjW,MAAO8W,EAAU06D,SAAUwC,EAAS7zD,MAAOkH,EAAWglE,aAAc/kE,EAAaglE,WAAW,EAAM9gF,OAAQA,IAG1H6lF,GAAiBpF,GAAuBkD,IAAer4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CAC3ErsF,KAAK,mBAAmBquF,QAAS7V,EAASl2D,MAAOyH,EAAc43D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAG3GwF,GAAexD,GAAuBmD,KAAoBt4E,GAAYA,GAAYoP,IAAoBkxD,EAAAA,cAAC8S,EAAG,CAC9GrsF,KAAK,eAAequF,QAASlC,EAAY7pE,MAAO4H,EAAevc,OAAQA,EAAQmpB,WAAYs1D,IAG7F,OACE7S,EAAAA,cAAA,OAAK6F,UAAW,kBACd7F,EAAAA,cAAC+S,EAAM,CAAC3+E,OAAQA,GACb8jF,EACA+B,EACA5B,GAIT,IAAC,CAtC0B,CAASpR,EAAAA,e,o2BCOtC,IAAOhuE,GAAkB8lD,EAAAA,GAAM4kB,YAAxB1qE,eAGDihF,GAAS,SAAAC,GAWb,SAAAD,EAAYzqF,GAAO,IAAAkrB,E,MAeS,OAfT2nD,EAAAA,EAAAA,GAAA,KAAA4X,G,EACjB,K,EAAAA,E,EAAA,CAAMzqF,G,cAANkrB,G,+EAOF49D,kBAAoB,iBAAM,sBAAsB,EAAA59D,EAEhDk/D,oBAAsB,kBAAM,IAAI,EAAAl/D,EAChCo/D,oBAAsB,kBAAM,IAAI,EAAAp/D,EAChC0C,YAAc,kBAAM,IAAI,EAAA1C,EACxBm9D,YAAc,kBAAM,CAAK,EAAAn9D,EACzBo9D,WAAa,kBAAM,CAAI,EAAAp9D,EACvBq9D,eAAiB,kBAAM,CAAK,EAAAr9D,CAb5B,CAAC,OAAAioD,EAAAA,EAAAA,GAAAsX,EAAAC,IAAAtX,EAAAA,EAAAA,GAAAqX,EAAA,EAAApsF,IAAA,iBAAAlF,MAED,SAAeu4E,GACbiZ,GAAAF,EAAA,wBAAAE,CAAA,CAAqBjZ,GACvB,GAAC,CAAArzE,IAAA,2BAAAlF,MAWD,SAAyB8wF,GACvB,GAAI14D,KAAKvxB,MAAMiQ,SACb,OAAO,EACT,IAAOwF,EAAa8b,KAAKvxB,MAAlByV,UACP,OAAOA,aAAS,EAATA,EAAWvE,OAAQ,CAC5B,GAAC,CAAA7S,IAAA,wBAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAAA,EAAAA,SAAA,KACGh/C,KAAKy0D,aACLz0D,KAAK9D,cACL8D,KAAKq4D,gBAAee,GAAAF,EAAA,+BAAAE,CAAA,IAI3B,GAAC,CAAAtsF,IAAA,cAAAlF,MAED,WACE,IAAAo6E,EAGIhiD,KAAKvxB,MAFP2E,EAAM4uE,EAAN5uE,OAAQ+yE,EAAanE,EAAbmE,cAAeoB,EAAgBvF,EAAhBuF,iBAAkBjB,EAAiBtE,EAAjBsE,kBAAmBpO,EAAQ8J,EAAR9J,SAAUyE,EAAYqF,EAAZrF,aAAcjB,EAAWsG,EAAXtG,YACpFrmE,EAAW2sE,EAAX3sE,YAAawI,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAAS5kC,EAAQsjE,EAARtjE,SAEpB40E,EAAwBlgF,EAAOiB,SAA/Bi/E,oBAER,OAAOtU,EAAAA,cAAC+R,GAAY,CAClBjkF,IAAI,QACJkkF,UAAW,eACX59E,OAAQA,EACR+9E,sBAAsB,EACtBhL,cAAeA,EACfoB,iBAAkBA,EAClBjB,kBAAmBA,EACnBpO,SAAUA,EACVyE,aAAcA,EACdjB,YAAaA,EACbrmE,YAAaA,EACb+xE,SAAUkM,GAAuB50E,EACjCb,GAAIA,EACJylC,QAASA,GAEb,GAAC,CAAAx2C,IAAA,gBAAAlF,MAED,WACE,IAAAynF,EAAsDrvD,KAAKvxB,MAApD2E,EAAMi8E,EAANj8E,OAAQ6qE,EAAOoR,EAAPpR,QAASv/D,EAAQ2wE,EAAR3wE,SAAU+mE,EAAY4J,EAAZ5J,aAAc5nE,EAAEwxE,EAAFxxE,GAEhD,OAAOmhE,EAAAA,cAACga,GAAgB,CACtB5lF,OAAQA,EACR6qE,QAASA,EACT8Y,WAAY/2D,KAAK+2D,aACjBC,eAAgBh3D,KAAKg3D,iBACrBpF,WAAY5xD,KAAK4xD,WACjBhW,QAAS57C,KAAK47C,QACdl9D,SAAUA,EACV+mE,aAAcA,EACd5nE,GAAIA,GAER,GAAC,CAAA/Q,IAAA,oBAAAlF,MAED,SAAkB8wF,GAAO,IAAAW,EACvB/J,EAAuCtvD,KAAKvxB,MAApC03E,EAAamJ,EAAbnJ,cAAennE,EAAGswE,EAAHtwE,IAAK5L,EAAMk8E,EAANl8E,OACtBm/E,EAAsBt6E,GAAe7E,EAAQ+yE,GACnD,MAAO,CACL9wE,YAAa8wE,EACbkP,oBAAqBr2E,EAAM,EAC3BszE,sBAAsD,QAAjC+G,EAAE9G,aAAmB,EAAnBA,EAAqB1kE,kBAAU,IAAAwrE,EAAAA,EAAIjmF,EAAOiB,SAASwZ,WAE9E,IAAC,CA/FY,CAASypE,IAAlB4B,GACG/W,UAASt8E,GAAAA,GAAA,GACXyxF,GAAWnV,WAAS,IACvBgE,cAAe/D,IAAAA,IACfmF,iBAAkBnF,IAAAA,OAClB/sE,YAAa+sE,IAAAA,OACblK,SAAUkK,IAAAA,KACV1G,YAAa0G,IAAAA,KACbpjE,IAAKojE,IAAAA,SA2FT,SAAeuT,GAAe1Q,GAAU,mBAAVA,CAA8B6C,GAAcoR,KAAa,c,mJC7GhF,IAAMI,GAAmB,SAAAtU,GAAA,SAAAsU,IAAA,OAAAhY,EAAAA,EAAAA,GAAA,KAAAgY,G,EAAA,K,EAAAA,E,EAAA9vF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAA0X,EAAAtU,IAAAnD,EAAAA,EAAAA,GAAAyX,EAAA,EAAAxsF,IAAA,SAAAlF,MAC9B,WACE,IAAAo6E,EAIIhiD,KAAKvxB,MAHP2E,EAAM4uE,EAAN5uE,OACA6qE,EAAO+D,EAAP/D,QAASG,EAAQ4D,EAAR5D,SAAU2Y,EAAU/U,EAAV+U,WAAYD,EAAW9U,EAAX8U,YAAaE,EAAchV,EAAdgV,eAAgBpF,EAAU5P,EAAV4P,WAC5DhW,EAAOoG,EAAPpG,QAASl9D,EAAQsjE,EAARtjE,SAAU+mE,EAAYzD,EAAZyD,aAAc5nE,EAAEmkE,EAAFnkE,GAEnC7J,EAIIZ,EAAOiB,SAHTw/E,EAAmB7/E,EAAnB6/E,oBAAqBpkE,EAAezb,EAAfyb,gBAAiBC,EAAgB1b,EAAhB0b,iBAAkBC,EAAa3b,EAAb2b,cACxD2M,EAAYtoB,EAAZsoB,aAAcC,EAAUvoB,EAAVuoB,WAAYK,EAAY5oB,EAAZ4oB,aAAcJ,EAAiBxoB,EAAjBwoB,kBACxCvN,EAASjb,EAATib,UAAWC,EAAWlb,EAAXkb,YAAa8kE,EAAQhgF,EAARggF,SAAUlmE,EAAe9Z,EAAf8Z,gBAE9B+jE,EAAO,SAAC9N,GAAE,OAAKxnD,EAAWwnD,EAAI3wE,EAAO0d,IAAI,EACzCghE,EAAM,SAAC/N,GAAE,OAAKznD,EAAaynD,EAAI3wE,EAAO0d,IAAI,EAC1CkhE,EAAS,SAACjO,GAAE,OAAKnnD,EAAamnD,EAAI3wE,EAAO0d,IAAI,EAC7CihE,EAAS,SAAChO,GAAE,OAAKvnD,EAAkBunD,EAAI3wE,EAAO0d,IAAI,EAElDomE,EAAgBlD,KAAct1E,IAAa+mE,IAAiBzG,EAAAA,cAACgT,EAAM,CACvEvsF,KAAK,OAAOoY,GAAIA,EAAIjW,MAAO8W,EAAU06D,SAAUwC,EAAS7zD,MAAOkH,EAAWglE,aAAc/kE,EAAa9b,OAAQA,IAGzG6lF,GAAiBpF,GAAuBkD,IAAer4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CAC3ErsF,KAAK,aAAaquF,QAAS7V,EAASl2D,MAAO0H,EAAiB23D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAGxG0H,GAAkB1F,GAAuBiD,IAAgBp4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CAC7ErsF,KAAK,cAAcquF,QAAS1V,EAAUr2D,MAAO2H,EAAkB03D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAG3GwF,GAAexD,GAAuBmD,KAAoBt4E,GAAYA,GAAYoP,IAAoBkxD,EAAAA,cAAC8S,EAAG,CAC9GrsF,KAAK,eAAequF,QAASlC,EAAY7pE,MAAO4H,EAAevc,OAAQA,EAAQmpB,WAAYs1D,IAG7F,OACE7S,EAAAA,cAAA,OAAK6F,UAAW,qCACd7F,EAAAA,cAAC+S,EAAM,CAAC3+E,OAAQA,GACb8jF,EACA+B,EACAM,EACAlC,GAIT,IAAC,CA3C6B,CAASpR,EAAAA,e,4tBCWzC,IAAAvD,GAA+C3kB,EAAAA,GAAM4kB,YAA9C1qE,GAAcyqE,GAAdzqE,eAAgBqB,GAAoBopE,GAApBppE,qBAChBiQ,GAA4Cw0C,EAAAA,GAAM0qB,UAAlDl/D,yCACAvF,GAAqC+5C,EAAAA,GAAM4mB,UAA3C3gE,kCAGDw1E,GAAY,SAAAL,GAgBhB,SAAAK,EAAY/qF,GAAO,IAAAkrB,E,MA2BQ,OA3BR2nD,EAAAA,EAAAA,GAAA,KAAAkY,G,EACjB,K,EAAAA,E,EAAA,CAAM/qF,G,cAANkrB,G,+EAOF49D,kBAAoB,iBAAM,0BAA0B,EAAA59D,EAEpDo/D,oBAAsB,kBAAM,IAAI,EAAAp/D,EAiBhCq9D,eAAiB,kBAAM,CAAI,EAAAr9D,CAzB3B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA4X,EAAAL,IAAAtX,EAAAA,EAAAA,GAAA2X,EAAA,EAAA1sF,IAAA,iBAAAlF,MAED,SAAeu4E,G,aACbqZ,E,EAAA,K,mDAAA,iB,wCAAA,CAAqBrZ,GACvB,GAAC,CAAArzE,IAAA,cAAAlF,MAMD,WACE,OAAOo4B,KAAKvxB,MAAM0nF,mBACpB,GAAC,CAAArpF,IAAA,aAAAlF,MAED,WACE,IAAAo6E,EAAgChiD,KAAKvxB,MAA9B2E,EAAM4uE,EAAN5uE,OAAQ+yE,EAAanE,EAAbmE,cACToM,EAAsBt6E,GAAe7E,EAAQ+yE,GAC7ClP,EAAmBsb,aAAmB,EAAnBA,EAAqBtb,iBACxC4d,EAAgB70D,KAAKvxB,MAAMomF,cACjC,OAAI5d,GACK4d,EAAgB5d,CAG3B,GAAC,CAAAnqE,IAAA,sBAAAlF,MAID,WACE,OACEo3E,EAAAA,cAAA,OAAKlyE,IAAI,eAAe+3E,UAAWgB,KACjC,gBACA7lD,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAKm4D,eAAiB,eAAiB,GACvCn4D,KAAK6yD,eAAiB,aAAe,aACrC7yD,KAAKg4D,YAAc,cAAgB,gBAElCh4D,KAAKo4D,eACLp4D,KAAKy5D,mBACLz5D,KAAKq4D,gBAGZ,GAAC,CAAAvrF,IAAA,eAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAA,OAAK6F,UAAW,uBACb7kD,KAAK3D,cACL2D,KAAKy0D,aAGZ,GAAC,CAAA3nF,IAAA,mBAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAA,OAAK6F,UAAW,6BACb7kD,KAAK9D,cACL8D,KAAK7D,iBACL6D,KAAK6sD,eACL7sD,KAAKu0D,cAGZ,GAAC,CAAAznF,IAAA,cAAAlF,MAED,WACE,IAAAynF,EAA6BrvD,KAAKvxB,MAA3B2E,EAAMi8E,EAANj8E,OAAQ+8C,EAAUk/B,EAAVl/B,WACfn8C,EAA8CZ,EAAOiB,SAA7CgpB,EAAerpB,EAAfqpB,gBAAiB/O,EAAgBta,EAAhBsa,iBACnBmlE,GAAW7tF,EAAAA,GAAAA,IAAKuqD,aAAU,EAAVA,EAAYhvC,YAAa,IAAKvW,QAAO,SAAA1C,GAAC,QAAMA,CAAC,IAAE2nD,SAAW,KAChF,OAAOvhC,GAAoBmlE,GACpBzU,EAAAA,cAAA,OAAK6F,UAAU,qBACfxnD,EAAkBA,EAAgB,CAAC9qB,MAAOkhF,GAAWrgF,EAAO0d,KAAO2iE,EAE5E,GAAC,CAAA3mF,IAAA,UAAAlF,MAED,WAAU,IAAAyxF,EACR/J,EAAgCtvD,KAAKvxB,MAA9B2E,EAAMk8E,EAANl8E,OAAQ+yE,EAAamJ,EAAbnJ,cACToM,EAAsBt6E,GAAe7E,EAAQ+yE,GACnD,OAAmC,QAAnCkT,EAAO9G,aAAmB,EAAnBA,EAAqBqF,eAAO,IAAAyB,EAAAA,EAAIjmF,EAAOiB,SAASujF,OACzD,GAAC,CAAA9qF,IAAA,qBAAAlF,MAED,WACE,IAAQu+E,EAAkBnmD,KAAKvxB,MAAvB03E,cACR,OAAOnmD,KAAK24D,gCAAgCxS,EAC9C,GAAC,CAAAr5E,IAAA,cAAAlF,MAED,WACE,IAAA6nF,EAGIzvD,KAAKvxB,MAFP2E,EAAMq8E,EAANr8E,OAAQ+yE,EAAasJ,EAAbtJ,cAAeoB,EAAgBkI,EAAhBlI,iBAAkBjB,EAAiBmJ,EAAjBnJ,kBAAmBpO,EAAQuX,EAARvX,SAAUwD,EAAW+T,EAAX/T,YAAaiB,EAAY8S,EAAZ9S,aACnFtnE,EAAWo6E,EAAXp6E,YAAawI,EAAE4xE,EAAF5xE,GAAIylC,EAAOmsC,EAAPnsC,QAAS5kC,EAAQ+wE,EAAR/wE,SAEpB40E,EAAwBlgF,EAAOiB,SAA/Bi/E,oBAER,OAAOtU,EAAAA,cAAC+R,GAAY,CAClBjkF,IAAI,QACJkkF,UAAW,cACX59E,OAAQA,EACR+9E,sBAAsB,EACtBhL,cAAeA,EACfoB,iBAAkBA,EAClBjB,kBAAmBA,EACnBpO,SAAUA,EACVyE,aAAcA,EACdjB,YAAaA,EACbrmE,YAAaA,EACb+xE,SAAUkM,GAAuB50E,EACjCb,GAAIA,EACJylC,QAASA,GAEb,GAAC,CAAAx2C,IAAA,iBAAAlF,MAED,WACE,IAAAmoF,EAAqG/vD,KAAKvxB,MAAnG2E,EAAM28E,EAAN38E,OAAQ+yE,EAAa4J,EAAb5J,cAAeoB,EAAgBwI,EAAhBxI,iBAAkBhB,EAAgBwJ,EAAhBxJ,iBAA4BzK,GAAFiU,EAAR7X,SAAqB6X,EAAXjU,aAAap9D,EAAQqxE,EAARrxE,SACjF40E,EAAwBlgF,EAAOiB,SAA/Bi/E,oBACFhL,EAA4BhvE,GAAqBlG,EAAQ+yE,EAAeI,IAAqB,CAAC,EAC9FqM,EAAetK,EAA0BsK,aACzCvK,EAAoBlC,GAAiByM,GAAgBtK,EAA0BE,oBAC/EJ,EAAejC,IAAkByM,EAEvC,OAAO5T,EAAAA,cAACmJ,GAAe,CACrBr7E,IAAI,WACJkkF,UAAW,kBACX59E,OAAQA,EACR+yE,cAAeA,EACfoB,iBAAkBA,EAClBhB,iBAAkBA,EAClBzK,YAAaA,EACbsM,aAAcA,EACdC,kBAAmBA,EACnBC,0BAA2BA,EAC3BlB,SAAUkM,GAAuB50E,EACjCb,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,SAExB,GAAC,CAAAx2C,IAAA,sBAAAlF,MAED,WACE,IAAAgsF,EAA4B5zD,KAAKvxB,MAA1ByV,EAAS0vE,EAAT1vE,UAAW9Q,EAAMwgF,EAANxgF,OACZggF,EAAWpzD,KAAKqzD,kBAAkBrzD,KAAKvxB,OAC7C,OAAO8a,GAAyC6pE,EAAUlvE,EAAW9Q,EACvE,GAAC,CAAAtG,IAAA,oBAAAlF,MAED,SAAiB2B,GAKd,IAJD48E,EAAa58E,EAAb48E,cAAeoB,EAAgBh+E,EAAhBg+E,iBAAkBjB,EAAiB/8E,EAAjB+8E,kBACjCC,EAAgBh9E,EAAhBg9E,iBAAkB/hE,EAAejb,EAAfib,gBAClB5c,EAAK2B,EAAL3B,MAAO6iB,EAASlhB,EAATkhB,UAAsC0lC,GAAnB5mD,EAARiQ,SAAyBjQ,EAAfsiC,gBAA2BtiC,EAAV4mD,YAG7C,OAHmE5mD,EAAV6mD,WAGlD,CACL37C,MAAO0xE,EACP57D,SAAUg9D,EACV7rE,UAAW4qE,EACX/tE,SAAUguE,EACV/hE,gBAAAA,EACA5c,MAAAA,EACA6iB,UAAAA,EAEAjR,SAAU,CAAC,SAEX22C,WAAAA,EACAC,WAAY,KACZ/6C,YAfS9L,EAAX8L,YAiBF,GAAC,CAAAvI,IAAA,eAAAlF,MAED,WACE,IAAAmsF,EAA4D/zD,KAAKvxB,MAA1D2E,EAAM2gF,EAAN3gF,OAAQ+yE,EAAa4N,EAAb5N,cAAeI,EAAgBwN,EAAhBxN,iBAAkB7nE,EAAQq1E,EAARr1E,SACxC80E,EAAwBpgF,EAAOiB,SAA/Bm/E,oBAGR,IAF6BrN,IAAiBI,EAE7B,OAAO,KAExB,IAAMztE,EAASkmE,EAAAA,cAACwN,IAAMxG,EAAAA,GAAAA,GAAA,CACpBl5E,IAAI,SACJqhF,gBAAgB,GACZnuD,KAAKqzD,kBAAkBrzD,KAAKvxB,OAAM,CACtC2E,OAAQA,EACRgmE,SAAWoa,EAA4C/L,GAAtBznD,KAAKvxB,MAAM2qE,SAE5CyD,YAAa4K,GACbL,SAAUoM,GAAuB90E,EACjCb,GAAImiB,KAAKvxB,MAAMoP,GACfylC,QAAStjB,KAAKvxB,MAAM60C,WAGtB,OACE07B,EAAAA,cAACwI,GAAG,CAAC16E,IAAK,cAAckzB,KAAKvxB,MAAM83E,iBAAkB1B,UAAU,eAC5D/rE,EAGP,GAAC,CAAAhM,IAAA,gBAAAlF,MAED,WACE,IAAAusF,EAAgEn0D,KAAKvxB,MAA9D2E,EAAM+gF,EAAN/gF,OAAQ6qE,EAAOkW,EAAPlW,QAASG,EAAQ+V,EAAR/V,SAAU1/D,EAAQy1E,EAARz1E,SAAU+mE,EAAY0O,EAAZ1O,aAAc5nE,EAAEs2E,EAAFt2E,GAE1D,OAAOmhE,EAAAA,cAACsa,GAAmB,CACzBlmF,OAAQA,EACR6qE,QAASA,EACTG,SAAUA,EACV2Y,WAAY/2D,KAAK+2D,aACjBD,YAAa92D,KAAK82D,cAClBE,eAAgBh3D,KAAKg3D,iBACrBpF,WAAY5xD,KAAK4xD,WACjBhW,QAAS57C,KAAK47C,QACdl9D,SAAUA,EACV+mE,aAAcA,EACd5nE,GAAIA,GAER,GAAC,CAAA/Q,IAAA,2BAAAlF,MAGD,SAAyB8wF,GACvB,GAAI14D,KAAKvxB,MAAMiQ,SACb,OAAO,EACT,IAAAk6E,EAAwB54D,KAAKvxB,MAAtByV,EAAS00E,EAAT10E,UAAWrG,EAAE+6E,EAAF/6E,GAClB,OAAOmG,GAAkC,CACvCnG,GAAAA,EAAIpY,KAAM,aAAcye,UAAAA,GAE5B,GAAC,CAAApX,IAAA,oBAAAlF,MAED,SAAkB8wF,GAAO,IAAAgB,EACvBC,EAAuC35D,KAAKvxB,MAApC03E,EAAawT,EAAbxT,cAAennE,EAAG26E,EAAH36E,IAAK5L,EAAMumF,EAANvmF,OACtBm/E,EAAsBt6E,GAAe7E,EAAQ+yE,GACnD,MAAO,CACL9wE,YAAa8wE,EACbkP,oBAAqBr2E,EAAM,EAC3BszE,sBAAsD,QAAjCoH,EAAEnH,aAAmB,EAAnBA,EAAqB1kE,kBAAU,IAAA6rE,EAAAA,EAAItmF,EAAOiB,SAASwZ,WAE9E,IAAC,CArPe,CAASypE,IAArBkC,GACGrX,UAASt8E,GAAAA,GAAA,GACXyxF,GAAWnV,WAAS,IACvBgE,cAAe/D,IAAAA,IACfmF,iBAAkBnF,IAAAA,OAClBmE,iBAAkBnE,IAAAA,OAClBx6E,MAAOw6E,IAAAA,IACP/sE,YAAa+sE,IAAAA,OACblK,SAAUkK,IAAAA,KACV1G,YAAa0G,IAAAA,KACbtG,YAAasG,IAAAA,KACbhJ,SAAUgJ,IAAAA,KACVjyB,WAAYiyB,IAAAA,IACZpjE,IAAKojE,IAAAA,SA4OT,SAAeuT,GAAe1Q,GAAU,uBAAVA,CAAkC6C,GAAc0R,KAAgB,c,mJCzQ9F,IAAMlD,GAA2B,CAC/BC,QAAS,qBACTC,UAAW,qBACXC,SAAU,qBACVC,WAAY,qBACZC,aAAc,qBACdC,YAAa,sBAKFgD,GAAkB,SAAA5U,GAAA,SAAA4U,IAAA,OAAAtY,EAAAA,EAAAA,GAAA,KAAAsY,G,EAAA,K,EAAAA,E,EAAApwF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAAgY,EAAA5U,IAAAnD,EAAAA,EAAAA,GAAA+X,EAAA,EAAA9sF,IAAA,SAAAlF,MAC7B,WACE,IAAAo6E,EAGIhiD,KAAKvxB,MAFP2E,EAAM4uE,EAAN5uE,OACA+qE,EAAY6D,EAAZ7D,aAAcD,EAAmB8D,EAAnB9D,oBAAqBtC,EAAOoG,EAAPpG,QAASl9D,EAAQsjE,EAARtjE,SAAU+mE,EAAYzD,EAAZyD,aAAc5nE,EAAEmkE,EAAFnkE,GAAIi5E,EAAW9U,EAAX8U,YAAa+C,EAAa7X,EAAb6X,cAEvF7lF,EAIIZ,EAAOiB,SAHTw/E,EAAmB7/E,EAAnB6/E,oBAAqBxkE,EAAYrb,EAAZqb,aAAcC,EAAmBtb,EAAnBsb,oBAAqB2nE,EAAoBjjF,EAApBijF,qBACxD36D,EAAYtoB,EAAZsoB,aAAcC,EAAUvoB,EAAVuoB,WAAYK,EAAY5oB,EAAZ4oB,aAAcJ,EAAiBxoB,EAAjBwoB,kBACxCvN,EAASjb,EAATib,UAAWC,EAAWlb,EAAXkb,YAAa8kE,EAAQhgF,EAARggF,SAEpBnC,EAAO,SAAC9N,GAAE,OAAKxnD,EAAWwnD,EAAI3wE,EAAO0d,IAAI,EACzCghE,EAAM,SAAC/N,GAAE,OAAKznD,EAAaynD,EAAI3wE,EAAO0d,IAAI,EAC1CkhE,EAAS,SAACjO,GAAE,OAAKnnD,EAAamnD,EAAI3wE,EAAO0d,IAAI,EAC7CihE,EAAS,SAAChO,GAAE,OAAKvnD,EAAkBunD,EAAI3wE,EAAO0d,IAAI,EAClD5O,EAAWo0E,GAAyBW,GAlBtB,YAoBdC,EAAgBlD,KAAct1E,IAAa+mE,IAAiBzG,EAAAA,cAACgT,EAAM,CACvEvsF,KAAK,OAAOoY,GAAIA,EAAIjW,MAAO8W,EAAU06D,SAAUwC,EAAS7zD,MAAOkH,EAAWglE,aAAc/kE,EAAa9b,OAAQA,IAGzG0mF,GAAmBjG,GAAuBiD,IAAgBp4E,GAAYsgE,EAAAA,cAAC8S,EAAG,CAC9ErsF,KAAK,eAAequF,QAAS3V,EAAcp2D,MAAOsH,EAAc+3D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAG5GkI,GAA0BlG,GAAuBgG,IAAkBn7E,GAAYsgE,EAAAA,cAAC8S,EAAG,CACvFrsF,KAAK,sBAAsBquF,QAAS5V,EAAqBn2D,MAAOuH,EAAqB83D,SAAU1oE,EAAUtL,OAAQA,EAAQmpB,WAAYs1D,IAGvI,OACE7S,EAAAA,cAAA,OAAK6F,UAAS,kBAAA99E,OAAoBmb,IAChC88D,EAAAA,cAAC+S,EAAM,CAAC3+E,OAAQA,GACb8jF,EACA4C,EACAC,GAIT,IAAC,CAtC4B,CAAS9T,EAAAA,e,kXCJxC,IAAAmF,GAAsErtB,EAAAA,GAAM4mB,UAArE3gE,GAAiConE,GAAjCpnE,kCAAmCG,GAAwBinE,GAAxBjnE,yBAGpC61E,GAAW,SAAAb,GAKf,SAAAa,EAAYvrF,GAAO,IAAAkrB,E,MAalB,OAbkB2nD,EAAAA,EAAAA,GAAA,KAAA0Y,G,EACjB,K,EAAAA,E,EAAA,CAAMvrF,G,cAANkrB,G,+EAOF49D,kBAAoB,iBAAM,wBAAwB,EAAA59D,EAElDo/D,oBAAsB,kBAAM,IAAI,EAAAp/D,EAChCsgE,eAAiB,WAAM,IAAAC,EACrB,OAA2B,QAApBA,EAAAvgE,EAAKlrB,MAAMyV,iBAAS,IAAAg2E,OAAA,EAApBA,EAAsBv6E,OAAQga,EAAKlrB,MAAMyV,UAAUtZ,QAAO,SAAAtG,GAAC,OAA0B,MAAtBA,EAAE0S,IAAI,YAAoB,IAAE2I,KAAO,CAC3G,EAACga,CAXD,CAAC,OAAAioD,EAAAA,EAAAA,GAAAoY,EAAAb,IAAAtX,EAAAA,EAAAA,GAAAmY,EAAA,EAAAltF,IAAA,iBAAAlF,MAED,SAAeu4E,G,aACb6Z,E,EAAA,K,mDAAA,iB,wCAAA,CAAqB7Z,GACvB,GAAC,CAAArzE,IAAA,cAAAlF,MAQD,WAAc,IAAAuyF,EACJnjB,EAAqBh3C,KAAKvxB,MAAM2E,OAAOiB,SAAvC2iE,iBACFojB,GAAoC,QAApBD,EAAAn6D,KAAKvxB,MAAMyV,iBAAS,IAAAi2E,OAAA,EAApBA,EAAsBx6E,OAAQ,EACpD,OAAIq3D,GACKojB,EAAgBpjB,CAG3B,GAAC,CAAAlqE,IAAA,aAAAlF,MACD,WACE,OAAO,CACT,GAAC,CAAAkF,IAAA,oBAAAlF,MAED,WAAoB,IAAAyyF,EAGdC,GADsC,QAApBD,EAAAr6D,KAAKvxB,MAAMyV,iBAAS,IAAAm2E,OAAA,EAApBA,EAAsB16E,OAAQ,EAKpD,OAHIqgB,KAAKi6D,kBACPK,IAEKA,CACT,GAAC,CAAAxtF,IAAA,uBAAAlF,MAED,SAAqBwW,GACnB,OAAO+F,GAAyB/F,EAClC,GAAC,CAAAtR,IAAA,2BAAAlF,MAED,SAAyBwW,GAAM,IAAAm8E,EAC7B,GAAIv6D,KAAKvxB,MAAMiQ,SACb,OAAO,EACT,IAAA87E,EAA+Cx6D,KAAKvxB,MAAM2E,OAAOiB,SAAzDomF,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAGvBJ,GADsC,QAApBC,EAAAv6D,KAAKvxB,MAAMyV,iBAAS,IAAAq2E,OAAA,EAApBA,EAAsB56E,OAAQ,EAEhDqgB,KAAKi6D,kBACPK,IAGF,IACIr2E,EADgBD,GAAkC5F,GAItD,OAFW,GAAP6F,GAAYy2E,GAAmBD,GAAqBH,EAAiB,IACvEr2E,EAAM,KACDA,CACT,GAAC,CAAAnX,IAAA,YAAAlF,MAED,WAEE,OAAO,CACT,GAAC,CAAAkF,IAAA,sBAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAA,OAAKlyE,IAAI,eAAe+3E,UAAWgB,KACjC,gBACA7lD,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAKm4D,eAAiB,eAAiB,GACvCn4D,KAAK6yD,eAAiB,aAAe,aACrC7yD,KAAKg4D,YAAc,cAAgB,gBAElCh4D,KAAKo4D,eACLp4D,KAAKq4D,gBAGZ,GAAC,CAAAvrF,IAAA,eAAAlF,MAED,WACE,OACEo3E,EAAAA,cAAA,OAAK6F,UAAW,uBACb7kD,KAAK3D,cACL2D,KAAKy0D,aAGZ,GAAC,CAAA3nF,IAAA,cAAAlF,MAED,WAGE,OAFmBo4B,KAAKvxB,MAAhB2E,OAC8BiB,SAA9BwoB,oBACqB,IAC/B,GAAC,CAAA/vB,IAAA,UAAAlF,MAED,WACE,OAAO,CACT,GAAC,CAAAkF,IAAA,gBAAAlF,MAGD,WACE,IAAAo6E,EAAgFhiD,KAAKvxB,MAA9E2E,EAAM4uE,EAAN5uE,OAAQ+qE,EAAY6D,EAAZ7D,aAAcD,EAAmB8D,EAAnB9D,oBAAqBx/D,EAAQsjE,EAARtjE,SAAU+mE,EAAYzD,EAAZyD,aAAc5nE,EAAEmkE,EAAFnkE,GAE1E,OAAOmhE,EAAAA,cAAC4a,GAAkB,CACxBxmF,OAAQA,EACR+qE,aAAcA,EACdD,oBAAqBA,EACrB2b,eAAgB75D,KAAKi6D,iBACrBnD,YAAa92D,KAAK82D,cAClBlb,QAAS57C,KAAK47C,QACdl9D,SAAUA,EACV+mE,aAAcA,EACd5nE,GAAIA,GAER,IAAC,CAtHc,CAASy5E,IAApB0C,GACG7X,U,uWAASt8E,CAAA,GACXyxF,GAAWnV,WAyHlB,SAAewT,GAAe1Q,GAAU,qBAAVA,CAAgC6C,GAAckS,KAAe,gB,o2BC9HvD,IAG9BW,GAAS,SAAAxB,GAQb,SAAAwB,EAAYlsF,GAAO,IAAAkrB,E,MAiDa,OAjDb2nD,EAAAA,EAAAA,GAAA,KAAAqZ,G,EACjB,K,EAAAA,E,EAAA,CAAMlsF,G,cAANkrB,G,+EA8CF49D,kBAAoB,iBAAM,sBAAsB,EAAA59D,EAEhDo/D,oBAAsB,kBAAM,IAAI,EAAAp/D,CA/ChC,CAAC,OAAAioD,EAAAA,EAAAA,GAAA+Y,EAAAxB,IAAAtX,EAAAA,EAAAA,GAAA8Y,EAAA,EAAA7tF,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,MACjBk/E,GAAiB3tD,KAAK7C,wBAAyBkjD,aAAS,EAATA,EAAWjtE,WAAW+sE,aAAS,EAATA,EAAW/sE,QAItF,GAFAgmF,GAAAuB,EAAA,wBAAAvB,CAAA,CAAqBjZ,IAEjBwN,EAAe,CACjB,IAAQv6E,EAAW+sE,EAAX/sE,OACRY,EAAyEZ,EAAOiB,SAAxE8oB,EAAqBnpB,EAArBmpB,sBAAuBC,EAAoBppB,EAApBopB,qBAAsBC,EAAerpB,EAAfqpB,gBACrD2C,KAAK46D,gBAAkB3S,GAAoB70E,EAAQ+pB,GACnD6C,KAAK66D,eAAiB5S,GAAoB70E,EAAQgqB,GAClD4C,KAAKmyD,UAAYlK,GAAoB70E,EAAQiqB,EAC/C,CACF,GAAC,CAAAvwB,IAAA,gBAAAlF,MAED,WACE,OAA+BE,MAAxBk4B,KAAKvxB,MAAMyV,SACpB,GAAC,CAAApX,IAAA,oBAAAlF,MAED,WAEE,OAAOo4B,KAAKvxB,MAAMqmF,uBACpB,GAAC,CAAAhoF,IAAA,2BAAAlF,MAED,SAAyB8wF,GAEvB,OAAI14D,KAAKvxB,MAAMiQ,SACN,EACFshB,KAAKvxB,MAAM4jF,iBACpB,GAAC,CAAAvlF,IAAA,uBAAAlF,MAED,SAAqB8wF,GAEnB,OAAO14D,KAAKvxB,MAAMomF,aACpB,GAAC,CAAA/nF,IAAA,eAAAlF,MAED,WAEE,OAAIo4B,KAAKjd,iBAETq2E,GAAAuB,EAAA,sBAAAvB,CAAA,GACF,GAAC,CAAAtsF,IAAA,sBAAAlF,MAMD,WACE,OACEo3E,EAAAA,cAAA,OAAKlyE,IAAI,eAAe+3E,UAAWgB,KACjC,gBACA7lD,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAK+3D,aAAe,aAAe,GACnC/3D,KAAKm4D,eAAiB,eAAiB,GACvCn4D,KAAK6yD,eAAiB,aAAe,cACrC7yD,KAAKg4D,aAAiBh4D,KAAK+3D,eAAgB/3D,KAAK43D,UAA6B,cAAhB,gBAE5D53D,KAAK86D,mBACL96D,KAAK+6D,qBACL/6D,KAAKq4D,gBAGZ,GAAC,CAAAvrF,IAAA,wBAAAlF,MAED,WACE,OAAIo4B,KAAKjd,gBACA,KAGPi8D,EAAAA,cAAA,OAAK6F,UAAW,oBACb7kD,KAAKg7D,kBACLh7D,KAAKi7D,oBACLj7D,KAAKk7D,cACLl7D,KAAKm7D,mBAGZ,GAAC,CAAAruF,IAAA,mBAAAlF,MAED,WACE,OAAIo4B,KAAKjd,gBACsBid,KAAKvxB,MAAM2E,OAAOiB,SAAvCkb,kBACmB,GAI3ByvD,EAAAA,cAAA,OAAK6F,UAAW,uBACb7kD,KAAK3D,cACL2D,KAAKy0D,aACLz0D,KAAKu0D,cAGZ,GAAC,CAAAznF,IAAA,kBAAAlF,MAED,WACE,OAAIo4B,KAAKjd,gBACA,KACTq2E,GAAAuB,EAAA,+BAAAvB,CAAA,GACF,GAAC,CAAAtsF,IAAA,qBAAAlF,MAED,WACE,OAAIo4B,KAAKjd,gBAELi8D,EAAAA,cAAA,WACGh/C,KAAKk7D,cACLl7D,KAAKu0D,eAIL,IACT,GAAC,CAAAznF,IAAA,cAAAlF,MAED,WACE,OAAIo4B,KAAKjd,iBAETq2E,GAAAuB,EAAA,qBAAAvB,CAAA,GACF,GAAC,CAAAtsF,IAAA,aAAAlF,MAED,WACE,OAAIo4B,KAAKjd,iBAETq2E,GAAAuB,EAAA,oBAAAvB,CAAA,GACF,GAAC,CAAAtsF,IAAA,oBAAAlF,MAED,WACE,IAAMgzF,EAAkB56D,KAAK46D,gBAC7B,OAAuB9yF,MAAnB8yF,EACK,KACF5b,EAAAA,cAAC4b,GAAe5U,EAAAA,GAAAA,GAAA,CACrBl5E,IAAI,iBACAkzB,KAAKvxB,OAEb,GAAC,CAAA3B,IAAA,mBAAAlF,MAED,WACE,IAAMizF,EAAiB76D,KAAK66D,eAC5B,OAAsB/yF,MAAlB+yF,EACK,KACF7b,EAAAA,cAAC6b,GAAc7U,EAAAA,GAAAA,GAAA,CACpBl5E,IAAI,gBACAkzB,KAAKvxB,OAEb,GAAC,CAAA3B,IAAA,cAAAlF,MAED,WACE,IAAAo6E,EAA6BhiD,KAAKvxB,MAA3B2E,EAAM4uE,EAAN5uE,OAAQ+8C,EAAU6xB,EAAV7xB,WACP7hC,EAAqBlb,EAAOiB,SAA5Bia,iBACF6jE,EAAYnyD,KAAKmyD,UACjBsB,GAAW7tF,EAAAA,GAAAA,IAAKuqD,aAAU,EAAVA,EAAYhvC,YAAa,IAAKvW,QAAO,SAAA1C,GAAC,QAAMA,CAAC,IAAE2nD,SAAW,KAChF,OAAOvhC,GAAoBmlE,GACtBzU,EAAAA,cAAA,OAAK6F,UAAU,eACfsN,EAAYnT,EAAAA,cAACmT,EAAS,CAAC5/E,MAAOkhF,IAAeA,EAEpD,GAAC,CAAA3mF,IAAA,cAAAlF,MAED,WACE,IAAAynF,EAAmGrvD,KAAKvxB,MAAhG2E,EAAMi8E,EAANj8E,OAAQsL,EAAQ2wE,EAAR3wE,SAAU9W,EAAKynF,EAALznF,MAAO4R,EAAQ61E,EAAR71E,SAAU22C,EAAUk/B,EAAVl/B,WAAYipB,EAAQiW,EAARjW,SAAUyD,EAAWwS,EAAXxS,YAAaF,EAAY0S,EAAZ1S,aAAc9+D,EAAEwxE,EAAFxxE,GACpF21E,EAAwBpgF,EAAOiB,SAA/Bm/E,oBAEF16E,EAASkmE,EAAAA,cAACwN,GAAM,CACpB1/E,IAAI,SACJ63B,aAAa,EACblwB,MAAO,cACP8D,SAAU,KACV3Q,MAAOA,EACP4R,SAAUA,QAAAA,EAAY,QACtB22C,WAAYA,EACZC,WAAY,KACZh9C,OAAQA,EACRgmE,SAAWoa,EAAiC/L,GAAXrO,EACjCyD,YAAc2W,EAAoC/L,GAAd5K,EACpCF,aAAe6W,EAAqC/L,GAAf9K,EACrCyK,SAAUoM,GAAuB90E,EACjCb,GAAIA,EACJylC,QAAS,OAGX,OACE07B,EAAAA,cAACwI,GAAG,CAAC3C,UAAU,qBACZ/rE,EAGP,GAAC,CAAAhM,IAAA,gBAAAlF,MAED,WACE,IAAA0nF,EAAgEtvD,KAAKvxB,MAA9D2E,EAAMk8E,EAANl8E,OAAQgrE,EAAQkR,EAARlR,SAAUH,EAAOqR,EAAPrR,QAASv/D,EAAQ4wE,EAAR5wE,SAAU+mE,EAAY6J,EAAZ7J,aAAc5nE,EAAEyxE,EAAFzxE,GAC1D,OAAOmhE,EAAAA,cAAC6X,GAAY,CAClBzjF,OAAQA,EACRgrE,SAAUA,EACVH,QAASA,EACT8Y,WAAY/2D,KAAK+2D,aACjBD,YAAa92D,KAAK82D,cAClBE,eAAgBh3D,KAAKg3D,iBACrBpF,WAAY5xD,KAAK4xD,WACjBhW,QAAS57C,KAAK47C,QACdl9D,SAAUA,EACV+mE,aAAcA,EACd5nE,GAAIA,GAER,GAAC,CAAA/Q,IAAA,sBAAAlF,MAED,WAEE,IAAQA,EAAUo4B,KAAKvxB,MAAf7G,MACFwzF,EAAWxzF,GAASA,EAAM+X,KAAO/X,EAAMoP,IAAI,GAAK,KAChDqkF,EAAuB,MAAZD,KAAqB91F,MAAMC,QAAQ61F,IAAYA,EAASv0F,OAAS,GAClF,OAAOuyF,GAAAuB,EAAA,6BAAAvB,CAAA,MAAgCiC,CACzC,IAAC,CA1NY,CAAS/D,IAAlBqD,GACGxY,UAASt8E,GAAAA,GAAA,GACXyxF,GAAWnV,WAAS,IACvB2S,wBAAyB1S,IAAAA,OACzBx6E,MAAOw6E,IAAAA,IACPhJ,SAAUgJ,IAAAA,OAyNd,SAAeuT,GAAe1Q,GAAU,mBAAVA,CAA8B6C,GAAc6S,KAAa,c,4uBCjOvF,IAQMW,GAAgB,SAAC7sF,GAAU,IAAA8sF,EACzBh3E,GAA6B,QAAhBg3E,EAAA9sF,EAAM8V,kBAAU,IAAAg3E,OAAA,EAAhBA,EAAkB/xE,aAAc,CAAC,EAC9C+xB,EAAM11C,GAAA,GAAO0e,GAOnB,OANI9V,EAAM+P,iBACR+8B,EAAO78B,UAAW,GAEhB6F,EAAW7F,WACb68B,EAAOkqC,cAAe,GAEjBlqC,CACT,EAEMigD,GAAU,CACdvxE,KAAM,SAACxb,GAAK,OACVuwE,EAAAA,cAAC2S,IAAI3L,EAAAA,GAAAA,GAAA,GACCsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACf0Q,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBzhF,OAAQ3E,EAAM2E,OACdiyE,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBjwE,YAAa5G,EAAM4G,YACnBggF,oBAAqB5mF,EAAM4mF,oBAC3BP,wBAAyBrmF,EAAMqmF,wBAC/BxC,sBAAuB7jF,EAAM6jF,wBAC7B,EAEJvoE,MAAO,SAACtb,GAAK,OACXuwE,EAAAA,cAACuW,IAAKvP,EAAAA,GAAAA,GAAA,GACAsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACfvuE,OAAQ3E,EAAM2E,OACdi/E,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBxP,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBphE,UAAWzV,EAAMyV,UACjB7O,YAAa5G,EAAM4G,YACnBggF,oBAAqB5mF,EAAM4mF,oBAC3BP,wBAAyBrmF,EAAMqmF,wBAC/BxC,sBAAuB7jF,EAAM6jF,wBAC7B,EAEJmJ,WAAY,SAAChtF,GAAK,OAChBuwE,EAAAA,cAACka,IAASlT,EAAAA,GAAAA,GAAA,GACJsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACfvuE,OAAQ3E,EAAM2E,OACdi/E,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBxP,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBphE,UAAWzV,EAAMyV,UACjB7O,YAAa5G,EAAM4G,YACnBggF,oBAAqB5mF,EAAM4mF,oBAC3BP,wBAAyBrmF,EAAMqmF,wBAC/BxC,sBAAuB7jF,EAAM6jF,wBAC7B,EAEJoJ,eAAgB,SAACjtF,GAAK,OACpBuwE,EAAAA,cAACwa,IAAYxT,EAAAA,GAAAA,GAAA,GACPsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACfvuE,OAAQ3E,EAAM2E,OACdi/E,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBxP,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBphE,UAAWzV,EAAMyV,UACjB7O,YAAa5G,EAAM4G,YACnBggF,oBAAqB5mF,EAAM4mF,oBAC3BP,wBAAyBrmF,EAAMqmF,wBAC/BxC,sBAAuB7jF,EAAM6jF,wBAC7B,EAEJqJ,aAAc,SAACltF,GAAK,OAClBuwE,EAAAA,cAACgb,IAAWhU,EAAAA,GAAAA,GAAA,GACNsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACfvuE,OAAQ3E,EAAM2E,OACdi/E,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBxP,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBphE,UAAWzV,EAAMyV,UACjB7O,YAAa,KACby/E,wBAAyBrmF,EAAMqmF,0BAC/B,EAEJ8G,WAAY,SAACntF,GAAK,OAChBuwE,EAAAA,cAAC2b,IAAS3U,EAAAA,GAAAA,GAAA,GACJsV,GAAc7sF,GAAM,CACxBoP,GAAIpP,EAAMoP,GACVylC,QAAS70C,EAAM60C,QACfj9C,KAAMoI,EAAMpI,KACZs7E,QAASlzE,EAAMkzE,QACfvuE,OAAQ3E,EAAM2E,OACdi/E,kBAAmB5jF,EAAM4jF,kBACzBwC,cAAepmF,EAAMomF,cACrBxP,YAAa52E,EAAM42E,YACnBC,gBAAiB72E,EAAM62E,gBACvBphE,UAAWzV,EAAMyV,UACjB7O,YAAa,KACby/E,wBAAyBrmF,EAAMqmF,0BAC/B,GAKAwD,GAAI,SAAAtT,GAAA,SAAAsT,IAAA,OAAAhX,EAAAA,EAAAA,GAAA,KAAAgX,G,EAAA,K,EAAAA,E,EAAA9uF,U,qGAAA,QAAAo4E,EAAAA,EAAAA,GAAA0W,EAAAtT,IAAAnD,EAAAA,EAAAA,GAAAyW,EAAA,EAAAxrF,IAAA,SAAAlF,MAiBR,WAAS,IAAAi0F,EACP7Z,EAA2BhiD,KAAKvxB,MAAxBhJ,EAAIu8E,EAAJv8E,KAASgJ,GAAK2uD,EAAAA,GAAAA,GAAA4kB,EAAA3kB,IAEhBy+B,EAAkB,UADK,QAAnBD,EAAGptF,EAAM8V,kBAAU,IAAAs3E,OAAA,EAAhBA,EAAkB7kF,IAAI,SACD,OAAS,GACrC8lB,EAAaruB,EAAM2E,OAAOiB,SAASyoB,WACrCuD,EAAMm7D,GAAQ/1F,EAAOq2F,GACzB,OAAIh/D,EACKA,EAAUj3B,GAAAA,GAAC,CAAC,EAAG4I,GAAK,IAAEhJ,KAAAA,EAAMs2F,cAAe17D,IAAM5xB,EAAM2E,OAAO0d,KAElEuP,EACEA,EAAI5xB,GADM,IAEnB,IAAC,CA5BO,CAASw3E,EAAAA,e,mJAAbqS,GACGnW,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzBxkE,GAAIukE,IAAAA,OAAiBC,WACrB/+B,QAAS8+B,IAAAA,OACT38E,KAAM28E,IAAAA,MA1II,CACZ,OACA,QACA,aACA,eACA,eAqI+BC,WAC7Bh8E,KAAM+7E,IAAAA,IAAcC,WACpB99D,WAAY69D,IAAAA,IACZl+D,UAAWk+D,IAAAA,IACXT,QAASS,IAAAA,OAAiBC,WAC1BgQ,kBAAmBjQ,IAAAA,OACnBiD,YAAajD,IAAAA,KACb/sE,YAAa+sE,IAAAA,OACbkD,gBAAiBlD,IAAAA,KACjB5jE,eAAgB4jE,IAAAA,MCtJpB,IAAAgJ,GAAwErtB,EAAAA,GAAM4mB,UAAtE3gE,GAAiConE,GAAjCpnE,kCAAmCG,GAAwBinE,GAAxBjnE,yBAC3C63E,GAAsDj+B,EAAAA,GAAM0kB,aAApDj7D,GAAwBw0E,GAAxBx0E,yBAA0BE,GAAes0E,GAAft0E,gBAE5Bu0E,GAAO,SAAA5a,GAaX,SAAA4a,EAAYxtF,GAAO,IAAAkrB,E,MAII,OAJJ2nD,EAAAA,EAAAA,GAAA,KAAA2a,G,EACjB,K,EAAAA,E,EAAA,CAAMxtF,G,cAANkrB,G,+EACK+mD,0BAA4BA,EAAyB/mD,GAE1DA,EAAKuiE,SAASztF,GAAOkrB,CACvB,CAAC,OAAAioD,EAAAA,EAAAA,GAAAqa,EAAA5a,IAAAQ,EAAAA,EAAAA,GAAAoa,EAAA,EAAAnvF,IAAA,wBAAAlF,MAVD,SAAsBu4E,EAAWC,GAE/B,OADepgD,KAAK0gD,0BAA0BP,EAAWC,EAE3D,GAAC,CAAAtzE,IAAA,WAAAlF,MASD,SAAU6G,GACR,IAAMoP,EAAKpP,EAAMkP,KAAK3G,IAAI,MAC1BgpB,KAAK35B,KAAOmhB,GAAyB3J,EACvC,GAAC,CAAA/Q,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAEIhiD,KAAKvxB,MADPkP,EAAIqkE,EAAJrkE,KAAMvK,EAAM4uE,EAAN5uE,OAAQuuE,EAAOK,EAAPL,QAAS0D,EAAWrD,EAAXqD,YAEnB8W,EAAWx+E,EAAK3G,IAAI,QACpBkgE,EAAwB,gBAAZilB,EACZ9J,EAAoBnb,EAAY,KAAOlzD,GAAkCrG,GACzEk3E,EAAgB3d,EAAY,KAAO/yD,GAAyBxG,GAC5DE,EAAKF,EAAK3G,IAAI,MACpB,OACEgoE,EAAAA,cAACsZ,GAAI,CACHxrF,IAAK+Q,EACLA,GAAIA,EACJxX,KAAM25B,KAAK35B,KACXZ,KAAM02F,EACN53E,WAAY5G,EAAK3G,IAAI,eAAiB0Q,KACtCtU,OAAQA,EACRuuE,QAASA,EACTz9D,UAAWvG,EAAK3G,IAAI,cAAgB0Q,KACpC2qE,kBAAmBA,EACnBwC,cAAeA,EACfC,wBAAyB,EACzBzP,YAAaA,GAGnB,IAAC,CAlDU,CAASnD,EAAAA,WAAhB+Z,GACG9Z,UAAY,CACjBxkE,KAAMykE,IAAAA,IAAcC,WACpBjvE,OAAQgvE,IAAAA,OAAiBC,WACzBV,QAASS,IAAAA,OAAiBC,WAC1BgD,YAAajD,IAAAA,MAgDjB,SxBslBA,SAAgB6Z,GAA8B,IAArBG,EAAS5yF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAC7B6yF,GAA6B9Z,EAAAA,EAAAA,KACjC,SAAC/L,GACC,MAAO,CACLmD,SAAUnD,EAAMmD,SAChBE,UAAWrD,EAAMqD,UACjBD,SAAUpD,EAAMoD,SAEpB,GAAG,CACDsF,aAAcyC,EACd1C,gBAAiB0C,EACjBxC,WAAYwC,GAEd,KACA,CACEhqB,QAAAA,GAd+B4qB,CAvoBL,SAAC0Z,GAAO,IAAAK,EAAEF,EAAS5yF,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAA8yF,EAAA,SAAAjb,GAQtD,SAAAkb,EAAY9tF,GAAO,IAAAkrB,E,MAKU,OALV2nD,EAAAA,EAAAA,GAAA,KAAAib,G,EACjB,K,EAAAA,E,EAAA,CAAM9tF,G,cAANkrB,G,+EAyHF6iE,gBAAkB,SAACt0F,EAAG2xE,GACpB,OAAO3xE,GAAKA,EAAEu0F,iBAAmBC,SAASpI,MAAQqI,MACpD,EAAChjE,EAED0rD,YAAc,SAACxnE,EAAIsnE,EAAKj9E,GACtB,IAAI00F,EAASzX,EAAI0X,QAAQ,kBACzB,GAAKD,EAAL,MAI0C90F,IAAtC6xB,EAAKmjE,+BACPnjE,EAAKmjE,6BAA+B9c,EAA4B4c,IAElEF,SAASpI,KAAKyI,UAAUnqE,IAAI,eAC5BgqE,EAAOG,UAAUnqE,IAAI,eACrB,IASIoqE,EATAC,EAAkBL,EAAOC,QAAQ,6BAA+BD,EAE9DM,GADND,EAAkBtjE,EAAKwjE,iBAAiBF,IAAoBP,SAASpI,MACnC4I,UAK5BE,GAHUzjE,EAAK0jE,oBAAoBT,GAC1BjjE,EAAK2jE,sBAAsBV,GAErBA,EAAOW,iBAAiB,qBACvCC,EAAWJ,EAAav2F,OAASu2F,EAAa,GAAK,KAErDI,IACFR,EAAeL,OAAOc,iBAAiBD,EAAU,MAAME,iBAAiB,gBACxEV,EAAe/kE,SAAS+kE,IAG1B,IAAMrjB,EAAW,CACf97D,GAAIA,EACJrN,EAAG20E,EAAIwY,WACPzrE,EAAGizD,EAAIyY,UACP5iF,EAAGmqE,EAAI0Y,YACPn9C,EAAGykC,EAAI2Y,aACPC,SAAUpkE,EAAKhc,KAAKmC,MAAMjC,GAC1BmgF,YAAahB,GAETnjB,EAAY,CAChBh8D,GAAIA,EACJrN,EAAG20E,EAAIwY,WACPzrE,EAAGizD,EAAIyY,UACPV,UAAWA,EACXe,QAAS/1F,EAAE+1F,QACXC,QAASh2F,EAAEg2F,QACXH,SAAU50F,GAAMwwB,EAAKhc,KAAKmC,MAAMjC,IAChC++E,OAAQA,EACRK,gBAAiBA,GAEbrjB,EAAW,CACfqkB,QAAS/1F,EAAE+1F,QACXC,QAASh2F,EAAEg2F,SAGPh3F,EAASyyB,EAAK6iE,gBAAgBt0F,EAAG2xE,GACvClgD,EAAKwkE,YAAcj3F,EACnBA,EAAOk3F,iBAAiB,YAAazkE,EAAK0kE,QAC1Cn3F,EAAOk3F,iBAAiB,UAAWzkE,EAAK2kE,WAExC3kE,EAAKlrB,MAAMywE,aAAarF,EAAWF,EAAUC,EAnD7C,MAFE3nE,QAAQM,MAAM,uHAsDlB,EAAConB,EAGD0kE,OAAS,SAACn2F,GAA2B,IAAxBq2F,IAAY/0F,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,KAAAA,UAAA,GACnBmwE,EAAW30E,OAAO6e,OAAO,CAAC,EAAG8V,EAAKlrB,MAAMkrE,UACxC6kB,EAAgB7kE,EAAKlrB,MAAMorE,UACzBmkB,EAAcrkB,EAASqkB,YAEvBd,EADkBsB,EAAcvB,gBACJC,UAElC,GADAvjB,EAASokB,SAAWpkE,EAAKhc,KAAKmC,MAAM65D,EAAS97D,IACxC87D,EAASokB,SAAd,CAIA,IAAInkB,EAAW,CACbqkB,QAAS/1F,EAAE+1F,QACXC,QAASh2F,EAAEg2F,SAEPO,EAAgB,CACpBR,QAASO,EAAcP,QACvBC,QAASM,EAAcN,SAGzB,GAAIh2F,EAAEw2F,WAAY,CAChB,IAAM9B,EAAS4B,EAAc5B,OACvB+B,EAAShlE,EAAK0jE,oBAAoBT,GAClCgC,EAAQjlE,EAAK2jE,sBAAsBV,GACzC10F,EAAEw2F,WAAW,CAAC9B,OAAAA,EAAQ+B,OAAAA,EAAQC,MAAAA,GAChC,CAGA,IAAKJ,EAAcK,IAAK,CACtB,IAAMjC,EAAS4B,EAAc5B,OACvBgC,EAAQjlE,EAAK2jE,sBAAsBV,GACrCgC,IACFJ,EAAcK,IAAMD,EAAME,wBAAwBr0F,KAAOkyF,OAAOoC,QAChEP,EAAcQ,IAAMJ,EAAME,wBAAwBz8E,IAAMs6E,OAAOsC,QAEnE,CAEA,IAAMC,EAASV,EAAchuF,EACvB2uF,EAASX,EAActsE,EACvBktE,EAAeZ,EAAcP,QAC7BoB,EAAeb,EAAcN,QAC7BoB,EAAiBd,EAActB,UAC/BqC,EAAM,CACV/uF,EAAG0uF,GAAUh3F,EAAE+1F,QAAUmB,GACzBltE,EAAGitE,GAAUj3F,EAAEg2F,QAAUmB,IAAiBnC,EAAYoC,IAExD3lB,EAASnpE,EAAI+uF,EAAI/uF,EACjBmpE,EAASznD,EAAIqtE,EAAIrtE,EACjBynD,EAASqkB,YAAcA,EACvBrkB,EAASC,SAAWA,EACpBD,EAAS8kB,cAAgBA,EAGzB9kE,EAAKlrB,MAAMwwE,gBAAgBrF,EAAUD,GAEvB4kB,GAAe5kE,EAAK6lE,WAAW7lB,EAAUzxE,EAAGk0F,IAGpDl0F,EAAEu3F,gBACJv3F,EAAEu3F,gBAlDN,CAoDF,EAAC9lE,EAED2kE,UAAY,WACV,IAAI1B,EAASjjE,EAAKlrB,MAAMorE,UAAU+iB,OAElCjjE,EAAKlrB,MAAM0wE,aAEXyd,EAAOG,UAAU2C,OAAO,eACxBhD,SAASpI,KAAKyI,UAAU2C,OAAO,eAC/B/lE,EAAKgmE,UAAY,CAAC,EAElB,IAAMz4F,EAASyyB,EAAKwkE,aAAexkE,EAAK6iE,kBACxCt1F,EAAO04F,oBAAoB,YAAajmE,EAAK0kE,QAC7Cn3F,EAAO04F,oBAAoB,UAAWjmE,EAAK2kE,UAC7C,EAnQE3kE,EAAK+mD,0BAA4BA,EAAyB/mD,GAC1DgnD,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA2a,EAAAlb,IAAAQ,EAAAA,EAAAA,GAAA0a,EAAA,EAAAzvF,IAAA,iBAAAlF,MAED,SAAeu4E,GACbngD,KAAKriB,KAAOiC,GAAYugE,EAAUxiE,KAAMwiE,EAAU/sE,OACpD,GAAC,CAAAtG,IAAA,wBAAAlF,MAED,SAAsBu4E,EAAWC,GAC/B,IAAIC,EAAYrgD,KAAKvxB,MACjB6xE,EAAYtgD,KAAKw2C,MAEjB+J,EAASvgD,KAAK0gD,0BAA0BP,EAAWC,GACvD,GAAIG,GACED,GAAaF,GAAaC,GAAaF,EAAW,CACpD,IAAIK,EAAM,GACV,IAAK,IAAIz6E,KAAKo6E,EACGA,EAAUp6E,IAAMs6E,EAAUt6E,IAG/B,YAALA,GAAwB,YAALA,GACpBy6E,EAAIx4E,KAAKjC,GAGVy6E,EAAI35E,SACP05E,GAAS,EACb,CAEF,OAAOA,CACT,GAAC,CAAAzzE,IAAA,qBAAAlF,MAED,SAAmBi4F,EAAYC,GAC7B,IAAInmB,EAAW35C,KAAKvxB,MAAMkrE,SACtB6kB,EAAgBx+D,KAAKvxB,MAAMorE,UAE/B,GADA+K,IAAoB,EAChB4Z,GAAiBA,EAAc3gF,KACjC87D,EAASokB,SAAW/9D,KAAKriB,KAAKmC,MAAM65D,EAAS97D,IACzC87D,EAASokB,WACPpkB,EAASokB,SAASn7E,OAAS47E,EAAcT,SAASn7E,OAAS+2D,EAASokB,SAASl7E,QAAU27E,EAAcT,SAASl7E,SAAQ,CACxH,IAAM+5E,EAAS4B,EAAc5B,OACvBK,EAAkBuB,EAAcvB,gBAChC2B,EAAQ5+D,KAAKs9D,sBAAsBV,GAAQ,GACjD,GAAIgC,EAAO,CACT,IAAMC,EAAMD,EAAME,wBAAwBr0F,KAAOkyF,OAAOoC,QAClDC,EAAMJ,EAAME,wBAAwBz8E,IAAMs6E,OAAOsC,QACjDc,EAASvB,EAAcK,IACvBmB,EAASxB,EAAcQ,IACvB9B,EAAYD,EAAgBC,UAClCsB,EAAcK,IAAMA,EACpBL,EAAcQ,IAAMA,EACpBR,EAAcT,SAAW50F,GAAMwwE,EAASokB,UACxCS,EAActsE,EAAI0sE,EAAMhB,UACxBY,EAAchuF,EAAIouF,EAAMjB,WACxBa,EAAcN,SAAYc,EAAMgB,EAChCxB,EAAcP,SAAYY,EAAMkB,EAC5B9C,GAAmBP,SAASpI,OAC9BkK,EAActB,UAAYA,GAE5Bl9D,KAAKq+D,OAAOr+D,KAAKvxB,MAAMmrE,UAAU,EACnC,CACF,CAGN,GAAC,CAAA9sE,IAAA,iBAAAlF,MAED,SAAgBg1F,EAAQqD,GAA8B,IAArBC,EAAW12F,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GAC1C,GAAe,MAAXy2F,EACF,OAAO,KACJjgE,KAAK2/D,YACR3/D,KAAK2/D,UAAY,CAAC,GACpB,IAAIxxF,EAAK6xB,KAAK2/D,UAAUM,GACxB,OAAI9xF,GAAMuuF,SAASyD,SAAShyF,KAAQ+xF,IAEpC/xF,EAAKyuF,EAAOwD,cAAc,qCAAqCH,EAAQ,MACvEjgE,KAAK2/D,UAAUM,GAAW9xF,GAFjBA,CAIX,GAAC,CAAArB,IAAA,sBAAAlF,MAED,SAAqBg1F,GAA6B,IAArBsD,EAAW12F,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GACjCw2B,KAAK2/D,YACR3/D,KAAK2/D,UAAY,CAAC,GACpB,IAAIxxF,EAAK6xB,KAAK2/D,UAAqB,UACnC,GAAIxxF,GAAMuuF,SAASyD,SAAShyF,KAAQ+xF,EAClC,OAAO/xF,EACT,IAAMkyF,EAAMzD,EAAO0D,uBAAuB,gBAG1C,OAFAnyF,EAAKkyF,EAAIx5F,OAASw5F,EAAI,GAAK,KAC3BrgE,KAAK2/D,UAAqB,UAAIxxF,EACvBA,CACT,GAAC,CAAArB,IAAA,wBAAAlF,MAED,SAAuBg1F,GAA6B,IAArBsD,EAAW12F,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,IAAAA,UAAA,GACnCw2B,KAAK2/D,YACR3/D,KAAK2/D,UAAY,CAAC,GACpB,IAAIxxF,EAAK6xB,KAAK2/D,UAAuB,YACrC,GAAIxxF,GAAMuuF,SAASyD,SAAShyF,KAAQ+xF,EAClC,OAAO/xF,EACT,IAAMkyF,EAAMzD,EAAO0D,uBAAuB,kBAG1C,OAFAnyF,EAAKkyF,EAAIx5F,OAASw5F,EAAI,GAAK,KAC3BrgE,KAAK2/D,UAAuB,YAAIxxF,EACzBA,CACT,GAAC,CAAArB,IAAA,gBAAAlF,MAED,SAAc+a,GACZ,IAAM49E,EAAY5D,OAAOc,iBAAiB96E,GAAM,cAChD,OAAsB,WAAd49E,GAAwC,SAAdA,IAA0B59E,EAAK69E,aAAe79E,EAAKm7E,YACvF,GAAC,CAAAhxF,IAAA,mBAAAlF,MAED,SAAiB+a,GACf,OAAY,MAARA,EACK,KAELA,IAAS+5E,SAASpI,MAAQt0D,KAAKygE,cAAc99E,GACxCA,EAEAqd,KAAKm9D,iBAAiBx6E,EAAKo9D,WAEtC,GAAC,CAAAjzE,IAAA,aAAAlF,MAgJD,SAAY84F,EAAUx4F,EAAGy4F,GAAW,IAU9BC,EAAUC,EAASC,EAASC,EAVE31B,EAAA,KAE5B2yB,EAAW2C,EAAS3C,SACpBC,EAAc0C,EAAS1C,YAEzBgD,EAAW,KACTpE,EAAS58D,KAAKvxB,MAAMorE,UAAU+iB,OAC9BqE,EAASP,EAAS7iF,GAClB8gF,EAAS3+D,KAAKq9D,oBAAoBT,GAClCgC,EAAQ5+D,KAAKs9D,sBAAsBV,GAEzC,GAAI+B,GAAUC,EAAO,CAGnB,GAFAgC,EAAWjC,EAAOG,0BAClB+B,EAAUjC,EAAME,yBACHnZ,MACX,OAEF,IAAIub,EAAW,CAACC,IAAK,EAAGC,IAAK,GACzBR,EAASv+E,IAAMw+E,EAAQx+E,IACzB6+E,EAASE,KAAO,EACTR,EAASh9E,OAASi9E,EAAQj9E,SACjCs9E,EAASE,IAAM,GACbR,EAASn2F,KAAOo2F,EAAQp2F,KAC1By2F,EAASC,IAAM,EACRP,EAASn2F,KAAOo2F,EAAQp2F,OAC/By2F,EAASC,KAAO,GAGlB,IAIIE,EAJEC,EAAW,CACf9wF,GAFFuwF,EAAWnE,EAAOkC,yBAEJr0F,MAAQs2F,EAASr2F,MAAQq2F,EAASt2F,MAAQ,EACtDynB,EAAGgvE,EAASE,KAAO,EAAIR,EAASh9E,OAASg9E,EAASv+E,KAGpD,GAAIna,EAAEq5F,uBACJF,EAAan5F,EAAEq5F,2BACV,CACL,IAAMC,EAAY9E,SAAS+E,iBAAiBH,EAAS9wF,EAAG8wF,EAASpvE,EAAE,GAEnE,KADAmvE,EAAaG,EAAYA,EAAU3E,QAAQ,4BAA8B,OACtD2E,GAAaA,EAAUzE,UAAUoD,SAAS,2BAA4B,KAAAuB,EAEjFC,EAAqBH,SAAqB,QAAZE,EAATF,EAAWI,kBAAU,IAAAF,OAAA,EAArBA,EAAuBE,WAC9CD,GAAsBA,EAAmB5E,UAAUoD,SAAS,6BAC9DkB,EAAaM,EAEjB,CACF,CACA,GAAKN,EAEE,CACL,IAAM//E,EAAU+/E,EAAWtE,UAAUoD,SAAS,mBACxC0B,EAAYR,EAAWS,aAAa,WACpCC,EAAQV,EACVW,GAAW,EACXC,GAAY,EAChB,GAAIF,EAAO,CAET,IAAMG,GADNpB,EAAUiB,EAAMjD,yBACUl7E,OAASk9E,EAAQz+E,IACrC8/E,EAAQniE,KAAKriB,KAAKmC,MAAM+hF,GAC9B,IAAKM,EACH,MAAM,IAAIv7F,MAAM,mGAElB,IAAIw7F,EAAU,KACZC,EAAQ,KACRC,EAAQ,KACRC,EAAQ,KAEV,GAAoB,GAAhBrB,EAASE,IACXkB,EAAQvE,GACRsE,EAAQzD,KAENwD,EAAUC,EAAMvD,8BAElB,GAAIx9E,EAAS,CACX,GAAI4/E,EAASE,IAAM,EAAG,CAEpB,IAAMoB,EAAanB,EAAWf,uBAAuB,iBAC/CmC,EAASD,EAAW37F,OAAS27F,EAAW,GAAK,KACnD,GAAIC,EAAQ,CACV,IAAMC,EAAWD,EAAO3D,wBAClB6D,EAAaD,EAAS9+E,OAAS8+E,EAASrgF,IACxBu+E,EAASh9E,OAAS8+E,EAASrgF,IAAkB,EAAXsgF,EAAa,GAClDR,EAAM9/E,IAAMq+E,EAAS3C,SAAS17E,MAC/CigF,EAAQH,EACRC,EAAUM,EACVL,EAAQI,EACRR,GAAY,EAEhB,CACF,MAAWf,EAASE,IAAM,GACpBe,EAAMnjF,KAAO++E,EAAS/+E,KAEC8hF,EAAQl9E,OAASg9E,EAASv+E,KAAQ,GACrC8/E,EAAM9/E,IAAMq+E,EAAS3C,SAAS17E,MAClDigF,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,EACRC,GAAW,IAMMd,EAASE,IAAM,EAC9BN,EAAQl9E,OAASg9E,EAASv+E,IAAQ6/E,EAAU,EAC5CtB,EAASh9E,OAASk9E,EAAQz+E,IAAQ6/E,EAAU,KAE3CD,GAAcD,IACjBM,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,GAGRQ,EAAQJ,EAIhB,MAEuBjB,EAASE,IAAM,EAC9BN,EAAQl9E,OAASg9E,EAASv+E,IAAO6/E,EAAU,EAC3CtB,EAASh9E,OAASk9E,EAAQz+E,IAAO6/E,EAAU,KAE/CI,EAAQH,EACRC,EAAUtB,EACVuB,EAAQN,GAKd,IAAMa,EAAaN,GAASA,EAAMzkF,IAAMojF,EACxC,GAAImB,EAAS,CACX,IAAMS,EAAiBjC,EAASn2F,KAAOs2F,EAASt2F,KAG1Cq4F,GAFgBV,EAAQ33F,KAAOs2F,EAASt2F,KAE9BjG,KAAKkf,IAAI,EAAGlf,KAAKu+F,MAAMF,EAAiB7E,KAGpDgF,EAAa,GACbC,EAAW,GACf,GAAIL,OAEG,CACL,GAAIthF,IACE0gF,EACFgB,EAAWh7F,KAAK,CAACwgD,EAA4B85C,EAAOA,EAAMtjF,IAAI,IACrDijF,GACTe,EAAWh7F,KAAK,CAACwgD,EAA6B85C,EAAOA,EAAMtjF,IAAI,IAGlCujF,GAAO,CAEpC,IAAMW,EAAwB,GAAbX,EAAMvjF,IAEjBmkF,EAAyB,cAAdZ,EAAM98F,MAAyC,cAAjBs4F,EAASt4F,KACpD29F,EAAab,EAAMryF,MAAQ8vB,KAAKriB,KAAKmC,MAAMyiF,EAAMryF,MAAMuQ,OACvD4iF,EAAad,EAAM7yF,MAAQswB,KAAKriB,KAAKmC,MAAMyiF,EAAM7yF,MAAM+Q,OACvDs9E,EAASt9E,QAAU2iF,IACrBA,EAAa,MACXrF,EAASt9E,QAAU4iF,IACrBA,EAAa,MACf,IAAMC,EAAWF,GAAcpjE,KAAKriB,KAAKmC,MAAMsjF,GACzCG,EAAWF,GAAcrjE,KAAKriB,KAAKmC,MAAMujF,GAE3CnC,EAASE,IAAM,EACb8B,EACFD,EAASj7F,KAAK,CAACwgD,EAA4B+5C,EAAOA,EAAMvjF,IAAI,IACnDmkF,GAAYI,EACrBN,EAASj7F,KAAK,CAACwgD,EAA6B+6C,EAAUA,EAASvkF,IAAI,IAEnEikF,EAASj7F,KAAK,CAACwgD,EAA2B+5C,EAAOA,EAAMvjF,MAEhDkiF,EAASE,IAAM,IACpB8B,EACFD,EAASj7F,KAAK,CAACwgD,EAA6B+5C,EAAOA,EAAMvjF,IAAI,IACpDmkF,GAAYG,EACrBL,EAASj7F,KAAK,CAACwgD,EAA4B86C,EAAUA,EAAStkF,IAAI,IAElEikF,EAASj7F,KAAK,CAACwgD,EAA4B+5C,EAAOA,EAAMvjF,MAG9D,CAEGgjF,GAAaC,IACZf,EAASE,IAAM,EACjB4B,EAAWh7F,KAAK,CAACwgD,EAA4B85C,EAAOA,EAAMtjF,MACjDkiF,EAASE,IAAM,GACxB4B,EAAWh7F,KAAK,CAACwgD,EAA2B85C,EAAOA,EAAMtjF,MAG/D,CAGA,IAAMwkF,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAG,GACVE,EAAa5F,EAASt9E,OAAS2qD,EAAKztD,KAAKmC,MAAMi+E,EAASt9E,QAAU,KAClEmjF,EAAWF,EAAKjjF,OAAS2qD,EAAKztD,KAAKmC,MAAM4jF,EAAKjjF,QAAU,KAC9D,MAAO,GAAP1Z,QAAAnB,EAAAA,GAAAA,GAAW69F,GAAE,CAAEE,EAAYC,GAC7B,EACAZ,EAAaA,EAAW90F,IAAIs1F,GAC5BP,EAAWA,EAAS/0F,IAAIs1F,GAwCxB,IAAIK,EAAW,KACXC,IAtCJd,EAAaA,EAAWp4F,QAAO,SAAA64F,GAC7B,IAAMxmB,EAAYwmB,EAAG,GACfM,EAAMN,EAAG,GACf,IAAKxmB,GAAaz0B,GAA8By0B,GAAaz0B,IAA4C,MAAdu7C,EAAIlhF,OAC7F,OAAO,EACT,GAAIkhF,EAAIhjF,YAAck8D,GAAaz0B,GAA8By0B,GAAaz0B,GAC5E,OAAO,EAET,IAAIw7C,EAAYD,EAAIlmF,IAAMkgF,EAASlgF,GACnC,IAAKmmF,EAEH,IADA,IAAI98D,EAAM68D,EACH78D,EAAIrkB,QAET,IADAqkB,EAAMkkC,EAAKztD,KAAKmC,MAAMonB,EAAIrkB,SAClBhF,IAAMkgF,EAASlgF,GAAI,CACzBmmF,GAAW,EACX,KACF,CAGJ,OAAQA,CACV,IAAG91F,KAAI,SAAAu1F,GACL,IAAMxmB,EAAYwmB,EAAG,GACnBC,EAAOD,EAAG,GAIRQ,GAHKR,EAAG,GACIA,EAAG,GACLA,EAAG,GACA,MAQjB,OANEQ,EADEhnB,GAAaz0B,GAA8By0B,GAAaz0B,EAC7Ck7C,EAEAt4B,EAAKztD,KAAKmC,MAAM4jF,EAAK7gF,UACG,MAArBohF,EAAWphF,SAC3BohF,EAAa,MACfR,EAAG,GAAKQ,EACDR,CACT,KAG+B74F,QAAO,SAAA64F,GAAE,OAAIr4B,EAAK84B,QAAQnG,EAAU0F,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAI9C,EAAU,IACzD,GAAxBmD,GAAcj9F,QAAeo8F,EAASp8F,OAAS,IAC5Ei9F,GAAgBb,EAASr4F,QAAO,SAAA64F,GAAE,OAAIr4B,EAAK84B,QAAQnG,EAAU0F,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAI9C,EAAU,KAE5G,IAAMwD,GAAOL,GAAc51F,KAAI,SAAAu1F,GAAE,OAAIA,EAAG,EAAE,IACpCW,GAASrG,EAAS/+E,IAClBqlF,GAAUF,GAAKp9F,OAAOq9F,IACxBE,GAAiB,MACY,GAA7BD,GAAQ/0F,QAAQwzF,GAClBwB,GAAiBxB,EACVA,EAAUt+F,KAAKkf,IAAGpG,MAAR9Y,MAAIoB,EAAAA,GAAAA,GAAQy+F,KAC7BC,GAAiB9/F,KAAKkf,IAAGpG,MAAR9Y,MAAIoB,EAAAA,GAAAA,GAAQy+F,KACtBvB,EAAUt+F,KAAKmmB,IAAGrN,MAAR9Y,MAAIoB,EAAAA,GAAAA,GAAQy+F,OAC7BC,GAAiB9/F,KAAKmmB,IAAGrN,MAAR9Y,MAAIoB,EAAAA,GAAAA,GAAQy+F,MAC/BR,EAAWC,GAAc/zF,MAAK,SAAA0zF,GAAE,OAAIA,EAAG,IAAMa,EAAc,IACtD1B,GAAciB,IAAYC,GAAcj9F,SAC3Cg9F,EAAWC,GAAc,IAC3B9C,EAAW6C,CACb,CACF,CACF,MArNEjxF,EAAOV,IAAI,sBAsNf,CAEA,QAAI8uF,IACFhhE,KAAKukE,KAAKxG,EAAUiD,EAAS,GAAIA,EAAS,GAAIA,EAAS,KAUhD,EAIX,GAAC,CAAAl0F,IAAA,UAAAlF,MAED,SAAS48F,EAAQd,EAAMzmB,EAAW0mB,EAAYC,EAAUK,EAAYtD,GAClE,IAAK6D,IAAWd,EACd,OAAO,EACT,GAAIc,EAAO3mF,KAAO6lF,EAAK7lF,GACrB,OAAO,EAET,IAAA28E,EAAyFx6D,KAAKvxB,MAAM2E,OAAOiB,SAAnGuN,EAAU44E,EAAV54E,WAAY84E,EAAeF,EAAfE,gBAAiB74E,EAAU24E,EAAV34E,WAAYo1D,EAAgBujB,EAAhBvjB,iBAAkBwjB,EAAiBD,EAAjBC,kBAI7DgK,GAHeR,EAAaA,EAAWvhF,cAAgBghF,EAAKljF,YAG9BgkF,EAAO7iF,mBAAqB,EAAK6iF,EAAOnhF,QAAyB,SAAfmhF,EAAO/+F,KAAkB,EAAI,IAC7Gi/F,EAAgBznB,GAAaz0B,GAA8By0B,GAAaz0B,EACxEm8C,EAAS1nB,GAAaz0B,GAA+By0B,GAAaz0B,EAClEo8C,EAASF,GAA6B,GAAZhB,EAAK1kF,KAAY2lF,GAAsB,GAAZjB,EAAK1kF,IAC1D6lF,EAAiBL,EAAO3hF,QAAU6gF,EAAK7gF,OACvCiiF,EAAiBH,GAAUE,EAE3BE,EAAsC,cAAfP,EAAO/+F,QAA0B++F,EAAO7iF,oBAAmC,cAAb+hF,EAAKj+F,QAA0Bi+F,EAAK/hF,mBACzHqjF,EAAoBL,GAAuB,cAAbjB,EAAKj+F,KAAuBi+F,EAAK7lF,GAAK6lF,EAAK/hF,mBACzEsjF,EAA4BN,GAAuB,cAAbjB,EAAKj+F,KAAuBi+F,EAAK7hF,WAAa6hF,EAAK3hF,2BACzFmjF,EAAyH,IAA5FP,GAAuB,cAAbjB,EAAKj+F,KAAuBi+F,EAAK9hF,WAAa8hF,EAAK5hF,4BAC1FE,EAAsB2iF,GAAuB,cAAbjB,EAAKj+F,KAAuBi+F,EAAK1kF,IAAM0kF,EAAK1hF,oBAC5EmjF,GAA0BlB,EAAaA,EAAWjlF,IAAM,EAAI0kF,EAAK1kF,MAClEwlF,EAAOnhF,QAAyB,SAAfmhF,EAAO/+F,KAAkB,EAAI,KAC9Cuc,GAAuB,GACtBojF,EAA6BL,GAAuBP,EAAO7iF,oBAAsBqjF,EASjFK,EANa,cAAfb,EAAO/+F,OAAyBm/F,GAEhB,cAAfJ,EAAO/+F,MAAqC,cAAbi+F,EAAKj+F,MAAwBi/F,GAC7C,cAAfF,EAAO/+F,MAAqC,gBAAbi+F,EAAKj+F,OAEnCi1F,GAAmB8J,EAAO/jF,QAAUijF,EAAKjjF,QACU2kF,EACnDE,EAAiB5B,EAAKhlF,UAAY8lF,EAAO9lF,UAAYulF,GAAcA,EAAWvlF,SAEpF,GAAImD,GAAc4iF,EAAc5iF,EAC9B,OAAO,EAGT,GAAIojF,GAA6BE,EAAyBF,EACxD,OAAO,EAGT,GAAIH,KAAoBljF,GAAcyjF,GAA2BC,GAC/D,OAAO,EAGT,GAAIP,GAAuBD,IAAmBI,EAC5C,OAAO,EAGT,GAAmB,cAAfV,EAAO/+F,MAAwB++F,EAAO/jF,QAAUijF,EAAKjjF,OAAQ,CAC/D,IAAM8kF,IAAiB5B,GAAmC,GAAtBA,EAAWhgF,QACzC6hF,EAAuB5B,EAAWA,EAAS5gF,uBAAyB,EAAI,EAC9E,GAAIi0D,GAAoBuuB,EAAuBvuB,EAC7C,OAAO,EACT,GAAIsuB,IAAmB9K,EACrB,OAAO,CACX,CAEA,GAAmB,cAAf+J,EAAO/+F,OACT++F,EAAOzhF,eAAiB2gF,EAAK3gF,eACb,gBAAb2gF,EAAKj+F,MAA0Bw3E,GAAaz0B,GAG/C,OAAO,EAGT,IAAIjtC,GAAM,EAIV,OAHIolF,IACFplF,EAAMolF,EAAU6D,EAAO7hF,KAAK1V,OAAQy2F,EAAK/gF,KAAK1V,OAAQgwE,EAAWgnB,EAAaA,EAAWthF,KAAK1V,OAAS,OAElGsO,CACT,GAAC,CAAAzO,IAAA,OAAAlF,MAED,SAAM48F,EAAQd,EAAMzmB,EAAWgnB,GACxBjkE,KAAK88D,+BACRlY,IAAoB,GAGtB5kD,KAAKvxB,MAAMkzE,QAAQ9D,SAAS2mB,EAAOn+F,KAAMq9F,EAAKr9F,KAAM42E,EACtD,GAAC,CAAAnwE,IAAA,SAAAlF,MAED,WACE,OAAOo3E,EAAAA,cAACid,GAAOjW,EAAAA,GAAAA,GAAA,GACThmD,KAAKvxB,MAAK,CACd42E,YAAarlD,KAAKqlD,cAEtB,IAAC,CAloBqD,CACxBnD,EAAAA,WAASoa,EAChCna,UAAY,CACjBxkE,KAAMykE,IAAAA,IAAcC,WACpBV,QAASS,IAAAA,OAAiBC,YAE3Bia,CAAA,CAipBDmJ,CAAwBxJ,EAASG,IAGnC,OAFAC,EAA2B7Z,YAAc,6BAElC6Z,CACR,CwB3mBD,CAAiCJ,I,kXCvDjC,IAAO9yF,GAAS40D,EAAAA,GAAM2mB,WAAfv7E,MACPu5E,GAAgF3kB,EAAAA,GAAM4kB,YAA/E1qE,GAAcyqE,GAAdzqE,eAAgBlD,GAAa2tE,GAAb3tE,cAAekC,GAAiByrE,GAAjBzrE,kBAAmB8B,GAAmB2pE,GAAnB3pE,oBAClD+O,GAAsBi2C,EAAAA,GAAM0qB,UAA5B3gE,mBAIc49E,GAAU,SAAArkB,GAkB7B,SAAAqkB,EAAYj3F,GAAO,IAAAkrB,E,MAIU,OAJV2nD,EAAAA,EAAAA,GAAA,KAAAokB,G,EACjB,K,EAAAA,E,EAAA,CAAMj3F,G,aAANkrB,G,8EACAgnD,EAAiBhnD,GAEjBA,EAAKmnD,eAAeryE,GAAOkrB,CAC7B,CAAC,OAAAioD,EAAAA,EAAAA,GAAA8jB,EAAArkB,IAAAQ,EAAAA,EAAAA,GAAA6jB,EAAA,EAAA54F,IAAA,iBAAAlF,MAED,SAAeu4E,GACb,IAAME,EAAYrgD,KAAKvxB,MAGjBu7E,GAAmBhqD,KAAKlgB,OAFT,CAAC,SAAU,QAAS,WAAY,YAAa,WAAY,YAAa,eAEvC5R,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,EAClH8+F,GAAkB3lE,KAAKvmB,MAFT,CAAC,SAAU,QAAS,WAAY,YAAa,WAAY,QAAS,cAAe,YAAa,eAEjEvL,KAAI,SAAAnI,GAAC,OAAKo6E,EAAUp6E,KAAOs6E,EAAUt6E,EAAE,IAAG6E,QAAO,SAAAof,GAAE,OAAIA,CAAE,IAAEnjB,OAAS,EAEjHmjF,IACFhqD,KAAKlgB,MAAQkgB,KAAKiqD,SAAS9J,IAEzBwlB,IACF3lE,KAAKvmB,KAAOumB,KAAKomD,QAAQjG,GAE7B,GAAC,CAAArzE,IAAA,WAAAlF,MAED,SAAQ2B,GAAgF,IAA9E6J,EAAM7J,EAAN6J,OAAQqB,EAAKlL,EAALkL,MAAOiH,EAASnS,EAATmS,UAAWnD,EAAQhP,EAARgP,SAAUlD,EAAW9L,EAAX8L,YAAakF,EAAShR,EAATgR,UAAWiB,EAAejS,EAAfiS,gBAC7DigB,EAA4BroB,EAAOiB,SAAnConB,yBAEDytD,EAAkBn0E,GAAcM,EAAajC,GAC7CsxC,EAAoBrvC,EAAc4C,GAAe7E,EAAQiC,GAAe,KACxE8zE,EAAe9zE,EAAcqvC,aAAiB,EAAjBA,EAAmB7wC,UAAYT,EAAOQ,OAEnEgyF,EAAiB5lE,KAAK6lE,aAAazyF,EAAQ+1E,EAAc10E,EAAOY,EAAa6zE,EAAiB3wE,EAAUkjB,EAA0BlhB,EAAWiB,EAAiBE,GAEpK,OADcskB,KAAK0mD,aAAawC,EAAiB91E,EAAQwyF,EAAgB1c,EAE3E,GAAC,CAAAp8E,IAAA,UAAAlF,MAED,SAAOuD,GAAsG,IAAA26F,EAApG1yF,EAAMjI,EAANiI,OAAQqB,EAAKtJ,EAALsJ,MAA4B7M,GAAZuD,EAATuQ,UAAmBvQ,EAARoN,SAAepN,EAALvD,OAAoBm+F,EAAiB56F,EAA9Bmd,YAAgC/N,EAASpP,EAAToP,UAAWlF,EAAWlK,EAAXkK,YAC7FrB,EAAkDZ,EAAOiB,SAAlDya,EAAgB9a,EAAhB8a,iBAAkBlB,EAAqB5Z,EAArB4Z,sBACnBi5D,EAAcj/E,EACdihF,IAAoBjhF,EAEpBkwD,EAAkBrjD,EAAQwD,GAAe7E,EAAQqB,GAAS,CAAC,EAC3DuxF,EAAuBluC,SAAwB,QAATguC,EAAfhuC,EAAiB3/C,eAAO,IAAA2tF,OAAA,EAAxBA,EAA0BrxF,MACjDwxF,GAA4BD,aAAoB,EAApBA,EAAsBrsF,cAAe,CAAC,EAClE2O,EAAcugE,EAAkB,KACjCtuE,GAAawrF,GAAqBE,EAA0Bz9E,kBAAoBsG,EAC/Eg6D,EAAYD,EAAkB5wE,GAAe7E,EAAQyzE,GAAe,KACpEF,EAAemC,GAAa,CAAC,EAE7BlC,EAAe3vE,GAAkB4vE,EAAazzE,GAC9C0zE,EAAe7vE,GAAkB4vE,EAAazzE,GAAQ,GACtD2zE,EAAgB/mD,KAAK+oD,cAAcD,EAAWjC,EAAazzE,GAC3D41E,EAAclhE,GAAmB++D,EAAazzE,GAChD61E,EAAoBD,EAAcA,EAAYjhF,KAAK6lB,GAAyB,KAKhF,OAJIq7D,GAAqBlC,GAAiB1xE,KACxC4zE,EAAoB,MAGf,CACL3gE,YAAAA,EACAu+D,YAAAA,EAAaD,aAAAA,EAAcE,aAAAA,EAAcC,cAAAA,EAAeJ,aAAAA,EAAcK,iBAJ/CL,EAAap5D,QAAUo5D,EAAaM,QAI6BgC,kBAAAA,EAE5F,GAAC,CAAAn8E,IAAA,eAAAlF,MAED,SAAawL,EAAQQ,EAAQ62E,EAAkBp1E,EAAa6zE,EAAiB3wE,EAAUkjB,EAA0BlhB,EAAWiB,EAAiBE,GAC3I9H,EAASzK,GAAMyK,GACf,IAMI/L,EANEoM,EAAiBb,EAAOiB,SAASJ,eACjC6jD,EAAkB7/C,GAAe7E,EAAQq3E,GAEzC3xE,EAASC,GAAoB3F,EAAQq3E,EAAkBlyE,EAAU,SAEjEC,GADepF,EAAO+E,QAAQW,GACnB1F,EAAOqF,UAAUF,IA0ClC,OAvCE1Q,EADE0S,EACaiB,aAAe,EAAfA,EAAiB/V,KACvB+S,SAAAA,EAAUoD,WACJpD,aAAQ,EAARA,EAAUoD,WAAW,GAG3Bk8C,EACMA,EAAgBryD,KAGhBiW,EAGjB,SAASivE,EAAQvtE,EAAM/W,GACrB,IAAK,IAAI6/F,KAAiB9oF,EAAM,CAC9B,IAAIvJ,EAAYuJ,EAAK8oF,GAAeryF,UAChC+2E,GAAWvkF,GAAc,IAAIU,OAAOm/F,GACpCC,EAAoBvb,EAAQ7iF,KAAKkM,GACjC+jD,EAAmB//C,GAAe7E,EAAQ+yF,GAC9C,GAAKnuC,EAEE,GAA6B,WAAzBA,EAAiBvyD,MAA8C,UAAzBuyD,EAAiBvyD,KAC7B,GAA/BklF,EAAQ92E,EAAW+2E,WACdxtE,EAAK8oF,OACT,CAEL,IAAInb,IAAWljF,GAAgBmwD,EAAiBvyD,MAAQoC,IAClD0S,GAAmB4rF,GAAqB1b,GAC1C55D,EAAK4K,GAA4BroB,EAAOiB,SAASonB,yBACjD5K,IACFk6D,EAASA,GAAUl6D,EAAG45D,EAAkB3yB,EAAiBquC,EAAmBnuC,EAAkBz/C,IAC3FwyE,UACI3tE,EAAK8oF,EAChB,aAbS9oF,EAAK8oF,EAchB,CACA,OAAOl7F,KAAKoS,GAAMvW,MACpB,CAEA8jF,CAAQ/2E,EAAQs1E,GAAmB,IAE5Bt1E,CACT,GAAC,CAAA9G,IAAA,eAAAlF,MAED,SAAashF,EAAiB91E,EAAQQ,GAAsC,IAAAw3D,EAAA,KAA9B/kE,EAAImD,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KAAM+/E,EAAQ//E,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,KACpE,IAAKoK,EACH,OAAO,KACT,IAAAe,EAAgDvB,EAAOiB,SAAhDJ,EAAcU,EAAdV,eAAgB2Z,EAAqBjZ,EAArBiZ,sBACjB47D,EAASnjF,SAAAA,EAAMQ,OAASR,EAAK0B,KAAKkM,GAAkBA,EAAiB,GAE3E,OAAOjJ,KAAK4I,GAAQ1F,KAAI,SAAAgG,GACtB,IAAMw1E,EAAgB,GAAH3iF,QAAAnB,EAAAA,GAAAA,GAAQS,QAAAA,EAAQ,IAAK,CAAA6N,IAClCO,EAAQb,EAAOM,GACf6T,EAAQqjD,EAAK2d,cAAct0E,EAAOi1E,EAAet2E,GAEnDu2E,EADgB7hE,GAAmB4hE,EAAet2E,GAC1BrL,KAAK6lB,IAC7B+7D,GAAa5hE,GAASmhE,KACxBS,EAAY,MACd,IAAMxC,EAAW1yE,EAAM8Y,OACjB05D,EAAUxyE,EAAMwyE,QAEtB,IAAIxyE,EAAM2xF,eAGV,MAAkB,WAAd3xF,EAAMhP,MAAmC,UAAdgP,EAAMhP,KAC5B,CACLqH,IAAKoH,EACL7N,KAAMmjF,EAAOt1E,EACb6T,MAAAA,EACA4hE,UAAAA,EACAxC,SAAAA,EACAF,QAAAA,EACAnnE,MAAOsrD,EAAKsb,aAAawC,EAAiB91E,EAAQqB,EAAMZ,UAAW61E,EAAe,CAChF3hE,MAAAA,EACAk/D,QAAAA,KAIG,CACLn6E,IAAKoH,EACL7N,KAAMmjF,EAAOt1E,EACb6T,MAAAA,EACA4hE,UAAAA,EACAxC,SAAAA,EACAF,QAAAA,EACAhqB,WAAYssB,aAAQ,EAARA,EAAUxhE,MACtBgC,MAAOw/D,EAGb,IAAG3+E,QAAO,SAAAm1B,GAAC,QAAMA,CAAC,GACpB,GAAC,CAAAjzB,IAAA,gBAAAlF,MAED,SAAc0hF,EAAWp1E,EAAUd,GACjC,IAAKc,EAAU,OAAO,KACtB,IAAI00E,EAAkBx1E,EAAOiB,SAASu0E,gBAClCjgE,EAAa5T,GAAcb,EAAUd,GACrC2U,GAAQuhE,aAAS,EAATA,EAAWvhE,QAASC,KAAKW,GAErC,OADQ02D,EAAet3D,EAAO6gE,EAEhC,GAAC,CAAA97E,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAA+DhiD,KAAKvxB,MAA7D2E,EAAM4uE,EAAN5uE,OAAQqkB,EAAWuqD,EAAXvqD,YAAa2hD,EAAQ4I,EAAR5I,SAAUgO,EAAQpF,EAARoF,SAAUvpE,EAAEmkE,EAAFnkE,GAAIylC,EAAO0+B,EAAP1+B,QAC7CpnB,EAAe9oB,EAAOiB,SAAtB6nB,YACDmrD,E,uWAAWxhF,CAAA,CACfwgG,cAAc,EACdjzF,OAAAA,EACAqkB,YAAAA,EACAygD,SAAUkB,EACVgO,SAAAA,EACAtnE,MAAOkgB,KAAKlgB,MACZjC,GAAAA,EACAylC,QAAAA,GACGtjB,KAAKvmB,MAEV,OAAOyiB,EAAYmrD,EAAaj0E,EAAO0d,IACzC,IAAC,CA5M4B,CAASoxD,EAAAA,WAAnBwjB,GACZvjB,UAAY,CACjBtkE,GAAIukE,IAAAA,OACJ9+B,QAAS8+B,IAAAA,OACThJ,SAAUgJ,IAAAA,KAAeC,WACzBjvE,OAAQgvE,IAAAA,OAAiBC,WACzB5tE,MAAO2tE,IAAAA,IACP73D,SAAU63D,IAAAA,OACV1mE,UAAW0mE,IAAAA,OACXx6E,MAAOw6E,IAAAA,OACP7pE,SAAU6pE,IAAAA,OACV3qD,YAAa2qD,IAAAA,OACbgF,SAAUhF,IAAAA,KACV/sE,YAAa+sE,IAAAA,OACb5mE,gBAAiB4mE,IAAAA,OACjB7nE,UAAW6nE,IAAAA,MC1Bf,kBAAgB3zE,GACd,IAAO7G,EAAoF6G,EAApF7G,MAAOwxE,EAA6E3qE,EAA7E2qE,SAAkBt/C,GAA2DrrB,EAAnE2E,OAAmE3E,EAA3DqrB,UAAUC,EAAiDtrB,EAAjDsrB,QAASqtD,EAAwC34E,EAAxC24E,SAAkBkf,GAAsB73F,EAA9Bk6E,SAA8Bl6E,EAApBgpB,aAAAA,OAAW,IAAA6uE,EAAG,CAAC,EAACA,EACjFC,EAAsB9uE,EAAY+uE,UAAY,CAAC,EAC/CC,EAAqBhvE,EAAYivE,SAAW,CAAC,EAG7CC,EAAgB,SAAAz+F,GAAC,OAAIkxE,EAA2B,QAAlBlxE,EAAEhB,OAAOU,MAAgB,EAO7D,OAAOo3E,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,QAAQmC,OAAO,EAAMquF,UAAWruF,EAAOm/B,SAAUqgD,EAAUtF,SAAU6kB,GAAoBJ,IAAuB,IAAEzsE,EAC9HklD,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,QAAQmC,OAAO,EAAOquF,SAAUruF,EAAOm/B,SAAUqgD,EAAUtF,SAAU6kB,GAAoBF,IAAuB,IAAE1sE,EAGjI,EClBD,YAAgBtrB,GACd,IAAO7G,EAA4E6G,EAA5E7G,MAAOwxE,EAAqE3qE,EAArE2qE,SAAkBgO,GAAmD34E,EAA3D2E,OAA2D3E,EAAnD24E,UAAU9+D,EAAyC7Z,EAAzC6Z,YAAakvC,EAA4B/oD,EAA5B+oD,UAAW//B,EAAiBhpB,EAAjBgpB,YAO5DmvE,EAAYh/F,GAAS,GAC3B,OACEo3E,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CACEvgF,KAAK,OACLmC,MAAOg/F,EACPt+E,YAAaA,EACbye,SAAUqgD,EACVtF,SAba,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MACP,KAARqG,IACFA,OAAMnG,GACRsxE,EAASnrE,EACX,EASIupD,UAAWA,GACP//B,GAGT,ECpBD,YAAgBhpB,GACd,IAAO7G,EAAgG6G,EAAhG7G,MAAOwxE,EAAyF3qE,EAAzF2qE,SAAkBgO,GAAuE34E,EAA/E2E,OAA+E3E,EAAvE24E,UAAU9+D,EAA6D7Z,EAA7D6Z,YAAakvC,EAAgD/oD,EAAhD+oD,UAAoB4Z,GAA4B3iE,EAArCo4F,QAAqCp4F,EAA5B2iE,WAAW35C,EAAiBhpB,EAAjBgpB,YAOhFmvE,EAAYh/F,GAAS,GAC3B,OACEo3E,EAAAA,cAAA,YAAAgH,EAAAA,GAAAA,GAAA,CACEp+E,MAAOg/F,EACPt+E,YAAaA,EACbye,SAAUqgD,EACVtF,SAZa,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MACP,KAARqG,IACFA,OAAMnG,GACRsxE,EAASnrE,EACX,EAQIupD,UAAWA,EACXsuB,MAAO,CACLH,MAAOvU,EAAY,YAAStpE,IAE1B2vB,GAGT,ECtBkBsmC,EAAAA,GAAXrvC,OAER,kBAAgBjgB,GACd,IAAO7G,EAAiE6G,EAAjE7G,MAAOwxE,EAA0D3qE,EAA1D2qE,SAA+BgO,GAA2B34E,EAAhD2E,OAAgD3E,EAAxCkyC,YAAwClyC,EAA3B24E,UAAU3vD,EAAiBhpB,EAAjBgpB,YASvD,OACEunD,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,OAAQmC,MAAOA,GAAS,GAAKm/B,SAAUqgD,EAAUtF,SAR9C,SAAA55E,GACf,IAAIN,EAAQM,EAAEhB,OAAOU,MACR,IAATA,IACFA,OAAQE,GACVsxE,EAASxxE,EACX,GAGuF6vB,GAExF,ECfD,YAAgBhpB,GACd,IAAO7G,EAA4E6G,EAA5E7G,MAAOwxE,EAAqE3qE,EAArE2qE,SAA2CgO,GAA0B34E,EAA3D2E,OAA2D3E,EAAnDkyC,YAAmDlyC,EAAtC8jE,WAAsC9jE,EAA1B24E,UAAU3vD,EAAgBhpB,EAAhBgpB,YASnE,OACEunD,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,OAAQmC,MAAOA,GAAS,GAAKm/B,SAAUqgD,EAAUtF,SAR9C,SAAA55E,GACf,IAAIN,EAAQM,EAAEhB,OAAOU,MACR,IAATA,IACFA,OAAQE,GACVsxE,EAASxxE,EACX,GAGuF6vB,GAExF,ECbD,IAAQ/I,GAAWqvC,EAAAA,GAAXrvC,OAER,kBAAgBjgB,GACd,IAWIq4F,EAXGl/F,EAA6E6G,EAA7E7G,MAAOwxE,EAAsE3qE,EAAtE2qE,SAAkBz4B,GAAoDlyC,EAA5D2E,OAA4D3E,EAApDkyC,aAAyBymC,GAA2B34E,EAAvC8jE,WAAuC9jE,EAA3B24E,UAAU3vD,EAAiBhpB,EAAjBgpB,YAiBnE,OAFEqvE,EAHGl/F,EAGO8mB,GAAO9mB,GAAOkuB,OAAO,oBAFrB,GAKVkpD,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,iBAAkBmC,MAAOk/F,EAAU//D,SAAUqgD,EAAUtF,SAhBpD,SAAA55E,GACf,IAAIN,EAAQM,EAAEhB,OAAOU,MAEnBA,EADW,IAATA,OACME,EAEA4mB,GAAO,IAAIzqB,KAAK2D,IAAQkuB,OAAO6qB,GACzCy4B,EAASxxE,EACX,GAS6F6vB,GAE9F,ECtBD,IAAQg4B,GAAkBsO,EAAAA,GAAMotB,UAAxB17B,cAER,kBAAelmD,GAA8E,IAA5EouB,EAAUpuB,EAAVouB,WAAY/vB,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAA6BgO,GAAF79E,EAAjBmtD,kBAA2BntD,EAAR69E,UAAU3vD,EAAWluB,EAAXkuB,YAsBzE,OACEunD,EAAAA,cAAA,UAAAgH,EAAAA,GAAAA,GAAA,CAAQ+gB,UAAQ,EACdjlB,SAJa,SAAA55E,GAAC,OAAIkxE,EAdO,SAAC1H,GAG5B,IAFA,IAAIjtD,EAAS,GACPqB,EAAU4rD,EAAY5rD,QACnBtZ,EAAI,EAAIA,EAAIsZ,EAAQjf,OAAS2F,IAAK,CACzC,IAAMw6F,EAAMlhF,EAAQtZ,GAChBw6F,EAAIC,UACNxiF,EAAOzc,KAAKg/F,EAAIp/F,MAEpB,CAGA,OAFK6c,EAAO5d,SACV4d,OAAS3c,GACJ2c,CACT,CAE+ByiF,CAAqBh/F,EAAEhB,QAAQ,EAK1DU,MAAOA,EACPm/B,SAAUqgD,GACNr8E,KAAK0sB,EAAa,CAAC,aAAc,QAAS,oBAzBhDg4B,GAAc93B,GAAY,SAAAxsB,GAAoB,IAAlB4jD,EAAK5jD,EAAL4jD,MAAOnnD,EAAKuD,EAALvD,MACjC,OAAOo3E,EAAAA,cAAA,UAAQlyE,IAAKlF,EAAOA,MAAOA,GAAQmnD,EAC5C,IA4BH,EClCD,IAAQU,GAAkBsO,EAAAA,GAAMotB,UAAxB17B,cAER,kBAAelmD,GAA8E,IAA5EouB,EAAUpuB,EAAVouB,WAAY/vB,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAA6BgO,GAAF79E,EAAjBmtD,kBAA2BntD,EAAR69E,UAAU3vD,EAAWluB,EAAXkuB,YAQnE4jE,EAAoB,MAATzzF,EACjB,OACEo3E,EAAAA,cAAA,UAAAgH,EAAAA,GAAAA,GAAA,CACElE,SALa,SAAA55E,GAAC,OAAIkxE,EAASlxE,EAAEhB,OAAOU,MAAM,EAM1CA,MAAOyzF,EAAWzzF,EAAQ,GAC1Bm/B,SAAUqgD,GACNr8E,KAAK0sB,EAAa,CAAC,aAAc,YAEnC4jE,GAAYrc,EAAAA,cAAA,UAAQj4C,UAAQ,EAACn/B,MAAO,KAdxC6nD,GAAc93B,GAAY,SAAAxsB,GAAoB,IAAlB4jD,EAAK5jD,EAAL4jD,MAAOnnD,EAAKuD,EAALvD,MACjC,OAAOo3E,EAAAA,cAAA,UAAQlyE,IAAKlF,EAAOA,MAAOA,GAAQmnD,EAC5C,IAgBH,ECvBD,YAAgBtgD,GACd,IAAO7G,EAAiF6G,EAAjF7G,MAAOwxE,EAA0E3qE,EAA1E2qE,SAAkBgO,GAAwD34E,EAAhE2E,OAAgE3E,EAAxD24E,UAAUz8D,EAA8Clc,EAA9Ckc,IAAKjH,EAAyCjV,EAAzCiV,IAAK4tD,EAAoC7iE,EAApC6iE,KAAMhpD,EAA8B7Z,EAA9B6Z,YAAamP,EAAiBhpB,EAAjBgpB,YASjE0vE,EAAuBr/F,MAATF,EAAqB,GAAKA,EAC9C,OACEo3E,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOvgF,KAAK,SAAUmC,MAAOu/F,EAAa7+E,YAAaA,EAAaye,SAAUqgD,EAAUz8D,IAAKA,EAAKjH,IAAKA,EAAK4tD,KAAMA,EAAMwQ,SAVzG,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MAEjBqG,EADU,KAARA,GAAsB,OAARA,OACVnG,EAEAuC,OAAO4D,GACfmrE,EAASnrE,EACX,GAGkJwpB,GAEnJ,ECdD,YAAgBhpB,GACd,IAAO7G,EAAsF6G,EAAtF7G,MAAOwxE,EAA+E3qE,EAA/E2qE,SAAkBgO,GAA6D34E,EAArE2E,OAAqE3E,EAA7D24E,UAAUz8D,EAAmDlc,EAAnDkc,IAAKjH,EAA8CjV,EAA9CiV,IAAK4tD,EAAyC7iE,EAAzC6iE,KAAMhpD,EAAmC7Z,EAAnC6Z,YAAWg+E,EAAwB73F,EAAtBgpB,YAAAA,OAAW,IAAA6uE,EAAG,CAAC,EAACA,EACjFc,EAAmB3vE,EAAYvK,OAAS,CAAC,EACzCm6E,EAAoB5vE,EAAY85C,QAAU95C,EAC1CqqD,EAAW,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MAEjBqG,EADU,KAARA,GAAsB,OAARA,OACVnG,EAEAuC,OAAO4D,GACfmrE,EAASnrE,EACX,EACMk5F,EAAuBr/F,MAATF,EAAqB,GAAKA,EAC9C,OACEo3E,EAAAA,cAAA,OAAK8G,MAAO,CAACwhB,QAAS,gBACpBtoB,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOl5E,IAAK,SAAUrH,KAAK,SAAUmC,MAAOu/F,EAAa7+E,YAAaA,EAAaye,SAAUqgD,EAAUz8D,IAAKA,EAAKjH,IAAKA,EAAK4tD,KAAMA,EAAMwQ,SAAUA,GAAcslB,IAC/JpoB,EAAAA,cAAA,SAAAgH,EAAAA,GAAAA,GAAA,CAAOl5E,IAAK,QAASrH,KAAK,QAASmC,MAAOu/F,EAAapgE,SAAUqgD,EAAUz8D,IAAKA,EAAKjH,IAAKA,EAAK4tD,KAAMA,EAAMwQ,SAAUA,GAAculB,IAGxI,ECnBD,YAAe99F,GAAyD,IAAvDuW,EAAKvW,EAALuW,MAAOo4D,EAAQ3uE,EAAR2uE,SAAU2O,EAAWt9E,EAAXs9E,YAAaO,EAAQ79E,EAAR69E,SAAUiC,EAAS9/E,EAAT8/E,UACjDke,EAAgB,SAAC3zF,GAAM,OAC3BA,EAAO1F,KAAI,SAAAuG,GACT,IAAOqL,EAA6CrL,EAA7CqL,MAAOzZ,EAAsCoO,EAAtCpO,KAAM0hB,EAAgCtT,EAAhCsT,MAAOgf,EAAyBtyB,EAAzBsyB,SAAU+iD,EAAer1E,EAAfq1E,YACrC,GAAIhqE,EACF,OAAOk/D,EAAAA,cAAA,YAAUj4C,SAAUA,EAAUj6B,IAAKzG,EAAM0hB,MAAOA,GAAQw/E,EAAcznF,IAE7E,IAAMgmE,EAAQgE,EAAc,CAAE0d,WAAY,QAAW,CAAC,EACtD,OAAOxoB,EAAAA,cAAA,UAAQj4C,SAAUA,EAAUj6B,IAAKzG,EAAMuB,MAAOvB,EAAMy/E,MAAOA,GAAQ/9D,EAE9E,GAAE,EAKEszE,EAA0B,MAAfxU,EACjB,OACE7H,EAAAA,cAAA,UACE8C,SALa,SAAA55E,GAAC,OAAIgwE,EAAShwE,EAAEhB,OAAOU,MAAM,EAM1CA,MAAOyzF,EAAWxU,EAAc,GAChC9/C,SAAUqgD,EACVtB,MAAO,CAAE2hB,MAAOpe,EAAY,MAAQ,QAElCgS,GAAYrc,EAAAA,cAAA,UAAQj4C,UAAQ,EAACn/B,MAAO,KACrC2/F,EAAcznF,GAGpB,EC3BD,YAAevW,GAA0G,IAoB/GuyF,EApBOj+E,EAAEtU,EAAFsU,GAAI0I,EAAGhd,EAAHgd,IAAKg1D,EAAMhyE,EAANgyE,OAAQua,EAAkBvsF,EAAlBusF,mBAAoBxa,EAAc/xE,EAAd+xE,eAAgBv0C,EAAQx9B,EAARw9B,SAAUqgD,EAAQ79E,EAAR69E,SAAUh0E,EAAM7J,EAAN6J,OAAQwkF,EAAOruF,EAAPquF,QAAShoE,EAAQrmB,EAARqmB,SACnG83E,EAAa1iG,OAAOgG,KAAK8qF,GAAoBjvF,OAC7C8gG,EAAc5gE,EAEd6gE,EADkBx0F,EAAOiB,SAAxByjF,eAC2B4P,EAAa,IAAMC,EAwB/C7lB,EAAW,SAAA55E,GAAC,OAAIozE,EAAepzE,EAAEhB,OAAOU,MAAM,EAIpD,MAAO,CACLgwF,IAbMkE,EAAU,MACT,CACL9c,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAAUr2F,KAAK,WAAWoY,GAAIA,EAAGi+E,EAAS7F,QAAS1vE,EAAKwgB,SAAUqgD,EAAUtF,SAQ3E,SAAA55E,GAAC,OAAIqzE,EAAOrzE,EAAEhB,OAAO+uF,QAAQ,IAN7CjX,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAAQ,QAAU+L,QAAShqF,EAAGi+E,GAAUlsE,GAAY,SAUrEg4E,GA3BA5iG,OAAOgG,KAAK8qF,GAAoB5nF,KAAI,SAAApB,GAClC,IAAAg7F,EAAmChS,EAAmBhpF,GAA/C+Q,EAAEiqF,EAAFjqF,GAAIrP,EAAIs5F,EAAJt5F,KAAMuZ,EAAK+/E,EAAL//E,MAAOkuE,EAAO6R,EAAP7R,QAClB6F,EAAUxgB,EAAe4Z,UAAY,UAAY,GACvD,OAAK9N,IAAYrgD,GAAckvD,EAExB,CACLjX,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAASr2F,KAAK,QAAQoY,GAAIA,EAAGi+E,EAASttF,KAAMA,EAAKstF,EAAS7F,QAASA,EAASlvD,SAAUqgD,GAAYrgD,EAAUn/B,MAAOkF,EAAKg1E,SAAUA,IAEjJ9C,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAAQ,QAAS+L,QAAShqF,EAAGi+E,GAAU/zE,IAJ/C,IAMX,IAoBH,ECrCD,IAAMggF,GAAc,CAClB,iBAAoB,IACpB,WAAc,IACd,YAAe,IACf,SAAY,IACZ,aAAgB,IAChB,QAAW,KAGb,kBAAex+F,GAAsC,IAApC9D,EAAI8D,EAAJ9D,KAAMsiB,EAAKxe,EAALwe,MAAO+rE,EAAOvqF,EAAPuqF,QAAS1M,EAAQ79E,EAAR69E,SAC/B4gB,EAAWjgF,GAASggF,GAAYtiG,GACtC,OAAOu5E,EAAAA,cAAA,UAAQ8U,QAASA,EAASruF,KAAK,SAASshC,SAAUqgD,GAAW4gB,EACrE,ECXD,YAAez+F,GAAY,IAAV9D,EAAI8D,EAAJ9D,KAGXiuF,EAFe,CACnB,EACsBjuF,IAAS,KAK/B,OAJKiuF,GAAiB,SAATjuF,IACXiuF,EAAO1U,EAAAA,cAAC0I,GAAQ,OAGXgM,CACR,ECVD,YAAenqF,GAAwB,IAAtBmF,EAAQnF,EAARmF,SACf,OAD+BnF,EAAN6J,OAClB4rE,EAAAA,cAAAA,EAAAA,SAAA,KAAGtwE,EACX,ECFD,YAAenF,GAAQA,EAAN6J,OAAkE,IAA1D0H,EAAYvR,EAAZuR,aAActB,EAAQjQ,EAARiQ,SAAiBqjE,GAAFtzE,EAALwlD,MAAkBxlD,EAAXszE,aAAauK,EAAQ79E,EAAR69E,SASnE,OACEpI,EAAAA,cAAA,UACE8C,SAJa,SAAA55E,GAAC,OAAI20E,EAAY30E,EAAEhB,OAAOU,MAAM,EAK7CA,MAAO4R,GAAY,GACnButB,SAAUqgD,GAZQ,SAACtsE,GAAY,OACjCA,EAAa5M,KAAI,SAAA/C,GAAA,IAAA8K,GAAA7K,EAAAA,GAAAA,GAAAD,EAAA,GAAEqwE,EAAMvlE,EAAA,GAAE7D,EAAI6D,EAAA,UAC7B+oE,EAAAA,cAAA,UAAQlyE,IAAK0uE,EAAQ5zE,MAAO4zE,GAASppE,EAAK2V,MAAe,GACzD,CAWCw/E,CAAczsF,GAGpB,EClBD,YAAevR,GAAgD,IAA9C3B,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAAUrxD,EAAKxe,EAALwe,MAAOlK,EAAEtU,EAAFsU,GAEjCi+E,GAF2CvyF,EAAN6J,OAAY7J,EAAJ9D,MAGnD,MAAO,CACLu5E,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAAUr2F,KAAK,WAAWoY,GAAIA,EAAGi+E,EAAS7F,UAAWruF,EAAOk6E,SAH5D,SAAA55E,GAAC,OAAIkxE,EAASlxE,EAAEhB,OAAO+uF,QAAQ,IAK9CjX,EAAAA,cAAA,SAAOlyE,IAAK+Q,EAAGi+E,EAAQ,QAAU+L,QAAShqF,EAAGi+E,GAAU/zE,GAE1D,ECVD,YAAexe,GAAuC,IAArC2pF,EAAI3pF,EAAJ2pF,KAA0BnkC,GAAdxlD,EAAN0+F,OAAkB1+F,EAAV2+F,WAAiB3+F,EAALwlD,OACrCo5C,QAAQp5C,IACVmkC,GAEH,ECsBM,IAAMkV,GAAkB,SAAH7+F,GAAqB,OAAVA,EAAN6J,OAAgB7J,EAARmF,QAAsB,E,mJCxB9B,IAEZ25F,GAAS,SAAArjB,GAAA,SAAAqjB,IAAA,IAAA1uE,E,OAAA2nD,EAAAA,EAAAA,GAAA,KAAA+mB,GAAA,QAAArrF,EAAAxT,UAAA3C,OAAAmP,EAAA,IAAA1Q,MAAA0X,GAAArP,EAAA,EAAAA,EAAAqP,EAAArP,IAAAqI,EAAArI,GAAAnE,UAAAmE,GA0B3B,O,EA1B2B,K,EAAA06F,E,EAAA,GAAAthG,OAAAiP,G,cAAA2jB,G,+EAwB5B2uE,aAAe,SAAC1gG,GACd+xB,EAAKlrB,MAAMijF,UAAU,YAAaz5D,SAASrwB,GAC7C,EAAC+xB,CAAA,QAAAioD,EAAAA,EAAAA,GAAAymB,EAAArjB,IAAAnD,EAAAA,EAAAA,GAAAwmB,EAAA,EAAAv7F,IAAA,SAAAlF,MAED,WACE,IAAAo6E,EAGIhiD,KAAKvxB,MAFPsX,EAAQi8D,EAARj8D,SAAUD,EAAOk8D,EAAPl8D,QAAS1S,EAAM4uE,EAAN5uE,OAAQ88D,EAAW8R,EAAX9R,YAAaE,EAAiB4R,EAAjB5R,kBAAmB34C,EAAWuqD,EAAXvqD,YAC3D44C,EAAY2R,EAAZ3R,aAAcC,EAAY0R,EAAZ1R,aAAcH,EAAgB6R,EAAhB7R,iBAAkBiX,EAAQpF,EAARoF,SAEzC/yE,EAA0BjB,EAA1BiB,SAAU8D,EAAgB/E,EAAhB+E,QAAS2Y,EAAO1d,EAAP0d,IACpBy3E,EAAmBxiF,EAAWA,EAAS4pD,eAAY7nE,EAClD88B,EAAcvwB,EAAduwB,WACD4jE,EAAoB1iF,EAAQ9O,IAAI,YAAauxF,GAC7CE,EAAa/Z,KAAMre,EAAcC,EAAe,GAAGpiE,KAAI,SAACkQ,GAAI,MAAM,CAAC2wC,MAAO3wC,EAAMxW,MAAOwW,EAAK,IAC5Fgc,EAAUjiB,EAAQq5D,OAAOp3C,QACzBsuE,EAAS,SAACj6F,GAAK,OAAK2rB,EAAQ3rB,EAAOqiB,EAAI,EAE7C,OACEkuD,EAAAA,cAAA,OAAK6F,UAAU,uBACb7F,EAAAA,cAAA,OAAK6F,UAAU,qBACXjgD,GACGo6C,EAAAA,cAAA,SAAO6F,UAAU,eAAe3U,IAElCtrC,GAAcurC,GACZ6O,EAAAA,cAAA,OAAK6F,UAAU,0BAChB7F,EAAAA,cAAA,YAAO7O,IAGX6O,EAAAA,cAAC0pB,GAAM1iB,EAAAA,GAAAA,GAAA,CACL5yE,OAAQA,EACRxL,MAAO4gG,EACP7wE,WAAY8wE,EACZrvB,SAAUp5C,KAAKsoE,aACflhB,SAAUA,EACV9+D,YAAa8nD,GACT34C,KAGRunD,EAAAA,cAAA,OAAK6F,UAAU,qBAAqB7kD,KAAKvxB,MAAMC,UAGrD,IAAC,CAjE2B,CAASu3E,EAAAA,e,ykBAAlBoiB,GACZlmB,UAAY,CACjB/uE,OAAQgvE,IAAAA,OAAiBC,WACzBqP,UAAWtP,IAAAA,KAAeC,WAC1Bv8D,QAASs8D,IAAAA,IAAcC,WACvBhS,aAAc+R,IAAAA,OACd9R,aAAc8R,IAAAA,OACdhS,kBAAmBgS,IAAAA,OACnBjS,iBAAkBiS,IAAAA,OAClBlS,YAAakS,IAAAA,OACb3qD,YAAa2qD,IAAAA,OACbgF,SAAUhF,IAAAA,MAXOimB,GAeZM,aAAe,CACpBlxE,YAAa,CAAC,EACd44C,aAAc,EACdC,aAAc,GACdF,kBAAmB,uBACnBF,YAAa,gBACbC,iBAAkB,MCjBtB,IAiKI/8D,GAAS,CACXgT,aAlKgBvgB,GAAA,GACb+iG,EAAAA,GAAWxiF,cAkKd3N,UA7Ja5S,GAAAA,GAAA,GACV+iG,EAAAA,GAAWnwF,WAAS,IACvBk3D,UAAS9pE,GAAAA,GAAA,GACJ+iG,EAAAA,GAAWnwF,UAAUk3D,WAAS,IACjC7pD,QAAOjgB,GAAAA,GAAA,GACF+iG,EAAAA,GAAWnwF,UAAUk3D,UAAU7pD,SAAO,IACzCsU,QAAS,SAAC3rB,EAAKlF,GAA6B,OAAOk3B,EAA9Bl3B,EAAHk3B,KAA0Bl3B,EAArBi3B,EAAIqoE,kBAA+Cp6F,EAAM,QAwJpF0J,QAhJc,CACd84D,KAAIprE,GAAAA,GAAA,GACC+iG,EAAAA,GAAWzwF,QAAQ84D,MAAI,IAC1B72C,QAAS,SAAC3rB,EAAKtD,GAA6B,OAAOs1B,EAA9Bt1B,EAAHs1B,KAA0Bt1B,EAArBo1B,EAAIuoE,kBAA+Cr6F,EAAM,IAElF0iE,SAAQtrE,GAAAA,GAAA,GACH+iG,EAAAA,GAAWzwF,QAAQg5D,UAAQ,IAC9B/2C,QAAS,SAAC3rB,EAAKwH,GAAiC,OAAOwqB,EAAlCxqB,EAAHwqB,KAA8BxqB,EAAzBsqB,EAAIwoE,sBAAuDt6F,EAAM,IAE1FqzD,OAAMj8D,GAAAA,GAAA,GACD+iG,EAAAA,GAAWzwF,QAAQ2pD,QAAM,IAC5B1nC,QAAS,SAAC3rB,EAAKc,GAA+B,OAAOkxB,EAAhClxB,EAAHkxB,KAA4BlxB,EAAvBgxB,EAAIyoE,oBAAmDv6F,EAAM,IAEtF8iE,OAAM1rE,GAAAA,GAAA,GACD+iG,EAAAA,GAAWzwF,QAAQo5D,QAAM,IAC5Bn3C,QAAS,SAAC3rB,EAAKgB,GAA+B,OAAOgxB,EAAhChxB,EAAHgxB,KAA4BhxB,EAAvB8wB,EAAI0oE,oBAAmDx6F,EAAM,IAEtF+iE,OAAM3rE,GAAAA,GAAA,GACD+iG,EAAAA,GAAWzwF,QAAQq5D,QAAM,IAC5Bp3C,QAAS,SAAC3rB,EAAKuB,GAA+B,OAAOywB,EAAhCzwB,EAAHywB,KAA4BzwB,EAAvBuwB,EAAI2oE,oBAAmDz6F,EAAM,IAEtFijE,YAAW7rE,GAAAA,GAAA,GACN+iG,EAAAA,GAAWzwF,QAAQu5D,aAAW,IACjCt3C,QAAS,SAAC3rB,EAAKwB,GAAoC,OAAOwwB,EAArCxwB,EAAHwwB,KAAiCxwB,EAA5BswB,EAAI4oE,yBAA6D16F,EAAM,IAEhG8jB,KAAI1sB,GAAAA,GAAA,GACC+iG,EAAAA,GAAWzwF,QAAQoa,MAAI,IAC1B6H,QAAS,SAAC3rB,EAAK2B,GAA6B,OAAOqwB,EAA9BrwB,EAAHqwB,KAA0BrwB,EAArBmwB,EAAI6oE,kBAA+C36F,EAAM,IAElFumC,KAAInvC,GAAAA,GAAA,GACC+iG,EAAAA,GAAWzwF,QAAQ68B,MAAI,IAC1B5a,QAAS,SAAC3rB,EAAK4B,GAA6B,OAAOowB,EAA9BpwB,EAAHowB,KAA0BpwB,EAArBkwB,EAAI8oE,kBAA+C56F,EAAM,IAElFqkB,SAAQjtB,GAAAA,GAAA,GACH+iG,EAAAA,GAAWzwF,QAAQ2a,UAAQ,IAC9BsH,QAAS,SAAC3rB,EAAKkC,GAAiC,OAAO8vB,EAAlC9vB,EAAH8vB,KAA8B9vB,EAAzB4vB,EAAI+oE,sBAAuD76F,EAAM,IAE1FszD,QAAAl8D,GAAAA,GAAA,GACK+iG,EAAAA,GAAWzwF,QAAO,SAAQ,IAC7BiiB,QAAS,SAAC3rB,EAAKmC,GAAgC,OAAO6vB,EAAjC7vB,EAAH6vB,KAA6B7vB,EAAxB2vB,EAAIgpE,qBAAqD96F,EAAM,IAExFgG,MAAK5O,GAAAA,GAAA,GACA+iG,EAAAA,GAAWzwF,QAAQ1D,OAAK,IAC3B2lB,QAAS,SAAC3rB,EAAKkqB,GAA4B,OAAO8H,EAA7B9H,EAAH8H,KAAyB9H,EAApB4H,EAAIipE,iBAA6C/6F,EAAM,EAC9EgpB,YAAa,CACXC,YAAY,KAGhB7hB,KAAIhQ,GAAAA,GAAA,GACC+iG,EAAAA,GAAWzwF,QAAQtC,MAAI,IAC1BukB,QAAS,SAAC3rB,EAAKqqB,GAAsB,OAAO2H,EAAvB3H,EAAH2H,KAAmB3H,EAAdyH,EAAI4uD,WAAiC1gF,EAAM,EAClEgpB,YAAa,CACX,IAMJq7C,WAAUjtE,GAAAA,GAAA,GACL+iG,EAAAA,GAAWzwF,QAAQ26D,YAAU,IAEhC14C,QAAS,SAAC3rB,EAAKsqB,GAA6B,OAAQ0H,EAA/B1H,EAAH0H,KAA0B1H,EAArBwH,EAAIuoE,kBAAgDr6F,EAAM,KAoFnF6N,MA9ESzW,GAAAA,GAAA,GACN+iG,EAAAA,GAAWtsF,OAAK,IACnBk1D,OAAM3rE,GAAAA,GAAA,GACD+iG,EAAAA,GAAWtsF,MAAMk1D,QAAM,IAC1Br5D,QAAOtS,GAAAA,GAAA,GACF+iG,EAAAA,GAAWtsF,MAAMk1D,OAAOr5D,SAAO,IAClCq5D,OAAM3rE,GAAAA,GAAA,GACD+iG,EAAAA,GAAWtsF,MAAMk1D,OAAOr5D,QAAQq5D,QAAM,IACzC73D,YAAa,CACX8d,YAAa,CACXC,YAAY,YAqEtBrjB,SA3DYxO,GAAAA,GAAA,GACT+iG,EAAAA,GAAWv0F,UAAQ,IAEtB6nB,YAAa,SAACztB,EAAK6qB,GAA8B,OAAOmH,EAA/BnH,EAAHmH,KAA2BnH,EAAtBiH,EAAIkpE,mBAAiDh7F,EAAM,EACtF0tB,eAAgB,SAAC1tB,EAAK8qB,GAA8B,OAAOkH,EAA/BlH,EAAHkH,KAA2BlH,EAAtBgH,EAAIkpE,mBAAiDh7F,EAAM,EACzF2tB,WAAY,SAAC3tB,EAAKi7F,GAA8B,OAAOjpE,EAA/BipE,EAAHjpE,KAA2BipE,EAAtBnpE,EAAIkpE,mBAAiDh7F,EAAM,EACrF4tB,YAAa,SAAC5tB,EAAKk7F,GAAwB,OAAOlpE,EAAzBkpE,EAAHlpE,KAAqBkpE,EAAhBppE,EAAIqpE,aAAqCn7F,EAAM,EAC1EmuB,aAAc,SAACnuB,EAAKo7F,GAAyB,OAAOppE,EAA1BopE,EAAHppE,KAAsBopE,EAAjBtpE,EAAIupE,cAAuCr7F,EAAM,EAC7E6tB,aAAc,SAAC7tB,EAAKs7F,GAAyB,OAAOtpE,EAA1BspE,EAAHtpE,KAAsBspE,EAAjBxpE,EAAIypE,cAAuCv7F,EAAM,EAC7E8tB,WAAY,SAAC9tB,EAAKw7F,GAAuB,OAAOxpE,EAAxBwpE,EAAHxpE,KAAoBwpE,EAAf1pE,EAAI2pE,YAAmCz7F,EAAM,EACvE+tB,kBAAmB,SAAC/tB,EAAK07F,GAA8B,OAAO1pE,EAA/B0pE,EAAH1pE,KAA2B0pE,EAAtB5pE,EAAI6pE,mBAAiD37F,EAAM,EAC5FkuB,eAAgB,SAACluB,EAAK47F,GAA2B,OAAO5pE,EAA5B4pE,EAAH5pE,KAAwB4pE,EAAnB9pE,EAAI6nE,gBAA2C35F,EAAM,EACnFguB,mBAAoB,SAAChuB,EAAK67F,GAA+B,OAAO7pE,EAAhC6pE,EAAH7pE,KAA4B6pE,EAAvB/pE,EAAIgqE,oBAAmD97F,EAAM,EAC/FiuB,mBAAoB,SAACjuB,EAAK+7F,GAA+B,OAAO/pE,EAAhC+pE,EAAH/pE,KAA4B+pE,EAAvBjqE,EAAIgqE,oBAAmD97F,EAAM,EAC/FutB,cAAe,SAACvtB,EAAKg8F,GAAqB,OAAOC,EAAPD,EAAlBlqE,EAAImqE,gBAAoCj8F,EAAM,EACtEouB,mBAAoB,KACpBM,sBAAuB,SAAC1uB,EAAKk8F,GAAM,OAAMlqE,EAANkqE,EAAHlqE,KAAa,OAAQ,CAAC/xB,SAAU,CAAC,WAAW,EAE5EuiF,uBAAwB,CACtBv5D,YAAY,GAEd6wD,0BAA2B,CACzB,EAGFqiB,mBAAoB,QACpBC,mBAAoB,QACpBC,mBAAoB,QACpBC,eAAgB,EAChBC,WAAY,QACZpiB,gBAAiB,IAEjBoL,UAAU,EACV4D,SAAS,EACTE,eAAe,EACfb,qBAAsB,aAyBtBnmE,IAnBOjrB,GAAAA,GAAA,GACJ+iG,EAAAA,GAAW93E,KAAG,IACjByP,EAAC16B,GAAA,GACIolG,GAELzqE,EAAC36B,GAAA,GACIqlG,GAELzqE,IAAK,SAAC0qE,EAAGC,GAAC,OAAKpsB,EAAAA,cAAoBmsB,EAAGC,EAAE,KAmB1C,SANAh4F,GAAS2qD,EAAAA,GAAM0W,aAAaC,aAAathE,GAAQ,CAC/C,cACA,aACA,oB,soBCjLF,IAAAi4F,GAAgHttC,EAAAA,GAAMutC,aAA9GxvC,GAAeuvC,GAAfvvC,gBAAiBiB,GAAiBsuC,GAAjBtuC,kBAAmBT,GAAiB+uC,GAAjB/uC,kBAAmBI,GAAmB2uC,GAAnB3uC,oBAAqBa,GAAuB8tC,GAAvB9tC,wBACpFguC,GAAsHxtC,EAAAA,GAAMotB,UAApH17B,GAAa87C,GAAb97C,cAAeN,GAAiBo8C,GAAjBp8C,kBAAmBW,GAAYy7C,GAAZz7C,aAAcd,GAAmBu8C,GAAnBv8C,oBAAqBW,GAAe47C,GAAf57C,gBAAiBL,GAAmBi8C,GAAnBj8C,oBAE9F,SAASxgD,GAAMC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,EACtB,GACF,CAocA,SAlckC,SAAHxF,EAAA4B,GAWzB,IAAAqgG,EAAAC,EAAAC,EAVJ7xE,EAAUtwB,EAAVswB,WAAY8xE,EAAWpiG,EAAXoiG,YAAaC,EAAcriG,EAAdqiG,eAAgBC,EAAgBtiG,EAAhBsiG,iBAAkBC,EAAyBviG,EAAzBuiG,0BAC1CC,EAAuBxiG,EAAxCsiC,gBACYmgE,EAAgBziG,EAA5BouB,WAA8B++B,EAAiBntD,EAAjBmtD,kBACvB3G,EAAaxmD,EAApB3B,MAAsBwxE,EAAQ7vE,EAAR6vE,SAAU9wD,EAAW/e,EAAX+e,YAChClV,EAAM7J,EAAN6J,OAEA64F,GAFa1iG,EAALkL,MAEOtJ,EAAf8gG,iBACAlF,EAAQ57F,EAAR47F,SACAmF,EAAG/gG,EAAH+gG,IACAC,EAAmBhhG,EAAnBghG,oBAEMC,EAAqB,CAAC,YAAa,gBACnCC,EAA6C,QAAhCb,EAAGp4F,EAAOiB,SAAS4b,qBAAa,IAAAu7E,EAAAA,EAAI,eACjDc,EAAmD,QAAnCb,EAAGr4F,EAAOiB,SAAS6b,wBAAgB,IAAAu7E,EAAAA,EAAI,kBACvDc,EAAeV,EAAqD,QAArCH,EAAIt4F,EAAOiB,SAAS8b,yBAAiB,IAAAu7E,EAAAA,EAAI,iBAAoBpjF,EAG9FuR,GAAciyE,IAA8BC,GAA4CjkG,MAAjBioD,IACzEg8C,EAA0BzmG,MAAMC,QAAQwqD,GAAiBA,EAAgB,CAACA,IAI5E,IAAAy8C,EAAwBxtB,EAAAA,UAAe,GAAMytB,GAAArhG,EAAAA,GAAAA,GAAAohG,EAAA,GAAtCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA4C5tB,EAAAA,cAAel3E,GAAU+kG,GAAAzhG,EAAAA,GAAAA,GAAAwhG,EAAA,GAA9DE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAoChuB,EAAAA,SAAe,GAAEiuB,GAAA7hG,EAAAA,GAAAA,GAAA4hG,EAAA,GAA9CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA0CpuB,EAAAA,UAAe,GAAMquB,GAAAjiG,EAAAA,GAAAA,GAAAgiG,EAAA,GAAxDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAAoCxuB,EAAAA,SAAe,IAAGyuB,GAAAriG,EAAAA,GAAAA,GAAAoiG,EAAA,GAA/CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAA8C5uB,EAAAA,cAAel3E,GAAU+lG,GAAAziG,EAAAA,GAAAA,GAAAwiG,EAAA,GAAhE/hE,EAAegiE,EAAA,GAAEC,EAAkBD,EAAA,GAGpCE,EAAiB/uB,EAAAA,OAAa,GAC9BgvB,EAAqBhvB,EAAAA,OAAa,GAClCivB,EAAqBjvB,EAAAA,QAAa,GAClCkvB,GAAsBlvB,EAAAA,SAC5BkvB,GAAoB1kD,QAAUuG,EACLivB,EAAAA,SACRx1B,QAAUkkD,EAG3B,IAAMS,GAA2BnvB,EAAAA,SAAc,kBAC7C7vB,GAAkB48C,EAAwB,GACzC,CACDA,IAGIqC,GAAwCrC,GAA2BzmG,MAAMC,QAAQwmG,IAClFA,EAAwBnhG,QAAO,SAAA9F,GAAC,OAAU,OAANA,GAA2B,YAAbC,EAAAA,EAAAA,GAAOD,EAAc,IAAE+B,OAAS,EACjF8wB,GAAaqnD,EAAAA,SAAc,kBAC/BnlD,EACKkyE,EAA0BjwC,GAAgBjwB,EAAiBsiE,IAA0B,GAAQtiE,EAC9FsjB,GAAkB68C,EAAiB,GACtC,CACDnyE,EACAkyE,EACAlgE,EACAmgE,IAGEqC,GAAsBx0E,EACtBgS,EACAsjB,GAAkB68C,GAClBt1C,GAAqBg3C,IAAe/9C,GAAgB+9C,EAAY7hE,KAClEwiE,GAAsBvyC,GAAgBuyC,GAAqB,CAACr/C,GAAoB0+C,KAAc,KAE5F7zE,GAAegS,IAAmBkgE,GAA4B2B,GAAehB,GAAgB,SAARR,IAEvFmC,GAAsB12E,IAEpBkC,IAAe68B,GAAqBq1C,GAAmC,QAARG,IAKjEmC,GAAsBvyC,GAAgBuyC,GAAqBF,IAA0B,GAAM,IAG7F,IAAMG,GAAYpB,EAAa,EACzBqB,GAAyBzC,IAA8BY,GAAQ7yE,GAChEu0E,IAA0D,MAAjBr+C,EACxCy+C,GAAuB9B,GAAQ7yE,QACX/xB,IAApB+jC,KACAggE,GAAmB6B,GACnBe,IAAoBD,IAAwBD,KAA2BD,GACvEI,IAAeD,IAAoB92E,IAAcA,GAAW9wB,OAAS,GACtEimG,GAAkBA,EAAevxC,UAAYuxC,EAAeliG,QAAU,MAAQ8iG,EAC7EiB,IAAmBL,IAAaI,GAChC5oF,GAAU2pC,GAAc4+C,GAAqBtxC,IAC7Cs+B,GAA4B,MAAjBtrC,EACX6+C,IAAqB7H,GAAY1L,GAAWvrC,GAAaC,EAAep4B,IAAc,KAItFk3E,GAAe,eAAA54F,GAAAglD,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAAgB,IAAA,IAAAnJ,EAAAkkG,EAAA79F,EAAAwI,EAAAs1F,EAAAxzF,EAAAhM,EAAAkV,EAAA82C,EAAAyzC,EAAAC,EAAAC,EAAAnzC,EAAAozC,EAAAC,EAAA5lG,UAAA,OAAAuJ,KAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAnD,KAAAmD,EAAA3D,MAAA,OAS2B,OATpB9E,EAAMwkG,EAAAvoG,OAAA,QAAAiB,IAAAsnG,EAAA,GAAAA,EAAA,GAAG,OAAMN,EAAUM,EAAAvoG,OAAA,QAAAiB,IAAAsnG,EAAA,IAAAA,EAAA,KAEnCtC,GACjBC,OAAkBjlG,GAGdmJ,EAAS69F,GAAcjjE,EAAkBA,EAAgBhlC,OAAS,EAClE4S,EAAOq1F,GAAchC,IAAmBnB,GAAe,CAAExwC,SAAU,GAEnE4zC,IAAqBhB,EAAevkD,QAAOn2C,EAAA3D,KAAA,EAC/BmqB,EAAW30B,KAAKkO,aAAM,EAANA,EAAQ0d,IAAKlmB,EAAQqG,EAAQwI,GAAK,OACD,GAD7D8B,EAAGlI,EAAAg8F,KACgBtB,EAAevkD,SAAWulD,GAC1Bf,EAAmBxkD,QAAO,CAAAn2C,EAAA3D,KAAA,gBAAA2D,EAAAooD,OAAA,SAC1C,MAAI,QA6BZ,OA7BYlsD,EAG8BgM,SAAAA,EAAKkJ,OAC5ClJ,EACA,CAAEkJ,OAAQlJ,GAFNkJ,EAAMlV,EAANkV,OAAQ82C,EAAOhsD,EAAPgsD,QAAeyzC,EAAOz/F,EAAbkK,KAInBw1F,EAAU9/C,GAAkB1qC,GAG9BqqF,GACF/yC,EAAYD,GAAgBjwB,EAAiBojE,GAAS,GACtDC,EAAgBnzC,EAAUl1D,OAASglC,EAAgBhlC,SAEnDk1D,EAAYkzC,EACRtD,IACFuD,EAAgBnzC,EAAUl1D,OAAS,KAKjCsoG,EAAyB,MAAX5zC,GAA8B,MAAXyzC,GAAoC,MAAjBE,EAAqBrpG,GAAAA,GAAAA,GAAAA,GAAA,GACxD,MAAjBqpG,EAAwB,CAAE3zC,QAAS2zC,GAAkB,CAAC,GAC3C,MAAX3zC,EAAkB,CAAEA,QAAAA,GAAY,CAAC,GACtB,MAAXyzC,EAAkBA,EAAU,CAAC,GAAC,IAClCpkG,OAAAA,SACE9C,IAEFilG,EAAkBoC,GACnB97F,EAAAooD,OAAA,SAEMM,GAAS,yBAAA1oD,EAAAI,OAAA,GAAAM,EAAA,KACjB,kBA7CoB,OAAAkC,EAAAqH,MAAA,KAAA9T,UAAA,KAgDf8lG,GAAuB,eAAA7/F,GAAAwrD,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAAw8F,IAAA,IAAAC,EAAA/1F,EAAAs1F,EAAAxzF,EAAAvL,EAAAy/F,EAAAC,EAAAT,EAAA,OAAAl8F,KAAAA,MAAA,SAAAY,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAjE,MAAA,OAC4G,IAApI8/F,EAAgD,MAA/BtB,GAAoB1kD,QAAkB,GAAMu9C,EAAWmH,GAAoB1kD,QAAU,CAAC0kD,GAAoB1kD,UAC7G3iD,OAAQ,CAAF8M,EAAAjE,KAAA,eAAAiE,EAAA8nD,OAAA,SACjB,MAAI,OAKoC,OAF3ChiD,EAAO,CAAE+hD,qBAAqB,GAE9BuzC,IAAqBhB,EAAevkD,QAAO71C,EAAAjE,KAAA,EAC/BmqB,EAAW30B,KAAKkO,aAAM,EAANA,EAAQ0d,IAAK0+E,GAAiB,EAAG/1F,GAAK,OACL,GAD7D8B,EAAG5H,EAAA07F,KACgBtB,EAAevkD,SAAWulD,GAC1Bf,EAAmBxkD,QAAO,CAAA71C,EAAAjE,KAAA,gBAAAiE,EAAA8nD,OAAA,SAC1C,MAAI,QAQsG,OARtGzrD,EAG0BuL,SAAAA,EAAKkJ,OACxClJ,EACA,CAAEkJ,OAAQlJ,GAFEk0F,EAAkBz/F,EAA1ByU,OAIFirF,EAAsD,MAA/BxB,GAAoB1kD,QAAkB,GAAMu9C,EAAWmH,GAAoB1kD,QAAU,CAAC0kD,GAAoB1kD,SACjIylD,EAAUS,EAAqBxhG,KAAI,SAAApJ,GAAC,IAAA6qG,EAAA,OAA8C,QAA9CA,EAAIrgD,GAAoBmgD,EAAoB3qG,UAAE,IAAA6qG,EAAAA,EAAI3gD,GAAoBlqD,EAAE,IAAC6O,EAAA8nD,OAAA,SAE5GwzC,EAAQpoG,OAASooG,EAAU,MAAI,yBAAAt7F,EAAAF,OAAA,GAAA87F,EAAA,KACvC,kBAvB4B,OAAA9/F,EAAA6N,MAAA,KAAA9T,UAAA,KAyBvBomG,GAAsB,eAAA3/F,GAAAgrD,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAA88F,IAAA,IAAAzyF,EAAA,OAAArK,KAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAlE,KAAAkE,EAAA1E,MAAA,OACD,OAA5By9F,GAAc,SAAA38F,GAAC,OAAKA,EAAI,CAAC,IAAG4D,EAAA1E,KAAA,EACT4/F,KAAyB,OAAlC,GAAJlyF,EAAIhJ,EAAAi7F,KACLrB,EAAmBxkD,QAAS,CAAFp1C,EAAA1E,KAAA,eAAA0E,EAAAqnD,OAAA,iBAGnB,MAARr+C,GACFg8D,EAAS80B,GAAoB1kD,QAASpsC,GAExC+vF,GAAc,SAAA38F,GAAC,OAAKA,EAAI,CAAC,IAAG,wBAAA4D,EAAAX,OAAA,GAAAo8F,EAAA,KAC7B,kBAV2B,OAAA5/F,EAAAqN,MAAA,KAAA9T,UAAA,KAYtBsmG,GAAc,eAAA1/F,GAAA6qD,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAAg9F,IAAA,IAAAnlG,EAAAkkG,EAAA1xF,EAAA4yF,EAAAxmG,UAAA,OAAAuJ,KAAAA,MAAA,SAAAk9F,GAAA,cAAAA,EAAA//F,KAAA+/F,EAAAvgG,MAAA,OAEQ,OAFD9E,EAAMolG,EAAAnpG,OAAA,QAAAiB,IAAAkoG,EAAA,GAAAA,EAAA,GAAG,KAAMlB,EAAUkB,EAAAnpG,OAAA,QAAAiB,IAAAkoG,EAAA,IAAAA,EAAA,GACrD7C,GAAc,SAAA38F,GAAC,OAAKA,EAAI,CAAC,IACzB+8F,EAAiBuB,GAAYmB,EAAAvgG,KAAA,EACVm/F,GAAgBjkG,EAAQkkG,GAAW,OAA5C,GAAJ1xF,EAAI6yF,EAAAZ,KACLrB,EAAmBxkD,QAAS,CAAFymD,EAAAvgG,KAAA,eAAAugG,EAAAx0C,OAAA,iBAGnB,MAARr+C,GAEF0wF,EAAmB1wF,GAErB+vF,GAAc,SAAA38F,GAAC,OAAKA,EAAI,CAAC,IACzB+8F,GAAiB,GAAO,yBAAA0C,EAAAx8F,OAAA,GAAAs8F,EAAA,KACzB,kBAbmB,OAAA3/F,EAAAkN,MAAA,KAAA9T,UAAA,KAcd0mG,GAA0BlxB,EAAAA,YAAkBmxB,KAASL,GAAgB7D,GAAkB,IAE7FjtB,EAAAA,WAAgB,WAGd,OAFAgvB,EAAmBxkD,UAEZ,WACLwkD,EAAmBxkD,SAIrB,CACF,GAAG,IAEHw1B,EAAAA,WAAgB,WAEVwvB,IAAsC,GAAdtB,IAC1BjyC,EAAAA,GAAAA,GAAAloD,KAAAA,MAAC,SAAAq9F,IAAA,OAAAr9F,KAAAA,MAAA,SAAAs9F,GAAA,cAAAA,EAAAngG,KAAAmgG,EAAA3gG,MAAA,cAAA2gG,EAAA3gG,KAAA,EACOogG,KAAgB,wBAAAO,EAAA58F,OAAA,GAAA28F,EAAA,IADxBn1C,GAIEszC,IAAwC,GAAdrB,IAC5BjyC,EAAAA,GAAAA,GAAAloD,KAAAA,MAAC,SAAAu9F,IAAA,OAAAv9F,KAAAA,MAAA,SAAAw9F,GAAA,cAAAA,EAAArgG,KAAAqgG,EAAA7gG,MAAA,cAAA6gG,EAAA7gG,KAAA,EACOkgG,KAAwB,wBAAAW,EAAA98F,OAAA,GAAA68F,EAAA,IADhCr1C,EAIJ,GAAG,CAACuzC,GAAsBD,GAAwBrB,IAGlD,IAAMsD,GAAS,WACb7D,GAAQ,EACV,EAEM8D,GAAO,eAAA7/F,GAAAqqD,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAA29F,EAAOtuD,GAAE,IAAAuuD,EAAA,OAAA59F,KAAAA,MAAA,SAAA69F,GAAA,cAAAA,EAAA1gG,KAAA0gG,EAAAlhG,MAAA,OAUtB,IATKihG,EAAkB1C,EAAmBzkD,UAEzCykD,EAAmBzkD,SAAU,EACzBu9C,GAEF4F,GAAQ,IAGVA,GAAQ,GAGE,QAART,GAAkByE,EAAe,CAAAC,EAAAlhG,KAAA,QAEd,OAAAkhG,EAAAlhG,KAAA,EACfmhG,GAAc,KADD,GACmB,YAAW,wBAAAD,EAAAn9F,OAAA,GAAAi9F,EAAA,KAEpD,gBAjBY/0C,GAAA,OAAA/qD,EAAA0M,MAAA,KAAA9T,UAAA,KAgCPs4E,GAAQ,eAAAnpD,GAAAsiC,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAA+9F,EAAO5oG,EAAG+F,EAAKqvD,GAAM,IAAAyzC,EAAAvvC,EAAAwvC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA70C,EAAAF,EAAAg1C,EAAAC,EAAA9sG,EAAA+sG,EAAA,OAAA9+F,KAAAA,MAAA,SAAA++F,GAAA,cAAAA,EAAA5hG,KAAA4hG,EAAApiG,MAAA,OAyBL,GAvBzBshG,EAAgBjK,GAAoB,QAARmF,GAA4B,UAAX5uC,EAE7C2zC,GAAmBlK,GAAoB,QAARmF,GAA4B,UAAX5uC,GAAkC,YAAZp1D,aAAC,EAADA,EAAGzC,MACzEyrG,GAAoBnK,GAAoB,QAARmF,GAA4B,UAAX5uC,GAAkC,YAAZp1D,aAAC,EAADA,EAAGzC,MACpE,QAARymG,IACF5uC,EAASrvD,EAEPA,EADE84F,EACIzpC,EAAOpvD,KAAI,SAAA6xB,GAAC,IAAA+8B,EAAA,OAAa,QAAbA,EAAK/8B,aAAC,EAADA,EAAGn4B,aAAK,IAAAk1D,EAAAA,EAAI/8B,CAAC,IAEjB,QAAhBoxE,EAAS,QAATC,EAAG9zC,SAAM,IAAA8zC,OAAA,EAANA,EAAQxpG,aAAK,IAAAupG,EAAAA,EAAI7zC,GAGrB+zC,EAAetK,GAAYzhG,MAAMC,QAAQ+3D,IAAWA,EAAOpvD,KAAI,SAAA84F,GAAG,OAAIA,aAAG,EAAHA,EAAKqK,YAAY,IAAEthG,MAAK,SAAAjL,GAAC,QAAMA,CAAC,MACjG,QADkGisG,EACxGzzC,SAAM,IAAAyzC,OAAA,EAANA,EAAQM,cACTtK,GAAY94F,IAAQ3I,MAAMC,QAAQ0I,KACpCA,EAAM,GAAHlH,QAAAnB,EAAAA,GAAAA,GAAQmqD,GAAiB,IAAK,CAAA9hD,IACjCqvD,EAAS,MAELg0C,EAAmBvK,IAAe,QAAPvlC,EAAIvzD,SAAG,IAAAuzD,OAAA,EAAHA,EAAK36D,SAAW,IAAIu9B,IAAIn2B,GAAM0R,OAAS1R,EAAIpH,OAC1E0qG,EAA6BxK,GAAoB,SAARmF,GAAwB,OAANhkG,GAAyB,OAAXo1D,GAAmBg0C,IAE7EN,GAAgC,IAAf/iG,EAAIpH,QAAgB6mG,GAAchB,GACnEuE,GACAM,GACa,CAAFO,EAAApiG,KAAA,gBAAAoiG,EAAAr2C,OAAA,kBAO+B,GAJzC+1C,EACFzK,GACC94F,EAAIpH,QAAUoH,EAAIpH,QAAUkpD,GAAiB,IAAIlpD,QACjDoH,EAAIA,EAAIpH,OAAO,IAAM6mG,IACpB59C,GAAa49C,EAAY7hE,GAEX,aAAhBwlE,EAA2B,CAAAS,EAAApiG,KAAA,SAEK,OADlCi+F,EAAcD,GACdO,EAAmBzkD,SAAU,EAAKsoD,EAAApiG,KAAA,GAC5BogG,GAAepC,GAAY,GAAK,QAAAoE,EAAApiG,KAAA,oBACb,gBAAhB2hG,EAA8B,CAAAS,EAAApiG,KAAA,SACvCu+F,EAAmBzkD,SAAU,EAAKsoD,EAAApiG,KAAA,qBAE9Bq3F,EAAU,CAAF+K,EAAApiG,KAAA,SAEkE,GAFlE+hG,EACyC/0C,GAAoBzuD,EAAK0pB,GAAY++B,GAAkBg7C,GAAAtmG,EAAAA,GAAAA,GAAAqmG,EAAA,GAAnG50C,EAAiB60C,EAAA,GAAE/0C,EAAqB+0C,EAAA,GAC/Ct4B,EAASvc,EAAmBhjC,EAAa8iC,OAAwB70D,IAC7D0pG,EAAgC,CAAFM,EAAApiG,KAAA,gBAAAoiG,EAAApiG,KAAA,GAC1BZ,GAAM,GAAE,eAAAgjG,EAAApiG,KAAA,GACRmhG,GAAc,KAAM,GAAI,YAAW,QAAAiB,EAAApiG,KAAA,iBAID,GAJCiiG,EAG1Br1C,GAAkBruD,EAAK0pB,GAAY++B,GAAkBk7C,GAAAxmG,EAAAA,GAAAA,GAAAumG,EAAA,GAA/D7sG,EAAC8sG,EAAA,GAAEC,EAAGD,EAAA,GACbx4B,EAASt0E,EAAG+0B,EAAag4E,OAAM/pG,IAC3BopG,IAAoB/E,EAAmB,CAAA2F,EAAApiG,KAAA,gBAAAoiG,EAAApiG,KAAA,GAEnCZ,GAAM,GAAE,QACd69F,GAAQ,GAAO,yBAAAmF,EAAAr+F,OAAA,GAAAq9F,EAAA,KAItB,gBA3Dal1C,EAAAC,EAAAk2C,GAAA,OAAAp5E,EAAArb,MAAA,KAAA9T,UAAA,KA6DRqnG,GAAa,eAAA/3E,GAAAmiC,EAAAA,GAAAA,GAAAloD,KAAAA,MAAG,SAAAi/F,EAAO9pG,EAAG+pG,EAAeC,GAAS,IAAAC,EAAAC,EAAAC,EAAAC,EAAArkG,EAAA,OAAA8E,KAAAA,MAAA,SAAAw/F,GAAA,cAAAA,EAAAriG,KAAAqiG,EAAA7iG,MAAA,OAqB7B,GAZnByiG,EAAyB,QAARjG,GAA+B,iBAAdgG,GAAkD,KAAlBD,GAAwBlL,EAC1FqL,EAAyB,QAARlG,GAA+B,iBAAdgG,GAAkD,KAAlBD,GAAwBlL,EAC1FsL,EAAwB,QAARnG,IAAkBnF,GAA0B,SAAdmL,GAAwBD,KAAkBrD,cAAiB,EAAjBA,GAAmB7/C,OAC3GujD,EAAuB,QAARpG,GAA+B,UAAdgG,GAOjCE,GAAkBD,GAAkBE,GAEnCpkG,EAAMgkG,KACA5F,GAAiBp+F,IAAQq+F,IAAoBgG,EAAY,CAAAC,EAAA7iG,KAAA,eAAA6iG,EAAA92C,OAAA,oBAIzD,QAARywC,GAAkBnF,GAA0B,iBAAdmL,GAAkD,KAAlBD,EAAoB,CAAAM,EAAA7iG,KAAA,eAAA6iG,EAAA92C,OAAA,oBAKlFw2C,GAAiBvE,EAAU,CAAA6E,EAAA7iG,KAAA,SAG6C,GAF1Ei+F,EAAc1/F,IAES29F,GAAmBC,IAAqB59F,EAC3C,CAAFskG,EAAA7iG,KAAA,gBAAA6iG,EAAA7iG,KAAA,GACVwgG,GAAwBjiG,GAAI,QAAAskG,EAAA7iG,KAAA,iBACzBk8F,GAAkBC,GAC3BiC,EAAmB,IACpB,yBAAAyE,EAAA9+F,OAAA,GAAAu+F,EAAA,KAEJ,gBAzCkBQ,EAAAC,EAAAC,GAAA,OAAA55E,EAAAxb,MAAA,KAAA9T,UAAA,KAwGnB,MAAO,CACLsc,QAH2B,QAARomF,EAAgB3uC,GAAwBz3C,IAAWA,GAItE6R,WAAAA,GACA0jE,SAAAA,GACAuT,kBAAAA,GAEAlC,KAAAA,EACA8D,OAAAA,GACAC,QAAAA,GACAkC,wBA3L8B,SAACjG,GAC3BA,EACF8D,KAEAC,IAEJ,EAsLE3uB,SAAAA,GAEA4rB,WAAAA,EACAmD,cAAAA,GACAlC,gBAAAA,GACAF,iBAAAA,GACAH,UAAAA,GACAhB,cAAAA,EACAsF,eA5LqB,SAACt1C,GACtB,IAAM+zC,GAAe/zC,aAAM,EAANA,EAAQ+zC,gBAAgB/zC,aAAM,EAANA,EAAQ11D,OACrD,OAAOwkG,EAAmBpmG,SAASqrG,EACrC,EA2LEwB,cAhFoB,SAAC/sF,GACrB,IAAMs1C,GAAQx1D,EAAAA,GAAAA,GAAOkgB,GAerB,OAdI6lF,IACEgD,GACFvzC,EAASpzD,KAAK,CACZqpG,aAAc,YACdtiD,MAAOs9C,IAEAiB,GACTlyC,EAASpzD,KAAK,CACZqpG,aAAc,eACdtiD,MAAOu9C,EACPvlE,UAAU,KAITq0B,CACT,EAgEE03C,kBA9DwB,SAACx1C,EAAQy1C,GACjC,GAAqB,MAAjBA,EACF,OAAO,KACT,IAAMhjD,EAAuCjoD,MAAvBirG,EAAcnrG,MAAqBmrG,EAAcnrG,MAAQmrG,EAC/E,OAAOz1C,EAAO11D,QAAUmoD,CAC1B,EA0DEijD,kBAxDwB,SAACD,GACzB,OAAOA,GAAiBA,EAAchsE,QACxC,EAuDEksE,kBArDwB,SAACF,GAAkB,IAAAG,EAC3C,GAAIH,SAAAA,EAAe7jD,SACjB,OAAO,EACT,IAAMjhD,EAA0B,QAAvBilG,EAAGH,aAAa,EAAbA,EAAenrG,aAAK,IAAAsrG,EAAAA,EAAIH,EAC9B9jD,EAAKa,GAAa7hD,EAAK0pB,IAC7B,OAAOs3B,aAAE,EAAFA,EAAIC,WAAmB,MAAND,CAC1B,EAgDEkkD,eA9CqB,SAACJ,GACtB,GAAqB,MAAjBA,EACF,OAAO,KACT,IAAMz1C,EAAgCx1D,MAAvBirG,EAAcnrG,MAAqBmrG,EAC9Ch2C,GAAkBjN,GAAaijD,EAAep7E,KAClD,OAAK2lC,GAAUy1C,EAAc1B,aAEpB0B,EAAchkD,OAElBuO,GAAU5G,EAENq8C,EAAc5uG,WAElBm5D,EAIEA,EAAOvO,OAASuO,EAAOv1C,OAASu1C,EAAO11D,MAAMzD,WAF3C4uG,EAAc5uG,UAGzB,EA6BEooG,aAAAA,EAEJ,E,ykBCzcA,SAAA1mG,GAAAA,GAAA,GAAoBk4D,EAAAA,IAAK,IAAEq1C,WAAAA,EAAY1rB,SAAAA,I,8MCG/Bh5D,EAAWqvC,EAAAA,GAAXrvC,OACF2kF,EAAap7E,SAA6C,QAArCq7E,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBl+F,MAAM,YAAI,IAAAk+F,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,WCD5D5kF,EAAWqvC,EAAAA,GAAXrvC,OACF2kF,EAAap7E,SAA6C,QAArCq7E,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBl+F,MAAM,YAAI,IAAAk+F,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,WCD5D5kF,EAAWqvC,EAAAA,GAAXrvC,OACF2kF,EAAap7E,SAA6C,QAArCq7E,EAACC,SAAmB,QAATC,EAAVD,EAAAA,eAAmB,IAAAC,GAAY,QAAZA,EAAnBA,EAAqBl+F,MAAM,YAAI,IAAAk+F,OAAA,EAA/BA,EAAkC,UAAE,IAAAF,EAAAA,EAAI,K,yCCD5D7jD,EAAkBsO,EAAAA,GAAMotB,UAAxB17B,c,oICEAA,EAAkBsO,EAAAA,GAAMotB,UAAxB17B,c,grBCMR,IAAQgkD,GAA8BC,EAAAA,GAAAA,EAChCC,GAAa,GAMnB,kBAAgBllG,GACd,IACEioD,EAGEjoD,EAHFioD,kBAAmBqwC,EAGjBt4F,EAHiBs4F,SAAU6M,EAG3BnlG,EAH2BmlG,iBACtB7jD,EAELthD,EAFF7G,MAAsB6vB,EAEpBhpB,EAFoBgpB,YAAa2vD,EAEjC34E,EAFiC24E,SAAUh0E,EAE3C3E,EAF2C2E,OAAQygG,EAEnDplG,EAFmDolG,oBAAqBxqB,EAExE56E,EAFwE46E,UAC1EyqB,EACErlG,EADFqlG,YAAa3H,EACX19F,EADW09F,oBAST4H,EAA6B,CACjC/nG,WARsBgoG,EAAAA,EAAAA,cAAY,SAAC12C,GAKnC,OAJsBlqD,EAAOiB,SAASsZ,kBAEnCzf,KAAI,SAAAnI,GAAC,MAAyB,iBAAbu3D,EAAOv3D,GAAiBu3D,EAAOv3D,GAAK,EAAE,IACvDgC,KAAK,KAEV,GAAG,CAACqL,KAIE6gG,GAAkBC,EAAAA,EAAAA,GAAoBL,GAAuBE,GAGnEI,EAiBIV,GAA0BhlG,EAAO,CACnCw9F,gBAAiB,IACjBlF,SAAAA,EACAmF,IAAK,MACLC,oBAAAA,IApBAO,EAAIyH,EAAJzH,KACA8D,EAAM2D,EAAN3D,OACAC,EAAO0D,EAAP1D,QACA3uB,EAAQqyB,EAARryB,SACA+uB,EAAasD,EAAbtD,cACAnD,EAAUyG,EAAVzG,WACA5nF,EAAOquF,EAAPruF,QACA2oF,EAAgB0F,EAAhB1F,iBACAH,EAAS6F,EAAT7F,UACA/B,EAAY4H,EAAZ5H,aACAsG,EAAasB,EAAbtB,cAEAG,GADiBmB,EAAjBrB,kBACiBqB,EAAjBnB,mBACAC,EAAiBkB,EAAjBlB,kBACAE,EAAcgB,EAAdhB,eACAvE,EAAiBuF,EAAjBvF,kBASF56F,EAAiDZ,EAAOiB,SAAjDw2F,EAAkB72F,EAAlB62F,mBACPthG,GAD6CyK,EAAlB82F,mBACFrzE,GAAe,CAAC,GAAlCkuD,EAAKp8E,EAALo8E,MAAUxoB,GAAIC,EAAAA,EAAAA,GAAA7zD,EAAA8zD,IACjB+pC,EAAmBjqC,EAAKjwC,OAAS,CAAC,EACnBk6E,EAAiBzhB,MACpCyhB,EAAmBr8F,IAAKq8F,EAAkB,CAAC,UAC3C,IAAMgN,EAA0BrpG,IAAKoyD,EAAM,CAAC,aAAc,mBAEpDiU,GAAY,EACZijC,EAAW1uB,GAASklB,EACpB/kB,EAAQ,CACZH,MAAQohB,OAAWj/F,EAAYusG,EAC/BA,SAAUA,GAEN/rF,GAAe8+D,EAA0B,GAAfmlB,EAG1B+H,GAAYhsF,IAAelV,EAAOiB,SAASya,iBAI3ClnB,GAF4B,MAAjBmoD,EAEQA,EAAiBg3C,EAAW4M,GAAa,KAU5DY,IAAQC,EAAAA,GAAAA,KAqCRC,GAAc,SAAHllG,GAAyB,IAApBmlG,EAAcnlG,EAAdmlG,eACpB,IAAKA,EAAgB,OAAO,KAC5B,IAAI3qF,EAAQ,CACVhC,MAAO2sF,GAET,GAA8B,iBAAnBA,GAAqD,MAAtBA,EAAe,GACvD,IACE3qF,EAAQhe,KAAKkwC,MAAMy4D,EACrB,CAAE,MAAOh/E,GACP,CAGJ,IAAIi/E,EAAa5qF,EAAMhC,MAiBvB,OAhBI4sF,GAAc5qF,EAAMk9D,UACtB0tB,EACE31B,EAAAA,cAAC41B,GAAAA,EAAO,CAAC7lD,MAAOhlC,EAAMk9D,QAAShK,UAAU,cAAa+B,EAAAA,cAAA,YAAO21B,KAI/D31B,EAAAA,cAAA,OAAK8G,MAAO,CACV5jE,SAAU,SACVG,IAAK,OACLwyF,QAAS,WACTpN,MAAO8M,GAAMO,QAAQC,QAAQC,KAC7BC,gBAAiBV,GAAMO,QAAQI,WAAU,UAExCP,EAIP,EAEMQ,GAAa,SAAH1lG,GAAmB,IAAdf,EAAQe,EAARf,SACnB,OAAOswE,EAAAA,cAAAA,EAAAA,SAAA,KAAGtwE,EACZ,EAiEI6M,GACFyjE,EAAAA,cAACssB,EAAAA,GAAYtlB,EAAAA,EAAAA,GAAA,CACX4tB,iBAAkBA,EAClBwB,qBAAsBrO,EACtB31B,UAAWA,EACX21B,SAAUA,EACVjhB,MAAOA,EACPuvB,SAAU3+C,EACV4+C,QAAS7G,EACT/B,KAAMA,EACN8D,OAAQA,EACRC,QAASA,EACT/C,WAAYA,EACZmD,cAAeA,EACf9oF,MAAOO,GACPw5D,SAAUA,EACVl6E,MAAOA,GACPm/B,SAAUqgD,EACVmuB,SAAUnuB,EACVthE,QAASA,EACT0vF,QA9JY,SAACl4C,GAAM,OAAKA,SAAAA,EAAQvzC,MAAQhe,KAAKC,UAAUsxD,EAAOvzC,OAASuzC,aAAM,EAANA,EAAQN,UAAU,EA+JzFm2C,eAAgBA,EAChBH,kBAAmBA,EACnByC,YA5JgB,SAACnoE,GAAW,IAAAniC,EAAAuqG,EAAAz/F,EAExB0/F,GAAwB5O,IAAa2F,EACrCkJ,EAA6D,QAAhDzqG,EAA2B,QAA3BuqG,EAAG9G,aAAiB,EAAjBA,EAAmB7/C,aAAK,IAAA2mD,EAAAA,EAAI9tG,cAAK,EAALA,GAAOzD,kBAAU,IAAAgH,EAAAA,EAAI,GAEjE+vF,EAAcya,EAAuBC,EADxB7O,IAAa2F,EACyC,GAAoC,QAAlCz2F,EAAGy3F,QAAAA,EAAc9lG,cAAK,EAALA,GAAOzD,kBAAU,IAAA8R,EAAAA,EAAI,GACjH,OACE+oE,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,YACJxoE,EAAM,CACVyoE,WAAUlwG,GAAAA,GAAA,CACR,aAAcyuG,IACXhnE,EAAOyoE,YAAU,IACpBnuG,MAAOszF,IAET8a,WAAUnwG,GAAAA,GAAA,GACLynC,EAAO0oE,YAAU,IACpBT,SAAUnuB,EACV6uB,aACEj3B,EAAAA,cAACA,EAAAA,SAAc,KACZsvB,EAAYtvB,EAAAA,cAACk3B,EAAAA,EAAgB,CAACzO,MAAM,UAAU9nF,KAAM,KAAU,KAC9D2tB,EAAO0oE,WAAWC,gBAIzBlvE,SAAUqgD,EACV9+D,YAAaA,GACb/V,QAAS82E,GAEL+d,GAGV,EA6HI+O,YAvFgB,SAAC7oE,GAOnB,OALE0xC,EAAAA,cAAA,OAAKlyE,IAAKwgC,EAAOxgC,KACfkyE,EAAAA,cAACy1B,GAAW,CAACC,eAAgBpnE,EAAOvjB,QACpCi1D,EAAAA,cAACm2B,GAAU,KAAE7nE,EAAO5+B,UAI1B,EAgFI0nG,WA9Ee,SAACxuG,EAAOyuG,GAAW,OAAKzuG,EAAMsG,KAAI,SAACovD,EAAQ16C,GAC5D,OAAOo8D,EAAAA,cAACs3B,EAAAA,GAAItwB,EAAAA,EAAAA,GAAA,CACVl5E,IAAKwwD,EAAO11D,MACZmgB,MAAOorF,EAAe71C,GACtB39C,KAAM,QACNm2F,QAAS7C,EAAkB31C,GAAU,WAAa,UAC9C+4C,EAAY,CAAEzzF,MAAAA,KAEtB,GAAE,EAuEE2zF,aAjEiB,SAAC9nG,EAAO6uD,GAC3B,IAAQvO,EAAoEuO,EAApEvO,MAAOmO,EAA6DI,EAA7DJ,YAAat1D,EAAgD01D,EAAhD11D,MAAOy0D,EAAyCiB,EAAzCjB,SAAU4qB,EAA+B3pB,EAA/B2pB,QAASl9D,EAAsBuzC,EAAtBvzC,MAChDysF,EADsEl5C,EAAfN,YAC7BjzC,EAC1B0sF,EAAa1P,GAAYh3C,GAAiB,IAAI/pD,SAAS4B,GAASmoD,GAAiBnoD,EACjFi9E,EAAYouB,EAAkB31C,GAAU,0BAAuBx1D,EAE/D4uG,EAAcx5C,KADJivC,GAAuBqK,EAAY,KAAiB,IACxBznD,EACxC4nD,EACF33B,EAAAA,cAAA,QAAM6F,UAAWA,GACd6xB,GAQL,GALIzvB,IACF0vB,EACE33B,EAAAA,cAAC41B,GAAAA,EAAO,CAAC7lD,MAAOk4B,EAAShK,UAAU,cAAc05B,IAGjDt6C,EACF,OAAO,KACT,GAAIiB,EAAO+zC,aACT,OAAOryB,EAAAA,cAAA,MAASvwE,EAAQioG,GACnB,GAAI3P,EAAU,CACnB,IAAM6P,EAAcH,EAClBz3B,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAC63B,EAAAA,EAAY,KAAC73B,EAAAA,cAAC83B,EAAAA,EAAK,OAAmBH,GAEzC33B,EAAAA,cAAC+3B,EAAAA,EAAY,CAACC,OAAK,GAAEL,GAEvB,OACE33B,EAAAA,cAACi4B,EAAAA,GAAQjxB,EAAAA,EAAAA,GAAA,GACHv3E,EAAK,CACTkR,KAAM,QACNsnF,SAAUwP,IACVG,EAEN,CACE,OAAO53B,EAAAA,cAAA,MAASvwE,EAAQkoG,EAE5B,EA6BIO,cA3KkB,SAACpxF,EAASwnB,GAC9B,IAAM8tB,EAAW64C,EAAgBnuF,EAASwnB,GAE1C,OADiBulE,EAAcz3C,EAEjC,EAwKI+7C,qBAvEyB,SAAC75C,EAAQ11D,GACpC,OAAO01D,aAAM,EAANA,EAAQ11D,QAASA,CAC1B,EAsEI+X,KAAK,SACDy0F,IAWR,OARIN,IACFv4F,GACEyjE,EAAAA,cAAC41B,GAAAA,EAAO,CAAC7lD,MAAQ29C,EAAqB,KAAdoH,EAAoB72B,UAAU,aAAa1hE,KAIrEyjE,EAAAA,cAACo4B,EAAAA,EAAW,CAAChmC,UAAWA,GAAY71D,GAGvC,E,otBC7QD,IAAM87F,GAA2B,CAC/BvqG,IAAK,UACLzG,KAAM,QACN0hB,MAAO,QACPo/D,SAAU,YACVF,QAAS,UACThqB,WAAY,cAGRq6C,GAAoB,SAACx3F,GAAK,IAAEy3F,EAAK/tG,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,EAAC,OACzCsW,EAAM5R,KAAI,SAAAkQ,GACR,IAAO0B,EAAwF1B,EAAxF0B,MAAOzZ,EAAiF+X,EAAjF/X,KAAMyG,EAA2EsR,EAA3EtR,IAAKib,EAAsE3J,EAAtE2J,MAAOo/D,EAA+D/oE,EAA/D+oE,SAAUpgD,EAAqD3oB,EAArD2oB,SAAUk2B,EAA2C7+C,EAA3C6+C,WAAYlzC,EAA+B3L,EAA/B2L,MAAO+/D,EAAwB1rE,EAAxB0rE,YAAa7C,EAAW7oE,EAAX6oE,QAC9EuC,EAAS,KAAeguB,OAAOD,GACrC,OAAIz3F,EACKw3F,GAAkBx3F,EAAOy3F,EAAM,GAE/B,CACLxoD,MAAOhnC,EACPm1C,YAAa4sB,EAAc9K,EAAAA,cAAA,SAAIwK,EAAOzhE,GAAayhE,EAAOzhE,EAC1DngB,MAAOvB,EACP0gC,SAAAA,EACAi2B,WAAYu6C,EAAQ,EAAI/tB,EAAOvsB,EAAa,KAC5ClzC,MAAOwtF,EAAQ,EAAC1xG,GAAAA,GAAA,GACXkkB,GAAK,IACRhC,MAAOyhE,EAAOz/D,EAAMhC,QAClB,KACJk/D,QAASA,EACTwwB,QAAS3qG,EACT4qG,UAAWvwB,EAGjB,IAAGtnE,KAAK3O,IAAS,E,+CC7BXw2E,GAAa3pB,EAAAA,GAAb2pB,SAEFiwB,GAAa,CACjB,SAAY34B,EAAAA,cAAC44B,GAAAA,EAAU,MACvB,aAAgB54B,EAAAA,cAAC44B,GAAAA,EAAU,MAC3B,QAAW54B,EAAAA,cAAC44B,GAAAA,EAAU,MACtB,iBAAoB54B,EAAAA,cAAC64B,GAAAA,EAAO,MAC5B,WAAc74B,EAAAA,cAAC64B,GAAAA,EAAO,MACtB,YAAe74B,EAAAA,cAAC64B,GAAAA,EAAO,MACvB,QAAW74B,EAAAA,cAAC64B,GAAAA,EAAO,MACnB,SAAY74B,EAAAA,cAAC64B,GAAAA,EAAO,MACpB,KAAQ74B,EAAAA,cAAC84B,GAAAA,EAAU,OAGfC,GAAc,CAMlB,KAAQ,W,wBCtBJC,GAAgB,CACpB,kBAAoB,EAGpB,UAAY,EACZ,cAAgB,EAChB,SAAW,GAGPD,GAAc,CAClB,QAAW,UACX,SAAY,UACZ,SAAY,YACZ,aAAgB,YAChB,QAAW,aAGb,UAAezsB,EAAAA,EAAAA,OAAK,SAAC78E,GACnB,IAAOhJ,EAA8CgJ,EAA9ChJ,KAAMsiB,EAAwCtZ,EAAxCsZ,MAAO+rE,EAAiCrlF,EAAjCqlF,QAAS1M,EAAwB34E,EAAxB24E,SAAU7qD,EAAc9tB,EAAd8tB,WAKjCm3D,EAAOn3D,aAAU,EAAVA,EAJK,CAChB92B,KAAAA,EACA2hF,SAAAA,IAIF,OAAKr/D,GAASiwF,GAAcvyG,GAGxBu5E,EAAAA,cAACi5B,GAAAA,EAAU,CACTt4F,KAAK,QACLonB,SAAUqgD,EACV0M,QAASA,EACT2T,MAAOsQ,GAAYtyG,GACnB,aAAYsiB,GACZ2rE,GAIF1U,EAAAA,cAACk5B,GAAAA,EAAM,CACLv4F,KAAK,QACLonB,SAAUqgD,EACV0M,QAASA,EACT2T,MAAOsQ,GAAYtyG,GACnB0yG,UAAWzkB,GACX3rE,EAGR,I,gBC9CMqwF,GAAOp5B,EAAAA,MAAW,SAAAz1E,GAGlB,IAFJ80C,EAAO90C,EAAP80C,QAASxgC,EAAEtU,EAAFsU,GAAUkK,GAAFxe,EAAJiF,KAAWjF,EAALwe,OAAOkuE,EAAO1sF,EAAP0sF,QAC1B3a,EAAc/xE,EAAd+xE,eAAgB8L,EAAQ79E,EAAR69E,SAAUrgD,EAAQx9B,EAARw9B,SAEpB+sD,GAAUkgB,EAAAA,EAAAA,cAAY,WAC1B14B,EAAej9B,EACjB,GAAG,CAACA,EAASi9B,IACPwgB,EAAUxgB,EAAe4Z,UAAY,UAAY,GACvD,OAAK9N,IAAYrgD,GAAckvD,EAI7BjX,EAAAA,cAACk5B,GAAAA,EAAM,CACLprG,IAAK+Q,EAAGi+E,EACRj+E,GAAIA,EAAGi+E,EACP2L,MAAOxR,EAAU,UAAY,UAC7BruF,MAAOy2C,EACPy1C,QAASA,EACT/sD,SAAUqgD,GAAYrgD,GAErBhf,GAXI,IAcX,IAEM2vE,GAAQ1Y,EAAAA,MAAW,SAAA7zE,GAEnB,IADJ0S,EAAE1S,EAAF0S,GAAI0I,EAAGpb,EAAHob,IAAKg1D,EAAMpwE,EAANowE,OAAQua,EAAkB3qF,EAAlB2qF,mBAAoBxa,EAAcnwE,EAAdmwE,eAAgBv0C,EAAQ57B,EAAR47B,SAAUqgD,EAAQj8E,EAARi8E,SAAUh0E,EAAMjI,EAANiI,OAAQwkF,EAAOzsF,EAAPysF,QAAShoE,EAAQzkB,EAARykB,SAGpF83E,EAAa1iG,OAAOgG,KAAK8qF,GAAoBjvF,OAC7C8gG,EAAc5gE,EAEd6gE,EADkBx0F,EAAOiB,SAAxByjF,eAC2B4P,EAAa,IAAMC,EAiB/C0Q,GAAarE,EAAAA,EAAAA,cAAY,WAC7Bz4B,GAAQh1D,EACV,GAAG,CAACA,EAAKg1D,IAkBT,OACEyD,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAACs5B,GAAAA,EAAW,CACVC,kBAAgB,EAChBzC,QAAQ,YACRn2F,KAAK,QACLonB,SAAUqgD,GAETwQ,IAvBDxQ,IAAa7gE,EACR,KAEPy4D,EAAAA,cAACk5B,GAAAA,EAAM,CACLprG,IAAK+Q,EACLA,GAAIA,EAAK,QACT4pF,MAAOlhF,EAAM,QAAU,UACvButE,QAASukB,EACTtxE,SAAUqgD,GAETx3D,GAAY,QAcZg4E,GA3CL5iG,OAAOgG,KAAK8qF,GAAoB5nF,KAAI,SAAAmwC,GAClC,IAAAm6D,EAAqC1iB,EAAmBz3C,GAAhDxgC,EAAE26F,EAAF36F,GAAIrP,EAAIgqG,EAAJhqG,KAAMuZ,EAAKywF,EAALzwF,MAAOkuE,EAAOuiB,EAAPviB,QACnBwiB,EAAY,CAChBp6D,QAAAA,EAASxgC,GAAAA,EAAIrP,KAAAA,EAAMuZ,MAAAA,EAAOkuE,QAAAA,EAC1B3a,eAAAA,EAAgB8L,SAAAA,EAAUrgD,SAAAA,GAE5B,OAAIA,IAAakvD,EACR,KAGPjX,EAAAA,cAACo5B,IAAIpyB,EAAAA,EAAAA,GAAA,CAACl5E,IAAK+Q,GAAQ46F,GAEvB,KAmCJ,IAEA,Y,0EC9EMC,GAAc15B,EAAAA,MAAW,SAAAz1E,GAA8C,IAA3CiQ,EAAQjQ,EAARiQ,SAAUgiE,EAAMjyE,EAANiyE,OAAQ8sB,EAAY/+F,EAAZ++F,aAAcl2F,EAAI7I,EAAJ6I,KAC1DqkG,EAAaj9F,GAAYgiE,IAAWhiE,GAAsB,SAAVgiE,EAChDsY,GAAUkgB,EAAAA,EAAAA,cACd,SAAC9rG,GAAC,OAAKogG,EAAapgG,EAAGszE,EAAO,GAC9B,CAAC8sB,EAAc9sB,IAEjB,OACEwD,EAAAA,cAACi4B,EAAAA,EAAQ,CACPrvG,MAAO4zE,EACPyrB,SAAUwP,EACV3iB,QAASA,IAEP2iB,GAAcz3B,EAAAA,cAAC+3B,EAAAA,EAAY,CAACC,OAAK,GAAE5kG,EAAK2V,OACzC0uF,GAAcz3B,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAC63B,EAAAA,EAAY,KAAC73B,EAAAA,cAAC83B,EAAAA,EAAK,OAAmB1kG,EAAK2V,OAGnE,IAwDA,SAtDqBi3D,EAAAA,MAAW,SAAA7zE,GAA6D,IAA1D2P,EAAY3P,EAAZ2P,aAActB,EAAQrO,EAARqO,SAAUu1C,EAAK5jD,EAAL4jD,MAAO8tB,EAAW1xE,EAAX0xE,YAChE2vB,GADqFrhG,EAARi8E,SAC7CpI,EAAAA,SAAe,OAAKytB,GAAArhG,EAAAA,EAAAA,GAAAohG,EAAA,GAA7CmM,EAAQlM,EAAA,GAAEmM,EAAWnM,EAAA,GAEtBoM,GAAa7E,EAAAA,EAAAA,cAAY,SAAC8E,GAC9BF,EAAYE,EAAMC,cACpB,GAAG,CAACH,IAEEI,GAAchF,EAAAA,EAAAA,cAAY,WAC9B4E,EAAY,KACd,GAAG,CAACA,IAEEK,GAAkBjF,EAAAA,EAAAA,cAAY,SAAC8E,GACnCH,EAAWK,IAAgBH,EAAWC,EACxC,GAAG,CAACE,EAAaH,EAAYF,IAEvBrQ,GAAe0L,EAAAA,EAAAA,cAAY,SAAC5xD,EAAIo5B,GACpCqB,EAAYrB,GACZw9B,GACF,GAAG,CAACA,EAAan8B,IAcX6vB,EAAOwM,QAAQP,GAErB,OACE35B,EAAAA,cAAA,WACEA,EAAAA,cAACi5B,GAAAA,EAAU,CAACt4F,KAAK,QAAQm0E,QAASmlB,GAChCj6B,EAAAA,cAACm6B,GAAAA,EAAmB,OAGtBn6B,EAAAA,cAACo6B,GAAAA,EAAI,CACHT,SAAUA,EACVjM,KAAMA,EACN+D,QAASuI,GAETh6B,EAAAA,cAACo4B,EAAAA,EAAW,CAACiC,UAAU,WAAWC,GAAI,CAAEnyE,EAAG,IACzC63C,EAAAA,cAACu6B,GAAAA,EAAS,CAACF,UAAU,SAASC,GAAI,CAAEnyE,EAAG,EAAGqyE,GAAI,EAAGC,GAAI,IAAM1qD,GA1B7C,SAACj0C,GAAY,OACjCA,EAAa5M,KAAI,SAAA+H,GAAoB,IAAA1G,GAAAnE,EAAAA,EAAAA,GAAA6K,EAAA,GAAlBulE,EAAMjsE,EAAA,GAAE6C,EAAI7C,EAAA,GAC7B,OAAOyvE,EAAAA,cAAC05B,GAAW,CACjB5rG,IAAK0uE,EACLhiE,SAAUA,EACVgiE,OAAQA,EACR8sB,aAAcA,EACdl2F,KAAMA,GAEV,GAAE,CAkBKm1F,CAAczsF,KAKzB,I,UC1EMu4F,GAAap7E,SAA6C,QAArCq7E,GAACC,SAAmB,QAATC,GAAVD,EAAAA,eAAmB,IAAAC,IAAY,QAAZA,GAAnBA,GAAqBl+F,MAAM,YAAI,IAAAk+F,QAAA,EAA/BA,GAAkC,UAAE,IAAAF,GAAAA,GAAI,KAqEpE,UACEoG,cCzEF,SAAgBjrG,GACd,IAAO7G,EAAwF6G,EAAxF7G,MAAOwxE,EAAiF3qE,EAAjF2qE,SAAkBgO,GAA+D34E,EAAvE2E,OAAuE3E,EAA/D24E,UAAU9+D,EAAqD7Z,EAArD6Z,YAAamP,EAAwChpB,EAAxCgpB,YAAa+/B,EAA2B/oD,EAA3B+oD,UAE9DsqB,GAFyFrzE,EAAhB29E,cAE9D4nB,EAAAA,EAAAA,cAAY,SAAC9rG,GAC5B,IAAI+F,EAAM/F,EAAEhB,OAAOU,MACP,KAARqG,IACFA,OAAMnG,GAERsxE,EAASnrE,EACX,GAAG,CAACmrE,KACEwtB,EAAYh/F,GAAS,GAE3B,OACEo3E,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACRluG,MAAOg/F,EACPt+E,YAAc8+D,EAAyB,GAAd9+D,EACzB0tF,WAAY,CACVT,SAAUnuB,GAEZ2uB,WAAY,CACVv+C,UAAWA,GAEbzwB,SAAUqgD,EACVtF,SAAUA,EACVniE,KAAK,SACD8X,IAIX,ED2CCkiF,kBE1EF,SAAgBlrG,GACd,IAAO7G,EAA8F6G,EAA9F7G,MAAOwxE,EAAuF3qE,EAAvF2qE,SAAUhmE,EAA6E3E,EAA7E2E,OAAQg0E,EAAqE34E,EAArE24E,SAAU9+D,EAA2D7Z,EAA3D6Z,YAAamP,EAA8ChpB,EAA9CgpB,YAAa+/B,EAAiC/oD,EAAjC+oD,UAAWqvC,EAAsBp4F,EAAtBo4F,QAASz1B,EAAa3iE,EAAb2iE,UACjF25B,EAAkB33F,EAAOiB,SAAzB02F,eASDnE,EAAYh/F,GAAS,GAE3B,OACEo3E,EAAAA,cAACo4B,EAAAA,EAAW,CAAChmC,UAAWA,GACtB4N,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACR1kC,UAAWA,EACXy1B,QAASA,GAAWkE,EACpB6O,WAAW,EACXhyG,MAAOg/F,EACPt+E,YAAc8+D,EAAyB,GAAd9+D,EACzB0tF,WAAY,CACVT,SAAUnuB,GAEZ2uB,WAAY,CACVv+C,UAAWA,GAEbzwB,SAAUqgD,EACVtF,SAzBW,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MACP,KAARqG,IACFA,OAAMnG,GACRsxE,EAASnrE,EACX,EAqBM0R,KAAK,SACD8X,IAIX,EFwCCoiF,cXtEF,SAAgBprG,GACd,IAAO7G,EAAgF6G,EAAhF7G,MAAOwxE,EAAyE3qE,EAAzE2qE,SAAUgO,EAA+D34E,EAA/D24E,SAAU3vD,EAAqDhpB,EAArDgpB,YAAaT,EAAwCvoB,EAAxCuoB,WAAY2pB,EAA4BlyC,EAA5BkyC,YAAar4B,EAAe7Z,EAAf6Z,YAmBlEwxF,EAAczG,GAAc,EAAI,CACpCv9E,OAAQkB,EACR+iF,UAAW,CACTvgE,UAAW,CACT75B,KAAM,QACNm2F,QAAS,YAEXkE,QAAS,CACPC,mBAAqB7yB,EAAyB,GAAd9+D,KAGlC,CACF4xF,YAAaljF,EACby+E,YAtBkB,SAACnoE,GAAM,OACzB0xC,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACRrmE,KAAK,QACLm2F,QAAQ,YACJxoE,GACJ,EAkBF2sE,mBAAqB7yB,EAAyB,GAAd9+D,GAG5B6xF,EAASvyG,EAASyrG,GAAc,EAAI3kF,EAAO9mB,EAAO+4C,GAAe/4C,EAAS,KAEhF,OACEo3E,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAACo7B,EAAAA,GAAUp0B,EAAAA,EAAAA,GAAA,CACTq0B,sBAxBwB,0CAyBxB9E,SAAUnuB,EACVrgD,SAAUqgD,EACVx/E,MAAOuyG,EACPr4B,SAvCe,SAACl6E,GACpBwxE,EALwB,SAACxxE,GACzB,OAAOA,GAASA,EAAMokD,UAAYpkD,EAAMkuB,OAAO6qB,QAAe74C,CAChE,CAGWwyG,CAAkB1yG,GAC7B,GAsCUkyG,EACAriF,IAIX,EWmBC8iF,kBVvEF,SAAgB9rG,GACd,IAAO7G,EAAwG6G,EAAxG7G,MAAOwxE,EAAiG3qE,EAAjG2qE,SAAU7G,EAAuF9jE,EAAvF8jE,WAAY6U,EAA2E34E,EAA3E24E,SAAU9+D,EAAiE7Z,EAAjE6Z,YAAa0O,EAAoDvoB,EAApDuoB,WAAYs7C,EAAwC7jE,EAAxC6jE,WAAY3xB,EAA4BlyC,EAA5BkyC,YAAalpB,EAAehpB,EAAfgpB,YAU1F+iF,EAAiBxjF,EAAa,IAAMs7C,EAWpCwnC,EAAczG,GAAc,EAAI,CACpCv9E,OAAQ0kF,EACRT,UAAW,CACTvgE,UAAW,CACT75B,KAAM,QACNm2F,QAAS,YAEXkE,QAAS,CACPC,mBAAqB7yB,EAAyB,GAAd9+D,KAGlC,CACF4xF,YAAaM,EACb/E,YAtBkB,SAACnoE,GAAM,OACzB0xC,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACRrmE,KAAK,QACLm2F,QAAQ,YACJxoE,GACJ,EAkBF2sE,mBAAqB7yB,EAAyB,GAAd9+D,GAG5B6xF,EAASvyG,EAASyrG,GAAc,EAAI3kF,EAAO9mB,EAAO+4C,GAAe/4C,EAAS,KAEhF,OACEo3E,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAACy7B,EAAAA,GAAcz0B,EAAAA,EAAAA,GAAA,CACbq0B,sBAxBwB,0CAyBxB9E,SAAUnuB,EACVrgD,SAAUqgD,EACVszB,OAAQnoC,EACR3qE,MAAOuyG,EACPr4B,SA1Ce,SAACl6E,GACpBwxE,EALwB,SAACxxE,GACzB,OAAOA,GAASA,EAAMokD,UAAYpkD,EAAMkuB,OAAO6qB,QAAe74C,CAChE,CAGWwyG,CAAkB1yG,GAC7B,GAyCUkyG,EACAriF,IAIX,EUiBCkjF,cTxEF,SAAgBlsG,GACd,IAAO7G,EAA4F6G,EAA5F7G,MAAOwxE,EAAqF3qE,EAArF2qE,SAAU7G,EAA2E9jE,EAA3E8jE,WAAY6U,EAA+D34E,EAA/D24E,SAAU9+D,EAAqD7Z,EAArD6Z,YAAagqD,EAAwC7jE,EAAxC6jE,WAAY3xB,EAA4BlyC,EAA5BkyC,YAAalpB,EAAehpB,EAAfgpB,YAU9EmjF,GAA2C,GAA9BtoC,EAAWhjE,QAAQ,OAChCurG,EAAYjzG,EAAQ8mB,EAAO9mB,EAAO0qE,GAAc,KAWhDwnC,EAAczG,GAAc,EAAI,CACpCv9E,OAAQw8C,EACRynC,UAAW,CACTvgE,UAAW,CACT75B,KAAM,QACNm2F,QAAS,YAEXkE,QAAS,CACPC,mBAAqB7yB,EAAyB,GAAd9+D,KAGlC,CACF4xF,YAAa5nC,EACbmjC,YAtBkB,SAACnoE,GAAM,OACzB0xC,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACRrmE,KAAK,QACLm2F,QAAQ,YACJxoE,GACJ,EAkBF2sE,mBAAqB7yB,EAAyB,GAAd9+D,GAGlC,OACE02D,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC87B,EAAAA,GAAU90B,EAAAA,EAAAA,GAAA,CACTq0B,sBAtBwB,0CAuBxB9E,SAAUnuB,EACVrgD,SAAUqgD,EACVszB,OAAQnoC,EACR3qE,MAAOizG,EACP/4B,SAzCe,SAACl6E,GACpBwxE,EALwB,SAACxxE,GACzB,OAAOA,GAASA,EAAMokD,UAAYpkD,EAAMkuB,OAAO6qB,QAAe74C,CAChE,CAGWwyG,CAAkB1yG,GAC7B,EAwCMmzG,MAAOH,EAAa,CAAC,QAAS,UAAW,WAAa,CAAC,QAAS,YAC5Dd,EACAriF,IAIX,ESkBCujF,gBR1EF,SAAezxG,GAA0F,IAAxFouB,EAAUpuB,EAAVouB,WAAY/vB,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAA6BgO,GAAF79E,EAAjBmtD,kBAA2BntD,EAAR69E,UAAU9+D,EAAW/e,EAAX+e,YAAamP,EAAWluB,EAAXkuB,YAyBhF4jE,EAAoB,MAATzzF,EAEjB,OACEo3E,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC0pB,EAAAA,GAAM1iB,EAAAA,EAAAA,GAAA,CACL8vB,QAAQ,WACRmF,WAAS,EACTC,cAAY,EACZ5yF,YAAc8+D,EAAyB,GAAd9+D,EACzBw5D,SA5BW,SAAA55E,QACQJ,IAAnBI,EAAEhB,OAAOU,OAEbwxE,EAASlxE,EAAEhB,OAAOU,MACpB,EAyBMA,MAAOyzF,EAAWzzF,EAAQ,GAC1Bm/B,SAAUqgD,EACVmuB,SAAUnuB,EACV8T,YA1Bc,SAACnrC,GACnB,OAAKq3B,GAA6B,MAAjBr3B,EAKO,SAACA,GAAa,OACtCN,EAAc93B,GAAY,SAAA1hB,GAAA,IAAE84C,EAAK94C,EAAL84C,MAAY,OAAA94C,EAALrO,QACtBmoD,EAAgBhB,EAAQ,IAAI,IAEtCnkD,QAAO,SAAA9F,GAAC,OAAU,OAANA,CAAU,IACtB+qD,OAAO,CARHsrD,CAAkBprD,GADhBznC,CAEX,EAuBM3I,KAAK,SACD5U,IAAK0sB,EAAa,CAAC,aAAc,WAtCzCg4B,EAAc93B,GAAY,SAAAxsB,GAAoB,IAAlB4jD,EAAK5jD,EAAL4jD,MAAOnnD,EAAKuD,EAALvD,MACjC,OAAOo3E,EAAAA,cAACi4B,EAAAA,EAAQ,CAACnqG,IAAKlF,EAAOA,MAAOA,GAAQmnD,EAC9C,KA0CH,EQ6BCqsD,gBG/EF,SAAgB3sG,GACd,IAAO7G,EAA+E6G,EAA/E7G,MAAOwxE,EAAwE3qE,EAAxE2qE,SAAkBgO,GAAsD34E,EAA9D2E,OAA8D3E,EAAtD24E,UAAUz8D,EAA4Clc,EAA5Ckc,IAAKjH,EAAuCjV,EAAvCiV,IAAK4tD,EAAkC7iE,EAAlC6iE,KAAMhpD,EAA4B7Z,EAA5B6Z,YAAamP,EAAehpB,EAAfgpB,YAWjE0vE,EAAuBr/F,MAATF,EAAqB,GAAKA,EAExCouG,GAAa9pB,EAAAA,EAAAA,UAAQ,iBAAO,CAChCqpB,SAAUnuB,EACX,GAAG,CACFA,IAGI2uB,GAAa7pB,EAAAA,EAAAA,UAAQ,iBAAO,CAChCvhE,IAAAA,EACAjH,IAAAA,EACA4tD,KAAAA,EACD,GAAG,CACF3mD,EAAKjH,EAAK4tD,IAGZ,OACE0N,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACRrwG,KAAK,SACLmC,MAAOu/F,EACP7+E,YAAc8+D,EAAyB,GAAd9+D,EACzB0tF,WAAYA,EACZD,WAAYA,EACZhvE,SAAUqgD,EACVtF,SAnCW,SAAA55E,GACf,IAAI+F,EAAM/F,EAAEhB,OAAOU,MAEjBqG,EADU,KAARA,GAAsB,OAARA,OACVnG,EAEAuC,OAAO4D,GACfmrE,EAASnrE,EACX,EA6BM0R,KAAK,SACD8X,IAIX,EHoCC4jF,gBI/EF,SAAgB5sG,GACd,IAAO2E,EAAsF3E,EAAtF2E,OAAQkV,EAA8E7Z,EAA9E6Z,YAAamP,EAAiEhpB,EAAjEgpB,YAAa7vB,EAAoD6G,EAApD7G,MAAOwxE,EAA6C3qE,EAA7C2qE,SAAUzuD,EAAmClc,EAAnCkc,IAAKjH,EAA8BjV,EAA9BiV,IAAK4tD,EAAyB7iE,EAAzB6iE,KAAMt3C,EAAmBvrB,EAAnBurB,MAAOotD,EAAY34E,EAAZ24E,SAC1EwjB,EAAsBx3F,EAAOiB,SAA7Bu2F,mBAED0Q,GAAqBtH,EAAAA,EAAAA,cAAY,SAAC5xD,EAAI97C,GAC1C8yE,EAAS9yE,EACX,GAAG,CAAC8yE,IAEEmiC,GAAoBvH,EAAAA,EAAAA,cAAY,SAAC9rG,GACrC,IAAI+F,EAAM/F,EAAEhB,OAAOU,MAEjBqG,EADU,KAARA,GAAsB,OAARA,OACVnG,EAEAuC,OAAO4D,GACfmrE,EAASnrE,EACX,GAAG,CAACmrE,IAEEoiC,GAAkBxH,EAAAA,EAAAA,cAAY,SAAC9rG,GACnC,IAAI+F,EAAM/F,EAAEhB,OAAOU,OAEjBqG,EADU,KAARA,GAAsB,OAARA,OACVnG,EAEAuC,OAAO4D,IAEL0c,EACRyuD,EAASzuD,GACA1c,EAAMyV,GACf01D,EAAS11D,EAEb,GAAG,CAAC01D,EAAUzuD,EAAKjH,IAGnBna,EAA0BkuB,GAAe,CAAC,EAAnCkuD,EAAKp8E,EAALo8E,MAAUxoB,GAAIC,EAAAA,EAAAA,GAAA7zD,EAAA8zD,GACf+pC,EAAmBjqC,EAAKjwC,OAAS,CAAC,EAClCm6E,EAAoBlqC,EAAKoU,QAAUpU,EAInCuwC,EAA8B,iBAAV9lG,EAAqBA,EAAQ,GACjD6zG,EAA+B,iBAAV7zG,EAAqBA,EAAQ,KAGlD8zG,GAAWxvB,EAAAA,EAAAA,UAAQ,mBAAMlyD,GAAQh1B,OAAOgG,KAAKgvB,GAAO9rB,KAAI,SAAApJ,GAAC,MAAK,CAClE8C,MAAOyC,OAAOvF,GACdijB,MAA2B,YAApBhjB,EAAAA,EAAAA,GAAOi1B,EAAMl1B,UAAuC,IAAbk1B,EAAMl1B,GAAqBk1B,EAAMl1B,GAAKk6E,EAAAA,cAAA,SAAIhlD,EAAMl1B,IAC/F,GAAU,GAAE,CAACk1B,IAERg8E,GAAa9pB,EAAAA,EAAAA,UAAQ,iBAAO,CAChCqpB,SAAUnuB,EACX,GAAG,CACFA,IAGI2uB,GAAa7pB,EAAAA,EAAAA,UAAQ,iBAAO,CAChCvhE,IAAAA,EACAjH,IAAAA,EACA4tD,KAAAA,EACD,GAAG,CACF3mD,EAAKjH,EAAK4tD,IAGNqqC,EACJ38B,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACRrwG,KAAK,SACLmC,MAAO8lG,EACPplF,YAAaA,EACb0tF,WAAYA,EACZD,WAAYA,EACZhvE,SAAUqgD,EACVtF,SAAUy5B,EACVK,OAAQJ,EACR77F,KAAK,SACDynF,IAIFyU,EACJ78B,EAAAA,cAAC88B,EAAAA,IAAM91B,EAAAA,EAAAA,GAAA,CACLp+E,MAAO6zG,EACP35B,SAAUw5B,EACVv0E,SAAUqgD,EACVz8D,IAAKA,EACLjH,IAAKA,EACL4tD,KAAMA,EACNt3C,MAAO0hF,EACPK,kBAAkB,OAClBp8F,KAAK,SACD0nF,IAcF2U,EAAsB,CAC1BC,WAAY,MACZje,YAAa,OACbke,aAAcR,GAAY,QAC1B/1B,MAAOA,GAASilB,GAGlB,OACE5rB,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAA,OAAK8G,MAnBa,CACpBwhB,QAAS,cACT6U,WAAY,SACZC,SAAU,SAiBNp9B,EAAAA,cAAA,OAAK8G,MAdgB,CACzBm2B,WAAY,QAcLN,GAEH38B,EAAAA,cAAA,OAAK8G,MAAOk2B,GACTH,IAKV,EJzCCQ,eKhFF,SAAgB5tG,GACd,IAAO2E,EAAuG3E,EAAvG2E,OAAQi5E,EAA+F59E,EAA/F49E,aAAc50D,EAAiFhpB,EAAjFgpB,YAAa7vB,EAAoE6G,EAApE7G,MAAOwxE,EAA6D3qE,EAA7D2qE,SAAUzuD,EAAmDlc,EAAnDkc,IAAKjH,EAA8CjV,EAA9CiV,IAAK4tD,EAAyC7iE,EAAzC6iE,KAAMt3C,EAAmCvrB,EAAnCurB,MAAOotD,EAA4B34E,EAA5B24E,SAAUlsD,EAAkBzsB,EAAlBysB,eACrF0vE,EAAsBx3F,EAAOiB,SAA7Bu2F,oBAEP0R,EAAAA,EAAAA,YAAU,WACR,IAAA/yG,EAA6BkF,EAAM7G,OAAS,MAACE,OAAWA,GAAUqD,GAAAC,EAAAA,EAAAA,GAAA7B,EAAA,GAAlD4B,EAAA,GAASA,EAAA,GACrBsD,EAAM7G,KASZ,GAAG,IAEH,IA2BM4zG,EAAkB,WAEjB5zG,IACDA,EAAM,GAAK+iB,EACbyuD,EAAS,CAACzuD,EAAK/iB,EAAM,KACZA,EAAM,GAAK8b,GACpB01D,EAAS,CAACxxE,EAAM,GAAI8b,IAExB,EAEAzN,EAA0BwhB,GAAe,CAAC,EAAnCkuD,EAAK1vE,EAAL0vE,MAAUxoB,GAAIC,EAAAA,EAAAA,GAAAnnD,EAAAonD,GACf+pC,EAAmBjqC,EAAKjwC,OAAS,CAAC,EAClCm6E,EAAoBlqC,EAAKoU,QAAUpU,EAGnCu+C,IAAW1hF,GAAQh1B,OAAOgG,KAAKgvB,GAAO9rB,KAAI,SAAApJ,GAAC,MAAK,CACpD8C,MAAOyC,OAAOvF,GACdijB,MAA2B,YAApBhjB,EAAAA,EAAAA,GAAOi1B,EAAMl1B,UAAuC,IAAbk1B,EAAMl1B,GAAqBk1B,EAAMl1B,GAAKk6E,EAAAA,cAAA,SAAIhlD,EAAMl1B,IAC/F,IAKG22G,EAAc7zG,GAAKhC,EAAAA,EAAAA,GAAOgC,GAAS,MAACE,OAAWA,GACnDy0G,GAAAnxG,EAAAA,EAAAA,GAA2BqwG,EAAW,GAAjCe,EAASD,EAAA,GAAEE,EAAOF,EAAA,GACNz0G,MAAb00G,IACFA,EAAY,GACZf,EAAY,GAAK,GAEJ3zG,MAAX20G,IACFA,EAAU,GACVhB,EAAY,GAAK,GAInB,IAAMiB,EACJ19B,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACRrwG,KAAK,SACLmC,MAAO40G,EACPl0F,YAAa+jE,EAAa,GAC1B2pB,WAAY,CACVT,SAAUnuB,GAEZ2uB,WAAY,CACVprF,IAAKA,EACLjH,IAAKA,EACL4tD,KAAMA,GAERvqC,SAAUqgD,EACVtF,SAzE0B,SAAC55E,GAE7B,IAAIs0G,EAAYt0G,EAAEhB,OAAOU,MAEvB40G,EADgB,KAAdA,GAAiC,MAAbA,OACV10G,EAEAuC,OAAOmyG,GACrB,IAAI50G,EAAQ6G,EAAM7G,OAAKhC,EAAAA,EAAAA,GAAO6I,EAAM7G,OAAS,MAACE,OAAWA,GACzDF,EAAM,GAAK40G,EACXpjC,EAASxxE,EACX,EAgEIg0G,OAAQJ,EACR77F,KAAK,SACDynF,IAIFuV,EACJ39B,EAAAA,cAAC62B,EAAAA,GAAS7vB,EAAAA,EAAAA,GAAA,CACR8vB,QAAQ,WACRrwG,KAAK,SACLmC,MAAO60G,EACPn0F,YAAa+jE,EAAa,GAC1B2pB,WAAY,CACVT,SAAUnuB,GAEZ2uB,WAAY,CACVprF,IAAKA,EACLjH,IAAKA,EACL4tD,KAAMA,GAERvqC,SAAUqgD,EACVtF,SAnFwB,SAAC55E,GAC3B,IAAIu0G,EAAUv0G,EAAEhB,OAAOU,MAErB60G,EADc,KAAZA,GAA6B,MAAXA,OACV30G,EAEAuC,OAAOoyG,GACnB,IAAI70G,EAAQ6G,EAAM7G,OAAKhC,EAAAA,EAAAA,GAAO6I,EAAM7G,OAAS,MAACE,OAAWA,GACzDF,EAAM,GAAK60G,EACXrjC,EAASxxE,EACX,EA2EIg0G,OAAQJ,EACR77F,KAAK,SACDynF,IAIFyU,EACJ78B,EAAAA,cAAC88B,EAAAA,IAAM91B,EAAAA,EAAAA,GAAA,CACLp+E,MAAO6zG,EACP35B,SA7GuB,SAAC1/B,EAAI2Z,GAC9Bqd,EAASrd,EACX,EA4GIh1B,SAAUqgD,EACVz8D,IAAKA,EACLjH,IAAKA,EACL4tD,KAAMA,EACNt3C,MAAO0hF,EACPK,kBAAkB,OAClBp8F,KAAK,SACD0nF,IASFuV,EAAqB,CACzBX,WAAY,OAGRD,EAAsB,CAC1BC,WAAY,MACZje,YAAa,OACbke,aAAcR,GAAY,QAC1B/1B,MAAOA,GAASilB,GAGlB,OACE5rB,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAA,OAAK8G,MAlBa,CACpBwhB,QAAS,cACT8U,SAAU,SAiBNp9B,EAAAA,cAAA,OAAK8G,MAAO82B,GACTF,GAEH19B,EAAAA,cAAA,OAAK6F,UAAW,eACd7F,EAAAA,cAAA,YAAQ9jD,EAAe,KAEzB8jD,EAAAA,cAAA,OAAK8G,MAAO82B,GACTD,GAEH39B,EAAAA,cAAA,OAAK8G,MAAOk2B,GACTH,IAKV,EL3FCgB,iBMhFF,SAAgBpuG,GACd,IAAQgpB,EAA8DhpB,EAA9DgpB,YAAa7vB,EAAiD6G,EAAjD7G,MAAOwxE,EAA0C3qE,EAA1C2qE,SAAUt/C,EAAgCrrB,EAAhCqrB,SAAUC,EAAsBtrB,EAAtBsrB,QAASqtD,EAAa34E,EAAb24E,SAMzD,OACEpI,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC89B,EAAAA,EAAU,CAACzD,UAAU,OACpBr6B,EAAAA,cAAC+9B,EAAAA,GAAI,CAAC1D,UAAU,QAAQ2D,WAAS,EAACb,WAAW,SAASc,QAAS,GAC7Dj+B,EAAAA,cAAC+9B,EAAAA,GAAI,CAAC3+F,MAAI,EAACi7F,UAAU,QAAQt/E,GAC7BilD,EAAAA,cAAC+9B,EAAAA,GAAI,CAAC3+F,MAAI,EAACi7F,UAAU,QACnBr6B,EAAAA,cAACgT,EAAAA,GAAMhM,EAAAA,EAAAA,GAAA,CACLiQ,UAAWruF,EACXk6E,SAZK,WACf1I,GAAUxxE,EACZ,EAWYm/B,SAAUqgD,GACN3vD,KAGRunD,EAAAA,cAAC+9B,EAAAA,GAAI,CAAC3+F,MAAI,EAACi7F,UAAU,QAAQv/E,KAKtC,ENwDCojF,qBP7EF,SAAe3zG,GAA0F,IAChFimG,EADR73E,EAAUpuB,EAAVouB,WAAY/vB,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAA6BgO,GAAF79E,EAAjBmtD,kBAA2BntD,EAAR69E,UAAU9+D,EAAW/e,EAAX+e,YAAamP,EAAWluB,EAAXkuB,YAoBhF4jE,EAAoB,MAATzzF,GAAiBA,EAAMf,OAAS,EAQjD,OACEm4E,EAAAA,cAACo4B,EAAAA,EAAW,KACVp4B,EAAAA,cAAC0pB,EAAAA,GAAM1iB,EAAAA,EAAAA,GAAA,CAAC+gB,UAAQ,EACd+O,QAAQ,WACRmF,WAAS,EACTC,cAAY,EACZnzF,MAAQq/D,EAAyB,GAAd9+D,EACnBw5D,SAbW,SAAA55E,QACQJ,IAAnBI,EAAEhB,OAAOU,OAEbwxE,EAASlxE,EAAEhB,OAAOU,MACpB,EAUMA,MAAOyzF,EAAWzzF,EAAQ,GAC1Bm/B,SAAUqgD,EACVmuB,SAAUnuB,EACV8T,YA5Bc,SAACsU,GACnB,IAAKpoB,IAAaooB,EAAe3oG,OAC/B,OAAOyhB,EACT,IAAM60F,EAAiB1tD,EAAc93B,GAAY,SAAA1hB,GAAA,IAAE84C,EAAK94C,EAAL84C,MAAOnnD,EAAKqO,EAALrO,MAAK,OAC7D4nG,EAAelgG,QAAQ1H,IAAU,EAAImnD,EAAQ,IAAI,IAChDnkD,QAAO,SAAA9F,GAAC,OAAU,OAANA,CAAU,IACzB,OAAOq4G,EAAep1G,KAAK,KAC7B,EAsBM4X,KAAK,SACD5U,IAAK0sB,EAAa,CAAC,aAAc,QAAS,qBAxC7B+3E,EA0CFnU,EAAWzzF,EAAQ,GAzCtC6nD,EAAc93B,GAAY,SAAAxsB,GAAoB,IAAlB4jD,EAAK5jD,EAAL4jD,MAAOnnD,EAAKuD,EAALvD,MACjC,OACEo3E,EAAAA,cAACi4B,EAAAA,EAAQ,CAACnqG,IAAKlF,EAAOA,MAAOA,GAC3Bo3E,EAAAA,cAACo+B,EAAAA,EAAQ,CAACnnB,QAASuZ,EAAelgG,QAAQ1H,IAAU,IACpDo3E,EAAAA,cAAC+3B,EAAAA,EAAY,CAAChC,QAAShmD,IAG7B,MAsCH,EO+BCsuD,sBAAAA,GAEAC,eOnFF,SAAe/zG,GAGT,IAFJuW,EAAKvW,EAALuW,MAAOo4D,EAAQ3uE,EAAR2uE,SAAU2O,EAAWt9E,EAAXs9E,YAAaO,EAAQ79E,EAAR69E,SAAU9+D,EAAW/e,EAAX+e,YAAa+gE,EAAS9/E,EAAT8/E,UACrDtC,EAAax9E,EAAbw9E,cAA6BC,GAAFz9E,EAAZo9E,aAA8Bp9E,EAAhBy9E,kBAAkBiC,EAAiB1/E,EAAjB0/E,kBAE/Cs0B,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAryG,EAAAA,EAAAA,GAAAmyG,EAAA,GAAhC7Q,EAAI+Q,EAAA,GAAE9Q,EAAO8Q,EAAA,GAEdjN,GAASwD,EAAAA,EAAAA,cAAY,WACzBrH,GAAQ,EACV,GAAG,CAACA,IAEE8D,GAAUuD,EAAAA,EAAAA,cAAY,WAC1BrH,GAAQ,EACV,GAAG,CAACA,IAEEpF,EAAgB,SAAC3zF,GAAM,IAAE2jG,EAAK/tG,UAAA3C,OAAA,QAAAiB,IAAA0B,UAAA,GAAAA,UAAA,GAAG,EAAC,OACtCxE,OAAOgG,KAAK4I,GAAQ1F,KAAI,SAAAgG,GACtB,IAAMO,EAAQb,EAAOM,GACd4L,EAAsDrL,EAAtDqL,MAAOzZ,EAA+CoO,EAA/CpO,KAAM0hB,EAAyCtT,EAAzCsT,MAAOgf,EAAkCtyB,EAAlCsyB,SAAU+iD,EAAwBr1E,EAAxBq1E,YAAa7C,EAAWxyE,EAAXwyE,QAC5CuC,EAAS,KAAeguB,OAAOD,GACjCmG,EACF1+B,EAAAA,cAAA,YACGwK,GAAUxK,EAAAA,cAAA,YAAOwK,GACjBM,EAAc9K,EAAAA,cAAA,SAAIj3D,GAAaA,GAUpC,OAPIk/D,IACFy2B,EACE1+B,EAAAA,cAAC41B,GAAAA,EAAO,CAAC7lD,MAAOk4B,EAAShK,UAAU,cAChCygC,IAIH59F,EACK,CACLk/D,EAAAA,cAAC2+B,GAAAA,EAAa,CAAC52E,SAAUA,EAAUj6B,IAAKzG,EAAMu3G,eAAe,GAC1DF,GAEHnW,EAAcznF,EAAOy3F,EAAM,IAI3Bv4B,EAAAA,cAACi4B,EAAAA,EAAQ,CAAClwE,SAAUA,EAAUj6B,IAAKzG,EAAMuB,MAAOvB,GAC7Cq3G,EAIT,GAAE,EAGE57B,GAAWkyB,EAAAA,EAAAA,cAAY,SAAA9rG,QACJJ,IAAnBI,EAAEhB,OAAOU,OAEbswE,EAAShwE,EAAEhB,OAAOU,MACpB,GAAG,CAACswE,IAEEgjB,GAAc8Y,EAAAA,EAAAA,cAAY,SAACjkD,GAC/B,IAAKq3B,IAAar3B,EAChB,OAAOznC,EACT,IAAMu1F,EAAY,SAACjqG,GACjB,OAAOA,EAAO1F,KAAI,SAAAuG,GAChB,OAAIA,EAAMqL,MACH+9F,EAAUppG,EAAMqL,OADCrL,EAAMpO,OAAS0pD,EAAgBt7C,EAAMsT,MAAQ,IAEvE,GACF,EAQA,OAPc81F,EAAU/9F,GAAOlV,QAAO,SAAC9F,GACrC,OAAIQ,MAAMC,QAAQT,GACTA,EAAEwkC,MAAK,SAAC1hC,GAAK,OAAe,OAAVA,CAAc,IAE1B,OAAN9C,CAEX,IAAGuC,KAEL,GAAG,CAAC+/E,EAAU9+D,EAAaxI,IAErBu7E,EAA0B,MAAfxU,EACbitB,EAAc9sB,GAAoBiC,EAClC6qB,GAAe/sB,IACjB+sB,EAAc,MAChB,IAAIv4F,EACFyjE,EAAAA,cAAC0pB,EAAAA,EAAM,CACLn2F,QAAS82E,EACTysB,QAAQ,WACRmF,WAAS,EACTC,cAAY,EACZ5yF,YAAaA,EACbw5D,SAAUA,EACVl6E,MAAOyzF,EAAWxU,EAAc,GAChC9/C,SAAUqgD,EACV8T,YAAaA,EACbv7E,KAAK,QACL+sF,KAAMA,EACN8D,OAAQA,EACRC,QAASA,GAERlJ,EAAcznF,IASnB,OANIg0F,IACFv4F,EACEyjE,EAAAA,cAAC41B,GAAAA,EAAO,CAAC7lD,MAAQ29C,EAAqB,KAAdoH,GAAqBv4F,IAG3CyjE,EAAAA,cAACo4B,EAAAA,EAAW,KAAE77F,EAErB,EPpBCuiG,qBLdF,SAAgBrvG,GACd,OAAOuwE,EAAAA,cAAC++B,GAxCW,SAAHx0G,EAIf6J,GAAW,IAHZ0M,EAAKvW,EAALuW,MAAO+mE,EAAWt9E,EAAXs9E,YAAa3O,EAAQ3uE,EAAR2uE,SAAUmuB,EAAY98F,EAAZ88F,aAC9Btf,EAAax9E,EAAbw9E,cAA6BC,GAAFz9E,EAAZo9E,aAA8Bp9E,EAAhBy9E,kBAAkBiC,EAAiB1/E,EAAjB0/E,kBAC5C9rB,GAAIC,EAAAA,EAAAA,GAAA7zD,EAAA8zD,IAEHy2C,EAAc9sB,GAAoBiC,EAClC6qB,GAAe/sB,IACjB+sB,EAAc,MAChB,IAAMn8E,EAAa2/E,GAAkBx3F,GAC/BlY,EAAQi/E,EAKRgtB,EAAsB,CAC1B7nG,WAAWgoG,EAAAA,EAAAA,cAAY,SAAC12C,GAMtB,OALsBlqD,EAAOiB,SAASqZ,uBACnCxf,KAAI,SAAAnI,GAAC,OAAIsxG,GAAyBtxG,EAAE,IAEpCmI,KAAI,SAAAnI,GAAC,MAAyB,iBAAbu3D,EAAOv3D,GAAiBu3D,EAAOv3D,GAAK,EAAE,IACvDgC,KAAK,KAEV,GAAG,CAACqL,KAGN,OAAAvN,GAAAA,GAAA,GACKs3D,GAAI,IACP22C,YAAAA,EACAn8E,WAAAA,EACAyhD,SAnBe,SAACxxE,EAAOo2G,GACvB,GAAKp2G,GAAUy+F,EACf,OAAOnuB,EAAStwE,EAClB,EAiBEisG,oBAAAA,EACAn9C,mBAAmB,EACnBqwC,UAAU,EACV6M,kBAAmBvN,EACnBz+F,MAAAA,EACAukG,qBAAqB,GAEzB,CAG+B8R,CAAaxvG,EAAOA,EAAM2E,QACxD,EKcC8qG,QJhEF,SAAe30G,GAAsB,IAApB9D,EAAI8D,EAAJ9D,KAAM2hF,EAAQ79E,EAAR69E,SACjBsM,EAAOikB,GAAWlyG,IAAS,KAC/B,OAAKiuF,GAAiB,SAATjuF,EAIA,SAATA,EAEAu5E,EAAAA,cAAC6S,GAAAA,EAAI,CACHlyE,KAAK,QACLonB,SAAUqgD,EACVqgB,MAAOsQ,GAAYtyG,IACnBiuF,GAGGA,EAZA1U,EAAAA,cAAC0I,GAAQ,KAcnB,EIgDCy2B,UAAAA,GACAC,eQ7FF,SAAe70G,GAAwB,IAAtBmF,EAAQnF,EAARmF,SACf,OAD+BnF,EAAN6J,OAClB4rE,EAAAA,cAAAA,EAAAA,SAAA,KAAGtwE,EACX,ER4FC2vG,SAAAA,GACAC,USzFF,SAAe/0G,GAAyE,IAAvE3B,EAAK2B,EAAL3B,MAAOwxE,EAAQ7vE,EAAR6vE,SAAUrxD,EAAKxe,EAALwe,MAAOksE,EAAY1qF,EAAZ0qF,aAAcC,EAAS3qF,EAAT2qF,UAAWr2E,EAAEtU,EAAFsU,GAAIzK,EAAM7J,EAAN6J,OAAQ3N,EAAI8D,EAAJ9D,KAGtEquF,GAFe1gF,EAAOiB,SAArB22F,WAES,WAAH,OAAS5xB,GAAUxxE,EAAM,GAChCk0F,EAAUr2F,EACV84G,EAAY32G,GAASqsF,GAAyBlsE,EAC9C2rE,EAAO9rF,EAAQo3E,EAAAA,cAACw/B,GAAAA,EAAQ,MAAMx/B,EAAAA,cAACy/B,GAAAA,EAAY,MAEjD,MAAY,QAARh5G,EACEyuF,EACKlV,EAAAA,cAACi5B,GAAAA,EAAU,CAChBnrG,IAAK+Q,EAAGi+E,EACRhI,QAASA,EACTn0E,KAAM,SACN+zE,GAEK1U,EAAAA,cAACk5B,GAAAA,EAAM,CACZprG,IAAK+Q,EAAGi+E,EACRhI,QAASA,EACTn0E,KAAM,QACNw4F,UAAWzkB,GACX6qB,GAICv/B,EAAAA,cAAC0/B,GAAAA,EAAgB,CACtBC,QAAS3/B,EAAAA,cAACgT,EAAAA,EAAM,CACdiE,UAAWruF,EACX+X,KAAM,QACNmiE,SA3Ba,SAAA55E,GAAC,OAAIkxE,EAASlxE,EAAEhB,OAAO+uF,QAAQ,IA6B9CluE,MAAOw2F,GAEV,ETyDCK,gBAAAA,GACAC,WUnGF,SAAet1G,GAAkD,IAAhD2pF,EAAI3pF,EAAJ2pF,KAAM+U,EAAM1+F,EAAN0+F,OAAQC,EAAU3+F,EAAV2+F,WAAYn5C,EAAKxlD,EAALwlD,OACzCg5B,EADyDx+E,EAATw+E,WACtC,CACR+2B,YAAa/vD,GAAS,gBACtBA,MAAO,KACPgwD,iBAAkB9W,GAAU,KAC5B+W,iBAAkB9W,GAAc,WAE/B+W,KAAK/rB,GAAK,OACJ,WAAO,GACjB,EV2FCgsB,cAAejjF,EAAAA,EAEfkjF,YAjEkB,SAAH51G,GAA2B,IAAtB6J,EAAM7J,EAAN6J,OAAQ1E,EAAQnF,EAARmF,SACtB0wG,EAAgBhsG,EAAOiB,SAASkgG,OAAS,CAAC,EAC1C8K,EAAiBjsG,EAAOiB,SAASoa,QAAU,CAAC,EAC5CsV,EAAes7E,EAAe3wF,OAC9B4wF,EAAcF,EAAc7jF,IAC5B9M,EAAS4wF,EAAe9jF,IACxBg5E,GAAQgL,EAAAA,EAAAA,GAAYD,EAAa7wF,EAAQ,CAC7CqmF,QAAS,CAIP,IAIE0K,EAAmBnM,IAAc,EAAI,CACzC5kF,OAAQsV,GACN,CACF07E,cAAe17E,GAGXjG,EAAQkhD,EAAAA,cAAA,OAAK6F,UAAU,OAAOn2E,GAC9BgxG,EACJ1gC,EAAAA,cAAC2gC,EAAAA,GAAoB35B,EAAAA,EAAAA,GAAA,CAAC45B,YAAaC,EAAAA,GAAmBL,GACpDxgC,EAAAA,cAAC8gC,EAAAA,EAAe,KACbhiF,IAUP,OANkBy2E,EAChBv1B,EAAAA,cAAC+gC,EAAAA,EAAa,CAACxL,MAAOA,GACnBmL,GAEDA,CAGN,G,ykBWpEA,IAAMrrG,GAAQxO,GAAAA,GAAA,GACTm6G,EAAAA,GAAY3rG,UAAQ,IAEvB6nB,YAAa,SAACztB,EAAKlF,GAAA,IAAA+8F,EAAG7lE,EAAGl3B,EAAHk3B,IAAGw/E,EAAA12G,EAAEg3B,EAAIu9E,EAAoBmC,EAApBnC,qBAAsBR,EAAc2C,EAAd3C,eAAc,OAAO7uG,SAAkB,QAAb63F,EAAL73F,EAAOgpB,mBAAW,IAAA6uE,GAAlBA,EAAoB5uE,WAC1F+I,EAAIq9E,EAAsBrvG,GAC1BgyB,EAAI68E,EAAgB7uG,EAAM,EAC9B0tB,eAAgB,SAAC1tB,EAAKtD,GAAA,IAAA+0G,EAAGz/E,EAAGt1B,EAAHs1B,IAAG0/E,EAAAh1G,EAAEo1B,EAAIu9E,EAAoBqC,EAApBrC,qBAAsBR,EAAc6C,EAAd7C,eAAc,OAAO7uG,SAAkB,QAAbyxG,EAALzxG,EAAOgpB,mBAAW,IAAAyoF,GAAlBA,EAAoBxoF,WAC7F+I,EAAIq9E,EAAsBrvG,GAC1BgyB,EAAI68E,EAAgB7uG,EAAM,EAC9B2tB,WAAY,SAAC3tB,EAAKwH,GAA0B,OAAOwqB,EAA3BxqB,EAAHwqB,KAAuBxqB,EAAlBsqB,EAAI+8E,eAAyC7uG,EAAM,EAC7E4tB,YAAa,SAAC5tB,EAAKc,GAAoB,OAAOkxB,EAArBlxB,EAAHkxB,KAAiBlxB,EAAZgxB,EAAI89E,SAA6B5vG,EAAM,EAClEmuB,aAAc,SAACnuB,EAAKgB,GAAqB,OAAOgxB,EAAtBhxB,EAAHgxB,KAAkBhxB,EAAb8wB,EAAI+9E,UAA+B7vG,EAAM,EACrE6tB,aAAc,SAAC7tB,EAAKuB,GAAqB,OAAOywB,EAAtBzwB,EAAHywB,KAAkBzwB,EAAbuwB,EAAI49E,UAA+B1vG,EAAM,EACrE8tB,WAAY,SAAC9tB,EAAKwB,GAAmB,OAAOwwB,EAApBxwB,EAAHwwB,KAAgBxwB,EAAXswB,EAAI29E,QAA2BzvG,EAAM,EAC/D+tB,kBAAmB,SAAC/tB,EAAK2B,GAA0B,OAAOqwB,EAA3BrwB,EAAHqwB,KAAuBrwB,EAAlBmwB,EAAI69E,eAAyC3vG,EAAM,EACpFguB,mBAAoB,SAAChuB,EAAK4B,GAA2B,OAAOowB,EAA5BpwB,EAAHowB,KAAwBpwB,EAAnBkwB,EAAIq+E,gBAA2CnwG,EAAM,EACvFiuB,mBAAoB,SAACjuB,EAAKkC,GAA2B,OAAO8vB,EAA5B9vB,EAAH8vB,KAAwB9vB,EAAnB4vB,EAAIq+E,gBAA2CnwG,EAAM,EACvFkuB,eAAgB,SAACluB,EAAKmC,GAAuB,OAAO6vB,EAAxB7vB,EAAH6vB,KAAoB7vB,EAAf2vB,EAAI4+E,YAAmC1wG,EAAM,EAC3EutB,cAAe,SAACvtB,EAAKkqB,GAAiB,OAAOkmF,EAAPlmF,EAAd4H,EAAIs+E,YAA4BpwG,EAAM,EAC9DwtB,WAAY,SAAFnD,GAAqB,OAAOomF,EAAPpmF,EAAjByH,EAAI2+E,gBAAmC,IAGjD/mG,GAAOtS,GAAAA,GAAA,GACRm6G,EAAAA,GAAY7nG,SAAO,IACtB84D,KAAIprE,GAAAA,GAAA,GACCm6G,EAAAA,GAAY7nG,QAAQ84D,MAAI,IAC3B72C,QAAS,SAAC3rB,EAAKsqB,GAAyB,OAAO0H,EAA1B1H,EAAH0H,KAAsB1H,EAAjBwH,EAAIm5E,cAAuCjrG,EAAM,IAE1E0iE,SAAQtrE,GAAAA,GAAA,GACHm6G,EAAAA,GAAY7nG,QAAQg5D,UAAQ,IAC/B/2C,QAAS,SAAC3rB,EAAK6qB,GAA6B,OAAOmH,EAA9BnH,EAAHmH,KAA0BnH,EAArBiH,EAAIo5E,kBAA+ClrG,EAAM,IAElFqzD,OAAMj8D,GAAAA,GAAA,GACDm6G,EAAAA,GAAY7nG,QAAQ2pD,QAAM,IAC7B1nC,QAAS,SAAC3rB,EAAK8qB,GAA2B,OAAOkH,EAA5BlH,EAAHkH,KAAwBlH,EAAnBgH,EAAI66E,gBAA2C3sG,EAAM,IAE9EijE,YAAW7rE,GAAAA,GAAA,GACNm6G,EAAAA,GAAY7nG,QAAQu5D,aAAW,IAClCt3C,QAAS,SAAC3rB,EAAKi7F,GAA8D,IAA3DjpE,EAAGipE,EAAHjpE,IAAG2/E,EAAA1W,EAAEnpE,EAAI88E,EAAqB+C,EAArB/C,sBAAuBH,EAAoBkD,EAApBlD,qBAChD,OAAQzuG,EAAMorB,YAAcprB,EAAMipB,YAAcjpB,EAAMioD,kBAClDj2B,EAAI48E,EAAqBx3G,GAAAA,GAAA,GAAM4I,GAAK,IAAEs4F,UAAU,KAChDtmE,EAAIy8E,EAAsBzuG,EAChC,IAEF+iE,OAAM3rE,GAAAA,GAAA,GACDm6G,EAAAA,GAAY7nG,QAAQq5D,QAAM,IAC7Bp3C,QAAS,SAAC3rB,EAAKk7F,GAAyD,IAAtDlpE,EAAGkpE,EAAHlpE,IAAG4/E,EAAA1W,EAAEppE,EAAI88E,EAAqBgD,EAArBhD,sBAAuBrC,EAAeqF,EAAfrF,gBAChD,OAAQvsG,EAAMorB,YAAcprB,EAAMipB,YAAcjpB,EAAMioD,kBAClDj2B,EAAI48E,EAAuB5uG,GAC3BgyB,EAAIu6E,EAAiBvsG,EAC3B,IAEF8iE,OAAM1rE,GAAAA,GAAA,GACDm6G,EAAAA,GAAY7nG,QAAQo5D,QAAM,IAC7Bn3C,QAAS,SAAC3rB,EAAKo7F,GAA2B,OAAOppE,EAA5BopE,EAAHppE,KAAwBopE,EAAnBtpE,EAAI86E,gBAA2C5sG,EAAM,IAE9EszD,QAAAl8D,GAAAA,GAAA,GACKm6G,EAAAA,GAAY7nG,QAAO,SAAQ,IAC9BiiB,QAAS,SAAC3rB,EAAKs7F,GAA4B,OAAOtpE,EAA7BspE,EAAHtpE,KAAyBspE,EAApBxpE,EAAIs8E,iBAA6CpuG,EAAM,IAEhF8jB,KAAI1sB,GAAAA,GAAA,GACCm6G,EAAAA,GAAY7nG,QAAQoa,MAAI,IAC3B6H,QAAS,SAAC3rB,EAAKw7F,GAAyB,OAAOxpE,EAA1BwpE,EAAHxpE,KAAsBwpE,EAAjB1pE,EAAIs5E,cAAuCprG,EAAM,IAE1EumC,KAAInvC,GAAAA,GAAA,GACCm6G,EAAAA,GAAY7nG,QAAQ68B,MAAI,IAC3B5a,QAAS,SAAC3rB,EAAK07F,GAAyB,OAAO1pE,EAA1B0pE,EAAH1pE,KAAsB0pE,EAAjB5pE,EAAIo6E,cAAuClsG,EAAM,IAE1EqkB,SAAQjtB,GAAAA,GAAA,GACHm6G,EAAAA,GAAY7nG,QAAQ2a,UAAQ,IAC/BsH,QAAS,SAAC3rB,EAAK47F,GAA6B,OAAO5pE,EAA9B4pE,EAAH5pE,KAA0B4pE,EAArB9pE,EAAIg6E,kBAA+C9rG,EAAM,IAElFglE,YAAW5tE,GAAAA,GAAA,GACNm6G,EAAAA,GAAY7nG,QAAQs7D,aAAW,IAClCr5C,QAAS,SAAC3rB,EAAK67F,GAA0B,OAAO7pE,EAA3B6pE,EAAH7pE,KAAuB6pE,EAAlB/pE,EAAI87E,eAAyC5tG,EAAM,MAIxE6N,GAAKzW,GAAA,GACNm6G,EAAAA,GAAY1jG,OAGXwU,GAAGjrB,GAAAA,GAAA,GACJm6G,EAAAA,GAAYlvF,KAAG,IAClByP,EAAC16B,GAAAA,GAAA,GACIm6G,EAAAA,GAAYlvF,IAAIyP,GAChB+/E,MAKHltG,GAAMvN,GAAAA,GAAA,GACLm6G,EAAAA,IAAW,IACdlvF,IAAAA,GACAxU,MAAAA,GACAnE,QAAAA,GACA9D,SAAAA,KAMF,SAJAjB,GAAS2qD,EAAAA,GAAM0W,aAAaN,UAAU/gE,GAAQ,CAC5C,e","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogicUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/mongoUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/spelUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/getNewValueForFieldOp.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultRuleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/conv.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/builder.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/postprocess.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/convert.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx"],"sourcesContent":["// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\nimport {default as clone} from \"clone\";\nimport {default as moment} from \"moment\";\n\nexport {uuid, clone, moment};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n// export const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\nexport const isObjectOrArray = (v) => (typeof v === \"object\" && v !== null);\n\nexport const typeOf = (v) => {\n  const t = (typeof v);\n  if (t && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return t;\n};\n\nexport const isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const isSafeKeyForObject = (k) => {\n  return ![\"__proto__\", \"constructor\", \"prototype\"].includes(k);\n};\n\nexport const hasSafeOwnProperty = (obj, k) => {\n  return Object.prototype.hasOwnProperty.call(obj, k) && isSafeKeyForObject(k);\n};\n\nexport const setIn = (obj, path, newValue, opts) => {\n  const defaultOpts = {\n    canCreate: false, canIgnore: false, canChangeType: false,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { canCreate, canIgnore, canChangeType } = opts;\n  if (!Array.isArray(path)) {\n    throw new Error(\"path is not an array\");\n  }\n  if (!path.length) {\n    throw new Error(\"path is empty\");\n  }\n  const expectedObjType = typeof path[0] === \"number\" ? \"array\" : \"object\";\n  if (!isTypeOf(obj, expectedObjType)) {\n    throw new Error(`obj is not of type ${expectedObjType}`);\n  }\n\n  let newObj = shallowCopy(obj);\n\n  let target = newObj;\n  const pathToTarget = [...path];\n  const targetKey = pathToTarget.pop();\n  const goodPath = [];\n  for (const k of pathToTarget) {\n    if (!isSafeKeyForObject(k)) {\n      throw new Error(`path contains unsafe ${k}`);\n    }\n    const nextKey = path[goodPath.length];\n    const expectedType = typeof nextKey === \"number\" ? \"array\" : \"object\";\n    if (!isTypeOf(target[k], expectedType)) {\n      // value at path has another type\n      if (target[k] ? canChangeType : canCreate) {\n        target[k] = expectedType === \"array\" ? [] : {};\n      } else if (canIgnore) {\n        target = undefined;\n        newObj = obj; // return initial obj as-is\n        break;\n      } else {\n        throw new Error(`Value by path ${goodPath.join(\".\")} should have type ${expectedType} but got ${typeOf(target[k])}`);\n      }\n    }\n    goodPath.push(k);\n    target[k] = shallowCopy(target[k]);\n    target = target[k];\n  }\n\n  if (target) {\n    if (newValue === undefined) {\n      delete target[targetKey];\n    } else {\n      const oldValue = target[targetKey];\n      if (typeof newValue === \"function\") {\n        target[targetKey] = newValue(oldValue);\n      } else {\n        target[targetKey] = newValue;\n      }\n    }\n  }\n\n  return newObj;\n};\n\nexport const mergeIn = (obj, mixin, opts) => {\n  const defaultOpts = {\n    canCreate: true, canChangeType: true,\n    deepCopyObj: false, deepCopyMixin: false,\n    arrayMergeMode: \"merge\", // \"merge\" | \"join\" | \"joinMissing\" | \"joinRespectOrder\" | \"overwrite\"\n    circularRefs: false,\n    specialSymbols: true,\n  };\n  opts = { ...defaultOpts, ...(opts ?? {}) };\n  const { deepCopyObj, deepCopyMixin, circularRefs, specialSymbols } = opts;\n  if (!isTypeOf(obj, \"object\")) {\n    throw new Error(\"obj is not an object\");\n  }\n  if (!isTypeOf(mixin, \"object\")) {\n    throw new Error(\"mixin is not an object\");\n  }\n\n  // symbols\n  const $v = Symbol.for(\"_v\");\n  const $type = Symbol.for(\"_type\");\n  const $canCreate = Symbol.for(\"_canCreate\");\n  const $canChangeType = Symbol.for(\"_canChangeType\");\n  const $arrayMergeMode = Symbol.for(\"_arrayMergeMode\");\n\n  const newObj = deepCopyObj ? clone(obj, circularRefs) : shallowCopy(obj);\n  let newObjChanged = false;\n  const _process = (path, targetMix, target, {\n    isMixingArray, isMixingRealArray,\n  } = {}) => {\n    let indexDelta = 0;\n    for (const mk in targetMix) {\n      if (!isSafeKeyForObject(mk)) {\n        throw new Error(`mixin contains unsafe key ${mk}`);\n        // newObjChanged = false;\n        // break;\n      }\n      if (!hasSafeOwnProperty(targetMix, mk)) {\n        continue;\n      }\n      const k = isMixingArray ? Number(mk) + indexDelta : mk;\n      const useSymbols = specialSymbols && isObjectOrArray(targetMix[mk]);\n      let canCreate = opts.canCreate, canChangeType = opts.canChangeType, arrayMergeMode = opts.arrayMergeMode;\n      let targetMixValue = targetMix[mk];\n      let isMixValueExplicit = false;\n      let expectedType = typeOf(targetMixValue);\n      if (useSymbols) {\n        if ($v in targetMix[mk]) {\n          isMixValueExplicit = true;\n          targetMixValue = targetMix[mk][$v];\n        }\n        expectedType = targetMix[mk]?.[$type] || typeOf(targetMixValue);\n        canCreate = targetMix[mk]?.[$canCreate] ?? canCreate;\n        canChangeType = targetMix[mk]?.[$canChangeType] ?? canChangeType;\n        arrayMergeMode = targetMix[mk]?.[$arrayMergeMode] ?? arrayMergeMode;\n        if (expectedType === \"array\" && arrayMergeMode === \"overwrite\") {\n          isMixValueExplicit = true;\n        }\n      }\n      if (expectedType !== \"array\") {\n        arrayMergeMode = undefined;\n      }\n      if (!isTypeOf(target[k], expectedType)) {\n        // value at path has another type\n        if (target[k] ? canChangeType : canCreate) {\n          if (expectedType === \"array\" || expectedType === \"object\") {\n            target[k] = expectedType === \"array\" ? [] : {};\n            newObjChanged = true;\n          } else {\n            // primitive\n          }\n        } else {\n          continue;\n        }\n      }\n      if (expectedType === \"array\" || expectedType === \"object\") {\n        if (isMixValueExplicit) {\n          // deep copy from mix to target\n          newObjChanged = true;\n          target[k] = deepCopyMixin ? clone(targetMixValue, circularRefs) : shallowCopy(targetMixValue);\n        } else {\n          if (arrayMergeMode && [\"join\", \"joinMissing\", \"joinRespectOrder\"].includes(arrayMergeMode)) {\n            // join 2 arrays\n            newObjChanged = true;\n            const left = (deepCopyObj ? target[k] : clone(target[k], circularRefs));\n            let right = (deepCopyMixin ? clone(targetMixValue, circularRefs) : targetMixValue);\n            if (arrayMergeMode === \"joinRespectOrder\") {\n              target[k] = mergeArraysSmart(left, right);\n            } else {\n              if (arrayMergeMode === \"joinMissing\") {\n                right = right.filter(v => !left.includes(v));\n              }\n              target[k] = [ ...left, ...right ];\n            }\n          } else {\n            // recursive merge\n            if (!deepCopyObj) {\n              target[k] = shallowCopy(target[k]);\n            }\n            _process([...path, mk], targetMixValue, target[k], {\n              isMixingArray: expectedType === \"array\",\n              isMixingRealArray: expectedType === \"array\" && !targetMix[mk]?.[$type],\n            });\n          }\n        }\n      } else {\n        const needDelete = targetMixValue === undefined && !isMixingRealArray && !isMixValueExplicit;\n        const valueExists = (k in target);\n        if (needDelete) {\n          if (valueExists) {\n            newObjChanged = true;\n            if (Array.isArray(target)) {\n              target.splice(k, 1);\n              indexDelta--;\n            } else {\n              delete target[k];\n            }\n          }\n        } else {\n          newObjChanged = true;\n          target[k] = targetMixValue;\n        }\n      }\n    }\n  };\n\n  _process([], mixin, newObj);\n\n  return newObjChanged ? newObj : obj;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport const isImmutableList = (v) => {\n  return isImmutable(v) && Immutable.isList(v); // Immutable.isIndexed(v)\n};\n\nexport function toImmutableList(v) {\n  return (isImmutableList(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prevs = orig.slice(0, i);\n        const after = [...prevs].reverse().find(([_cop, ci]) => ci != -1);\n        const prev = prevs[prevs.length - 1];\n        const before = next.find(([_cop, ci]) => ci != -1);\n        const isAfterDirectly = after && after === prevs[prevs.length-1];\n        const isBeforeDirectly = before && next === next[0];\n        if (isAfterDirectly) {\n          return [op, \"after\", after[0]];\n        } else if (isBeforeDirectly) {\n          return [op, \"before\", before[0]];\n        } else if (after) {\n          if (prev) {\n            return [op, \"after\", prev[0]];\n          }\n          return [op, \"after\", after[0]];\n        } else if (before) {\n          return [op, \"before\", before[0]];\n        } else {\n          return [op, \"append\", null];\n        }\n      } else {\n        // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) === -1) {\n        if (ind > -1) {\n          // insert after or before\n          const offset = (rel === \"after\" ? 1 : 0);\n          acc.splice( ind + offset, 0, newOp );\n        } else {\n          // insert to end or start\n          acc.splice( (rel === \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev();\n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig,\n        fieldKey\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    // should not be possible\n    // if (field._isFuncArg) {\n    //   // it's func arg\n    //   return null;\n    // }\n    // if (field._isFunc) {\n    //   // it's field func\n    //   return \"func\";\n    // }\n    if (!field.func && field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type && !!field.widgets) {\n      // it's already a config\n      // but don't mess up with obj from `getFuncSignature`, it has `type` but no `widgets` and other keys !\n      return field;\n    }\n    if (field._isFuncArg) {\n      // it's func arg\n      return getFuncArgConfig(config, field._funcKey, field._argKey);\n    }\n    if (field._isFunc) {\n      // it's a func\n      return getFuncConfig(config, field._funcKey);\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's a func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupField = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupField, config);\n  const parentField = parentRuleGroupField ? getFieldRawConfig(config, parentRuleGroupField) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport function _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig, operator).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig, operator).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition, operator = null) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  let isOtherType = false;\n  if (operator) {\n    const opConfig = config.operators[operator];\n    if (opConfig?.valueTypes) {\n      // Important: for \"select\" field and \"select_any_in\" op valueTypes are [\"multiselect\"]\n      fieldType = opConfig.valueTypes[0];\n      isOtherType = true;\n    }\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg || isOtherType ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition, operator);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n","import Immutable, { fromJS } from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getFieldConfig} from \"./configUtils\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, immutableToJs, isImmutable,\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children?.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {field, path}[] ordered by closest\n */\nexport const getAncestorRuleGroups = (tree, path) => {\n  const parentRuleGroups = path\n    .map((_id, i) => path.take(i+1))\n    .reverse()\n    .toJS()\n    .map(path => ({ item: getItemByPath(tree, path), path }))\n    .filter(({ item }) => item?.get(\"type\") === \"rule_group\");\n  if (parentRuleGroups.length) {\n    return parentRuleGroups.map(({ item, path }) => ({\n      path,\n      field: item.get(\"properties\").get(\"field\"),\n    }));\n  }\n  return [];\n};\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree, config) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, atomicLev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const closestRuleGroupId = [...path].reverse().find(id => items[id].type == \"rule_group\");\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldConfig = field && config && getFieldConfig(config, field);\n    const canRegroup = fieldConfig ? fieldConfig?.canRegroup !== false : undefined;\n    const maxNesting = fieldConfig?.maxNesting;\n    const closestRuleGroupCanRegroup = items?.[closestRuleGroupId]?.canRegroup;\n    const closestRuleGroupMaxNesting = items?.[closestRuleGroupId]?.maxNesting;\n    const closestRuleGroupLev = items?.[closestRuleGroupId]?.lev;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n    const nextAtomicLev = insideRuleGroup || isRuleGroup ? atomicLev : atomicLev + 1;\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      closestRuleGroupId,\n      closestRuleGroupLev,\n      closestRuleGroupMaxNesting,\n      closestRuleGroupCanRegroup,\n      maxNesting,\n      canRegroup,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      atomicLev, // same as lev, but rules inside rule_group retains same number\n      nextAtomicLev,\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      parentType: parentId ? items[parentId].type : null,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, nextAtomicLev,\n            currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    cnt++;\n    if (type == \"rule_group\" && lev > 0) {\n      //tip: rules in rule-group can be reordered only inside\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\" && lev > 0) {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import Immutable from \"immutable\";\nimport {getFieldConfig, getFieldParts, getFirstField, getOperatorConfig, getFirstOperator} from \"./configUtils\";\nimport { isImmutable, isImmutableList } from \"./stuff\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n\n// @deprecated Use defaultGroupConjunction\nexport const defaultConjunction = (config) => defaultGroupConjunction(config);\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultGroupConjunction = (config, groupFieldConfig = null) => {\n  groupFieldConfig = getFieldConfig(config, groupFieldConfig); // if `groupFieldConfig` is field name, not config\n  const conjs = groupFieldConfig?.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  // todo: config.settings.defaultGroupConjunction is deprecated, defaultConjunction should be used instead\n  return groupFieldConfig?.defaultConjunction || config.settings.defaultConjunction || config.settings.defaultGroupConjunction || conjs[0];\n};\n\nexport const defaultGroupProperties = (config, groupFieldConfig = null) => {\n  return new Immutable.Map({\n    conjunction: defaultGroupConjunction(config, groupFieldConfig),\n    not: false\n  });\n};\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupField = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupField ? defaultField : getDefaultSubField(config, parentRuleGroupField))\n    || canGetFirst && getFirstField(config, parentRuleGroupField)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupField = null) => {\n  if (!parentRuleGroupField)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupField);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupField), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutableList(el))\n    return el; // already Immutable list\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutableList(arr))\n    return arr; // already Immutable list\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, _getFromConfigCache, _saveToConfigCache, _getWidgetsAndSrcsForFieldOp, filterValueSourcesForField,\n} from \"./configUtils\";\nimport {isObject} from \"./stuff\";\nimport last from \"lodash/last\";\n\n\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\n\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n// item - Immutable\nexport const getOneChildOrDescendant = (item) => {\n  const children = item.get(\"children1\");\n  if (children?.size == 1) {\n    const child = children.first();\n    const childType = child.get(\"type\");\n    if (childType === \"group\") {\n      return getOneChildOrDescendant(child);\n    }\n    return child;\n  }\n  return null;\n};\n\n\n/////  Func utils\n\n\nexport const getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\nexport const setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","export const settings = {\n  reverseOperatorsForNot: false,\n  canShortMongoQuery: true,\n  fixJsonLogicDateCompareOp: false, // todo: change to true in next minor/major version\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  exportPreserveGroups: false,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultConjunction: \"AND\",\n  // todo: deprecated, remove this in favour of defaultConjunction\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  addSubGroupLabel: \"Add sub group\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n  loadMoreLabel: \"Load more...\",\n  loadingMoreLabel: \"Loading more...\",\n  typeToSearchLabel: \"Type to search\",\n  loadingLabel: \"Loading...\",\n  notFoundLabel: \"Not found\",\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nexport function addJsonLogicOperation(name, op, jl = JL) {\n  return jl.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  //\n  // string\n  //\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  //\n  // date / datetime\n  //\n  \"date==\": (a, b) => {\n    if (a == null || b == null) {\n      return false;\n    }\n    const dateA = moment(a).startOf(\"day\");\n    const dateB = moment(b).startOf(\"day\");\n    return dateA.isSame(dateB); \n  },\n  \"date!=\": (a, b) => { return !customJsonLogicOperations[\"date==\"](a, b); },\n  \"datetime==\": (a, b) => {\n    if (a == null || b == null) {\n      return false;\n    }\n    const dateA = moment(a);\n    const dateB = moment(b);\n    return dateA.isSame(dateB); \n  },\n  \"datetime!=\": (a, b) => { return !customJsonLogicOperations[\"datetime==\"](a, b); },\n  now: () => new Date(),\n  today: () => {\n    const start = moment().startOf(\"day\");\n    const y = start.year();\n    const m = start.month();\n    const d = start.date();\n    // tip: we use UTC to return same result as eg. new Date(\"2025-05-16\")\n    const startUtc = moment.utc([y, m, d]);\n    return startUtc.toDate();\n  },\n  start_of_today: () => { return moment().startOf(\"day\").toDate(); },\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  datetime_add: (datetime, val, dim) => { return moment(datetime).add(val, dim).toDate(); },\n  datetime_truncate: (datetime, dim) => { return moment(datetime).startOf(dim).toDate(); },\n};\n\nexport function addRequiredJsonLogicOperations(jl = JL) {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k], jl);\n  }\n}\n\n/**\n * @deprecated\n */\nexport const jsonLogicFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => part?.value ?? part)\n      .filter(r => r != undefined);\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * @deprecated\n */\nexport const jsonLogicImportConcat = (val) => {\n  if (val == undefined)\n    return undefined;\n  const errors = [];\n  const parts = Array.isArray(val) ? val : [val];\n  const res = parts.filter(v => v != undefined).map(v => {\n    return {\n      type: \"property\", \n      value: val\n    };\n  });\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"));\n  }\n  return res;\n};","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst dateDimListValues = {\n  day: \"day\",\n  week: \"week\",\n  month: \"month\",\n  year: \"year\",\n};\nconst dateDimDefault = \"day\";\nconst datetimeDimListValues = {\n  hour: \"hour\",\n  minute: \"minute\",\n  second: \"second\",\n  ...dateDimListValues,\n};\nconst datetimeDimDefault = \"day\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  // jsonLogic: \"now\",\n  jsonLogic: () => {\n    return {now: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"now\"]) {\n      return [];\n    }\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  sqlFunc: \"NOW\",\n  mongoFormatFunc: function () {\n    return {\n      \"$toDate\": \"$$NOW\"\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n    //     \"format\": \"%Y-%m-%d %H:%M:%S\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"NOW\",\n};\n\n// todo: add option like `resolveWithValueOnExport: false` for NOW, TODAY, START_OF_TODAY (issue #1234) ???\n\nconst TODAY = {\n  label: \"Today\",\n  returnType: \"date\",\n  //jsonLogic: \"today\",\n  jsonLogicCustomOps: {\n    today: {},\n  },\n  jsonLogic: () => {\n    return {today: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"today\"]) {\n      return [];\n    }\n  },\n  spelFunc: \"T(java.time.LocalDate).now()\",\n  sqlFormatFunc: () => \"CURDATE()\",\n  sqlFunc: \"CURDATE\",\n  mongoFormatFunc: function () {\n    return {\n      \"$dateTrunc\": {\n        // or \"date\": \"$$NOW\",\n        \"date\": { \"$toDate\": \"$$NOW\" },\n        \"unit\": \"day\"\n      }\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD\"),\n    //     \"format\": \"%Y-%m-%d\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"TODAY\",\n};\n\nconst START_OF_TODAY = {\n  label: \"Start of today\",\n  returnType: \"datetime\",\n  jsonLogicCustomOps: {\n    start_of_today: {},\n  },\n  // jsonLogic: \"start_of_today\",\n  jsonLogic: () => {\n    return {start_of_today: []};\n  },\n  jsonLogicImport: (v) => {\n    if (v[\"start_of_today\"]) {\n      return [];\n    }\n  },\n  spelFunc: \"T(java.time.LocalDateTime).now().truncatedTo(T(java.time.temporal.ChronoUnit).DAYS)\",\n  spelImport: (spel) => {\n    // spel = {\n    //   \"type\": \"!func\",\n    //   \"methodName\": \"truncatedTo\",\n    //   \"args\": [\n    //     {\n    //       \"type\": \"compound\",\n    //       \"children\": [\n    //         { \"type\": \"!type\", \"cls\": [ \"java\", \"time\", \"temporal\", \"ChronoUnit\" ] },\n    //         { \"type\": \"property\", \"val\": \"DAYS\" }\n    //       ]\n    //     }\n    //   ],\n    //   \"obj\": {\n    //     \"type\": \"!func\",\n    //     \"methodName\": \"now\",\n    //     \"obj\": {\n    //       \"type\": \"!type\",\n    //       \"cls\": [ \"java\", \"time\", \"LocalDateTime\" ]\n    //     }\n    //   }\n    // }\n    const { obj, args } = spel;\n    const isTruncate = spel?.type === \"!func\" && spel?.methodName === \"truncatedTo\";\n    const isObjNow = obj?.methodName === \"now\" && obj?.obj?.cls?.join(\".\") === \"java.time.LocalDateTime\";\n    const argsLength = args?.length || 0;\n    const oneArg = args?.[0];\n    const oneArgType = oneArg?.children?.[0];\n    const oneArgProperty = oneArg?.children?.[1];\n    const oneArgCls = oneArgType?.type === \"!type\" && oneArgType?.cls?.join(\".\");\n    const oneArgConst = oneArgProperty?.type === \"property\" && oneArgProperty?.val;\n    const isArgDays = argsLength === 1 && oneArg.type === \"compound\" && oneArgCls === \"java.time.temporal.ChronoUnit\" && oneArgConst === \"DAYS\";\n    if (isObjNow && isTruncate && isArgDays) {\n      return {};\n    }\n  },\n  sqlFormatFunc: () => \"DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00')\",\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if (sqlObj?.func === \"DATE_FORMAT\" && sqlObj.children?.length === 2) {\n      const [date, format] = sqlObj.children;\n      if (format?.value == \"%Y-%m-%d 00:00:00\" && date?.func == \"NOW\") {\n        return {\n          args: {}\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function () {\n    return {\n      \"$dateTrunc\": {\n        \"date\": { \"$toDate\": \"$$NOW\" },\n        \"unit\": \"day\"\n      }\n    };\n    // return {\n    //   \"$dateFromString\": {\n    //     \"dateString\": this.utils.moment(new Date()).format(\"YYYY-MM-DD\"),\n    //     \"format\": \"%Y-%m-%d\"\n    //   }\n    // };\n  },\n  formatFunc: () => \"START_OF_TODAY\",\n};\n\nconst TRUNCATE_DATETIME = {\n  label: \"Truncate\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"to\"],\n  jsonLogicCustomOps: {\n    datetime_truncate: {},\n  },\n  jsonLogic: ({date, dim}) => ({\n    \"datetime_truncate\": [\n      date,\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    if (v[\"datetime_truncate\"]) {\n      const date = v[\"datetime_truncate\"][0];\n      const dim = v[\"datetime_truncate\"][1];\n      return [date, dim];\n    }\n  },\n  spelFormatFunc: ({date, dim}) => {\n    const dimPluralUppercase = (dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\").toUpperCase();\n    return `${date}.truncatedTo(T(java.time.temporal.ChronoUnit).${dimPluralUppercase})`;\n  },\n  spelImport: (spel) => {\n    // spel = {\n    //   \"type\": \"!func\",\n    //   \"methodName\": \"truncatedTo\",\n    //   \"args\": [\n    //     {\n    //       \"type\": \"compound\",\n    //       \"children\": [\n    //         { \"type\": \"!type\", \"cls\": [ \"java\", \"time\", \"temporal\", \"ChronoUnit\" ] },\n    //         { \"type\": \"property\", \"val\": \"DAYS\" }\n    //       ]\n    //     }\n    //   ],\n    // }\n    const { args } = spel;\n    const isTruncate = spel?.type === \"!func\" && spel?.methodName === \"truncatedTo\";\n    const argsLength = args?.length || 0;\n    const oneArg = args?.[0];\n    const oneArgType = oneArg?.children?.[0];\n    const oneArgProperty = oneArg?.children?.[1];\n    const oneArgCls = oneArgType?.type === \"!type\" && oneArgType?.cls?.join(\".\");\n    const oneArgConst = oneArgProperty?.type === \"property\" && oneArgProperty?.val;\n    const isArgDays = argsLength === 1 && oneArg.type === \"compound\" && oneArgCls === \"java.time.temporal.ChronoUnit\" && oneArgConst;\n    const dim = oneArgConst.toLowerCase().substring(0, oneArgConst.length - 1); \n    if (isTruncate && isArgDays) {\n      return {\n        date: spel.obj,\n        dim: {type: \"string\", val: dim},\n      };\n    }\n  },\n  // MySQL\n  sqlFormatFunc: ({date, dim}, sqlDialect) => {\n    if (!sqlDialect || sqlDialect === \"MySQL\") {\n      dim = dim.replace(/^'|'$/g, \"\");\n      switch (dim) {\n      case \"second\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:%i:%s')`;\n      case \"minute\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:%i:00')`;\n      case \"hour\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d %H:00:00')`;\n      case \"day\":\n        return `DATE_FORMAT(${date}, '%Y-%m-%d 00:00:00')`;\n      case \"week\":\n        return `DATE_SUB(DATE_FORMAT(${date}, '%Y-%m-%d 00:00:00'), INTERVAL WEEKDAY(${date}) DAY)`;\n      case \"month\":\n        return `DATE_FORMAT(${date}, '%Y-%m-01 00:00:00')`;\n      case \"year\":\n        return `DATE_FORMAT(${date}, '%Y-01-01 00:00:00')`;\n      }\n    } else if (sqlDialect === \"PostgreSQL\") {\n      return `date_trunc(${dim}, ${date})`;\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if (!sqlDialect || sqlDialect === \"MySQL\") {\n      if (sqlObj?.func === \"DATE_FORMAT\" && sqlObj.children?.length === 2) {\n        const [date, format] = sqlObj.children;\n        let dim;\n        switch (format?.value) {\n        case \"%Y-%m-%d %H:%i:%s\":\n          dim = \"second\";\n          break;\n        case \"%Y-%m-%d %H:%i:00\":\n          dim = \"minute\";\n          break;\n        case \"%Y-%m-%d %H:00:00\":\n          dim = \"hour\";\n          break;\n        case \"%Y-%m-%d 00:00:00\":\n          dim = \"day\";\n          break;\n        case \"%Y-%m-01 00:00:00\":\n          dim = \"month\";\n          break;\n        case \"%Y-01-01 00:00:00\":\n          dim = \"year\";\n        }\n        if (dim) {\n          return {\n            args: {\n              date,\n              dim\n            }\n          };\n        }\n      } else if (sqlObj?.func === \"DATE_SUB\" && sqlObj.children?.length === 2) {\n        const [dateFormat, interval] = sqlObj.children;\n        const isFormat = dateFormat?.func === \"DATE_FORMAT\" && dateFormat.children?.length === 2;\n        const isIntervalDay = interval._type == \"interval\" && interval.unit === \"day\";\n        if (isFormat && isIntervalDay) {\n          const [date, format] = dateFormat.children;\n          if (format?.value === \"%Y-%m-%d 00:00:00\") {\n            return {\n              args: {\n                date,\n                dim: \"week\"\n              }\n            };\n          }\n        }\n      }\n      return undefined;\n    } else if (sqlDialect === \"PostgreSQL\") {\n      if (sqlObj?.func === \"date_trunc\" && sqlObj.children?.length === 2) {\n        const [dim, date] = sqlObj.children;\n        return {\n          args: {\n            date,\n            dim: dim.value,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function ({date, dim}) {\n    return {\n      \"$dateTrunc\": {\n        \"date\": date,\n        \"unit\": dim,\n      }\n    };\n  },\n  formatFunc: ({date, dim}) => (`TRUNCATE ${date} TO ${dim}`),\n  args: {\n    date: {\n      label: \"Datetime\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"value\", \"field\", \"func\"],\n      escapeForFormat: true,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: datetimeDimDefault,\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: datetimeDimListValues,\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if (Object.keys(datetimeDimListValues).includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"datetime_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    if (v[\"datetime_add\"]) {\n      const date = v[\"datetime_add\"][0];\n      const val = Math.abs(v[\"datetime_add\"][1]);\n      const op = v[\"datetime_add\"][1] >= 0 ? \"plus\" : \"minus\";\n      const dim = v[\"datetime_add\"][2];\n      return [date, op, val, dim];\n    }\n  },\n  jsonLogicCustomOps: {\n    datetime_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"DATE_ADD\", \"DATE_SUB\"].includes(sqlObj?.func) && sqlObj.children?.length === 2) {\n      const [date, interval] = sqlObj.children;\n      if (interval._type == \"interval\") {\n        return {\n          args: {\n            date,\n            op: sqlObj?.func === \"DATE_ADD\" ? \"plus\" : \"minus\",\n            val: interval.value,\n            dim: interval.unit,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: function ({date, op, val, dim}) {\n    return {\n      \"$dateAdd\": {\n        \"startDate\": date,\n        \"unit\": dim,\n        \"amount\": val * (op == \"minus\" ? -1 : +1),\n      }\n    };\n  },\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Datetime\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"value\", \"field\", \"func\"],\n      escapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      escapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      escapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: datetimeDimDefault,\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: datetimeDimListValues,\n      },\n      escapeForFormat: false,\n    },\n  }\n};\n\n\nconst RELATIVE_DATE = {\n  ...RELATIVE_DATETIME,\n  label: \"Relative\",\n  returnType: \"date\",\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  args: {\n    date: {\n      ...RELATIVE_DATETIME.args.date,\n      label: \"Date\",\n      type: \"date\",\n      defaultValue: {func: \"TODAY\", args: []},\n    },\n    op: {...RELATIVE_DATETIME.args.op},\n    val: {...RELATIVE_DATETIME.args.val},\n    dim: {\n      ...RELATIVE_DATETIME.args.dim,\n      defaultValue: dateDimDefault,\n      fieldSettings: {\n        listValues: dateDimListValues,\n      },\n    },\n  },\n};\n\n// todo: add DATEDIFF (issue #142)\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  sqlFunc: \"LOWER\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  sqlFunc: \"UPPER\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  sqlImport: function (sqlObj, _, sqlDialect) {\n    if ([\"+\"].includes(sqlObj?.operator) && sqlObj.children?.length === 2) {\n      const [left, bias] = sqlObj.children;\n      if ([\"*\"].includes(left?.operator) && left.children?.length === 2) {\n        const [coef, val] = left.children;\n        return {\n          args: {\n            coef,\n            val,\n            bias,\n          }\n        };\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  TODAY,\n  START_OF_TODAY,\n  RELATIVE_DATETIME,\n  TRUNCATE_DATETIME,\n  RELATIVE_DATE,\n  LINEAR_REGRESSION,\n};\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual, isObject, hasSafeOwnProperty} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogicUtils\";\nimport * as BasicFuncs from \"../config/funcs\";\nimport { getFieldRawConfig, configKeys } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"searchOrValues\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\", \"sqlDialect\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"wgtDef\", \"sqlDialect\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\", \"wgtDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\", \"expectedType\", \"settings\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  sqlImport: { type: \"f\", args: [\"sqlObj\", \"_\", \"sqlDialect\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\", \"sqlDialect\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (hasSafeOwnProperty(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import pick from \"lodash/pick\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const areConfigsSame = (config1, config2) => {\n  return configKeys.map(k => config1[k] === config2[k]).filter(v => !v).length === 0;\n};\n\nexport const getCommonMemo = (extendConfig) => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n      extendConfig,\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n  extendConfig: undefined, // should be passed!\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = meta.extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    // Note: because of desctructing, strict find would not be possible\n    //  (see commented line in `findExtended`)\n    //  (see issue #1187)\n    configStore.set({...config}, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = areConfigsSame(extConfig, findConfig);\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nconst widgetPropsForDeepMerge = [\"customProps\"];\nconst opPropsForDeepMerge = [\"options\"]; // tip: options for proximity\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo(extendConfig);\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    if (fieldConfig.type !== \"!struct\") {\n      // console.warn(`No type config for ${type}`);\n      fieldConfig.disabled = true;\n    }\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  let excludeOperatorsForType = (typeConfig.excludeOperators || []);\n  if (fieldConfig.operators) {\n    // `operators` from field can override `excludeOperators` from type, see `prox1` at examples\n    excludeOperatorsForType = excludeOperatorsForType.filter(op => !fieldConfig.operators.includes(op));\n  }\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    fieldWidgetConfig.widgetProps = {\n      ...(typeWidgetConfig.widgetProps || {}),\n      ...(widget === fieldConfig.mainWidget && fieldConfig.mainWidgetProps || {}),\n      ...(fieldWidgetConfig.widgetProps || {}),\n    };\n    // merge some object-type props (like `customProps`) deeply\n    for (const prop of widgetPropsForDeepMerge) {\n      if (fieldWidgetConfig.widgetProps[prop]) {\n        fieldWidgetConfig.widgetProps[prop] = {\n          ...(config.widgets[widget]?.[prop] || {}),\n          ...(typeWidgetConfig.widgetProps?.[prop] || {}),\n          ...(widget === fieldConfig.mainWidget && fieldConfig.mainWidgetProps?.[prop] || {}),\n          ...(fieldWidgetConfig.widgetProps?.[prop] || {}),\n        };\n      }\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n        // merge some object-type props (like `options` for `complexity` op) deeply\n        for (const opProp of opPropsForDeepMerge) {\n          if (opProps[op][opProp]) {\n            opProps[op][opProp] = {\n              ...(config.operators?.[op]?.[opProp] || {}),\n              ...(typeWidgetConfig.opProps?.[op]?.[opProp] || {}),\n              ...(fieldWidgetConfig.opProps?.[op]?.[opProp] || {}),\n            };\n          }\n        }\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp\n} from \"../utils/configUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\nimport {formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, false, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, _not, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, _not, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta, _not);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, _not, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, _not = false, isRoot = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  const fieldDefinition = getFieldConfig(config, field);\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition?.jsonLogicConj || conjunction.toLowerCase();\n  const origNot = !!properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  let groupOperator = properties.get(\"operator\");\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  // Tip: for demo app isGroup0 is true for \"Results\" and \"Cars\" with group op in \"some\", \"all\", \"none\"\n  // If isGroup0 is false, we should use \"reduce\"\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDef?.cardinality == 0);\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let revChildren = false;\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, field);\n  const groupOpNeedsReverse = !groupOperatorDef?.jsonLogic && !!reversedGroupOpDef?.jsonLogic;\n  const groupOpCanReverse = !!reversedGroupOpDef?.jsonLogic;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const canRevChildren = !!config.settings.reverseOperatorsForNot\n    && (!isRuleGroup && not && oneChildType === \"rule\" || filterNot && children?.size === 1);\n  if (canRevChildren) {\n    if (isRuleGroupWithChildren) {\n      filterNot = !filterNot;\n    } else {\n      not = !not;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!config.settings.reverseOperatorsForNot || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, revChildren, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  // allows for unnecessary (ie. empty or only one rule) groups to be exported\n  const shouldPreserveGroups = !!config.settings.exportPreserveGroups;\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size && !shouldPreserveGroups)\n      return undefined;\n  }\n\n  // I any of these conditions are true then we cannot remove group\n  let preserveSingleRuleGroup = isRoot || shouldPreserveGroups || list.size != 1;\n\n  // If preserveSingleRuleGroup is already true then there is no point to even check also if its not a negation group \n  // then this does not matter\n  if (!preserveSingleRuleGroup && origNot && !revChildren) {\n    // We check all children even thuogh there should be only one in case the formatting of one of them failed.\n    // From config we see if exclamation is part of reverse operator definition and if so then we cannot ever remove a negation single \n    // rule group because then this combination would be identical to that reverse operator. see issue #1084\n    preserveSingleRuleGroup = children.some((currentChild) => {\n      const op = currentChild.get(\"properties\")?.get(\"operator\");\n      const revOp  = config[\"operators\"]?.[op]?.reversedOp;\n      return config.operators?.[revOp]?._jsonLogicIsExclamationOp ?? false;\n    });\n  }\n  \n  let filterQuery = {};\n  if (preserveSingleRuleGroup)\n    filterQuery[conj] = list.toList().toJS();\n  else\n    filterQuery = list.first();\n\n  // reverse filter\n  if (filterNot) {\n    filterQuery = { \"!\": filterQuery };\n  }\n\n  let resultQuery = filterQuery;\n\n  // rule_group (issue #246)\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    let reduceQuery;\n    if (!isGroup0) {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            filterQuery\n          ]\n        };\n      reduceQuery = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n    }\n    const formattedLhs = reduceQuery ?? formattedField;\n    const optionsMap = new Map({\n      having: filterQuery,\n      reduce: reduceQuery,\n      groupField: field,\n      groupFieldFormatted: formattedField,\n    });\n    // if groupOperator defines its own jsonLogic function, then we should use it (issue #1241)\n    if (typeof groupOperatorDef?.jsonLogic === \"function\") {\n      // we should use optionsMap here\n      resultQuery = formatLogic(config, properties, formattedLhs, formattedValue, groupOperator, optionsMap, fieldDefinition);\n    } else {\n      if (isGroup0) {\n        // config.settings.groupOperators\n        const op = groupOperator || \"some\";\n        resultQuery = {\n          [op]: [\n            formattedField,\n            filterQuery\n          ]\n        };\n      } else {\n        resultQuery = formatLogic(config, properties, formattedLhs, formattedValue, groupOperator, null, fieldDefinition);\n      }\n    }\n  }\n\n  // reverse\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, _not = false, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field);\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n\n  // check op\n  if (!operatorDefinition?.jsonLogic && !revOperatorDefinition?.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.jsonLogic && !!revOperatorDefinition?.jsonLogic;\n  const opCanReverse = !!revOperatorDefinition?.jsonLogic;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = not && canRev || opNeedsReverse;\n  if (needRev) {\n    not = !not;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, not);\n};\n\nconst formatSwitch = (item, config, meta, _not = false) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, _not, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, _not = false, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, _not, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field);\n  const operatorDefinition = getOperatorConfig(config, operator, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue, expectedType) => {\n  let formattedOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formattedOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formattedOp))\n      return { [formattedOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formattedOp]: formattedField };\n    // else if (cardinality == 1 && eqOps.includes(formattedOp) && [\"date\", \"datetime\"].includes(expectedType))\n    //   return { [expectedType+formattedOp]: [formattedField, formattedValue] };\n    else if (cardinality == 1)\n      return { [formattedOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formattedOp))\n      return { [formattedOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formattedOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const firstValueType = properties.get(\"valueType\")?.get(0);\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const expectedType = fieldDefinition?.type ?? firstValueType;\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue, expectedType);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n    expectedType,\n    config.settings,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, opNot,  field, _op, value, not, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  let neg = not ^ opNot;\n\n  if (useExpr && mop == \"$nin\") {\n    // There is only `$in` aggregation operator but not `$nin` (`$nin` is only a query operator)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/in/\n    neg = !neg;\n    mop = \"$in\";\n  }\n\n  if (useExpr && mop == \"$regex\") {\n    // https://stackoverflow.com/questions/35750920/regex-as-filter-in-projection\n    let e = {\n      \"$regexFind\": {\n        input: $field,\n        regex: mv\n      }\n    };\n    if (neg) {\n      e = { \"$not\": e };\n    }\n    return e;\n  }\n\n  if (neg) {\n    // if (!useExpr && (!mop || mop == \"$eq\"))\n    //   return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, opNot,  field, _op, values, not, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not ^ opNot) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nexport const mongoFieldEscape = (input) => {\n  return input.replace(/\\$/g, \"\\uFF04\");\n};\n\nexport const mongoFieldUnescape = (input) => {\n  return input.replace(/\\uFF04/g, \"$\");\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit, isObject} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {getFieldPathLabels, formatFieldName, completeValue, getOneChildOrDescendant} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { mongoFieldEscape } from \"../utils/mongoUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const origNot = !!properties.get(\"not\");\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator, exportPreserveGroups, reverseOperatorsForNot} = config.settings;\n  const sep = fieldSeparator;\n\n  const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  const isInsideRuleGroup = !!parentRuleGroup;\n  const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n  const isInsideRuleGroupArray = isInsideRuleGroup && parentRuleGroup.get(\"properties\").get(\"mode\") == \"array\";\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  let groupOperator = isRuleGroup ? properties.get(\"operator\") : null;\n  let groupOperatorDef = groupOperator && getOperatorConfig(config, groupOperator, groupField) || null;\n  const groupOperatorCardinality = groupOperator ? groupOperatorDef?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, parentRuleGroupField);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const isRuleGroupWithChildren = isRuleGroup && children?.size > 0;\n  const isRuleGroupWithoutChildren = isRuleGroup && !children?.size;\n\n  // rev\n  let revChildren = false;\n  let not = origNot;\n  let filterNot = false;\n  if (isRuleGroupWithChildren) {\n    // for rule_group `not` there should be 2 NOTs: from properties (for children) and from parent group (_not)\n    filterNot = origNot;\n    not = _not;\n  } else {\n    if (_not) {\n      not = !not;\n    }\n  }\n  let reversedGroupOp = groupOperatorDef?.reversedOp;\n  let reversedGroupOpDef = getOperatorConfig(config, reversedGroupOp, groupField);\n  const groupOpNeedsReverse = !groupOperatorDef?.mongoFormatOp && !!reversedGroupOpDef?.mongoFormatOp;\n  const groupOpCanReverse = !!reversedGroupOpDef?.mongoFormatOp;\n  const oneChildType = getOneChildOrDescendant(item)?.get(\"type\");\n  const isSimpleGroupWithOneChild = !isRuleGroup && oneChildType === \"rule\";\n  const canRevChildren = (not && isSimpleGroupWithOneChild || filterNot && children?.size === 1) && !exportPreserveGroups; // && !!reverseOperatorsForNot;\n  if (canRevChildren) {\n    if (isSimpleGroupWithOneChild) {\n      not = !not;\n    } else {\n      filterNot = !filterNot;\n    }\n    revChildren = true;\n  }\n  let canRevGroupOp = not && isRuleGroup && groupOpCanReverse && (!!reverseOperatorsForNot && !exportPreserveGroups || groupOpNeedsReverse);\n  if (canRevGroupOp) {\n    not = !not;\n    [groupOperator, reversedGroupOp] = [reversedGroupOp, groupOperator];\n    [groupOperatorDef, reversedGroupOpDef] = [reversedGroupOpDef, groupOperatorDef];\n  }\n\n  // conj\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  if (!conjunctionDefinition)\n    return undefined;\n  // rev conj\n  const reversedConj = conjunctionDefinition.reversedConj;\n  const canRev = not && conjunction?.toLowerCase() === \"or\" && reversedConj && !isRuleGroup\n     && !!reverseOperatorsForNot && !exportPreserveGroups;\n  if (canRev) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n    not = !not;\n    revChildren = true;\n  }\n\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  // tip: can't use \"$expr\" inside \"$filter\".\"cond\" or inside \"$elemMatch\"\n  const canWrapExpr = !isRuleGroup && !isInsideRuleGroup;\n  const formatFieldNameFn = mode == \"array\" ? (f => `$$el${sep}${f}`) : _formatFieldName;\n\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, revChildren, canWrapExpr, formatFieldNameFn)\n    )\n    .filter((formattedChild) => typeof formattedChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size) {\n    return undefined;\n  }\n\n  let resultQuery;\n  let shortQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\") && !exportPreserveGroups;\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (resultQuery) {\n      shortQuery = true;\n    } else {\n      // can't be shorten\n      shortQuery = false;\n      resultQuery = { [mongoConj] : rules };\n    }\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + mongoFieldEscape(groupFieldName),\n            []\n          ]\n        }\n      };\n      if (filterNot && resultQuery) {\n        resultQuery = { \"$not\": resultQuery };\n        filterNot = false;\n      }\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + mongoFieldEscape(groupFieldName),\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      const notForRule = !exportPreserveGroups ? not : false;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, notForRule, false, (_f => filterQuery), totalQuery\n      );\n      if (notForRule) {\n        not = false;\n      }\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      // tip: $elemMatch can't have $not and $expr inside BUT can have $nor\n      resultQuery = { [mongoFieldEscape(groupFieldName)]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n\n  if (not) {\n    // tip: $nor can't be inside $filter.cond or $expr\n    if (isInsideRuleGroupArray) {\n      // inside $filter.cond\n      resultQuery = { \"$not\": resultQuery };\n    } else {\n      resultQuery = { \"$nor\": [ resultQuery ] };\n    }\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field);\n\n  // check op\n  let operatorDefinition = getOperatorConfig(config, operator, field);\n  let reversedOp = operatorDefinition?.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field);\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (!operatorDefinition?.mongoFormatOp && !revOperatorDefinition?.mongoFormatOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  // try reverse\n  let not = _not;\n  const opNeedsReverse = !operatorDefinition?.mongoFormatOp && !!revOperatorDefinition?.mongoFormatOp;\n  const opCanReverse = !!revOperatorDefinition?.mongoFormatOp;\n  let canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n  const needRev = canRev && not || opNeedsReverse;\n  let isRev = false;\n  if (needRev) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = !not;\n    isRev = true;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, parentRuleGroupField);\n  } else {\n    formattedField = formatFieldName(field, config, meta, parentRuleGroupField);\n    formattedField = mongoFieldEscape(formattedField);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentRuleGroupField, operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition?.mongoFormatOp;\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    not,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  // `mongoFormatOp` function SHOULD handle `not`\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    // if (not) {\n    //   ruleQuery = { \"$not\": ruleQuery };\n    // }\n    ruleQuery = { \"$expr\": ruleQuery };\n  } else {\n    // if (not) {\n    //   ruleQuery = { \"$nor\": [ ruleQuery ] };\n    // }\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...(fieldDef ? pick(fieldDef, [\"fieldSettings\", \"listValues\"]) : {}),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n    if (ret?.[\"$dateFromString\"]) {\n      // $dateFromString (or $toDate) is an aggregation operator only\n      useExpr = true;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + mongoFieldEscape(formattedField);\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\n// @deprecated\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// @deprecated\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\n// @deprecated Use dedicated utils instead\nexport { mongoEmptyValue } from \"./mongoUtils\";\nexport { spelEscape, spelFixList, spelFormatConcat, spelImportConcat } from \"./spelUtils\";\n\n// todo: move to sqlUtils\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val?.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.unescapeLike = (val, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  let res = val;\n  // unescape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/\\\\\\\\([%_])/g, \"$1\");\n  } else {\n    res = res.replace(/\\\\([%_])/g, \"$1\");\n  }\n  return res;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true, sqlDialect = undefined) => {\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  if (sqlDialect === \"BigQuery\") {\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/operators#like_operator\n    res = res.replace(/[%_\\\\]/g, \"\\\\\\\\$&\");\n  } else {\n    res = res.replace(/[%_]/g, \"\\\\$&\");\n  }\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nexport const wrapWithBrackets = (v) => {\n  if (v == undefined)\n    return v;\n  if (v?.[0] === \"(\" && v?.[v?.length - 1] === \")\") {\n    // already wrapped\n    return v;\n  }\n  return \"(\" + v + \")\";\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj.call(config.ctx, list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse.call(config.ctx, ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else if (currentValue == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const valFieldDefinition = valueSrc == \"field\" && getFieldConfig(config, currentValue) || {}; \n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        operator,\n        operatorDef,\n        valFieldDefinition,\n        config.settings.sqlDialect,\n      ];\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs,\n      config.settings.sqlDialect,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n  getFieldPartsConfigs,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/spelUtils\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\" && field;\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj.call(config.ctx, list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const {value: formattedField} = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType ?? fieldDef.type);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse.call(config.ctx, ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const {value: formattedValue, valueSrc, valueType} = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const {value: formattedField, valueSrc: _fieldSrc, valueType: fieldType} = formatLhs(meta, config, field, fieldSrc, parentField) ?? {};\n  if (formattedField === undefined)\n    return undefined;\n\n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType ?? fieldType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return {\n    value: formattedValue,\n    valueSrc: (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    valueType: (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  };\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    // formatField() returns type {value, valueSrc, valueType}\n    ret = formatField(meta, config, currentValue, parentField)?.value;\n  } else if (valueSrc === \"func\") {\n    // formatFunc() returns type {value, valueSrc, valueType}\n    ret = formatFunc(meta, config, currentValue, parentField, valueType)?.value;\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf?.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf?.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return {value: formattedField, valueSrc: \"field\", valueType: fieldDefinition?.type};\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null, valueType = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.escapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  // tip: returnType should equal valueType\n  return {value: ret, valueSrc: \"func\", valueType: funcConfig.returnType};\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, getWidgetForFieldOp,\n} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {\n  getFieldPathLabels, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (parents, item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(parents, item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  // const parentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\")?.slice(-1)?.pop();\n  // const isInsideRuleGroup = !!parentRuleGroup;\n  // const parentRuleGroupField = parentRuleGroup?.get(\"properties\").get(\"field\");\n  // const isInsideRuleGroupArray = isInsideRuleGroup && parentRuleGroup.get(\"properties\").get(\"mode\") == \"array\";\n  // // TIP: don't cut group for mode == 'struct'\n  // const realParentGroupField = isInsideRuleGroupArray && parentRuleGroupField;\n  const realParentGroupField = parentField;\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem([...parents, item], currentChild, config, meta, groupField ?? realParentGroupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj.call(config.ctx, list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(parents, item, config, meta, realParentGroupField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr.call(config.ctx, ...args);\n      if (isRev) {\n        ret = config.settings.formatReverse.call(config.ctx, ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (parents, item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse.call(config.ctx, ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else if (value == undefined) {\n    ret = undefined;\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      const doEscape = fieldDef?.escapeForFormat ?? true;\n      if (!doEscape) {\n        ret = value;\n      } else {\n        ret = fn.call(config.ctx, ...args);\n      }\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, undefined, undefined, defaultValueSrc, { forExport: true });\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldWidgetDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configExtend\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import Immutable, { Map } from \"immutable\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree, jsToImmutable} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport {\n  isJsonLogic, jsToImmutable,\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\n\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual} from \"../utils/stuff\";\nimport {getFieldConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts, getWidgetForFieldOp} from \"../utils/configUtils\";\nimport {extendConfig} from \"../utils/configExtend\";\nimport {loadTree} from \"./tree\";\nimport {defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport Immutable from \"immutable\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\n\n// constants\nconst jlFieldMarker = \"jlField\";\nconst jlRawFieldMarker = \"jlRawField\";\nconst jlHavingMarker = \"jlHavingMarker\";\n\nconst jlArgsMarker = new Proxy({\n  __name: \"jlArgs\",\n  __test: (v) => {\n    const m = v?.match?.(/jlArgs\\[(\\d+)\\]/);\n    if (m) {\n      return parseInt(m[1]);\n    }\n  },\n}, {\n  get: function(target, k) {\n    if (!isNaN(parseInt(k))) {\n      return \"jlArgs[\"+k+\"]\";\n    } else {\n      return target[k];\n    }\n  }\n});\n\nconst jlEqOps = [\"==\", \"!=\", \"datetime==\", \"datetime!=\", \"date==\", \"date!=\"];\nconst jlRangeOps = [\"<\", \"<=\", \">\", \">=\"];\nconst jlDualMeaningOps = [\"in\", \"!in\"]; // can be mapped to \"select_any_in\" or \"like\"\nconst multiselectOps = [\n  \"multiselect_equals\", \"multiselect_not_equals\",\n  \"multiselect_contains\", \"multiselect_not_contains\"\n];\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\", \"case_val\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  meta.errors = Array.from(new Set(meta.errors));\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  let combinationOperators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    const cardinality = getOpCardinality(opConfig);\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = opConfig.jsonLogic + \"/\" + cardinality;\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if (typeof opConfig.jsonLogic === \"function\") {\n      let template;\n      try {\n        template = opConfig.jsonLogic(jlFieldMarker, opKey, jlArgsMarker, opConfig, new Immutable.Map({\n          having: jlHavingMarker,\n          groupField: jlRawFieldMarker,\n          // reduce: undefined,\n          // groupFieldFormatted: undefined,\n        }));\n      } catch(e) {\n        console.warn(`Error while running JsonLogic template for op ${opKey}`, e);\n        continue;\n      }\n      \n      const opInTemplate = Object.keys(template)[0];\n      const isRevArgs = opConfig.jsonLogic2?.startsWith(\"#\");\n      // example: \"all-in/1\"\n      const newOp = opConfig.jsonLogic2?.replace(/^#/, \"\") ?? opInTemplate;\n      const ops = opConfig.jsonLogicOps ?? [newOp];\n      ops.map(op => {\n        const opk = op + \"/\" + cardinality;\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n\n      if (!combinationOperators[opKey])\n        combinationOperators[opKey] = {};\n      combinationOperators[opKey] = {\n        \"template\": template, \n        \"newOp\": newOp,\n        \"_jsonLogicIsExclamationOp\": !!opConfig._jsonLogicIsExclamationOp,\n        \"isRevArgs\": isRevArgs\n      };\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n    combinationOperators,\n  };\n};\n\n/**\n * This function checks a given jsonlogic object against a set of templates defined in 'conv'. \n * It determines if the jsonlogic object matches any of the specified templates.\n * \n * @param {*} jsonlogic The jsonlogic object to be matched against the templates.\n * @param {*} conv The object containing all potential templates and their associated logic for matching. \n * It is expected to have a 'combinationOperators' property that houses the templates.\n * @param {*} meta An object where any errors or metadata during the processing are stored. It's modified by reference.\n * @param {*} operatorsToCheck An optional array of operator keys that limits which operators in 'conv' are checked. \n * If null, all operators in 'conv' are considered.\n * @returns {Object|null} The response object containing the match result, and any relevant matched fields and \n * arguments if a match is found. Returns null if no match is found.\n */\nconst matchAgainstTemplates = (jsonlogic, conv, meta, operatorsToCheck = null) => {\n  let response;\n  if (conv?.combinationOperators) {\n    for (const [key, value] of Object.entries(conv.combinationOperators)) {\n      if ((operatorsToCheck == null || operatorsToCheck.includes(key))) {\n        const tempResponse = isTemplateMatch(value.template, jsonlogic);\n        // Found a match\n        if (tempResponse.match) {\n          if (!response) response = tempResponse;\n          // Templates should be spesific enough that only one match can be found. This should not happen\n          else {\n            meta.errors.push(`Operator matched against 2 templates: ${response.newOp} and ${key}`);\n          }\n          // New op that is used to represent operator that is combosed of multiple operators\n          response[\"newOp\"] = value.newOp;\n        }\n      }\n    }\n  }\n  // Returns undefined if no matches found\n  return response;\n};\n\n/**\n * This function recursively compares a jsonlogic object against a template to determine if they match structurally and content-wise.\n * It is used to support complex template matching where the template can include special markers indicating variable fields and arguments.\n *\n * @param {*} template The template object to match against, which can include special markers to denote fields and arguments.\n * @param {*} jsonlogic The jsonlogic object to test against the template.\n * @param {*} response An object to accumulate results such as whether a match is found, and to collect any fields or arguments identified \n * by the template markers. Default is initialized to a match state with empty fields and arguments.\n * @returns {Object} The updated response object after checking the current template level. It includes whether the current level \n * matches (match: true/false), any identified fields (jlField), and any arguments (jlArgs).\n */\nconst isTemplateMatch = (template, jsonlogic, response = {\"match\": true, \"jlField\": null, \"jlArgs\": [], \"jlHaving\": null}) => {\n  if (template == undefined || jsonlogic == undefined) {\n    response.match = false;\n    return response;    \n  }\n  // This lets us compare order easily\n  const tKeys = Object.keys(template);\n  const jKeys = Object.keys(jsonlogic);\n  if (tKeys.length !== jKeys.length) {\n    // Both have same length\n    response.match = false;\n    return response;      \n  }\n  response.vals = [];\n  for (let index = 0; index < tKeys.length; index++) {\n    const key = tKeys[index];\n    const value = template[key];\n    response.vals.push(jsonlogic[key]);\n    if (key !== jKeys[index]) { \n      // Checks that both have exact same key at exact same place. Kind of pointless for arrays but whatever\n      response.match = false;\n      return response;\n    }\n    const maybeArgIndex = jlArgsMarker.__test(value);\n    if (maybeArgIndex !== undefined) {\n      response.jlArgs[maybeArgIndex] = jsonlogic[key];\n    } else if (value === jlFieldMarker && isJsonLogic(jsonlogic[key])) {\n      // If jlFieldMarker is found in template AND it's field or func we take the value from corresponding place in jsonlogic\n      response.jlField = jsonlogic[key];\n    } else if (value === jlRawFieldMarker) {\n      response.jlField = {var: jsonlogic[key]};\n    } else if (value === jlArgsMarker) {\n      // If jlArgsMarker is found in template we take the value from corresponding place in jsonlogic\n      response.jlArgs.push(jsonlogic[key]);\n    } else if (value === jlHavingMarker) {\n      response.jlHaving = jsonlogic[key];\n    } else if (typeof value === \"object\" && value !== null || Array.isArray(value)) {\n      // Here we recurse thru objects and arrays of template until we have gone thru it completely\n      response = isTemplateMatch(value, jsonlogic[key], response);\n    } else if (value !== jsonlogic[key]) {\n      // This is for cases of {var: \"\"}, which should be only case in default config that leads here\n      response.match = false;\n      return response;\n    }\n  }\n  return response;\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  // If matchAgainstTemplates returns match then op is replaced with special `newOp` value (usually taken from jsonLogic2)\n  const match = matchAgainstTemplates(logic, conv, meta);\n  if (match) {\n    // We reset vals if match found\n    vals = [];\n    vals[0] = match.jlField;\n    if (match.jlHaving) {\n      vals.push(match.jlHaving);\n    }\n    match.jlArgs.forEach(arg => vals.push(arg));\n    // We reset op to new op that represents multiple jsonlogic operators\n    op = match.newOp;\n    if (jlDualMeaningOps.includes(op)) {\n      // use original order of args\n      vals = match.vals;\n    }\n  }\n  const isNot = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isNot) {\n    // apply not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    const errorsBefore = [...meta.errors];\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertSwitch(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    const errorsAfter = [...meta.errors];\n    if (ret == undefined && expectedTypes.includes(\"case_val\")) {\n      // last resort\n      meta.errors = errorsBefore;\n      ret = convertCaseVal(op, vals, conv, config, not, meta, parentField);\n      if (ret == undefined) {\n        meta.errors = errorsAfter;\n      }\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(\n        config.ctx, val,\n        {...widgetConfig, ...(fieldConfig?.fieldSettings ?? {})}\n      );\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  } else {\n    // number of seconds -> time string\n    if (fieldType === \"time\" && typeof val === \"number\") {\n      const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n      const valueFormat = widgetConfig.valueFormat;\n      if (valueFormat) {\n        const dateVal = new Date(val);\n        dateVal.setMilliseconds(0);\n        dateVal.setHours(h);\n        dateVal.setMinutes(m);\n        dateVal.setSeconds(s);\n        val = moment(dateVal).format(valueFormat);\n      } else {\n        val = `${h}:${m}:${s}`;\n      }\n    }\n\n    // \"2020-01-08T22:00:00.000Z\" -> Date object\n    if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n      try {\n        const isEpoch = typeof val === \"number\" || typeof val === \"string\" && !isNaN(val);\n        // Note: can import only from ms timestamp, not seconds timestamp\n        const epoch = isEpoch && typeof val === \"string\" ? parseInt(val) : val;\n        const dateVal = new Date(isEpoch ? epoch : val);\n        if (dateVal instanceof Date) {\n          val = dateVal;\n        }\n        if (isNaN(dateVal)) {\n          throw new Error(\"Invalid date\");\n        }\n      } catch(e) {\n        meta.errors.push(`Can't convert value ${val} as Date`);\n        val = undefined;\n      }\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (groupOp, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  const groupOpConfig = config.operators[groupOp];\n  let isGroup = !!groupOpConfig;\n  // const isGroup0 = groupOpConfig?.cardinality == 0;\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup) {\n    // If current op is in `config.groupOperators`, first arg is having query (see `match.jlHaving`)\n    having = args[0];\n    args = args.splice(1);\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport.call(config.ctx, v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, groupField, groupFieldConfig, config, conj = undefined, not = false) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, groupFieldConfig),\n      not: not,\n      field: groupField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultGroupConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, submeta);\n  if (!res) {\n    meta.errors.push(Array.from(new Set(submeta.errors)).join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = multiselectOps\n    .map((opName) => config.operators[opName]?.jsonLogic2)\n    .includes(op);\n  const groupOp = config.settings.groupOperators.find(groupOp => {\n    const groupOpConfig = config.operators[groupOp];\n    return [groupOp, typeof groupOpConfig.jsonLogic === \"string\" && groupOpConfig.jsonLogic, groupOpConfig.jsonLogic2].includes(op);\n  });\n  const groupOpConfig = config.operators[groupOp];\n  const isGroup0 = groupOp && groupOpConfig?.cardinality == 0 && !isAllOrSomeInForMultiselect;\n  let cardinality = groupOpConfig?.cardinality ?? (arity - 1);\n  if (!isGroup0 && jlEqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[opk];\n  if (!opKeys)\n    return;\n\n  const returnVariants = [];\n  for (const opKey of opKeys) {\n    let jlField, jlArgs = [];\n    if (jlRangeOps.includes(op) && arity == 3) {\n      jlField = vals[1];\n      jlArgs = [ vals[0], vals[2] ];\n    } else {\n      [jlField, ...jlArgs] = vals;\n    }\n    if (conv.combinationOperators[opKey]?.isRevArgs) {\n      jlField = vals[vals.length-1];\n      jlArgs = vals.slice(0, vals.length-1);\n    }\n  \n    if (!isJsonLogic(jlField)) {\n      continue; // try another operator\n    }\n\n    const lhs = convertLhs(groupOp, jlField, jlArgs, conv, config, null, null, meta, parentField);\n    if (!lhs) {\n      continue; // try another operator\n    }\n    const {\n      field, fieldSrc, having, isGroup, args\n    } = lhs;\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for LHS ${field}`);\n      return;\n    }\n    const isValidOp = fieldConfig?.operators && fieldConfig.operators.includes(opKey);\n\n    returnVariants.push({\n      field, fieldSrc, fieldConfig, opKey, args, having,\n      isValidOp,\n    });\n  }\n\n  returnVariants.sort(({isValidOp}) => isValidOp ? -1 : +1);\n\n  return returnVariants[0];\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null, _isOneRuleInRuleGroup = false) => {\n  if (!op) return undefined;\n  \n  const jlConjs = Object.values(config.conjunctions).map(({jsonLogicConj}) => jsonLogicConj);\n  const arity = vals.length;\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  const parentFieldConfig = getFieldConfig(config, parentField);\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = false;\n  const opCanReverse = !!reversedOpConfig;\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to reverse\n  // const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot;\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  // const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n  let canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || isRuleGroup && !having // !(count == 2)  ->  count != 2  // because \"NOT\" is not visible inside rule_group if there are no children\n    || !isRuleGroup && isInRuleGroup && !_isOneRuleInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  // if (isGroupArray && showNot)\n  //   canRev = false;\n  const needRev = not && canRev || opNeedsReverse;\n  \n  let conj;\n  let havingVals;\n  let havingNot = false;\n  const canRevHaving = !!config.settings.reverseOperatorsForNot;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    // We look for template matches here to make sure we dont reverse when \"!\" is\n    // part of operator\n    let match = matchAgainstTemplates(having, conv, meta);\n    while (conj == \"!\" && !match) {\n      const isEmptyOp = conj == \"!\" && (\n        havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0])\n        && conv.varKeys.includes(Object.keys(havingVals[0])[0])\n      );\n      if (isEmptyOp) {\n        break;\n      }\n      havingNot = !havingNot;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      // Negation group with single rule is to be treated the same as !\n      if (canRevHaving && jlConjs.includes(conj) && havingVals.length == 1) {\n        having = having[conj][0];\n        conj = Object.keys(having)[0];\n        havingVals = having[conj];\n      }\n      // Another template matching\n      const matchTemp = matchAgainstTemplates(having, conv, meta);\n      match = matchTemp ? matchTemp : match;\n    }\n    if (!Array.isArray(havingVals)) {\n      havingVals = [ havingVals ];\n    }\n    // If template match found we act accordingly\n    if (match) {\n      // We reset vals if match found\n      havingVals = [];\n      havingVals[0] = match.jlField;\n      match.jlArgs.forEach(arg => havingVals.push(arg));\n      // We reset op to new op that represents multiple jsonlogic operators\n      conj = match.newOp;\n      if (jlDualMeaningOps.includes(match.newOp)) {\n        // use original order of args\n        havingVals = match.vals;\n      }\n    }\n  }\n\n  // Use reversed op\n  if (needRev) {\n    not = !not;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n    } else {\n      // rule, need to be wrapped in `rule_group`\n      res = convertOp(conj, havingVals, conv, config, havingNot, meta, field, true);\n      if (res) {\n        if (res.type === \"rule_group\" && res.properties?.field !== field) {\n          res = wrapInDefaultConjRuleGroup(res, field, fieldConfig, config);\n        }\n        Object.assign(res.properties, {\n          conjunction: defaultGroupConjunction(config, fieldConfig),\n        });\n      }\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      // tip: don't set not to properties, only havingNot should affect it\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        // tip: `not: true` have no effect if there are no children! \"NOT\" is hidden in UI and is ignored during export\n        // So it's better to reverse group op (see `canRev =`), or wrap in conj with NOT as a last resort\n        not: false,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not || _isOneRuleInRuleGroup) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertCaseVal = (op, vals, conv, config, not, meta, parentField = null) => {\n  const val = {[op]: vals};\n  const defaultCaseVal = buildCaseValProperties(config, meta, conv, val);\n  if (defaultCaseVal === undefined) {\n    return undefined;\n  }\n  const defaultCase = wrapInCase(null, defaultCaseVal, config, meta);\n  const children1 = [defaultCase];\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst convertSwitch = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp, selectTypes,\n} from \"./configUtils\";\nimport { getOpCardinality, getFirstDefined } from \"./stuff\";\nimport { translateValidation } from \"../i18n\";\nimport { jsToImmutable } from \"./treeUtils\";\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  {\n    // DO NOT import { validateValue, validateRange } from \"./validation\"\n    // it will create import loop\n    validateValue,\n    validateRange,\n  },\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func || dv?.get?.(\"func\")) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    const v = valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n    // Fix if func in LHS has `defaultValue: { func: ..., args: {...} }`\n    if (v?.func) {\n      valueFixes[i] = jsToImmutable(v);\n      valueSrcFixes[i] = \"func\";\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue || operatorCardinality < currentOperatorCardinality) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","import { isObject } from \"./stuff\";\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc, getWidgetForFieldOp,\n  getOperatorsForField,\n} from \"./configUtils\";\nimport {extendConfig} from \"./configExtend\";\nimport {\n  whatRulePropertiesAreCompleted, setFuncDefaultArg,\n} from \"./ruleUtils\";\nimport { getNewValueForFieldOp } from \"./getNewValueForFieldOp\";\nimport {getOpCardinality, deepEqual, isTypeOf, typeOf} from \"./stuff\";\nimport {getItemInListValues} from \"./listValues\";\nimport {defaultOperatorOptions} from \"./defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"./treeUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree, config).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree, config).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : removeEmptyGroups);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(\n    { validateValue, validateRange },\n    config, oldConfig, properties, field, operator, null, canFix, isEndValue\n  );\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature, selectTypes} from \"../utils/configUtils\";\nimport {getDefaultArgValue, setArgValue, setFuncDefaultArgs, setFuncDefaultArg} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n\nexport { setArgValue, setFuncDefaultArgs, setFuncDefaultArg, getDefaultArgValue };\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\n\n\n\n\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\nexport const setArgValueAsyncListValues = (value, argKey, asyncListValues, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"asyncListValues\"], asyncListValues);\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getNewValueForFieldOp} from \"./getNewValueForFieldOp\";\nimport { isImmutable } from \"./stuff\";\nimport { defaultOperatorOptions, defaultGroupProperties, getDefaultField, getDefaultFieldSrc, getDefaultOperator, defaultGroupConjunction } from \"./defaultUtils\";\nimport {validateValue, validateRange} from \"./validation\";\nimport { getFieldConfig } from \"./configUtils\";\n\nexport * from \"./defaultUtils\";\n\n\n\nexport const defaultRuleProperties = (config, parentRuleGroupField = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupField);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (fieldConfig?.type === \"!group\") {\n    const conjunction = defaultGroupConjunction(config, fieldConfig);\n    current = current.set(\"conjunction\", conjunction);\n  }\n\n  return current; \n};\n\n\nexport const defaultItemProperties = (config, item) => {\n  return item?.type == \"group\" \n    ? defaultGroupProperties(config) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  \n  const isFetchSelectedValues = !!meta?.fetchSelectedValues && Array.isArray(search);\n  if (isFetchSelectedValues) {\n    const values = listValuesToArray(all)\n      .filter(({value}) => search.includes(value));\n    return {\n      values\n    };\n  }\n\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","import * as Utils from \"../../utils\";\nimport { compareToSign } from \"../../export/spel\";\n\nconst { iterateFuncs } = Utils.ConfigUtils;\nconst { logger } = Utils.OtherUtils;\n\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nexport const manuallyImportedOps = [\n  \"between\", \"not_between\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\",\n  \"some\", \"all\", \"none\",\n];\nexport const unsupportedOps = [\"proximity\"];\n\n\nexport const buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    // const isGroupOp = config.settings.groupOperators?.includes(opKey);\n    const spelOps = opConfig.spelOps ? opConfig.spelOps : opConfig.spelOp ? [opConfig.spelOp] : undefined;\n    if (spelOps) {\n      // examples of 2+: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else {\n      const revOpConfig = config.operators?.[opConfig.reversedOp];\n      const canUseRev = revOpConfig?.spelOp || revOpConfig?.spelOps;\n      const canIgnore = canUseRev\n        || manuallyImportedOps.includes(opKey) || manuallyImportedOps.includes(opConfig.reversedOp)\n        || unsupportedOps.includes(opKey);\n      if (!canIgnore) {\n        logger.warn(`[spel] No spelOp for operator ${opKey}`);\n      }\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        // Tip: convert \"?.\" to \".\" to support safe navigation operator (issue #1010)\n        .replace(/\\?\\./g, \".\")\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\?\\./g, \".\")\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const spelOps = opDef.spelOps ? opDef.spelOps : opDef.spelOp ? [opDef.spelOp] : undefined;\n    spelOps?.forEach(spelOp => {\n      if (spelOp?.includes(\"${0}\")) {\n        const fs = spelOp.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n        const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n        if (!opFuncs[fs])\n          opFuncs[fs] = [];\n        opFuncs[fs].push({\n          op,\n          argsOrder\n        });\n      }\n    });\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\?\\./g, \".\").replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nexport const buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n","import * as Utils from \"../../utils\";\n\nconst { isObject, uuid } = Utils.OtherUtils;\nconst { defaultConjunction, defaultGroupConjunction } = Utils.DefaultUtils;\nconst { getFieldConfig, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n\n// export const wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n//   if (!rule) return undefined;\n//   return {\n//     type: \"rule_group\",\n//     id: uuid(),\n//     children1: { [rule.id]: rule },\n//     properties: {\n//       conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n//       not: false,\n//       field: parentField,\n//     }\n//   };\n// };\n\nexport const wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n\nexport const buildCase = (convCond, convVal, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, convVal, spel);\n\n  let caseI;\n  if (convCond) {\n    caseI = convCond;\n    if (caseI.type) {\n      if (caseI.type != \"group\" && caseI.type != \"case_group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n\nexport const buildSimpleSwitch = (convVal, conv, config, meta) => {\n  let children1 = {};\n  const caseI = buildCase(null, convVal, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nexport const buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\n\nexport const buildCaseValProperties = (config, meta, conv, convVal, spel = null) => {\n  let valProperties = {};\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (convVal?.valueType === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nexport const buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  const parentFieldConfig = getFieldConfig(config, spel?._groupField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const isGroupArray = isRuleGroup && fieldConfig.mode == \"array\";\n  const isInRuleGroup = parentFieldConfig?.type == \"!group\";\n\n  let opConfig = config.operators[opKey];\n  const reversedOpConfig = config.operators[opConfig?.reversedOp];\n  const opNeedsReverse = spel?.not && [\"between\"].includes(opKey);\n  const opCanReverse = !!reversedOpConfig;\n  const canRev = opCanReverse && (\n    !!config.settings.reverseOperatorsForNot\n    || opNeedsReverse\n    || !isRuleGroup && isInRuleGroup // 2+ rules in rule-group should be flat. see inits.with_not_and_in_some in test\n  );\n  const needRev = spel?.not && canRev || opNeedsReverse;\n  if (needRev) {\n    // todo: should be already handled at convertOp ?  or there are special cases to handle here, like rule-group ?\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n    spel.not = !spel.not;\n  }\n  const needWrapWithNot = !!spel?.not;\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapWithNot) {\n    res = wrapInDefaultConj(res, config, spel.not);\n    // spel.not = !spel.not; // why I added this line?\n  }\n\n  return res;\n};\n","import * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\n\n\nexport const postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const isBetweenNormal = (child.type == \"op-and\" && child.children.length == 2 && child.children[0].type == \"op-ge\" && child.children[1].type == \"op-le\");\n      const isBetweenRev = (child.type == \"op-or\" && child.children.length == 2 && child.children[0].type == \"op-lt\" && child.children[1].type == \"op-gt\");\n      const isBetween = isBetweenNormal || isBetweenRev;\n      const canFlatize = child.type == type && !child.not && !isBetween;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nexport const convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n","import { wrapInDefaultConj, buildCase, buildSimpleSwitch, buildRuleGroup, buildRule } from \"./builder\";\nimport { convertPath } from \"./postprocess\";\nimport { buildFuncSignatures } from \"./conv\";\nimport * as Utils from \"../../utils\";\n\nconst { isJsonCompatible, isObject, uuid, logger } = Utils.OtherUtils;\nconst { getFieldConfig, getFuncConfig, normalizeField, iterateFuncs, getWidgetForFieldOp } = Utils.ConfigUtils;\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\n\n\nexport const convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, spel);\n    spel._groupField = groupFieldValue?.value;\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, spel);\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const convCond = convertToTree(cond, conv, config, meta, spel);\n      const convVal = convertCaseValue(val, conv, config, meta, spel);\n      const caseI = buildCase(convCond, convVal, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const convVal = convertCaseValue(spel, conv, config, meta);\n    const sw = buildSimpleSwitch(convVal, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  const isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  const isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  const isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right, spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      oneSpel._groupField = parentSpel?._groupField;\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, spel)\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      } else {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n          \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let opConfig = config.operators[opKey];\n    const reversedOpConfig = config.operators[opConfig?.reversedOp];\n    const opNeedsReverse = spel.not && [\"between\"].includes(opKey);\n    const opCanReverse = !!reversedOpConfig;\n    const canRev = opCanReverse && (!!config.settings.reverseOperatorsForNot || opNeedsReverse);\n    const needRev = spel.not && canRev || opNeedsReverse;\n    if (needRev) {\n      opKey = opConfig.reversedOp;\n      opConfig = config.operators[opKey];\n      spel.not = !spel.not;\n    }\n    const needWrapWithNot = !!spel.not;\n    spel.not = false; // handled with needWrapWithNot\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs, spel);\n    }\n\n    if (needWrapWithNot) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, true);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      const convVal = convertCaseValue(spel, conv, config, meta);\n      res = buildSimpleSwitch(convVal, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\n\nexport const convertArg = (spel, conv, config, meta, parentSpel = null) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  spel._groupField = spel._groupField ?? parentSpel?._groupField;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, spel._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), spel._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return convertCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\n\n\nconst convertFunc = (spel, conv, config, meta, parentSpel = null) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, spel);\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport.call(config.ctx, spel);\n        } catch(e) {\n          logger.debug(`Error while using spelImport for ${f}`, e);\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n\n          // Special case to distinct date and datetime\n          let isOk = true;\n          const funcType = funcConfig?.returnType;\n          if ([\"date\", \"datetime\"].includes(funcType)) {\n            const dateArgsKeys = Object.keys(funcConfig.args ?? []).filter(k => [\"date\", \"datetime\"].includes(funcConfig.args[k].type));\n            for (const k of dateArgsKeys) {\n              const argConfig = funcConfig.args[k];\n              const expectedType = argConfig.type;\n              const realType = argsObj[k]?.valueType;\n              if (realType && realType != expectedType) {\n                isOk = false;\n              }\n            }\n          }\n          if (isOk) {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // final convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName) {\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  }\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  const candidates = [];\n\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const errs = [];\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      const opDef = config.operators[op];\n      const {valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      const valueType = argsArr.filter(a => !!a && a !== field)?.[0]?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      candidates.push({\n        opKey: op, foundSign: s, field, convertedArgs, errs,\n      });\n    }\n  }\n\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelImportFuncs, valueTypes} = opDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const argsObj = {};\n          if (isJsonCompatible(fj, spel, argsObj)) {\n            const errs = [];\n            for (const k in argsObj) {\n              argsObj[k] = convertFuncArg(argsObj[k]);\n            }\n            const field = argsObj[\"0\"];\n            const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n            const valueType = argsObj[\"1\"]?.valueType;\n            if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n              errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n            }\n            candidates.push({\n              opKey: op, foundSign: `spelImportFuncs[${i}]`, field, convertedArgs, errs,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const bestCandidate = candidates.find(({errs}) => !errs.length);\n  if (bestCandidate) {\n    const {opKey, foundSign, field, convertedArgs, errs} = bestCandidate;\n    return buildRule(config, meta, field, opKey, convertedArgs, spel);\n  } else if (candidates.length) {\n    const allErrs = candidates.map(\n      ({foundSign, opKey, errs}) =>\n        `Looks like convertable to ${opKey} with signature ${foundSign}, but: ${errs.join(\"; \")}`\n    ).join(\".  \");\n    meta.errors.push(allErrs);\n  }\n\n  return undefined;\n};\n\nconst compareArgs = (left, right,  spel, conv, config, meta) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, spel));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, spel));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nexport const convertCaseValue = (val, conv, config, meta, spel = null) => {\n  let convVal;\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    convVal = convertCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  return convVal;\n};\n\n/**\n * @deprecated\n */\nexport const convertCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport { loadTree } from \"../tree\";\nimport { buildConv } from \"./conv\";\nimport { convertToTree } from \"./convert\";\nimport { postprocessCompiled } from \"./postprocess\";\nimport { wrapInDefaultConj } from \"./builder\";\nimport * as Utils from \"../../utils\";\n\nconst { logger } = Utils.OtherUtils;\nconst { extendConfig } = Utils.ConfigUtils;\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n\nexport const loadFromSpel = (spelStr, config) => {\n  return _loadFromSpel(spelStr, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue,\n  stringifyForDisplay, wrapWithBrackets,\n} from \"../utils/export\";\nimport {\n  mongoEmptyValue, mongoFormatOp1, mongoFormatOp2,\n} from \"../utils/mongoUtils\";\nimport {\n  spelFixList, spelEscape,\n} from \"../utils/spelUtils\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n    wrapWithBrackets,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: function (children, conj, not, isForDisplay) {\n      let ret = children.size > 1 ? children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = children.size > 1 ? children.join(\" \" + \"AND\" + \" \") : children.first();\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: function (children, conj, not, omitBrackets) {\n      if (not) omitBrackets = false;\n      let ret = children.size > 1 ? children.join(\" \" + \"&&\" + \" \") : children.first();\n      if ((children.size > 1 || not) && !omitBrackets) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"!\" + ret;\n      }\n      return ret;\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function (children, conj, not) {\n      let ret = (children.size > 1 ? children.join(\" \" + \"OR\" + \" \") : children.first());\n      if (children.size > 1 || not) {\n        ret = this.utils.wrapWithBrackets(ret);\n      }\n      if (not) {\n        ret = \"NOT \" + ret;\n      }\n      return ret;\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic2: \"==\",\n    jsonLogicOps: [\"==\", \"datetime==\", \"date==\"],\n    jsonLogic: (field, op, val, _opDef, _opOpts, _fieldDef, expectedType, settings) => {\n      if (settings?.fixJsonLogicDateCompareOp && [\"date\", \"datetime\"].includes(expectedType)) {\n        return { [`${expectedType}==`]: [field, val] };\n      }\n      return { \"==\": [field, val] };\n    },\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic2: \"!=\",\n    jsonLogicOps: [\"!=\", \"datetime!=\", \"date!=\"],\n    jsonLogic: (field, op, val, _opDef, _opOpts, _fieldDef, expectedType, settings) => {\n      if (settings?.fixJsonLogicDateCompareOp && [\"date\", \"datetime\"].includes(expectedType)) {\n        return { [`${expectedType}!=`]: [field, val] };\n      }\n      return { \"!=\": [field, val] };\n    },\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    // tip: this function covers import of 3 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator == \"LIKE\" || sqlObj?.operator == \"NOT LIKE\") {\n        const not = sqlObj?.operator == \"NOT LIKE\";\n        const [_left, right] = sqlObj.children || [];\n        if (right?.valueType?.endsWith(\"_quote_string\")) {\n          if (right?.value.startsWith(\"%\") && right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1, right.value.length - 1), sqlDialect);\n            sqlObj.operator = not ? \"not_like\" : \"like\";\n            return sqlObj;\n          } else if (right?.value.startsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(1), sqlDialect);\n            sqlObj.operator = \"ends_with\";\n            return sqlObj;\n          } else if (right?.value.endsWith(\"%\")) {\n            right.value = this.utils.SqlString.unescapeLike(right.value.substring(0, right.value.length - 1), sqlDialect);\n            sqlObj.operator = \"starts_with\";\n            return sqlObj;\n          }\n        }\n      }\n    },\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic2: \"#in\",\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [val, field] }}),\n    jsonLogic2: \"#!in\",\n    _jsonLogicIsExclamationOp: true,\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} >= ${valFrom} && ${field} <= ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"<=\": [Array.isArray(val) ? val[0] : val, field, Array.isArray(val) ? val[1] : val] }}),\n    jsonLogic2: \"!<=\",\n    _jsonLogicIsExclamationOp: true,\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"=\" || sqlObj?.operator === \"<>\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value === \"\" && left?.func === \"COALESCE\" && left?.children?.[1]?.value === \"\") {\n          sqlObj.operator = sqlObj?.operator === \"=\" ? \"is_empty\" : \"is_not_empty\";\n          sqlObj.children = [ left.children[0] ];\n          return sqlObj;\n        }\n      }\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    // tip: this function covers import of 2 operators\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.operator === \"IS\" || sqlObj?.operator === \"IS NOT\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.valueType == \"null\") {\n          sqlObj.operator = sqlObj?.operator === \"IS\" ? \"is_null\" : \"is_not_null\";\n          sqlObj.value = left;\n          return sqlObj;\n        }\n      }\n    },\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    // tip: this op can be imported from SpEL manually without using config\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    sqlOps: [\"<>\", \"!=\"],\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n    jsonLogic: (field, op, val) => ({\"!\": { \"in\": [field, val] }}),\n    jsonLogic2: \"!in\",\n    _jsonLogicIsExclamationOp: true,\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    spelImportFuncs: [\n      // just for backward compatibility (issue #1007)\n      {\n        obj: {\n          type: \"property\",\n          val: \"CollectionUtils\"\n        },\n        methodName: \"containsAny\",\n        args: [\n          {var: \"0\"},\n          {var: \"1\"},\n        ],\n      }\n    ],\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\",\n    jsonLogic2: \"!some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"!\": { \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    sqlOps: [\"<>\", \"!=\"],\n    valueTypes: [\"multiselect\"],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n    jsonLogic2: \"!all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"!\": { \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]}\n    }),\n    _jsonLogicIsExclamationOp: true,\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions?.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    sqlImport: function (sqlObj, _, sqlDialect) {\n      if (sqlObj?.func === \"CONTAINS\") {\n        const [left, right] = sqlObj.children || [];\n        if (right?.value?.includes(\"NEAR(\")) {\n          const m = right.value.match(/NEAR\\(\\((\\w+), (\\w+)\\), (\\d+)\\)/);\n          if (m) {\n            delete sqlObj.func;\n            sqlObj.operator = \"proximity\";\n            sqlObj.children = [\n              left,\n              { value: m[1] },\n              { value: m[2] },\n            ];\n            sqlObj.operatorOptions = {\n              proximity: parseInt(m[3])\n            };\n            return sqlObj;\n          }\n        }\n      }\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n    // reversedOp: undefined,\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    // reversedOp: \"none\",\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n    // reversedOp: \"all\",\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\", sqlDialect);\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // tip: we use UTC to return same result as new Date(val)\n      // new Date(\"2000-01-01\") is now the same as new Date(\"2000-01-01 00:00:00\") (first one in UTC)\n      return this.utils.moment.utc(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      if (dateVal.isValid()) {\n        return {\n          \"$dateFromString\": {\n            \"dateString\": dateVal.format(\"YYYY-MM-DD\"),\n            \"format\": \"%Y-%m-%d\"\n          }\n        };\n      }\n      return undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    // Moved to `sqlImportDate` in `packages/sql/modules/import/conv`\n    // sqlImport: function (sqlObj, wgtDef, sqlDialect) {\n    //   if ([\"TO_DATE\"].includes(sqlObj?.func) && sqlObj?.children?.length >= 1) {\n    //     const [valArg, patternArg] = sqlObj.children;\n    //     if (valArg?.valueType == \"single_quote_string\") {\n    //       // tip: moment doesn't support SQL date format, so ignore patternArg\n    //       const dateVal = this.utils.moment(valArg.value);\n    //       if (dateVal.isValid()) {\n    //         return {\n    //           value: dateVal.format(wgtDef?.valueFormat),\n    //         };\n    //       } else {\n    //         return {\n    //           value: null,\n    //           error: \"Invalid date\",\n    //         };\n    //       }\n    //     }\n    //   }\n    // },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    // Example of importing and exporting to epoch timestamp (in ms) for JsonLogic:\n    // jsonLogicImport: function(timestamp, wgtDef) {\n    //   const momentVal = this.utils.moment(timestamp, \"x\");\n    //   return momentVal.isValid() ? momentVal.toDate() : undefined;\n    // },\n    // jsonLogic: function (val, fieldDef, wgtDef) {\n    //   return this.utils.moment(val, wgtDef.valueFormat).format(\"x\");\n    // },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    // todo: $toDate (works onliny in $expr)\n    // https://www.mongodb.com/docs/manual/reference/operator/aggregation/toDate/\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      if (dateVal.isValid()) {\n        return {\n          \"$dateFromString\": {\n            \"dateString\": dateVal.format(\"YYYY-MM-DD HH:mm:ss\"),\n            \"format\": \"%Y-%m-%d %H:%M:%S\"\n          }\n        };\n      }\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef, sqlDialect) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"NOT\" + this.utils.wrapWithBrackets(q);\n  },\n  spelFormatReverse: function (q) {\n    if (q == undefined) return undefined;\n    return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatReverse: function (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT \" + this.utils.wrapWithBrackets(q);\n    else\n      return \"!\" + this.utils.wrapWithBrackets(q);\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef, _, sqlDialect) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, getAncestorRuleGroups, fixPathsInTree,\n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties,\n} from \"../utils/defaultRuleUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig, selectTypes, getOperatorsForType, getOperatorsForField, getFirstOperator,\n} from \"../utils/configUtils\";\nimport {\n  isEmptyItem, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange} from \"../utils/validation\";\nimport {getNewValueForFieldOp} from \"../utils/getNewValueForFieldOp\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc, setArgValueAsyncListValues} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config, meta?.parentRuleGroupField), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      currentNumber = path.size - ruleGroupPath.length;\n      maxNumber = ruleGroupFieldConfig?.maxNesting;\n    } else {\n      currentNumber = path.size;\n      maxNumber = maxNesting;\n    }\n  } else { // rule or rule_group\n    const ruleGroups = getAncestorRuleGroups(state, path);\n    if (ruleGroups.length) {\n      // closest rule-group\n      const { path: ruleGroupPath, field: ruleGroupField } = ruleGroups[0];\n      const ruleGroupFieldConfig = getFieldConfig(config, ruleGroupField);\n      const ruleGroupItem = getItemByPath(state, ruleGroupPath);\n      maxNumber = ruleGroupFieldConfig?.maxNumberOfRules;\n      currentNumber = getTotalRulesCountInTree(ruleGroupItem);\n    } else {\n      currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n      maxNumber = maxNumberOfRules;\n    }\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${targetFV.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n      if (asyncListValues) {\n        targetFV = setArgValueAsyncListValues(targetFV, argKey, asyncListValues, argDefinition, config);\n      }\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, undefined, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, undefined, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig, newField).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        { validateValue, validateRange },\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig?.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      { validateValue, validateRange },\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultRuleUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null, parentRuleGroupField = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config, parentRuleGroupField).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    parentRuleGroupField,\n  },\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV == \"development\");\nconst isTest = () => (typeof process !== \"undefined\" && process?.env?.NODE_ENV_TEST == \"true\");\n\nexport const getLogger = (devMode) => {\n  if (isTest()) {\n    return {\n      ...console,\n      log: () => {},\n      debug: () => {},\n      info: () => {},\n    };\n  }\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo, extendConfig} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n      extendConfig,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n    const canUseOldConfig = isConfigChanged && !isTreeChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, canUseOldConfig ? oldConfig : undefined, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              lev={this.props.path.size - 1}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils.OtherUtils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree, nextProps.config);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (!treeEl) {\n        console.error(\"Please change renderBuilder implementation of <Query>: wrap <Builder> with div.query-builder for drag-n-drop support\");\n        return;\n      }\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n      \n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newAtomicLev = toParentII ? toParentII.nextAtomicLev : toII.atomicLev;\n      // tip: if group is empty, we still should use 1 (not 0) as depth because we could potentially add a rule inside it\n      // tip: don't use fepth inside rule-group\n      const newDepthLev = newAtomicLev + (fromII.closestRuleGroupId ? 0 : (fromII.depth || (fromII.type == \"group\" ? 1 : 0)));\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't restruct `rule_group`\n      const isRuleGroupAffected = (fromII.type == \"rule_group\" || !!fromII.closestRuleGroupId || toII.type == \"rule_group\" || !!toII.closestRuleGroupId);\n      const targetRuleGroupId = isPend && toII.type == \"rule_group\" ? toII.id : toII.closestRuleGroupId;\n      const targetRuleGroupMaxNesting = isPend && toII.type == \"rule_group\" ? toII.maxNesting : toII.closestRuleGroupMaxNesting;\n      const targetRuleGroupCanRegroup = (isPend && toII.type == \"rule_group\" ? toII.canRegroup : toII.closestRuleGroupCanRegroup) != false;\n      const closestRuleGroupLev = isPend && toII.type == \"rule_group\" ? toII.lev : toII.closestRuleGroupLev;\n      const newDepthLevInRuleGroup = (toParentII ? toParentII.lev + 1 : toII.lev)\n        + (fromII.depth || (fromII.type == \"group\" ? 1 : 0))\n        - (closestRuleGroupLev || 0);\n      const isForbiddenRuleGroupChange = isRuleGroupAffected && fromII.closestRuleGroupId != targetRuleGroupId;\n      const isForbiddenCaseChange \n        // can't move `case_group` anywhere but before/after anoter `case_group`\n        = fromII.type == \"case_group\" && !isLev1\n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isForbiddenStructChange = isForbiddenCaseChange || isForbiddenRuleGroupChange;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting) {\n        return false;\n      }\n      \n      if (targetRuleGroupMaxNesting && newDepthLevInRuleGroup > targetRuleGroupMaxNesting) {\n        return false;\n      }\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange)) {\n        return false;\n      }\n\n      if (isRuleGroupAffected && isStructChange && !targetRuleGroupCanRegroup) {\n        return false;\n      }\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    customProps: PropTypes.object,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                customProps={config.settings.customOperatorSelectProps}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    if (!this.meta.items) {\n      return null;\n    }\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFuncPathLabels} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, parentDelta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get?.(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    parentDelta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getWidgetForFieldOp, getValueSourcesForFieldOp} = Utils.ConfigUtils;\nconst {getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    parentDelta: PropTypes.number,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\", \"parentDelta\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id, parentDelta,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      }]);\n    }\n    const widgets = (isFuncArg ? [0] : range(0, cardinality)).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta ?? delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue, parentDelta,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuesrcs\" : \"widget--has-no-valuesrcs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          parentDelta={parentDelta ?? delta}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    const { isFuncArg } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {(isFuncArg ? [0] : range(0, cardinality)).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    parentDelta: PropTypes.number,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, parentDelta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta: parentDelta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, parentDelta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (parentDelta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition, parentDelta} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue, parentDelta,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n    const asyncListValues = arg?.get(\"asyncListValues\");\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      asyncListValues,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n      parentDelta,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        parentDelta={this.props.parentDelta}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const defaultValueSourcesLabels = {\n      value: \"Value\",\n      field: \"Field\",\n      func: \"Function\"\n    };\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey]?.label ?? defaultValueSourcesLabels[srcKey] ?? srcKey,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n    parentFieldCanReorder: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\", \"parentField\", \"parentFieldCanReorder\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked, parentField, parentFieldCanReorder}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    let showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      showDragIcon = showDragIcon && parentFieldCanReorder;\n    }\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addGroup(this.props.path, undefined, undefined, parentRuleGroupField);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupField = itemType == \"rule_group\" ? this.props.field : this.props.parentField;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupField);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      let currentNesting = this.props.path.size;\n      let maxNesting = this.props.config.settings.maxNesting;\n      let isRoot = currentNesting == 1;\n      if (this.props.parentField && this.props.parentFieldPathSize) {\n        // inside rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.parentField);\n        currentNesting = this.props.path.size - this.props.parentFieldPathSize + 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      } else if (this.props.field) {\n        // it is rule-group\n        const ruleGroupFieldConfig = getFieldConfig(this.props.config, this.props.field);\n        currentNesting = 1;\n        maxNesting = ruleGroupFieldConfig?.maxNesting;\n        isRoot = false;\n      }\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isMaxNestingExceeded = maxNesting && currentNesting > maxNesting;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              lev={this.props.path.size - 1}\n              allowFurtherNesting={allowFurtherNesting}\n              isMaxNestingExceeded={isMaxNestingExceeded}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              parentFieldPathSize={this.props.parentFieldPathSize}\n              parentFieldCanReorder={this.props.parentFieldCanReorder}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id, parentField,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, addSubRuleLabel, addSubGroupLabel, \n      delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type={parentField ? \"addSubRule\" : \"addRule\"} onClick={addRule} label={parentField ? addSubRuleLabel : addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type={parentField ? \"addSubGroup\" : \"addGroup\"} onClick={addGroup} label={parentField ? addSubGroupLabel : addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isMaxNestingExceeded: PropTypes.bool,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config, parentField} = this.props;\n    let showNot = config.settings.showNot;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(config, parentField);\n      showNot = showNot && (ruleGroupFieldConfig?.showNot ?? true);\n    }\n    return showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {config} = this.props;\n    const {forceShowConj} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 && !this.isOneChild() || this.showNot() || forceShowConj;\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id, parentField} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n      parentField={parentField}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const { totalRulesCnt, isMaxNestingExceeded, parentField } = this.props;\n    let { maxNumberOfRules } = this.props.config.settings;\n    if (parentField) {\n      const ruleGroupFieldConfig = getFieldConfig(this.props.config, parentField);\n      maxNumberOfRules = ruleGroupFieldConfig.maxNumberOfRules;\n    }\n    if (isMaxNestingExceeded) {\n      return false;\n    }\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked, parentField, parentFieldPathSize, parentFieldCanReorder} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        parentField={parentField}\n        parentFieldPathSize={parentFieldPathSize}\n        parentFieldCanReorder={parentFieldCanReorder}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n        {...this.extraPropsForItem(item)}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(item) {\n    if (item.get(\"type\") === \"rule_group\") {\n      return getTotalRulesCountInTree(item);\n    }\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked, parentField, parentFieldCanReorder } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    let canReorder = config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n    if (parentField) {\n      canReorder = canReorder && parentFieldCanReorder;\n    }\n    return canReorder;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { parentField, conjunctionOptions } = this.props;\n    // Note: if current group is a group inside rule-group, we should respect config of parent rule-group\n    return parentField ? this.conjunctionOptionsForGroupField(parentField) : conjunctionOptions;\n  }\n\n  conjunctionOptionsForGroupField(groupField = null) {\n    const {config, conjunctionOptions} = this.props;\n    const groupFieldConfig = getFieldConfig(config, groupField);\n    if (groupFieldConfig?.conjunctions) {\n      let filtered = {};\n      for (let k of groupFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      return filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRuleSimple\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, canAddRule, canAddGroup, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, addSubGroupLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addSubRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addSubRule\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addSubGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addSubGroup\" onClick={addGroup} label={addSubGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n  \n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addSubRuleBtn}\n          {addSubGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\nconst {getTotalReordableNodesCountInTree} = Utils.TreeUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n    lev: PropTypes.number, // from GroupContainer\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n\n  canAddRule() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const maxNumberOfRules = selectedFieldConfig?.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return selectedFieldConfig?.showNot ?? config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const { selectedField } = this.props;\n    return this.conjunctionOptionsForGroupField(selectedField);\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1, id} = this.props;\n    return getTotalReordableNodesCountInTree({\n      id, type: \"rule_group\", children1\n    });\n  }\n\n  extraPropsForItem(_item) {\n    const { selectedField, lev, config } = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    return {\n      parentField: selectedField,\n      parentFieldPathSize: lev + 1,\n      parentFieldCanReorder: selectedFieldConfig?.canReorder ?? config.settings.canReorder,\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  showConjs() {\n    // always show line from \"If\"\n    return true;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentFieldPathSize={props.parentFieldPathSize}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n      parentFieldCanReorder={props.parentFieldCanReorder}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils.OtherUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts, getWidgetForFieldOp} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    const opConfig = config.operators[operator];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (opConfig?.valueTypes) {\n      expectedType = opConfig?.valueTypes[0];\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addSubRuleSimple\": \"+\",\n  \"addSubRule\": \"+\",\n  \"addSubGroup\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  customOperatorSelectProps: {\n    // showSearch: false\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch, fetchSelectedValuesOnInit,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config, field\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = config.settings.loadMoreLabel ?? \"Load more...\";\n  const loadingMoreTitle = config.settings.loadingMoreLabel ?? \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? (config.settings.typeToSearchLabel ?? \"Type to search\") : placeholder;\n\n  // Import from JsonLogic fills `asyncListValues`, but import from SQL/SpEL does not. It's workaround\n  if (asyncFetch && fetchSelectedValuesOnInit && !selectedAsyncListValues && selectedValue != undefined) {\n    selectedAsyncListValues = Array.isArray(selectedValue) ? selectedValue : [selectedValue];\n  }\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n  const latestSelectedValue = React.useRef();\n  latestSelectedValue.current = selectedValue;\n  const latestInputValue = React.useRef();\n  latestInputValue.current = inputValue;\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  // if selectedAsyncListValues is array of strings/numbers => needs to be resolved\n  const areSelectedAsyncListValuesNotResolved = selectedAsyncListValues && Array.isArray(selectedAsyncListValues)\n    && selectedAsyncListValues.filter(v => v !== null && typeof v !== \"object\").length > 0;\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoadSelected = fetchSelectedValuesOnInit && !open && asyncFetch\n    && areSelectedAsyncListValuesNotResolved && selectedValue != null;\n  const canFirstLoadOnOpened = open && asyncFetch\n    && (asyncListValues === undefined)\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = (canFirstLoadOnOpened || canInitialLoadSelected) && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch - search\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  // fetch - selected values only\n  const fetchSelectedListValues = async () => {\n    const selectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    if (!selectedValues.length) {\n      return null;\n    }\n\n    const meta = { fetchSelectedValues: true };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, selectedValues, -1, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values: selectedListValues } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const latestSelectedValues = latestSelectedValue.current == null ? [] : (multiple ? latestSelectedValue.current : [latestSelectedValue.current]);\n    const nValues = latestSelectedValues.map(v => getItemInListValues(selectedListValues, v) ?? makeCustomListValue(v));\n\n    return nValues.length ? nValues : null;\n  };\n\n  const loadSelectedListValues = async () => {\n    setLoadingCnt(x => (x + 1));\n    const list = await fetchSelectedListValues();\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      setValue(latestSelectedValue.current, list);\n    }\n    setLoadingCnt(x => (x - 1));\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n      // if (!componentIsMounted.current && field) {\n      //   console.log(`Autocomplete for ${field} has been unmounted`)\n      // }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // Initial loading\n    if (canFirstLoadOnOpened && loadingCnt == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    if (canInitialLoadSelected && loadingCnt == 0) {\n      (async () => {\n        await loadSelectedListValues();\n      })();\n    }\n  }, [canFirstLoadOnOpened, canInitialLoadSelected, loadingCnt]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    const valHasDuplicates = multiple && val?.length && (new Set(val)).size !== val.length;\n    const isBadCallAfterTokenization = multiple && uif === \"antd\" && e === null && option === null && valHasDuplicates;\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput\n      || isBadCallAfterTokenization;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const isRemoveOption = uif === \"mui\" && eventType === \"removeOption\" && newInputValue === \"\" && multiple;\n    const isSelectOption = uif === \"mui\" && eventType === \"selectOption\" && newInputValue === \"\" && multiple;\n    const isIgnoredBlur = uif === \"mui\" && !multiple && eventType === \"blur\" && newInputValue === selectedListValue?.title;\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n      || isSelectOption || isRemoveOption || isIgnoredBlur\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (uif === \"mui\" && !multiple && eventType === \"selectOption\" && newInputValue !== \"\") {\n      // parity with Antd\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || (lv == null);\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion >= 6 ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion >= 6 ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addSubRuleSimple\": <AddIcon />,\n  \"addSubRule\": <AddIcon />,\n  \"addSubGroup\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addSubRuleSimple\": true,\n  // \"addSubRule\": true,\n  // \"addSubGroup\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      if (disabled && !checked) {\n        return null;\n      }\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = parseInt(xdpPackage?.version?.split(\".\")?.[0] ?? \"0\");\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion >= 6 ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch || props.allowCustomValues) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n"],"names":["query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","v","_typeof","Object","prototype","call","isObjectOrArray","typeOf","t","Array","isArray","isTypeOf","type","isNaN","shallowCopy","_toConsumableArray","_objectSpread","isSafeKeyForObject","k","includes","hasSafeOwnProperty","obj","hasOwnProperty","setIn","path","newValue","opts","_opts","canCreate","canIgnore","canChangeType","Error","length","expectedObjType","concat","_step","newObj","target","pathToTarget","targetKey","pop","goodPath","_iterator","_createForOfIteratorHelper","s","n","done","value","expectedType","undefined","join","push","err","e","f","oldValue","mergeIn","mixin","_opts2","deepCopyObj","deepCopyMixin","arrayMergeMode","circularRefs","specialSymbols","$v","Symbol","$type","$canCreate","$canChangeType","$arrayMergeMode","clone","newObjChanged","_process","targetMix","_ref","arguments","isMixingArray","isMixingRealArray","indexDelta","_loop","mk","_targetMix$mk","_targetMix$mk$$canCre","_targetMix$mk2","_targetMix$mk$$canCha","_targetMix$mk3","_targetMix$mk$$arrayM","_targetMix$mk4","Number","useSymbols","targetMixValue","isMixValueExplicit","left","right","mergeArraysSmart","filter","_targetMix$mk5","splice","omit","keys","fromEntries","entries","_ref2","_slicedToArray","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","stringify","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","key","shallowEqualObjects","isImmutable","toJS","isImmutableList","Immutable","toImmutableList","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","val","map","el","_i","isDirtyJSX","_cleaned$props","cleaned","name","props","children","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","arr1","arr2","op","indexOf","_ref4","orig","_ref5","next","slice","prevs","after","reverse","find","_ref6","_ref7","prev","before","_ref8","_ref9","isAfterDirectly","isBeforeDirectly","x","reduce","acc","_ref10","_ref11","newOp","rel","relOp","ind","offset","Infinity","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","tv","ov","getLogger","devMode","process","_process4","NODE_ENV_TEST","console","log","debug","info","_process3","NODE_ENV","error","warn","getFirstDefined","ret","arr","logger","iterateFuncs","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","configKeys","selectTypes","config","_context","delegateYield","_iterateFields","funcs","stop","_marked","_context2","fields","subfields","subfieldsKey","_callee","_config$settings","fieldSeparator","fieldKey","fieldConfig","_context3","settings","t0","t1","getFieldRawConfig","field","_config$settings3","_config$settings2","fieldsKey","caseValueField","parts","getFieldParts","targetFields","part","normalizeField","_config$__fieldNames$","_config$__fieldNames$2","parentField","split","findStr","__fieldNames","inGroup","startsWith","fullPath","getFuncSignature","func","funcConfig","returnType","args","_ref3","pick","getFuncConfig","getFuncArgConfig","funcKey","argKey","isFieldDescendantOfField","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","get","getFieldPathParts","onlyKeys","_curr","getFieldId","_field$get3","_funcKey","_argKey","arg","_getFromConfigCache","bucketKey","cacheKey","_config$__cache","__cache","_saveToConfigCache","getFieldSrc","_field$get4","getFieldConfig","_field$get5","widgets","_isFuncArg","_isFunc","getOperatorConfig","operator","opConfig","operators","_widgetConfig$opProps","_fieldWidgetConfig$op","fieldCacheKey","cached","widget","getWidgetForFieldOp","widgetConfig","fieldWidgetConfig","widgetOpProps","opProps","fieldWidgetOpProps","mergedConfig","getFieldWidgetConfig","_fieldConfig$widgets","valueSrc","meta","fieldWidgetProps","widgetProps","valueFieldSettings","fieldSettings","forExport","getFirstField","parentRuleGroupField","parentPathArr","firstField","keysPath","_firstField","_getWidgetsAndSrcsForFieldOp","valueSrcs","isFuncArg","widgetValueSrc","canAdd","filterValueSourcesForField","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","valueSources","widgetWeight","w","wg","preferWidgets","mainWidget","sort","w1","w2","res","fieldDefinition","_fieldDefinition$type","fieldType","isOtherType","valueTypes","valueSourcesInfo","vs","__fieldsCntByType","minCnt","__funcsCntByType","getValueSourcesForFieldOp","getWidgetsForFieldOp","getOperatorsForType","_config$types$fieldTy","types","getOperatorsForField","getFirstOperator","_fieldOps$","fieldOps","getFieldPartsConfigs","parentFieldDef","parentParts","cnf","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","id","_children","_res","getAncestorRuleGroups","parentRuleGroups","_id","take","item","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","atomicLev","caseId","childNo","_items$closestRuleGro","_items$closestRuleGro2","_items$closestRuleGro3","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","closestRuleGroupId","canRegroup","maxNesting","closestRuleGroupCanRegroup","closestRuleGroupMaxNesting","closestRuleGroupLev","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","nextAtomicLev","node","index","parent","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","parentType","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","max","_height","bottom","assign","prevId","nextId","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","toOrderedMap","jsToImmutable","fromJS","outValue","isRuleValue","_outValue$get","_outValue$get$get","isIndexed","toList","defaultConjunction","defaultGroupConjunction","defaultOperatorOptions","operatorConfig","options","defaults","_groupFieldConfig","_groupFieldConfig2","groupFieldConfig","conjs","conjunctions","defaultGroupProperties","conjunction","not","getDefaultField","canGetFirst","defaultField","getDefaultSubField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","createListWithOneElement","createListFromArray","emptyProperties","calculateValueType","calculatedValueType","getFuncPathLabels","getFieldPathLabels","label","last","getValueLabel","delta","isSpecialRange","mergedOpConfig","valueLabels","placeholder","valueLabel","valuePlaceholder","formatFieldName","fieldDef","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","isEmptyItem","mode","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","childrenAreRequired","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","group","ch","rule","whatRulePropertiesAreCompleted","score","_config$operators$ope3","_config$operators$ope4","_value$filter","fieldSrc","liteCheck","valueType","isCompletedValue","min","deepCheck","_value$get","argConfig","argVal","argValue","argValueSrc","defaultValue","isOptional","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","getOneChildOrDescendant","first","setArgValue","setFuncDefaultArgs","funcValue","setFuncDefaultArg","firstValueSrc","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","rules","condition","toUpperCase","_valueType","hasUndefinedValues","operatorDefinition","typeConfig","secondField","ruleQuery","input","reverseOperatorsForNot","canShortMongoQuery","fixJsonLogicDateCompareOp","formatField","label2","isForDisplay","keepInputOnChangeFieldSrc","fieldItemKeysForSearch","listKeysForSearch","fieldSeparatorDisplay","canReorder","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","exportPreserveGroups","removeEmptyGroupsOnLoad","removeEmptyRulesOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","showErrorMessage","setOpOnChangeField","groupOperators","locale","moment","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","addSubGroupLabel","delGroupLabel","notLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","loadMoreLabel","loadingMoreLabel","typeToSearchLabel","loadingLabel","notFoundLabel","applyJsonLogic","data","JL","addJsonLogicOperation","add_operation","customJsonLogicOperations","CALL","fn","ctx","JSX","mergeObjects","obj1","obj2","toLowerCase","str","strlen","regexTest","pattern","flags","match","RegExp","dateA","startOf","dateB","isSame","now","today","start","y","year","m","month","d","date","toDate","start_of_today","date_add","dim","add","datetime_add","datetime","datetime_truncate","addRequiredJsonLogicOperations","jl","jsonLogicFormatConcat","_part$value","jsonLogicImportConcat","dateDimListValues","day","week","datetimeDimListValues","hour","minute","second","NOW","jsonLogicCustomOps","jsonLogic","jsonLogicImport","spelFunc","sqlFormatFunc","sqlFunc","mongoFormatFunc","formatFunc","TODAY","START_OF_TODAY","spelImport","spel","_obj$obj","_oneArg$children","_oneArg$children2","_oneArgType$cls","isTruncate","methodName","isObjNow","cls","argsLength","oneArg","oneArgType","oneArgProperty","oneArgCls","oneArgConst","isArgDays","sqlImport","sqlObj","_","sqlDialect","_sqlObj$children","_sqlObj$children2","format","TRUNCATE_DATETIME","renderBrackets","renderSeps","spelFormatFunc","dimPluralUppercase","charAt","_oneArg$children3","_oneArg$children4","_oneArgType$cls2","substring","_sqlObj$children7","_sqlObj$children3","_sqlObj$children5","_sqlObj$children8","_sqlObj$children4","_dateFormat$children","_sqlObj$children6","dateFormat","interval","isFormat","isIntervalDay","_type","unit","_dateFormat$children2","escapeForFormat","mainWidgetProps","customProps","showSearch","listValues","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","parseInt","_sqlObj$children9","_sqlObj$children10","plus","minus","RELATIVE_DATE","LOWER","mongoFunc","UPPER","LINEAR_REGRESSION","_ref12","coef","bias","_ref13","_ref14","_spel$children","_a$children","_sqlObj$children11","_left$children","_sqlObj$children12","_left$children2","_ref15","_ref16","applyJsonLogicWithPath","message","callContextFn","_this","compileMetaFieldSettings","asyncFetch","labelYes","labelNo","marks","isArr","validateValue","compileMetaWidget","factory","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","textSeparators","compileMetaWidgetForType","compileMetaFieldLike","compileMetaField","compileMetaSettings","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderConfirm","useConfirm","renderField","renderOperator","renderFunc","renderConjs","renderButton","renderIcon","renderButtonGroup","renderValueSources","renderFieldSources","renderProvider","renderSwitch","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","formatConj","sqlFormatConj","spelFormatConj","compressConfig","baseConfig","zipConfig","_clean","base","BasicFuncs","_base","rootKey","decompressConfig","useConfigCompress","_step3","unzipConfig","_mergeDeep","_resolveAndMergeDeep","resolved","_step2","_iterator2","_iterator3","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","submeta","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","re","o","this","argNames","bind","_ctx$components","_props","Cmp","components","W","O","RCE","commonMemo","memoId","configId","memos","areConfigsSame","config1","config2","getCommonMemo","extendConfig","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","found","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","extendedConfig","set","findExtended","findConfig","_ret","savedConfig","_ret2","_loop2","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","getSize","widgetPropsForDeepMerge","opPropsForDeepMerge","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","momentLocale","excludeOperators","typeWidgetConfig","defOp","from","Set","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","argDef","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_isCaseValue","_fieldConfig$fieldSet","_fieldConfig$fieldSet2","_keysToPutInFieldSett","treeValues","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_i2","_widgetPropsForDeepMe","_config$widgets$widge","_typeWidgetConfig$wid","_fieldConfig$mainWidg","_fieldWidgetConfig$wi","opKeys","_typeWidgetConfig$opP","_i3","_opPropsForDeepMerge","_config$operators","_typeWidgetConfig$opP2","_fieldWidgetConfig$op2","opProp","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","fConfig","computeFieldName","disabled","jsonLogicFormat","ff","tmp","p","pdef","_not","lockedOp","formatSwitch","formatCase","_groupOperatorDef","_groupOperatorDef2","_groupOperatorDef3","_reversedGroupOpDef","_reversedGroupOpDef2","_getOneChildOrDescend","List","conjunctionDefinition","conj","jsonLogicConj","origNot","isRuleGroupArray","groupField","groupOperator","groupOperatorDef","formattedValue","formatItemValue","isGroup0","isRuleGroupWithChildren","filterNot","revChildren","reversedGroupOp","reversedOp","reversedGroupOpDef","groupOpNeedsReverse","groupOpCanReverse","oneChildType","shouldPreserveGroups","preserveSingleRuleGroup","some","_currentChild$get","_config$operators$rev","_config$operators2","revOp","_jsonLogicIsExclamationOp","filterQuery","resultQuery","_groupOperatorDef4","reduceQuery","formattedField","var","formattedLhs","optionsMap","having","groupFieldFormatted","formatLogic","_operatorDefinition","_operatorDefinition2","_revOperatorDefinitio","_operatorDefinition3","_revOperatorDefinitio2","_revOperatorDefinitio3","revOperatorDefinition","opNeedsReverse","canRev","filteredCases","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","_filteredCases$_i","cond","expectedValueType","iValueSrc","iValueType","iValue","asyncListValues","oldUsedFields","fvalue","currentValue","cValue","fieldWidgetDef","fv","operatorDef","_currentValue$get","_currentValue$get2","funcParts","funcLastKey","formattedArgs","gaps","missingArgKeys","_argValue","defaultValueSrc","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","formattedArgsArr","funcName","jsonLogicIsMethod","params","varName","jsonLogicVar","groupVarKey","_properties$get","isRev","firstValueType","formattedOp","rangeOps","eqOps","opOpts","buildFnToFormatOp","mongoEmptyValue","mongoFormatOp1","mop","mc","opNot","_op","useExpr","$field","mv","neg","regex","mongoFormatOp2","mops","mongoFieldEscape","mongoFieldUnescape","mongodbFormat","_mongodbFormat","returnErrors","parents","_canWrapExpr","_formatFieldName","_value","_parents$filter","_groupOperatorDef$car","_conjunction","sep","parentRuleGroup","it","isInsideRuleGroup","isInsideRuleGroupArray","groupOperatorCardinality","groupFieldName","canHaveEmptyChildren","isSimpleGroupWithOneChild","reversedConj","mongoConj","canWrapExpr","formatFieldNameFn","formattedChild","totalQuery","as","notForRule","_f","_parents$filter2","_operatorDefinition4","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","_formatValue3","_formatValue4","_formatValue5","_formatValue6","spelEscape","numberToFloat","arrayToArray","isFinite","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","spelImportConcat","isVariable","spelFixList","SqlString","SqlStringOrig","trim","unescapeLike","escapeLike","any_start","any_end","escape","sqlEmptyValue","stringifyForDisplay","wrapWithBrackets","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","fieldWidgetDefinition","_values$first","_values$get","valFrom","valTo","valFieldDefinition","argsStr","compareToSign","TypesWithCompareTo","time","spelFormat","_spelFormat","_formatItemValue","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","_formatItemValue2","omitBrackets","fullSize","filteredSize","formatExpression","spelOp","isSign","isCompareTo","sop","compareRes","_formatLhs","realOp","_formatItemValue3","formatLhs","_formatField2","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_argConfig$escapeForF","doEscape","missedArgKey","_formattedArgs$argKey","optionalArgs","queryString","isDebugMode","_config$operators$gro","_config$operators$gro2","_meta$settings","realParentGroupField","conjStr","aggrArgs","_config$settings$form","returnArgs","_meta$settings3","revOperatorDef","fop","labelForFormat","_operator","_meta$settings2","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","_fieldDef$escapeForFo","cutParentField","_meta$settings5","fieldLabel2","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","formattedArgsWithNames","keySeq","argName","_step2$value","buildEsRule","syntax","queryType","parameters","textField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","parse","jlFieldMarker","jlRawFieldMarker","jlHavingMarker","jlArgsMarker","Proxy","__name","__test","_v$match","jlEqOps","jlRangeOps","jlDualMeaningOps","multiselectOps","createMeta","parentMeta","loadFromJsonLogic","logicTree","_loadFromJsonLogic","allowUnknownFields","conv","buildConv","jsTree","convertFromLogic","immTree","combinationOperators","opKey","opk","_opConfig$jsonLogic","_opConfig$jsonLogic2$","_opConfig$jsonLogic2","_opConfig$jsonLogicOp","template","opInTemplate","isRevArgs","jsonLogic2","jsonLogicOps","conjKey","_step$value","funcPath","fk","_config$settings$json","altVarKey","varKeys","matchAgainstTemplates","jsonlogic","response","operatorsToCheck","_Object$entries","_Object$entries$_i","tempResponse","isTemplateMatch","tKeys","jKeys","maybeArgIndex","jlArgs","jlField","jlHaving","expectedTypes","beforeErrorsCnt","isEmptyOp","isNot","convertFieldRhs","convertFuncRhs","convertValRhs","errorsBefore","convertSwitch","convertConj","convertOp","errorsAfter","convertCaseVal","wrapInDefaultConj","afterErrorsCnt","_e$message","h","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","isEpoch","epoch","convertLhs","groupOp","_parse","convertFieldLhs","convertFuncLhs","parsed","_v","_v2","init","_v3","_v4","parsedGroup","argsArr","_vals","_toArray","funcKeys","fc","_e","argKeys","argsObj","_argVal","complexFields","_v$properties","_v$properties2","_f$includes","complexFieldsGroupAncestors","ancs","fp","groupToId","_v$properties3","groupAncestors","parentFieldParts","groupPath","gf","gfc","groupId","_opConfig","_isOneRuleInRuleGroup","jlConjs","parseRes","arity","_groupOpConfig$cardin","isAllOrSomeInForMultiselect","opName","_config$operators$opN","groupOpConfig","returnVariants","_conv$combinationOper","_vals2","_vals3","lhs","isValidOp","_parseRule","parseRule","havingVals","parentFieldConfig","opCanReverse","isInRuleGroup","needRev","havingNot","canRevHaving","convertedArgs","_res$properties","wrapInDefaultConjRuleGroup","asyncListValuesArr","defaultCaseVal","buildCaseValProperties","wrapInCase","flatizeTernary","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","getNewValueForFieldOp","_currentField","_currentField$get","_newField","_newField$get","validateRange","oldConfig","current","newField","newOperator","changedProp","canFix","isEndValue","canDropArgs","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","isCase","currentField","newFieldError","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","validationErrors","canReuseValue","_validateValue","_validateValue2","fixedField","fieldErrors","isValid","willFix","willFixAllErrors","fixed","willRevert","showError","firstError","side","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","vType","vSrc","isValidSrc","_validateValue3","_validateValue4","fixedValue","allErrors","allErrorsHandled","willDrop","_newFieldConfig$field","_dv$get","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","newValueSrc","_valueSrcFixes$i","newValueType","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","fixedFrom","fixedTo","newValueError","hasValueErrorChanged","toListValue","title","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","getItemInListValues","getTitleInListValues","getValueInListValues","mapListValues","mapFn","searchListValue","search","shift","getListValue","selectedValue","isValidTree","getTreeBadFields","badFields","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeIncompleteRules","removeEmptyRules","forceFix","_validateTree2","_validateTree","fixedTree","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_allErrors","itemErrors","fixedItemErrors","nonFixedItemErrors","_addError","_setErrorsAsFixed","_children2","_children3","oldChildren","isGroupExt","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","serializeRule","_field","_field$toJS","oldSerialized","availOps","_getNewValueForFieldO","newSerialized","hasBeenSanitized","compl","isCompleted","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","leftField","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","_validResult$error","newError","validResult","lastError","wConfig","wType","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","allowCustomValues","_validateValueInList","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","maxLength","String","minMaxContext","context","_valueSrc","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","_funcConfig$label","_argDef$label","fixedArgVal","argErrors","canDropOrReset","_argErrors$find","argValidationError","canReset","rangeError","valueSrcsArr","valuesArr","areValueSrcsPureValues","validateValues","jsValues","jsVal","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setArgValueSrc","argValSrc","_argConfig","_config","setArgValueAsyncListValues","s1","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","defaultItemProperties","defaultRule","defaultRoot","canAddDefaultRule","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","_values","pageSize","filtered","currentOffset","newOffset","hasMore","fetchSelectedValues","abrupt","ceil","_x","_x2","_x3","mergeListValues","newValues","toStart","hideNewValues","old","newFiltered","av","isHidden","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","groupTitle","grouplabel","renderTitle","rest","_objectWithoutProperties","_excluded","option","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","Utils","manuallyImportedOps","unsupportedOps","_buildFuncSignatures","brns","isVar","lastChild","currBrn","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","buildCase","convCond","buildSimpleSwitch","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","buildRule","_groupField","reversedOpConfig","needWrapWithNot","postprocessCompiled","expr","parentExpr","getType","getChildren","isBetweenNormal","isBetweenRev","isBetween","selection","isSize","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","_val","expectingField","isError","_meta$errors","_meta$errors$push","SpelPrimitiveTypes","number","boolean","null","SpelPrimitiveClasses","convertToTree","_spel$_groupField","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","groupFilter","convertCaseValue","convertArg","sw","negative","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","oneSpel","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","groupOpRule","buildRuleGroup","_spel$_groupField2","_config$settings$case","at","_values$","convertCaseValueConcat","maybe","convertFunc","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","argsOrder","matchAll","_funcConfig","isOk","funcType","_funcConfig$args","dateArgsKeys","_argsObj$k","realType","funcArgs","errs","foundSign","foundWidget","candidates","spelImportFuncs","fj","_step5","_step4$value","_iterator5","valueFuncs","_step5$value","_candidates","_candidates$_i","_spelImportValue$call","_spelImportValue$call2","_step6","_iterator6","_step7","_step6$value","_iterator7","opFuncs","_loop4","_argsArr$filter","_step7$value","_loop3","_argsObj$","bestCandidate","allErrs","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_config$settings$case2","_processConcatChildren","convertedChild","loadFromSpel","spelStr","_loadFromSpel","compiledExpression","convertedObj","spelOps","revOpConfig","spelConj","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","fs","compareToSS","SpelExpressionEvaluator","compile","_compiledExpression","utils","equal","opStr","_this$utils","_opDef","_opOpts","_fieldDef","not_equal","isNotOp","sqlOps","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_right$valueType","endsWith","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","_right$value","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","text","wgtDef","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","utc","timeFormat","use12Hours","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","rangeslider","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","_this12","_this13","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","isTernary","caseGroup","childrenPath","targetChildren","targetChildrenSize","ruleGroups","_ruleGroups$","ruleGroupPath","ruleGroupField","ruleGroupFieldConfig","_ruleGroups$2","ruleGroupItem","_addChildren1","isLastDefaultCase","newChildrenWithLast","removeItem","setField","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","setValue","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","mousePos","dragStart","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","removeGroup","ruleType","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","removeRule","setConjunction","setNot","srcKey","currentFielType","setFieldSrc","lock","setLock","_getNewValueForFieldO3","setOperator","_setFuncValue","parentFuncs","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","setFuncValue","_getNewValueForFieldO4","setValueSrc","setOperatorOption","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","moveItem","checkEmptyGroups","__lastAction","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports","TreeStore","React","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","_process2","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","onChange","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","_Utils$ConfigUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","canUseOldConfig","get_children","Provider","OtherUtils","TreeUtils","_isReorderingTree","className","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","width","cn","classNames","style","ref","_extends","PureComponent","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","buildOptions","selectedOpts","selectedKeys","selectedKey","selectedPath","selectedLabel","selectedAltLabel","tooltip","ops","altLabel","readonly","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","DragIcon","xmlns","viewBox","fill","WithConfirmFn","confirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","customOperatorSelectProps","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","parentFieldPath","sourceFields","lookingForFieldType","errorText","fieldOpts","optGroup","prefix","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","matchesType","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","ListUtils","_Utils$TreeUtils","WidgetFactoryMemo","memo","widgetFactory","isConst","WidgetFactory","parentDelta","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","useMemo","_immValueError$get","errorMessage","placeholders","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","defaultValueSourcesLabels","_valueSourcesInfo$src","_valueSourcesInfo$src2","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_callSuper","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Icon","Btn","BtnGrp","Switch","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","parentFieldCanReorder","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onOk","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","icon","onMouseDown","_this$props6","immutableGroupsMode","onClick","_this$props7","showLock","checkedLabel","hideLabel","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isDummyFn","isInDraggingTempo","hasError","parentFieldPathSize","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","conjunctionOptions","_getConjunctionOptions","oldConjunction","checked","currentNesting","allowFurtherNesting","isMaxNestingExceeded","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","Conjs","isEmptyCurrentGroup","showNot","_ruleGroupFieldConfig","forceShowConj","isOneChild","showConjs","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","reordableNodesCntForItem","totalRulesCntForItem","extraPropsForItem","_item","conjunctionOptionsForGroupField","_this$props9","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","addSubRuleBtn","RuleGroup","_BasicGroup","_superPropGet","_selectedFieldConfig$","RuleGroupExtActions","addSubGroupBtn","RuleGroupExt","renderGroupField","_selectedFieldConfig$2","_this$props10","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderValue","renderAfterValue","oneValue","hasValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","postfix","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","paddingLeft","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isRuleGroupAffected","targetRuleGroupId","targetRuleGroupMaxNesting","targetRuleGroupCanRegroup","newDepthLevInRuleGroup","isForbiddenRuleGroupChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","isValueField","_props$customProps","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","textValue","maxRows","dtValue","multiple","opt","selected","getMultiSelectValues","numberValue","customInputProps","customSliderProps","display","renderOptions","fontWeight","color","conjsCount","lessThenTwo","showConj","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","okText","cancelText","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","Select","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","_ref17","_ref18","VanillaConjs","_ref19","VanillaSwitch","_ref20","VanillaButton","_ref21","VanillaIcon","_ref22","VanillaButtonGroup","_ref23","_ref24","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","defaultSliderWidth","defaultSelectWidth","defaultSearchWidth","defaultMaxRows","renderSize","Widgets","CustomOperators","C","P","_Utils$Autocomplete","Autocomplete","_Utils$ListUtils","_config$settings$load","_config$settings$load2","_config$settings$type","useLoadMore","useAsyncSearch","forceAsyncSearch","fetchSelectedValuesOnInit","selectedAsyncListValues","staticListValues","debounceTimeout","uif","isFieldAutocomplete","knownSpecialValues","loadMoreTitle","loadingMoreTitle","aPlaceholder","_React$useState","_React$useState2","open","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","inputValue","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","latestSelectedValue","nSelectedAsyncListValues","areSelectedAsyncListValuesNotResolved","listValuesToDisplay","isLoading","canInitialLoadSelected","canFirstLoadOnOpened","isInitialLoading","canLoadMore","canShowLoadMore","selectedListValue","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","fetchSelectedListValues","_callee2","selectedValues","selectedListValues","latestSelectedValues","_getItemInListValues","loadSelectedListValues","_callee3","loadListValues","_callee4","_args4","_context4","loadListValuesDebounced","debounce","_callee5","_context5","_callee6","_context6","onOpen","onClose","_callee7","isLoadMoreClick","_context7","onInputChange","_callee8","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","specialValue","valHasDuplicates","isBadCallAfterTokenization","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context8","_x4","_callee9","newInputValue","eventType","isRemoveOption","isSelectOption","isIgnoredBlur","shouldIgnore","_context9","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","extendOptions","getOptionSelected","valueOrOption","getOptionDisabled","getOptionIsCustom","_valueOrOption$value","getOptionLabel","ReactUtils","xdpVersion","_xdpPackage$version$s","xdpPackage","_xdpPackage$version","useListValuesAutocomplete","Hooks","emptyArray","disableClearable","filterOptionsConfig","tooltipText","defaultFilterOptionsConfig","useCallback","filterOptionsFn","createFilterOptions","_useListValuesAutocom","customAutocompleteProps","minWidth","ariaLabel","theme","useTheme","GroupHeader","groupMaybeJson","groupLabel","Tooltip","padding","palette","primary","main","backgroundColor","background","GroupItems","disableCloseOnSelect","freeSolo","loading","readOnly","groupBy","renderInput","_selectedListValue$ti","shouldRenderSelected","selectedTitle","TextField","variant","inputProps","InputProps","endAdornment","CircularProgress","renderGroup","renderTags","getTagProps","Chip","renderOption","isGrouped","isSelected","finalTitle","titleSpan","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","filterOptions","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","itemsToListValues","level","repeat","_value2","_altLabel","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","IconButton","Button","startIcon","Conj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","Boolean","ExpandMoreSharpIcon","Menu","component","sx","FormLabel","pt","pb","MuiTextWidget","MuiTextAreaWidget","multiline","MuiDateWidget","pickerProps","slotProps","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","formatSingleValue","MuiDateTimeWidget","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","timeValue","TimePicker","views","MuiSelectWidget","autoWidth","displayEmpty","getListValueTitle","MuiNumberWidget","MuiSliderWidget","handleSliderChange","handleInputChange","handleInputBlur","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","marginBottom","alignItems","flexWrap","MuiRangeWidget","useEffect","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","stylesInputWrapper","MuiBooleanWidget","Typography","Grid","container","spacing","MuiMultiSelectWidget","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","finalLabel","ListSubheader","disableSticky","findLabel","MuiFieldAutocomplete","MuiAutocomplete","_asyncValues","fieldAdapter","MuiIcon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","description","confirmationText","cancellationText","then","MuiUseConfirm","MuiProvider","settingsTheme","settingsLocale","themeConfig","createTheme","locProviderProps","adapterLocale","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","_ref$W","_props$customProps2","_ref2$W","_ref17$W","_ref18$W","MuiWidgets"],"sourceRoot":""}